<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structgraphene_1_1net_1_1firewall__check__state__data" kind="struct" language="C++" prot="public">
    <compoundname>graphene::net::firewall_check_state_data</compoundname>
    <includes refid="peer__connection_8hpp" local="no">peer_connection.hpp</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structgraphene_1_1net_1_1firewall__check__state__data_1a93b54e9c6a978ca08644f0043a6c6701" prot="public" static="no" mutable="no">
        <type><ref refid="namespacegraphene_1_1net_1a557da170930e273d5a42e3541bd768e0" kindref="member">node_id_t</ref></type>
        <definition>node_id_t graphene::net::firewall_check_state_data::expected_node_id</definition>
        <argsstring></argsstring>
        <name>expected_node_id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/net/include/graphene/net/peer_connection.hpp" line="48" column="1" bodyfile="libraries/net/include/graphene/net/peer_connection.hpp" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1net_1_1firewall__check__state__data_1a753322c387754533ce6a54064913b008" prot="public" static="no" mutable="no">
        <type><ref refid="classfc_1_1ip_1_1endpoint" kindref="compound">fc::ip::endpoint</ref></type>
        <definition>fc::ip::endpoint graphene::net::firewall_check_state_data::endpoint_to_test</definition>
        <argsstring></argsstring>
        <name>endpoint_to_test</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/net/include/graphene/net/peer_connection.hpp" line="49" column="1" bodyfile="libraries/net/include/graphene/net/peer_connection.hpp" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1net_1_1firewall__check__state__data_1adbb84d89b79373d784cf9e6cc2045aaf" prot="public" static="no" mutable="no">
        <type>std::set&lt; <ref refid="namespacegraphene_1_1net_1a557da170930e273d5a42e3541bd768e0" kindref="member">node_id_t</ref> &gt;</type>
        <definition>std::set&lt;node_id_t&gt; graphene::net::firewall_check_state_data::nodes_already_tested</definition>
        <argsstring></argsstring>
        <name>nodes_already_tested</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/net/include/graphene/net/peer_connection.hpp" line="54" column="1" bodyfile="libraries/net/include/graphene/net/peer_connection.hpp" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1net_1_1firewall__check__state__data_1ac062ff8691b267e3200e463d7e245785" prot="public" static="no" mutable="no">
        <type><ref refid="namespacegraphene_1_1net_1a557da170930e273d5a42e3541bd768e0" kindref="member">node_id_t</ref></type>
        <definition>node_id_t graphene::net::firewall_check_state_data::requesting_peer</definition>
        <argsstring></argsstring>
        <name>requesting_peer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/net/include/graphene/net/peer_connection.hpp" line="58" column="1" bodyfile="libraries/net/include/graphene/net/peer_connection.hpp" bodystart="58" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="3737">
        <label>graphene::net::firewall_check_state_data</label>
        <link refid="structgraphene_1_1net_1_1firewall__check__state__data"/>
        <childnode refid="3738" relation="usage">
          <edgelabel>endpoint_to_test</edgelabel>
        </childnode>
        <childnode refid="3739" relation="usage">
          <edgelabel>requesting_peer</edgelabel>
          <edgelabel>expected_node_id</edgelabel>
        </childnode>
      </node>
      <node id="3738">
        <label>fc::ip::endpoint</label>
        <link refid="classfc_1_1ip_1_1endpoint"/>
      </node>
      <node id="3739">
        <label>fc::zero_initialized_array&lt; T, N &gt;</label>
        <link refid="classfc_1_1zero__initialized__array"/>
      </node>
    </collaborationgraph>
    <location file="libraries/net/include/graphene/net/peer_connection.hpp" line="47" column="1" bodyfile="libraries/net/include/graphene/net/peer_connection.hpp" bodystart="46" bodyend="59"/>
    <listofallmembers>
      <member refid="structgraphene_1_1net_1_1firewall__check__state__data_1a753322c387754533ce6a54064913b008" prot="public" virt="non-virtual"><scope>graphene::net::firewall_check_state_data</scope><name>endpoint_to_test</name></member>
      <member refid="structgraphene_1_1net_1_1firewall__check__state__data_1a93b54e9c6a978ca08644f0043a6c6701" prot="public" virt="non-virtual"><scope>graphene::net::firewall_check_state_data</scope><name>expected_node_id</name></member>
      <member refid="structgraphene_1_1net_1_1firewall__check__state__data_1adbb84d89b79373d784cf9e6cc2045aaf" prot="public" virt="non-virtual"><scope>graphene::net::firewall_check_state_data</scope><name>nodes_already_tested</name></member>
      <member refid="structgraphene_1_1net_1_1firewall__check__state__data_1ac062ff8691b267e3200e463d7e245785" prot="public" virt="non-virtual"><scope>graphene::net::firewall_check_state_data</scope><name>requesting_peer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
