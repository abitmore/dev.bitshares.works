<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classgraphene_1_1chain_1_1htlc__object" kind="class" language="C++" prot="public">
    <compoundname>graphene::chain::htlc_object</compoundname>
    <basecompoundref refid="classgraphene_1_1db_1_1abstract__object" prot="public" virt="non-virtual">graphene::db::abstract_object&lt; htlc_object, protocol_ids, htlc_object_type &gt;</basecompoundref>
    <includes refid="htlc__object_8hpp" local="no">htlc_object.hpp</includes>
    <innerclass refid="structgraphene_1_1chain_1_1htlc__object_1_1condition__info" prot="public">graphene::chain::htlc_object::condition_info</innerclass>
    <innerclass refid="structgraphene_1_1chain_1_1htlc__object_1_1from__extractor" prot="public">graphene::chain::htlc_object::from_extractor</innerclass>
    <innerclass refid="structgraphene_1_1chain_1_1htlc__object_1_1timelock__extractor" prot="public">graphene::chain::htlc_object::timelock_extractor</innerclass>
    <innerclass refid="structgraphene_1_1chain_1_1htlc__object_1_1to__extractor" prot="public">graphene::chain::htlc_object::to_extractor</innerclass>
    <innerclass refid="structgraphene_1_1chain_1_1htlc__object_1_1transfer__info" prot="public">graphene::chain::htlc_object::transfer_info</innerclass>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classgraphene_1_1chain_1_1htlc__object_1af48f965b1bf97cbfb13453e0f4a942e5" prot="public" static="no" mutable="no">
        <type><ref refid="structgraphene_1_1chain_1_1htlc__object_1_1transfer__info" kindref="compound">transfer_info</ref></type>
        <definition>transfer_info graphene::chain::htlc_object::transfer</definition>
        <argsstring></argsstring>
        <name>transfer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/htlc_object.hpp" line="65" column="21" bodyfile="libraries/chain/include/graphene/chain/htlc_object.hpp" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgraphene_1_1chain_1_1htlc__object_1a5484cae25c3ef6edcf0a3adbd6bf5669" prot="public" static="no" mutable="no">
        <type><ref refid="structgraphene_1_1chain_1_1htlc__object_1_1condition__info" kindref="compound">condition_info</ref></type>
        <definition>condition_info graphene::chain::htlc_object::conditions</definition>
        <argsstring></argsstring>
        <name>conditions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/htlc_object.hpp" line="66" column="22" bodyfile="libraries/chain/include/graphene/chain/htlc_object.hpp" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgraphene_1_1chain_1_1htlc__object_1abdc2163cf0ef91776d5647b2e5fde5b4" prot="public" static="no" mutable="no">
        <type><ref refid="classfc_1_1optional" kindref="compound">fc::optional</ref>&lt; <ref refid="structgraphene_1_1protocol_1_1memo__data" kindref="compound">memo_data</ref> &gt;</type>
        <definition>fc::optional&lt;memo_data&gt; graphene::chain::htlc_object::memo</definition>
        <argsstring></argsstring>
        <name>memo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/htlc_object.hpp" line="67" column="20" bodyfile="libraries/chain/include/graphene/chain/htlc_object.hpp" bodystart="67" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>database object to store HTLCs </para>
    </briefdescription>
    <detaileddescription>
<para>This object is stored in the database while an HTLC is active. The HTLC will become inactive at expiration or when unlocked via the preimage. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>graphene::db::abstract_object&lt; htlc_object, protocol_ids, htlc_object_type &gt;</label>
        <link refid="classgraphene_1_1db_1_1abstract__object"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>graphene::chain::htlc_object</label>
        <link refid="classgraphene_1_1chain_1_1htlc__object"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>graphene::db::base_abstract_object&lt; htlc_object &gt;</label>
        <link refid="classgraphene_1_1db_1_1base__abstract__object"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>graphene::db::object</label>
        <link refid="classgraphene_1_1db_1_1object"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>graphene::db::abstract_object&lt; htlc_object, protocol_ids, htlc_object_type &gt;</label>
        <link refid="classgraphene_1_1db_1_1abstract__object"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13">
        <label>graphene::chain::htlc_object::condition_info::hash_lock_info</label>
        <link refid="structgraphene_1_1chain_1_1htlc__object_1_1condition__info_1_1hash__lock__info"/>
        <childnode refid="14" relation="usage">
          <edgelabel>preimage_hash</edgelabel>
        </childnode>
      </node>
      <node id="11">
        <label>graphene::chain::htlc_object::condition_info::time_lock_info</label>
        <link refid="structgraphene_1_1chain_1_1htlc__object_1_1condition__info_1_1time__lock__info"/>
        <childnode refid="12" relation="usage">
          <edgelabel>expiration</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>graphene::chain::htlc_object::transfer_info</label>
        <link refid="structgraphene_1_1chain_1_1htlc__object_1_1transfer__info"/>
        <childnode refid="7" relation="usage">
          <edgelabel>from</edgelabel>
          <edgelabel>to</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>amount</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>graphene::chain::htlc_object</label>
        <link refid="classgraphene_1_1chain_1_1htlc__object"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>transfer</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>conditions</edgelabel>
        </childnode>
        <childnode refid="16" relation="usage">
          <edgelabel>memo</edgelabel>
        </childnode>
      </node>
      <node id="9">
        <label>fc::safe_base&lt; int64_t &gt;</label>
        <link refid="structfc_1_1safe__base"/>
      </node>
      <node id="3">
        <label>graphene::db::base_abstract_object&lt; htlc_object &gt;</label>
        <link refid="classgraphene_1_1db_1_1base__abstract__object"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14">
        <label>fc::static_variant&lt; htlc_algo_ripemd160, htlc_algo_sha1, htlc_algo_sha256, htlc_algo_hash160 &gt;</label>
        <link refid="classfc_1_1static__variant"/>
        <childnode refid="15" relation="usage">
          <edgelabel>storage</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>account_id_type</label>
      </node>
      <node id="16">
        <label>fc::optional&lt; graphene::protocol::memo_data &gt;</label>
        <link refid="classfc_1_1optional"/>
      </node>
      <node id="8">
        <label>fc::safe&lt; int64_t &gt;</label>
        <link refid="structfc_1_1safe"/>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12">
        <label>fc::time_point_sec</label>
        <link refid="classfc_1_1time__point__sec"/>
      </node>
      <node id="10">
        <label>graphene::chain::htlc_object::condition_info</label>
        <link refid="structgraphene_1_1chain_1_1htlc__object_1_1condition__info"/>
        <childnode refid="11" relation="usage">
          <edgelabel>time_lock</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>hash_lock</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>graphene::db::object_id_type</label>
        <link refid="structgraphene_1_1db_1_1object__id__type"/>
      </node>
      <node id="15">
        <label>fc::impl::dynamic_storage</label>
        <link refid="classfc_1_1impl_1_1dynamic__storage"/>
      </node>
      <node id="4">
        <label>graphene::db::object</label>
        <link refid="classgraphene_1_1db_1_1object"/>
        <childnode refid="5" relation="usage">
          <edgelabel>id</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="libraries/chain/include/graphene/chain/htlc_object.hpp" line="41" column="1" bodyfile="libraries/chain/include/graphene/chain/htlc_object.hpp" bodystart="40" bodyend="92"/>
    <listofallmembers>
      <member refid="classgraphene_1_1db_1_1abstract__object_1a62b6a9a9290a38dc05763d920186872c" prot="public" virt="non-virtual"><scope>graphene::chain::htlc_object</scope><name>abstract_object</name></member>
      <member refid="classgraphene_1_1db_1_1base__abstract__object_1af3a4c0e78138f72a0e5fd120f4105488" prot="public" virt="non-virtual"><scope>graphene::chain::htlc_object</scope><name>clone</name></member>
      <member refid="classgraphene_1_1db_1_1object_1a338c362d7ad8dec65847ed1621b0364a" prot="public" virt="pure-virtual" ambiguityscope="graphene::db::object::"><scope>graphene::chain::htlc_object</scope><name>clone</name></member>
      <member refid="classgraphene_1_1chain_1_1htlc__object_1a5484cae25c3ef6edcf0a3adbd6bf5669" prot="public" virt="non-virtual"><scope>graphene::chain::htlc_object</scope><name>conditions</name></member>
      <member refid="classgraphene_1_1db_1_1abstract__object_1abdd95dc811d3bf7dbdc9aa0251129f81" prot="public" virt="non-virtual"><scope>graphene::chain::htlc_object</scope><name>get_id</name></member>
      <member refid="classgraphene_1_1db_1_1object_1a2ce812569d565a45dda1420cfbdf79ad" prot="public" virt="non-virtual"><scope>graphene::chain::htlc_object</scope><name>id</name></member>
      <member refid="classgraphene_1_1chain_1_1htlc__object_1abdc2163cf0ef91776d5647b2e5fde5b4" prot="public" virt="non-virtual"><scope>graphene::chain::htlc_object</scope><name>memo</name></member>
      <member refid="classgraphene_1_1db_1_1base__abstract__object_1ae411f8719b1a5d32781c71a06c2b9386" prot="public" virt="virtual"><scope>graphene::chain::htlc_object</scope><name>move_from</name></member>
      <member refid="classgraphene_1_1db_1_1base__abstract__object_1ae57a6f64a9444b2f0fa0c937be480f54" prot="public" virt="non-virtual"><scope>graphene::chain::htlc_object</scope><name>object</name></member>
      <member refid="classgraphene_1_1db_1_1base__abstract__object_1abc6d16d10de6c2e780d62918a458276f" prot="public" virt="non-virtual"><scope>graphene::chain::htlc_object</scope><name>object</name></member>
      <member refid="classgraphene_1_1db_1_1object_1abc6d16d10de6c2e780d62918a458276f" prot="public" virt="non-virtual" ambiguityscope="graphene::db::object::"><scope>graphene::chain::htlc_object</scope><name>object</name></member>
      <member refid="classgraphene_1_1db_1_1base__abstract__object_1a9ba1e81bf5d130ad4f61cc95c8c9861f" prot="public" virt="non-virtual"><scope>graphene::chain::htlc_object</scope><name>pack</name></member>
      <member refid="classgraphene_1_1db_1_1object_1ae0ac940716e76ee0876fbfc3023b26eb" prot="public" virt="pure-virtual" ambiguityscope="graphene::db::object::"><scope>graphene::chain::htlc_object</scope><name>pack</name></member>
      <member refid="classgraphene_1_1db_1_1abstract__object_1afb1fe30941a4e9e6d3ca3f4a55c9e59b" prot="public" virt="non-virtual"><scope>graphene::chain::htlc_object</scope><name>space_id</name></member>
      <member refid="classgraphene_1_1db_1_1base__abstract__object_1a7dd7f3ea796b0f3ec9b4899b3e33e4b2" prot="public" virt="non-virtual"><scope>graphene::chain::htlc_object</scope><name>to_variant</name></member>
      <member refid="classgraphene_1_1db_1_1object_1aca896a32d67ffbcddd2a831c87c24644" prot="public" virt="pure-virtual" ambiguityscope="graphene::db::object::"><scope>graphene::chain::htlc_object</scope><name>to_variant</name></member>
      <member refid="classgraphene_1_1chain_1_1htlc__object_1af48f965b1bf97cbfb13453e0f4a942e5" prot="public" virt="non-virtual"><scope>graphene::chain::htlc_object</scope><name>transfer</name></member>
      <member refid="classgraphene_1_1db_1_1abstract__object_1ab3d8c613dd39c1b04abfb7ac758246e6" prot="public" virt="non-virtual"><scope>graphene::chain::htlc_object</scope><name>type_id</name></member>
      <member refid="classgraphene_1_1db_1_1object_1ae8f3fa315d81c80cd93cf5ea2853e65f" prot="public" virt="virtual"><scope>graphene::chain::htlc_object</scope><name>~object</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
