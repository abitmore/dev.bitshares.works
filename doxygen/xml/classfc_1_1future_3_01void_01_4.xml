<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classfc_1_1future_3_01void_01_4" kind="class" language="C++" prot="public">
    <compoundname>fc::future&lt; void &gt;</compoundname>
    <includes refid="future_8hpp" local="no">future.hpp</includes>
    <templateparamlist>
    </templateparamlist>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classfc_1_1future_3_01void_01_4_1adb314a48b19f4325e5e69e8a60091fce" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class thread</definition>
        <argsstring></argsstring>
        <name>thread</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/thread/future.hpp" line="340" column="1" bodyfile="libraries/fc/include/fc/thread/future.hpp" bodystart="340" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classfc_1_1future_3_01void_01_4_1ae55b5b70549069b4122996f3394f2de0" prot="private" static="no" mutable="no">
        <type><ref refid="classfc_1_1promise" kindref="compound">promise</ref>&lt; void &gt;::ptr</type>
        <definition>promise&lt;void&gt;::ptr fc::future&lt; void &gt;::m_prom</definition>
        <argsstring></argsstring>
        <name>m_prom</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/thread/future.hpp" line="341" column="1" bodyfile="libraries/fc/include/fc/thread/future.hpp" bodystart="341" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classfc_1_1future_3_01void_01_4_1a554356edefb14a0fd33f5f773e548711" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>fc::future&lt; void &gt;::future</definition>
        <argsstring>(const typename promise&lt; void &gt;::ptr &amp;p)</argsstring>
        <name>future</name>
        <param>
          <type>const typename <ref refid="classfc_1_1promise" kindref="compound">promise</ref>&lt; void &gt;::ptr &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/thread/future.hpp" line="285" column="1" bodyfile="libraries/fc/include/fc/thread/future.hpp" bodystart="285" bodyend="285"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1future_3_01void_01_4_1abd8580d37dc7c489aece7b314e7da738" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>fc::future&lt; void &gt;::future</definition>
        <argsstring>(typename promise&lt; void &gt;::ptr &amp;&amp;p)</argsstring>
        <name>future</name>
        <param>
          <type>typename <ref refid="classfc_1_1promise" kindref="compound">promise</ref>&lt; void &gt;::ptr &amp;&amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/thread/future.hpp" line="286" column="1" bodyfile="libraries/fc/include/fc/thread/future.hpp" bodystart="286" bodyend="286"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1future_3_01void_01_4_1a40edc31a84ebe016af2446799c9b3eb2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>fc::future&lt; void &gt;::future</definition>
        <argsstring>(const future&lt; void &gt; &amp;f)</argsstring>
        <name>future</name>
        <param>
          <type>const <ref refid="classfc_1_1future" kindref="compound">future</ref>&lt; void &gt; &amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/thread/future.hpp" line="287" column="1" bodyfile="libraries/fc/include/fc/thread/future.hpp" bodystart="287" bodyend="287"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1future_3_01void_01_4_1add1c49e17150920848e858a6b418229a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>fc::future&lt; void &gt;::future</definition>
        <argsstring>()</argsstring>
        <name>future</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/thread/future.hpp" line="288" column="1" bodyfile="libraries/fc/include/fc/thread/future.hpp" bodystart="288" bodyend="288"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1future_3_01void_01_4_1adb010686a4a96468bd6cef9c2981cc2f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classfc_1_1future" kindref="compound">future</ref> &amp;</type>
        <definition>future&amp; fc::future&lt; void &gt;::operator=</definition>
        <argsstring>(future&lt; void &gt; &amp;&amp;f)</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classfc_1_1future" kindref="compound">future</ref>&lt; void &gt; &amp;&amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/thread/future.hpp" line="290" column="1" bodyfile="libraries/fc/include/fc/thread/future.hpp" bodystart="290" bodyend="293"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1future_3_01void_01_4_1a8c7016d8459fad0a4f02287ea7910d30" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void fc::future&lt; void &gt;::wait</definition>
        <argsstring>(const microseconds &amp;timeout=microseconds::maximum())</argsstring>
        <name>wait</name>
        <param>
          <type>const <ref refid="classfc_1_1microseconds" kindref="compound">microseconds</ref> &amp;</type>
          <declname>timeout</declname>
          <defval><ref refid="classfc_1_1microseconds_1a83490e326e43e94a2b9f2d23b5645455" kindref="member">microseconds::maximum</ref>()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><ref refid="classfc_1_1future_3_01void_01_4_1aa65017c3481496855a1617d7f4d9f217" kindref="member">valid()</ref> </para></simplesect>
<simplesect kind="post"><para><ref refid="classfc_1_1future_3_01void_01_4_1a567f4435e511e42cdae0101b2f11ae62" kindref="member">ready()</ref> </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>timeout</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/thread/future.hpp" line="299" column="1" bodyfile="libraries/fc/include/fc/thread/future.hpp" bodystart="299" bodyend="302"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1future_3_01void_01_4_1a730ba2cc4cb0eddc8ed2dbc3ebfe4d93" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void fc::future&lt; void &gt;::wait_until</definition>
        <argsstring>(const time_point &amp;tp)</argsstring>
        <name>wait_until</name>
        <param>
          <type>const <ref refid="classfc_1_1time__point" kindref="compound">time_point</ref> &amp;</type>
          <declname>tp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><ref refid="classfc_1_1future_3_01void_01_4_1aa65017c3481496855a1617d7f4d9f217" kindref="member">valid()</ref> </para></simplesect>
<simplesect kind="post"><para><ref refid="classfc_1_1future_3_01void_01_4_1a567f4435e511e42cdae0101b2f11ae62" kindref="member">ready()</ref> </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>timeout</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/thread/future.hpp" line="307" column="1" bodyfile="libraries/fc/include/fc/thread/future.hpp" bodystart="307" bodyend="309"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1future_3_01void_01_4_1aa65017c3481496855a1617d7f4d9f217" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool fc::future&lt; void &gt;::valid</definition>
        <argsstring>() const</argsstring>
        <name>valid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/thread/future.hpp" line="311" column="1" bodyfile="libraries/fc/include/fc/thread/future.hpp" bodystart="311" bodyend="311"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1future_3_01void_01_4_1a3ed2e3c66ff6e3381b9e5dc839524949" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool fc::future&lt; void &gt;::canceled</definition>
        <argsstring>() const</argsstring>
        <name>canceled</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/thread/future.hpp" line="312" column="1" bodyfile="libraries/fc/include/fc/thread/future.hpp" bodystart="312" bodyend="312"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1future_3_01void_01_4_1a991cd919b0d4e687fc62bf30fed89b8b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void fc::future&lt; void &gt;::cancel_and_wait</definition>
        <argsstring>(const char *reason FC_CANCELATION_REASON_DEFAULT_ARG)</argsstring>
        <name>cancel_and_wait</name>
        <param>
          <type>const char *reason</type>
          <declname>FC_CANCELATION_REASON_DEFAULT_ARG</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/thread/future.hpp" line="314" column="1" bodyfile="libraries/fc/include/fc/thread/future.hpp" bodystart="314" bodyend="324"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1future_3_01void_01_4_1a567f4435e511e42cdae0101b2f11ae62" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool fc::future&lt; void &gt;::ready</definition>
        <argsstring>() const</argsstring>
        <name>ready</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><ref refid="classfc_1_1future_3_01void_01_4_1aa65017c3481496855a1617d7f4d9f217" kindref="member">valid()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/thread/future.hpp" line="327" column="1" bodyfile="libraries/fc/include/fc/thread/future.hpp" bodystart="327" bodyend="327"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1future_3_01void_01_4_1a3feaf58da6ba509596121db320a91d60" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool fc::future&lt; void &gt;::error</definition>
        <argsstring>() const</argsstring>
        <name>error</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><ref refid="classfc_1_1future_3_01void_01_4_1aa65017c3481496855a1617d7f4d9f217" kindref="member">valid()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/thread/future.hpp" line="330" column="1" bodyfile="libraries/fc/include/fc/thread/future.hpp" bodystart="330" bodyend="330"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1future_3_01void_01_4_1a7292d8ca6144816b5cbf484c2af4304d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void fc::future&lt; void &gt;::cancel</definition>
        <argsstring>(const char *reason FC_CANCELATION_REASON_DEFAULT_ARG) const</argsstring>
        <name>cancel</name>
        <param>
          <type>const char *reason</type>
          <declname>FC_CANCELATION_REASON_DEFAULT_ARG</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/thread/future.hpp" line="332" column="1" bodyfile="libraries/fc/include/fc/thread/future.hpp" bodystart="332" bodyend="332"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1future_3_01void_01_4_1ae6d7a2a541d41fc7ad42c5618007794c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename CompletionHandler</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void fc::future&lt; void &gt;::on_complete</definition>
        <argsstring>(CompletionHandler &amp;&amp;c)</argsstring>
        <name>on_complete</name>
        <param>
          <type>CompletionHandler &amp;&amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/thread/future.hpp" line="335" column="1" bodyfile="libraries/fc/include/fc/thread/future.hpp" bodystart="335" bodyend="337"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="libraries/fc/include/fc/thread/future.hpp" line="283" column="1" bodyfile="libraries/fc/include/fc/thread/future.hpp" bodystart="283" bodyend="342"/>
    <listofallmembers>
      <member refid="classfc_1_1future_3_01void_01_4_1a7292d8ca6144816b5cbf484c2af4304d" prot="public" virt="non-virtual"><scope>fc::future&lt; void &gt;</scope><name>cancel</name></member>
      <member refid="classfc_1_1future_3_01void_01_4_1a991cd919b0d4e687fc62bf30fed89b8b" prot="public" virt="non-virtual"><scope>fc::future&lt; void &gt;</scope><name>cancel_and_wait</name></member>
      <member refid="classfc_1_1future_3_01void_01_4_1a3ed2e3c66ff6e3381b9e5dc839524949" prot="public" virt="non-virtual"><scope>fc::future&lt; void &gt;</scope><name>canceled</name></member>
      <member refid="classfc_1_1future_3_01void_01_4_1a3feaf58da6ba509596121db320a91d60" prot="public" virt="non-virtual"><scope>fc::future&lt; void &gt;</scope><name>error</name></member>
      <member refid="classfc_1_1future_3_01void_01_4_1a554356edefb14a0fd33f5f773e548711" prot="public" virt="non-virtual"><scope>fc::future&lt; void &gt;</scope><name>future</name></member>
      <member refid="classfc_1_1future_3_01void_01_4_1abd8580d37dc7c489aece7b314e7da738" prot="public" virt="non-virtual"><scope>fc::future&lt; void &gt;</scope><name>future</name></member>
      <member refid="classfc_1_1future_3_01void_01_4_1a40edc31a84ebe016af2446799c9b3eb2" prot="public" virt="non-virtual"><scope>fc::future&lt; void &gt;</scope><name>future</name></member>
      <member refid="classfc_1_1future_3_01void_01_4_1add1c49e17150920848e858a6b418229a" prot="public" virt="non-virtual"><scope>fc::future&lt; void &gt;</scope><name>future</name></member>
      <member refid="classfc_1_1future_3_01void_01_4_1ae55b5b70549069b4122996f3394f2de0" prot="private" virt="non-virtual"><scope>fc::future&lt; void &gt;</scope><name>m_prom</name></member>
      <member refid="classfc_1_1future_3_01void_01_4_1ae6d7a2a541d41fc7ad42c5618007794c" prot="public" virt="non-virtual"><scope>fc::future&lt; void &gt;</scope><name>on_complete</name></member>
      <member refid="classfc_1_1future_3_01void_01_4_1adb010686a4a96468bd6cef9c2981cc2f" prot="public" virt="non-virtual"><scope>fc::future&lt; void &gt;</scope><name>operator=</name></member>
      <member refid="classfc_1_1future_3_01void_01_4_1a567f4435e511e42cdae0101b2f11ae62" prot="public" virt="non-virtual"><scope>fc::future&lt; void &gt;</scope><name>ready</name></member>
      <member refid="classfc_1_1future_3_01void_01_4_1adb314a48b19f4325e5e69e8a60091fce" prot="private" virt="non-virtual"><scope>fc::future&lt; void &gt;</scope><name>thread</name></member>
      <member refid="classfc_1_1future_3_01void_01_4_1aa65017c3481496855a1617d7f4d9f217" prot="public" virt="non-virtual"><scope>fc::future&lt; void &gt;</scope><name>valid</name></member>
      <member refid="classfc_1_1future_3_01void_01_4_1a8c7016d8459fad0a4f02287ea7910d30" prot="public" virt="non-virtual"><scope>fc::future&lt; void &gt;</scope><name>wait</name></member>
      <member refid="classfc_1_1future_3_01void_01_4_1a730ba2cc4cb0eddc8ed2dbc3ebfe4d93" prot="public" virt="non-virtual"><scope>fc::future&lt; void &gt;</scope><name>wait_until</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
