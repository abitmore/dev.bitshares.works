<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classgraphene_1_1db_1_1simple__index_1_1const__iterator" kind="class" language="C++" prot="public">
    <compoundname>graphene::db::simple_index::const_iterator</compoundname>
    <includes refid="simple__index_8hpp" local="no">simple_index.hpp</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classgraphene_1_1db_1_1simple__index_1_1const__iterator_1a90143136f2ed3047b4c3780d1c26b6d8" prot="public" static="no">
        <type>std::forward_iterator_tag</type>
        <definition>typedef std::forward_iterator_tag graphene::db::simple_index&lt; T &gt;::const_iterator::iterator_category</definition>
        <argsstring></argsstring>
        <name>iterator_category</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/db/include/graphene/db/simple_index.hpp" line="125" column="1" bodyfile="libraries/db/include/graphene/db/simple_index.hpp" bodystart="125" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classgraphene_1_1db_1_1simple__index_1_1const__iterator_1a316f2f0e3ee1eb2648517fd918384cc2" prot="public" static="no">
        <type>vector&lt; unique_ptr&lt; <ref refid="classgraphene_1_1db_1_1object" kindref="compound">object</ref> &gt; &gt;::<ref refid="classgraphene_1_1db_1_1simple__index_1_1const__iterator_1a316f2f0e3ee1eb2648517fd918384cc2" kindref="member">value_type</ref></type>
        <definition>typedef vector&lt;unique_ptr&lt;object&gt; &gt;::value_type graphene::db::simple_index&lt; T &gt;::const_iterator::value_type</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/db/include/graphene/db/simple_index.hpp" line="126" column="1" bodyfile="libraries/db/include/graphene/db/simple_index.hpp" bodystart="126" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classgraphene_1_1db_1_1simple__index_1_1const__iterator_1ae851e6374f82549f3e907374bf60a803" prot="public" static="no">
        <type>vector&lt; unique_ptr&lt; <ref refid="classgraphene_1_1db_1_1object" kindref="compound">object</ref> &gt; &gt;::<ref refid="classgraphene_1_1db_1_1simple__index_1_1const__iterator_1ae851e6374f82549f3e907374bf60a803" kindref="member">difference_type</ref></type>
        <definition>typedef vector&lt;unique_ptr&lt;object&gt; &gt;::difference_type graphene::db::simple_index&lt; T &gt;::const_iterator::difference_type</definition>
        <argsstring></argsstring>
        <name>difference_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/db/include/graphene/db/simple_index.hpp" line="127" column="1" bodyfile="libraries/db/include/graphene/db/simple_index.hpp" bodystart="127" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classgraphene_1_1db_1_1simple__index_1_1const__iterator_1abbb729060f6f19c8fbe4bfd877ce9509" prot="public" static="no">
        <type>vector&lt; unique_ptr&lt; <ref refid="classgraphene_1_1db_1_1object" kindref="compound">object</ref> &gt; &gt;::<ref refid="classgraphene_1_1db_1_1simple__index_1_1const__iterator_1abbb729060f6f19c8fbe4bfd877ce9509" kindref="member">pointer</ref></type>
        <definition>typedef vector&lt;unique_ptr&lt;object&gt; &gt;::pointer graphene::db::simple_index&lt; T &gt;::const_iterator::pointer</definition>
        <argsstring></argsstring>
        <name>pointer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/db/include/graphene/db/simple_index.hpp" line="128" column="1" bodyfile="libraries/db/include/graphene/db/simple_index.hpp" bodystart="128" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classgraphene_1_1db_1_1simple__index_1_1const__iterator_1a6c9717b84800345ac5ac7db53e982bc7" prot="public" static="no">
        <type>vector&lt; unique_ptr&lt; <ref refid="classgraphene_1_1db_1_1object" kindref="compound">object</ref> &gt; &gt;::<ref refid="classgraphene_1_1db_1_1simple__index_1_1const__iterator_1a6c9717b84800345ac5ac7db53e982bc7" kindref="member">reference</ref></type>
        <definition>typedef vector&lt;unique_ptr&lt;object&gt; &gt;::reference graphene::db::simple_index&lt; T &gt;::const_iterator::reference</definition>
        <argsstring></argsstring>
        <name>reference</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/db/include/graphene/db/simple_index.hpp" line="129" column="1" bodyfile="libraries/db/include/graphene/db/simple_index.hpp" bodystart="129" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classgraphene_1_1db_1_1simple__index_1_1const__iterator_1a59cb3ece06b394fa955ec8dd092d6d7d" prot="private" static="no" mutable="no">
        <type>vector&lt; unique_ptr&lt; <ref refid="classgraphene_1_1db_1_1object" kindref="compound">object</ref> &gt; &gt;::<ref refid="classgraphene_1_1db_1_1simple__index_1_1const__iterator" kindref="compound">const_iterator</ref></type>
        <definition>vector&lt;unique_ptr&lt;object&gt; &gt;::const_iterator graphene::db::simple_index&lt; T &gt;::const_iterator::_itr</definition>
        <argsstring></argsstring>
        <name>_itr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/db/include/graphene/db/simple_index.hpp" line="131" column="1" bodyfile="libraries/db/include/graphene/db/simple_index.hpp" bodystart="131" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgraphene_1_1db_1_1simple__index_1_1const__iterator_1a739d4c48482673677f2b2368edd5ff31" prot="private" static="no" mutable="no">
        <type>const vector&lt; unique_ptr&lt; <ref refid="classgraphene_1_1db_1_1object" kindref="compound">object</ref> &gt; &gt; &amp;</type>
        <definition>const vector&lt;unique_ptr&lt;object&gt; &gt;&amp; graphene::db::simple_index&lt; T &gt;::const_iterator::_objects</definition>
        <argsstring></argsstring>
        <name>_objects</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/db/include/graphene/db/simple_index.hpp" line="132" column="1" bodyfile="libraries/db/include/graphene/db/simple_index.hpp" bodystart="132" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classgraphene_1_1db_1_1simple__index_1_1const__iterator_1ad8887bb52d95da40e56b5dac520c14d6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>graphene::db::simple_index&lt; T &gt;::const_iterator::const_iterator</definition>
        <argsstring>(const vector&lt; unique_ptr&lt; object &gt;&gt; &amp;objects)</argsstring>
        <name>const_iterator</name>
        <param>
          <type>const vector&lt; unique_ptr&lt; <ref refid="classgraphene_1_1db_1_1object" kindref="compound">object</ref> &gt;&gt; &amp;</type>
          <declname>objects</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/db/include/graphene/db/simple_index.hpp" line="105" column="1" bodyfile="libraries/db/include/graphene/db/simple_index.hpp" bodystart="105" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1db_1_1simple__index_1_1const__iterator_1acfb86d8785c3238dc7d7082e9cc8de7c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>graphene::db::simple_index&lt; T &gt;::const_iterator::const_iterator</definition>
        <argsstring>(const vector&lt; unique_ptr&lt; object &gt;&gt; &amp;objects, const vector&lt; unique_ptr&lt; object &gt;&gt;::const_iterator &amp;a)</argsstring>
        <name>const_iterator</name>
        <param>
          <type>const vector&lt; unique_ptr&lt; <ref refid="classgraphene_1_1db_1_1object" kindref="compound">object</ref> &gt;&gt; &amp;</type>
          <declname>objects</declname>
        </param>
        <param>
          <type>const vector&lt; unique_ptr&lt; <ref refid="classgraphene_1_1db_1_1object" kindref="compound">object</ref> &gt;&gt;::<ref refid="classgraphene_1_1db_1_1simple__index_1_1const__iterator" kindref="compound">const_iterator</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/db/include/graphene/db/simple_index.hpp" line="106" column="1" bodyfile="libraries/db/include/graphene/db/simple_index.hpp" bodystart="106" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1db_1_1simple__index_1_1const__iterator_1ace4afad5b8a9c79aad9840a6e8228d71" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const T &amp;</type>
        <definition>const T&amp; graphene::db::simple_index&lt; T &gt;::const_iterator::operator*</definition>
        <argsstring>() const</argsstring>
        <name>operator*</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/db/include/graphene/db/simple_index.hpp" line="111" column="1" bodyfile="libraries/db/include/graphene/db/simple_index.hpp" bodystart="111" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1db_1_1simple__index_1_1const__iterator_1a73970ff2cfc8aace04d0e724fea3909d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classgraphene_1_1db_1_1simple__index_1_1const__iterator" kindref="compound">const_iterator</ref></type>
        <definition>const_iterator graphene::db::simple_index&lt; T &gt;::const_iterator::operator++</definition>
        <argsstring>(int)</argsstring>
        <name>operator++</name>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/db/include/graphene/db/simple_index.hpp" line="112" column="1" bodyfile="libraries/db/include/graphene/db/simple_index.hpp" bodystart="112" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1db_1_1simple__index_1_1const__iterator_1a077941d4b1c6a9acf0b90634e015318d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classgraphene_1_1db_1_1simple__index_1_1const__iterator" kindref="compound">const_iterator</ref> &amp;</type>
        <definition>const_iterator&amp; graphene::db::simple_index&lt; T &gt;::const_iterator::operator++</definition>
        <argsstring>()</argsstring>
        <name>operator++</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/db/include/graphene/db/simple_index.hpp" line="118" column="1" bodyfile="libraries/db/include/graphene/db/simple_index.hpp" bodystart="118" bodyend="124"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classgraphene_1_1db_1_1simple__index_1_1const__iterator_1ab0ac7de651351823aece097eb3be1cfb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator==</definition>
        <argsstring>(const const_iterator &amp;a, const const_iterator &amp;b)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classgraphene_1_1db_1_1simple__index_1_1const__iterator" kindref="compound">const_iterator</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="classgraphene_1_1db_1_1simple__index_1_1const__iterator" kindref="compound">const_iterator</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/db/include/graphene/db/simple_index.hpp" line="109" column="1" bodyfile="libraries/db/include/graphene/db/simple_index.hpp" bodystart="109" bodyend="109"/>
      </memberdef>
      <memberdef kind="friend" id="classgraphene_1_1db_1_1simple__index_1_1const__iterator_1a5fbca5b71055f2b793ae1607239b13a0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator!=</definition>
        <argsstring>(const const_iterator &amp;a, const const_iterator &amp;b)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classgraphene_1_1db_1_1simple__index_1_1const__iterator" kindref="compound">const_iterator</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="classgraphene_1_1db_1_1simple__index_1_1const__iterator" kindref="compound">const_iterator</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/db/include/graphene/db/simple_index.hpp" line="110" column="1" bodyfile="libraries/db/include/graphene/db/simple_index.hpp" bodystart="110" bodyend="110"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="libraries/db/include/graphene/db/simple_index.hpp" line="103" column="1" bodyfile="libraries/db/include/graphene/db/simple_index.hpp" bodystart="102" bodyend="133"/>
    <listofallmembers>
      <member refid="classgraphene_1_1db_1_1simple__index_1_1const__iterator_1a59cb3ece06b394fa955ec8dd092d6d7d" prot="private" virt="non-virtual"><scope>graphene::db::simple_index::const_iterator</scope><name>_itr</name></member>
      <member refid="classgraphene_1_1db_1_1simple__index_1_1const__iterator_1a739d4c48482673677f2b2368edd5ff31" prot="private" virt="non-virtual"><scope>graphene::db::simple_index::const_iterator</scope><name>_objects</name></member>
      <member refid="classgraphene_1_1db_1_1simple__index_1_1const__iterator_1ad8887bb52d95da40e56b5dac520c14d6" prot="public" virt="non-virtual"><scope>graphene::db::simple_index::const_iterator</scope><name>const_iterator</name></member>
      <member refid="classgraphene_1_1db_1_1simple__index_1_1const__iterator_1acfb86d8785c3238dc7d7082e9cc8de7c" prot="public" virt="non-virtual"><scope>graphene::db::simple_index::const_iterator</scope><name>const_iterator</name></member>
      <member refid="classgraphene_1_1db_1_1simple__index_1_1const__iterator_1ae851e6374f82549f3e907374bf60a803" prot="public" virt="non-virtual"><scope>graphene::db::simple_index::const_iterator</scope><name>difference_type</name></member>
      <member refid="classgraphene_1_1db_1_1simple__index_1_1const__iterator_1a90143136f2ed3047b4c3780d1c26b6d8" prot="public" virt="non-virtual"><scope>graphene::db::simple_index::const_iterator</scope><name>iterator_category</name></member>
      <member refid="classgraphene_1_1db_1_1simple__index_1_1const__iterator_1a5fbca5b71055f2b793ae1607239b13a0" prot="public" virt="non-virtual"><scope>graphene::db::simple_index::const_iterator</scope><name>operator!=</name></member>
      <member refid="classgraphene_1_1db_1_1simple__index_1_1const__iterator_1ace4afad5b8a9c79aad9840a6e8228d71" prot="public" virt="non-virtual"><scope>graphene::db::simple_index::const_iterator</scope><name>operator*</name></member>
      <member refid="classgraphene_1_1db_1_1simple__index_1_1const__iterator_1a73970ff2cfc8aace04d0e724fea3909d" prot="public" virt="non-virtual"><scope>graphene::db::simple_index::const_iterator</scope><name>operator++</name></member>
      <member refid="classgraphene_1_1db_1_1simple__index_1_1const__iterator_1a077941d4b1c6a9acf0b90634e015318d" prot="public" virt="non-virtual"><scope>graphene::db::simple_index::const_iterator</scope><name>operator++</name></member>
      <member refid="classgraphene_1_1db_1_1simple__index_1_1const__iterator_1ab0ac7de651351823aece097eb3be1cfb" prot="public" virt="non-virtual"><scope>graphene::db::simple_index::const_iterator</scope><name>operator==</name></member>
      <member refid="classgraphene_1_1db_1_1simple__index_1_1const__iterator_1abbb729060f6f19c8fbe4bfd877ce9509" prot="public" virt="non-virtual"><scope>graphene::db::simple_index::const_iterator</scope><name>pointer</name></member>
      <member refid="classgraphene_1_1db_1_1simple__index_1_1const__iterator_1a6c9717b84800345ac5ac7db53e982bc7" prot="public" virt="non-virtual"><scope>graphene::db::simple_index::const_iterator</scope><name>reference</name></member>
      <member refid="classgraphene_1_1db_1_1simple__index_1_1const__iterator_1a316f2f0e3ee1eb2648517fd918384cc2" prot="public" virt="non-virtual"><scope>graphene::db::simple_index::const_iterator</scope><name>value_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
