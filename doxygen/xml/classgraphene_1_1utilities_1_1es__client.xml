<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classgraphene_1_1utilities_1_1es__client" kind="class" language="C++" prot="public">
    <compoundname>graphene::utilities::es_client</compoundname>
    <includes refid="elasticsearch_8hpp" local="no">elasticsearch.hpp</includes>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classgraphene_1_1utilities_1_1es__client_1a101060bdd861ab67bae57520e7b6d8c6" prot="public" static="yes" mutable="no">
        <type>constexpr size_t</type>
        <definition>constexpr size_t graphene::utilities::es_client::request_size_threshold</definition>
        <argsstring></argsstring>
        <name>request_size_threshold</name>
        <initializer>= 4 * 1024 * 1024</initializer>
        <briefdescription>
<para>When doing bulk operations, call <ref refid="classgraphene_1_1utilities_1_1es__client_1a6457d8826be5ae401d49bd42bfc33d63" kindref="member">send_bulk</ref> when the approximate size of pending data reaches this value. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/utilities/include/graphene/utilities/elasticsearch.hpp" line="110" column="1" bodyfile="libraries/utilities/include/graphene/utilities/elasticsearch.hpp" bodystart="110" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classgraphene_1_1utilities_1_1es__client_1a75bd95d3aec5223c7e0e08a798ba8f4b" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string graphene::utilities::es_client::base_url</definition>
        <argsstring></argsstring>
        <name>base_url</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/utilities/include/graphene/utilities/elasticsearch.hpp" line="112" column="1" bodyfile="libraries/utilities/include/graphene/utilities/elasticsearch.hpp" bodystart="112" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgraphene_1_1utilities_1_1es__client_1af665be55f5a09e7e0bfb62a220689bb2" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string graphene::utilities::es_client::auth</definition>
        <argsstring></argsstring>
        <name>auth</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/utilities/include/graphene/utilities/elasticsearch.hpp" line="113" column="1" bodyfile="libraries/utilities/include/graphene/utilities/elasticsearch.hpp" bodystart="113" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgraphene_1_1utilities_1_1es__client_1aa15a49dfa841fcc6874d119abd5b1a81" prot="private" static="no" mutable="no">
        <type><ref refid="classgraphene_1_1utilities_1_1curl__wrapper" kindref="compound">curl_wrapper</ref></type>
        <definition>curl_wrapper graphene::utilities::es_client::curl</definition>
        <argsstring></argsstring>
        <name>curl</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/utilities/include/graphene/utilities/elasticsearch.hpp" line="114" column="1" bodyfile="libraries/utilities/include/graphene/utilities/elasticsearch.hpp" bodystart="114" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classgraphene_1_1utilities_1_1es__client_1a339ee0512cd1dc4ec71ad0e23f8011ba" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>graphene::utilities::es_client::es_client</definition>
        <argsstring>(const std::string &amp;p_base_url, const std::string &amp;p_auth)</argsstring>
        <name>es_client</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>p_base_url</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>p_auth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/utilities/include/graphene/utilities/elasticsearch.hpp" line="98" column="1" bodyfile="libraries/utilities/include/graphene/utilities/elasticsearch.hpp" bodystart="98" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1utilities_1_1es__client_1ab6af53222b1d537f4032c9ea03a3d53f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool graphene::utilities::es_client::check_status</definition>
        <argsstring>() const</argsstring>
        <name>check_status</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/utilities/include/graphene/utilities/elasticsearch.hpp" line="100" column="1" bodyfile="libraries/utilities/elasticsearch.cpp" bodystart="197" bodyend="203"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1utilities_1_1es__client_1a7a0d05e8bf86ff5e55e9ed30fd229060" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string graphene::utilities::es_client::get_version</definition>
        <argsstring>() const</argsstring>
        <name>get_version</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/utilities/include/graphene/utilities/elasticsearch.hpp" line="101" column="1" bodyfile="libraries/utilities/elasticsearch.cpp" bodystart="205" bodyend="214"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1utilities_1_1es__client_1a92d192b91a265128dd07a2e1e490aa08" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::utilities::es_client::check_version_7_or_above</definition>
        <argsstring>(bool &amp;result) const noexcept</argsstring>
        <name>check_version_7_or_above</name>
        <param>
          <type>bool &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/utilities/include/graphene/utilities/elasticsearch.hpp" line="102" column="1" bodyfile="libraries/utilities/elasticsearch.cpp" bodystart="216" bodyend="229"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1utilities_1_1es__client_1a6457d8826be5ae401d49bd42bfc33d63" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool graphene::utilities::es_client::send_bulk</definition>
        <argsstring>(const std::vector&lt; std::string &gt; &amp;bulk_lines) const</argsstring>
        <name>send_bulk</name>
        <param>
          <type>const std::vector&lt; std::string &gt; &amp;</type>
          <declname>bulk_lines</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/utilities/include/graphene/utilities/elasticsearch.hpp" line="104" column="1" bodyfile="libraries/utilities/elasticsearch.cpp" bodystart="231" bodyend="237"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1utilities_1_1es__client_1a5be72e4f87fdf1de38d5f2bb9d0c6996" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool graphene::utilities::es_client::del</definition>
        <argsstring>(const std::string &amp;path) const</argsstring>
        <name>del</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/utilities/include/graphene/utilities/elasticsearch.hpp" line="105" column="1" bodyfile="libraries/utilities/elasticsearch.cpp" bodystart="239" bodyend="245"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1utilities_1_1es__client_1ac4758581a2f924a106b52cb212742a20" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string graphene::utilities::es_client::get</definition>
        <argsstring>(const std::string &amp;path) const</argsstring>
        <name>get</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/utilities/include/graphene/utilities/elasticsearch.hpp" line="106" column="1" bodyfile="libraries/utilities/elasticsearch.cpp" bodystart="247" bodyend="253"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1utilities_1_1es__client_1a5c28295a1e0c3e7ee0a2959d1e3504ae" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string graphene::utilities::es_client::query</definition>
        <argsstring>(const std::string &amp;path, const std::string &amp;query) const</argsstring>
        <name>query</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>path</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>query</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/utilities/include/graphene/utilities/elasticsearch.hpp" line="107" column="1" bodyfile="libraries/utilities/elasticsearch.cpp" bodystart="255" bodyend="261"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="3538">
        <label>size_t</label>
      </node>
      <node id="3537">
        <label>graphene::utilities::es_client</label>
        <link refid="classgraphene_1_1utilities_1_1es__client"/>
        <childnode refid="3538" relation="usage">
          <edgelabel>request_size_threshold</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="libraries/utilities/include/graphene/utilities/elasticsearch.hpp" line="96" column="1" bodyfile="libraries/utilities/include/graphene/utilities/elasticsearch.hpp" bodystart="95" bodyend="115"/>
    <listofallmembers>
      <member refid="classgraphene_1_1utilities_1_1es__client_1af665be55f5a09e7e0bfb62a220689bb2" prot="private" virt="non-virtual"><scope>graphene::utilities::es_client</scope><name>auth</name></member>
      <member refid="classgraphene_1_1utilities_1_1es__client_1a75bd95d3aec5223c7e0e08a798ba8f4b" prot="private" virt="non-virtual"><scope>graphene::utilities::es_client</scope><name>base_url</name></member>
      <member refid="classgraphene_1_1utilities_1_1es__client_1ab6af53222b1d537f4032c9ea03a3d53f" prot="public" virt="non-virtual"><scope>graphene::utilities::es_client</scope><name>check_status</name></member>
      <member refid="classgraphene_1_1utilities_1_1es__client_1a92d192b91a265128dd07a2e1e490aa08" prot="public" virt="non-virtual"><scope>graphene::utilities::es_client</scope><name>check_version_7_or_above</name></member>
      <member refid="classgraphene_1_1utilities_1_1es__client_1aa15a49dfa841fcc6874d119abd5b1a81" prot="private" virt="non-virtual"><scope>graphene::utilities::es_client</scope><name>curl</name></member>
      <member refid="classgraphene_1_1utilities_1_1es__client_1a5be72e4f87fdf1de38d5f2bb9d0c6996" prot="public" virt="non-virtual"><scope>graphene::utilities::es_client</scope><name>del</name></member>
      <member refid="classgraphene_1_1utilities_1_1es__client_1a339ee0512cd1dc4ec71ad0e23f8011ba" prot="public" virt="non-virtual"><scope>graphene::utilities::es_client</scope><name>es_client</name></member>
      <member refid="classgraphene_1_1utilities_1_1es__client_1ac4758581a2f924a106b52cb212742a20" prot="public" virt="non-virtual"><scope>graphene::utilities::es_client</scope><name>get</name></member>
      <member refid="classgraphene_1_1utilities_1_1es__client_1a7a0d05e8bf86ff5e55e9ed30fd229060" prot="public" virt="non-virtual"><scope>graphene::utilities::es_client</scope><name>get_version</name></member>
      <member refid="classgraphene_1_1utilities_1_1es__client_1a5c28295a1e0c3e7ee0a2959d1e3504ae" prot="public" virt="non-virtual"><scope>graphene::utilities::es_client</scope><name>query</name></member>
      <member refid="classgraphene_1_1utilities_1_1es__client_1a101060bdd861ab67bae57520e7b6d8c6" prot="public" virt="non-virtual"><scope>graphene::utilities::es_client</scope><name>request_size_threshold</name></member>
      <member refid="classgraphene_1_1utilities_1_1es__client_1a6457d8826be5ae401d49bd42bfc33d63" prot="public" virt="non-virtual"><scope>graphene::utilities::es_client</scope><name>send_bulk</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
