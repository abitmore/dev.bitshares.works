<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor" kind="struct" language="C++" prot="public">
    <compoundname>graphene::chain::proposal_operation_hardfork_visitor</compoundname>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1adb804e5e83320af04f6cdb29b944a36d" prot="public" static="no">
        <type>void</type>
        <definition>typedef void graphene::chain::proposal_operation_hardfork_visitor::result_type</definition>
        <argsstring></argsstring>
        <name>result_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/proposal_evaluator.cpp" line="61" column="17" bodyfile="libraries/chain/proposal_evaluator.cpp" bodystart="61" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1a4d984fd0d3673e8dd5d232e7674b90ab" prot="public" static="no" mutable="no">
        <type>const <ref refid="classgraphene_1_1chain_1_1database" kindref="compound">database</ref> &amp;</type>
        <definition>const database&amp; graphene::chain::proposal_operation_hardfork_visitor::db</definition>
        <argsstring></argsstring>
        <name>db</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/proposal_evaluator.cpp" line="62" column="19" bodyfile="libraries/chain/proposal_evaluator.cpp" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1a49d262acc4a43da659e0aee75d1665d1" prot="public" static="no" mutable="no">
        <type>const <ref refid="classfc_1_1time__point__sec" kindref="compound">fc::time_point_sec</ref></type>
        <definition>const fc::time_point_sec graphene::chain::proposal_operation_hardfork_visitor::block_time</definition>
        <argsstring></argsstring>
        <name>block_time</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/proposal_evaluator.cpp" line="63" column="29" bodyfile="libraries/chain/proposal_evaluator.cpp" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1a60e8c44ebd54d5aa07097f0321d48756" prot="public" static="no" mutable="no">
        <type>const <ref refid="classfc_1_1time__point__sec" kindref="compound">fc::time_point_sec</ref></type>
        <definition>const fc::time_point_sec graphene::chain::proposal_operation_hardfork_visitor::next_maintenance_time</definition>
        <argsstring></argsstring>
        <name>next_maintenance_time</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/proposal_evaluator.cpp" line="64" column="29" bodyfile="libraries/chain/proposal_evaluator.cpp" bodystart="64" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1a80b3700e7234cbb7f4990e7b00c3fa30" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>graphene::chain::proposal_operation_hardfork_visitor::proposal_operation_hardfork_visitor</definition>
        <argsstring>(const database &amp;_db, const fc::time_point_sec bt)</argsstring>
        <name>proposal_operation_hardfork_visitor</name>
        <param>
          <type>const <ref refid="classgraphene_1_1chain_1_1database" kindref="compound">database</ref> &amp;</type>
          <declname>_db</declname>
        </param>
        <param>
          <type>const <ref refid="classfc_1_1time__point__sec" kindref="compound">fc::time_point_sec</ref></type>
          <declname>bt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/proposal_evaluator.cpp" line="66" column="4" bodyfile="libraries/chain/proposal_evaluator.cpp" bodystart="66" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1a4b670c3dbd01f7bd5bae1068af9701af" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void graphene::chain::proposal_operation_hardfork_visitor::operator()</definition>
        <argsstring>(const T &amp;v) const</argsstring>
        <name>operator()</name>
        <param>
          <type>const T &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/proposal_evaluator.cpp" line="70" column="9" bodyfile="libraries/chain/proposal_evaluator.cpp" bodystart="70" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1a99a0f157fdac0c133a733f79a23d817f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::chain::proposal_operation_hardfork_visitor::operator()</definition>
        <argsstring>(const graphene::chain::limit_order_update_operation &amp;) const</argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="structgraphene_1_1protocol_1_1limit__order__update__operation" kindref="compound">graphene::chain::limit_order_update_operation</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/proposal_evaluator.cpp" line="74" column="9" bodyfile="libraries/chain/proposal_evaluator.cpp" bodystart="74" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1ae2f99a7c2efdc2db189bfb312d5639b4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::chain::proposal_operation_hardfork_visitor::operator()</definition>
        <argsstring>(const graphene::chain::limit_order_create_operation &amp;op) const</argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="structgraphene_1_1protocol_1_1limit__order__create__operation" kindref="compound">graphene::chain::limit_order_create_operation</ref> &amp;</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/proposal_evaluator.cpp" line="79" column="9" bodyfile="libraries/chain/proposal_evaluator.cpp" bodystart="79" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1a56618d4712e99e76d9b423f0f13dac32" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::chain::proposal_operation_hardfork_visitor::operator()</definition>
        <argsstring>(const graphene::chain::asset_create_operation &amp;v) const</argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="structgraphene_1_1protocol_1_1asset__create__operation" kindref="compound">graphene::chain::asset_create_operation</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/proposal_evaluator.cpp" line="86" column="9" bodyfile="libraries/chain/proposal_evaluator.cpp" bodystart="86" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1add434bd02a501d483afec4a8c35b7d65" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::chain::proposal_operation_hardfork_visitor::operator()</definition>
        <argsstring>(const graphene::chain::asset_update_operation &amp;v) const</argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="structgraphene_1_1protocol_1_1asset__update__operation" kindref="compound">graphene::chain::asset_update_operation</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/proposal_evaluator.cpp" line="112" column="9" bodyfile="libraries/chain/proposal_evaluator.cpp" bodystart="112" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1a7d530d9309e33ad7795b795365befd3d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::chain::proposal_operation_hardfork_visitor::operator()</definition>
        <argsstring>(const graphene::chain::asset_update_bitasset_operation &amp;v) const</argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="structgraphene_1_1protocol_1_1asset__update__bitasset__operation" kindref="compound">graphene::chain::asset_update_bitasset_operation</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/proposal_evaluator.cpp" line="134" column="9" bodyfile="libraries/chain/proposal_evaluator.cpp" bodystart="134" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1a46c2a0ee9c76d0fd9240a49205195727" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::chain::proposal_operation_hardfork_visitor::operator()</definition>
        <argsstring>(const graphene::chain::asset_claim_fees_operation &amp;v) const</argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="structgraphene_1_1protocol_1_1asset__claim__fees__operation" kindref="compound">graphene::chain::asset_claim_fees_operation</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/proposal_evaluator.cpp" line="142" column="9" bodyfile="libraries/chain/proposal_evaluator.cpp" bodystart="142" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1a7ecc552bdadb8a312a2a3d6c6c969ae8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::chain::proposal_operation_hardfork_visitor::operator()</definition>
        <argsstring>(const graphene::chain::asset_publish_feed_operation &amp;v) const</argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="structgraphene_1_1protocol_1_1asset__publish__feed__operation" kindref="compound">graphene::chain::asset_publish_feed_operation</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/proposal_evaluator.cpp" line="146" column="9" bodyfile="libraries/chain/proposal_evaluator.cpp" bodystart="146" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1af9f10d72d34a461351aa3484063ae588" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::chain::proposal_operation_hardfork_visitor::operator()</definition>
        <argsstring>(const graphene::chain::committee_member_update_global_parameters_operation &amp;op) const</argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="structgraphene_1_1protocol_1_1committee__member__update__global__parameters__operation" kindref="compound">graphene::chain::committee_member_update_global_parameters_operation</ref> &amp;</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/proposal_evaluator.cpp" line="152" column="9" bodyfile="libraries/chain/proposal_evaluator.cpp" bodystart="152" bodyend="234"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1a1ae55b70a472da87689818ef543997a2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::chain::proposal_operation_hardfork_visitor::operator()</definition>
        <argsstring>(const graphene::chain::htlc_create_operation &amp;op) const</argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="structgraphene_1_1protocol_1_1htlc__create__operation" kindref="compound">graphene::chain::htlc_create_operation</ref> &amp;</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/proposal_evaluator.cpp" line="235" column="9" bodyfile="libraries/chain/proposal_evaluator.cpp" bodystart="235" bodyend="247"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1ae511262432813b964d7759ce55aeb5fb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::chain::proposal_operation_hardfork_visitor::operator()</definition>
        <argsstring>(const graphene::chain::htlc_redeem_operation &amp;) const</argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="structgraphene_1_1protocol_1_1htlc__redeem__operation" kindref="compound">graphene::chain::htlc_redeem_operation</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/proposal_evaluator.cpp" line="248" column="9" bodyfile="libraries/chain/proposal_evaluator.cpp" bodystart="248" bodyend="250"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1a3f9d75b7baadda59d6bbefa276951f5f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::chain::proposal_operation_hardfork_visitor::operator()</definition>
        <argsstring>(const graphene::chain::htlc_extend_operation &amp;) const</argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="structgraphene_1_1protocol_1_1htlc__extend__operation" kindref="compound">graphene::chain::htlc_extend_operation</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/proposal_evaluator.cpp" line="251" column="9" bodyfile="libraries/chain/proposal_evaluator.cpp" bodystart="251" bodyend="253"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1a45fe49a803fc5476d5181ad5f6748995" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::chain::proposal_operation_hardfork_visitor::operator()</definition>
        <argsstring>(const graphene::chain::custom_authority_create_operation &amp;) const</argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="structgraphene_1_1protocol_1_1custom__authority__create__operation" kindref="compound">graphene::chain::custom_authority_create_operation</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/proposal_evaluator.cpp" line="254" column="9" bodyfile="libraries/chain/proposal_evaluator.cpp" bodystart="254" bodyend="256"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1a09d05b3d13b242f9662d7998f60246db" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::chain::proposal_operation_hardfork_visitor::operator()</definition>
        <argsstring>(const graphene::chain::custom_authority_update_operation &amp;) const</argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="structgraphene_1_1protocol_1_1custom__authority__update__operation" kindref="compound">graphene::chain::custom_authority_update_operation</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/proposal_evaluator.cpp" line="257" column="9" bodyfile="libraries/chain/proposal_evaluator.cpp" bodystart="257" bodyend="259"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1acc61f24456b1e1fab017b973a34bf917" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::chain::proposal_operation_hardfork_visitor::operator()</definition>
        <argsstring>(const graphene::chain::custom_authority_delete_operation &amp;) const</argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="structgraphene_1_1protocol_1_1custom__authority__delete__operation" kindref="compound">graphene::chain::custom_authority_delete_operation</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/proposal_evaluator.cpp" line="260" column="9" bodyfile="libraries/chain/proposal_evaluator.cpp" bodystart="260" bodyend="262"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1a85711cfd59b5b81d2e04bd499bb0884a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::chain::proposal_operation_hardfork_visitor::operator()</definition>
        <argsstring>(const graphene::chain::ticket_create_operation &amp;) const</argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="structgraphene_1_1protocol_1_1ticket__create__operation" kindref="compound">graphene::chain::ticket_create_operation</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/proposal_evaluator.cpp" line="263" column="9" bodyfile="libraries/chain/proposal_evaluator.cpp" bodystart="263" bodyend="265"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1a1fb2ef9aa747ccd9d932317ef9ed362e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::chain::proposal_operation_hardfork_visitor::operator()</definition>
        <argsstring>(const graphene::chain::ticket_update_operation &amp;) const</argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="structgraphene_1_1protocol_1_1ticket__update__operation" kindref="compound">graphene::chain::ticket_update_operation</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/proposal_evaluator.cpp" line="266" column="9" bodyfile="libraries/chain/proposal_evaluator.cpp" bodystart="266" bodyend="268"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1ab4e2ad511470f0e4646c9fd51c277d6b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::chain::proposal_operation_hardfork_visitor::operator()</definition>
        <argsstring>(const graphene::chain::liquidity_pool_create_operation &amp;) const</argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="structgraphene_1_1protocol_1_1liquidity__pool__create__operation" kindref="compound">graphene::chain::liquidity_pool_create_operation</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/proposal_evaluator.cpp" line="269" column="9" bodyfile="libraries/chain/proposal_evaluator.cpp" bodystart="269" bodyend="271"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1a90aa2c1dba30dbe150ff8077991841f0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::chain::proposal_operation_hardfork_visitor::operator()</definition>
        <argsstring>(const graphene::chain::liquidity_pool_delete_operation &amp;) const</argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="structgraphene_1_1protocol_1_1liquidity__pool__delete__operation" kindref="compound">graphene::chain::liquidity_pool_delete_operation</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/proposal_evaluator.cpp" line="272" column="9" bodyfile="libraries/chain/proposal_evaluator.cpp" bodystart="272" bodyend="274"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1ae833de43bf8ecdb1f60bf177c3942ccb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::chain::proposal_operation_hardfork_visitor::operator()</definition>
        <argsstring>(const graphene::chain::liquidity_pool_update_operation &amp;) const</argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="structgraphene_1_1protocol_1_1liquidity__pool__update__operation" kindref="compound">graphene::chain::liquidity_pool_update_operation</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/proposal_evaluator.cpp" line="275" column="9" bodyfile="libraries/chain/proposal_evaluator.cpp" bodystart="275" bodyend="277"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1ab72374501d07b653e1c94415af8122f6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::chain::proposal_operation_hardfork_visitor::operator()</definition>
        <argsstring>(const graphene::chain::liquidity_pool_deposit_operation &amp;) const</argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="structgraphene_1_1protocol_1_1liquidity__pool__deposit__operation" kindref="compound">graphene::chain::liquidity_pool_deposit_operation</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/proposal_evaluator.cpp" line="278" column="9" bodyfile="libraries/chain/proposal_evaluator.cpp" bodystart="278" bodyend="280"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1aa96474a8c17df24e59c8aa69f9302fcb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::chain::proposal_operation_hardfork_visitor::operator()</definition>
        <argsstring>(const graphene::chain::liquidity_pool_withdraw_operation &amp;) const</argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="structgraphene_1_1protocol_1_1liquidity__pool__withdraw__operation" kindref="compound">graphene::chain::liquidity_pool_withdraw_operation</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/proposal_evaluator.cpp" line="281" column="9" bodyfile="libraries/chain/proposal_evaluator.cpp" bodystart="281" bodyend="283"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1a034fb6e9b3ffcb4bc0ab117d34dae640" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::chain::proposal_operation_hardfork_visitor::operator()</definition>
        <argsstring>(const graphene::chain::liquidity_pool_exchange_operation &amp;) const</argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="structgraphene_1_1protocol_1_1liquidity__pool__exchange__operation" kindref="compound">graphene::chain::liquidity_pool_exchange_operation</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/proposal_evaluator.cpp" line="284" column="9" bodyfile="libraries/chain/proposal_evaluator.cpp" bodystart="284" bodyend="286"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1abe3ad93008968d1db2724953d1b828c6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::chain::proposal_operation_hardfork_visitor::operator()</definition>
        <argsstring>(const graphene::chain::samet_fund_create_operation &amp;) const</argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="structgraphene_1_1protocol_1_1samet__fund__create__operation" kindref="compound">graphene::chain::samet_fund_create_operation</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/proposal_evaluator.cpp" line="287" column="9" bodyfile="libraries/chain/proposal_evaluator.cpp" bodystart="287" bodyend="289"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1a08f2d4b25155acb4e25c4cc68769a0a0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::chain::proposal_operation_hardfork_visitor::operator()</definition>
        <argsstring>(const graphene::chain::samet_fund_delete_operation &amp;) const</argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="structgraphene_1_1protocol_1_1samet__fund__delete__operation" kindref="compound">graphene::chain::samet_fund_delete_operation</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/proposal_evaluator.cpp" line="290" column="9" bodyfile="libraries/chain/proposal_evaluator.cpp" bodystart="290" bodyend="292"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1af4c4661e0de7d2eb730c55678cb88cb1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::chain::proposal_operation_hardfork_visitor::operator()</definition>
        <argsstring>(const graphene::chain::samet_fund_update_operation &amp;) const</argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="structgraphene_1_1protocol_1_1samet__fund__update__operation" kindref="compound">graphene::chain::samet_fund_update_operation</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/proposal_evaluator.cpp" line="293" column="9" bodyfile="libraries/chain/proposal_evaluator.cpp" bodystart="293" bodyend="295"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1a0ec05234360e92e68c9abc49e3f1fe85" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::chain::proposal_operation_hardfork_visitor::operator()</definition>
        <argsstring>(const graphene::chain::samet_fund_borrow_operation &amp;) const</argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="structgraphene_1_1protocol_1_1samet__fund__borrow__operation" kindref="compound">graphene::chain::samet_fund_borrow_operation</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/proposal_evaluator.cpp" line="296" column="9" bodyfile="libraries/chain/proposal_evaluator.cpp" bodystart="296" bodyend="298"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1ad240638cf3c85d8a41343bce0562428d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::chain::proposal_operation_hardfork_visitor::operator()</definition>
        <argsstring>(const graphene::chain::samet_fund_repay_operation &amp;) const</argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="structgraphene_1_1protocol_1_1samet__fund__repay__operation" kindref="compound">graphene::chain::samet_fund_repay_operation</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/proposal_evaluator.cpp" line="299" column="9" bodyfile="libraries/chain/proposal_evaluator.cpp" bodystart="299" bodyend="301"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1a428e85b646ca33dbe8ef6909948defd8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::chain::proposal_operation_hardfork_visitor::operator()</definition>
        <argsstring>(const graphene::chain::credit_offer_create_operation &amp;) const</argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="structgraphene_1_1protocol_1_1credit__offer__create__operation" kindref="compound">graphene::chain::credit_offer_create_operation</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/proposal_evaluator.cpp" line="302" column="9" bodyfile="libraries/chain/proposal_evaluator.cpp" bodystart="302" bodyend="304"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1ae7c60d41f79079c341b7b3af58fe594b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::chain::proposal_operation_hardfork_visitor::operator()</definition>
        <argsstring>(const graphene::chain::credit_offer_delete_operation &amp;) const</argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="structgraphene_1_1protocol_1_1credit__offer__delete__operation" kindref="compound">graphene::chain::credit_offer_delete_operation</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/proposal_evaluator.cpp" line="305" column="9" bodyfile="libraries/chain/proposal_evaluator.cpp" bodystart="305" bodyend="307"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1ac594d3fde4ac0b6db2b7d4df23a30f59" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::chain::proposal_operation_hardfork_visitor::operator()</definition>
        <argsstring>(const graphene::chain::credit_offer_update_operation &amp;) const</argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="structgraphene_1_1protocol_1_1credit__offer__update__operation" kindref="compound">graphene::chain::credit_offer_update_operation</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/proposal_evaluator.cpp" line="308" column="9" bodyfile="libraries/chain/proposal_evaluator.cpp" bodystart="308" bodyend="310"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1a7ab3884bd3fe3b0bfe2bba131027c98c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::chain::proposal_operation_hardfork_visitor::operator()</definition>
        <argsstring>(const graphene::chain::credit_offer_accept_operation &amp;op) const</argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="structgraphene_1_1protocol_1_1credit__offer__accept__operation" kindref="compound">graphene::chain::credit_offer_accept_operation</ref> &amp;</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/proposal_evaluator.cpp" line="311" column="9" bodyfile="libraries/chain/proposal_evaluator.cpp" bodystart="311" bodyend="317"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1aba0c74197df508bb9801d12cd73ecfcf" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::chain::proposal_operation_hardfork_visitor::operator()</definition>
        <argsstring>(const graphene::chain::credit_deal_repay_operation &amp;) const</argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="structgraphene_1_1protocol_1_1credit__deal__repay__operation" kindref="compound">graphene::chain::credit_deal_repay_operation</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/proposal_evaluator.cpp" line="318" column="9" bodyfile="libraries/chain/proposal_evaluator.cpp" bodystart="318" bodyend="320"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1a0c0543bab758ebcf41a80d524d96517a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::chain::proposal_operation_hardfork_visitor::operator()</definition>
        <argsstring>(const graphene::chain::credit_deal_update_operation &amp;) const</argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="structgraphene_1_1protocol_1_1credit__deal__update__operation" kindref="compound">graphene::chain::credit_deal_update_operation</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/proposal_evaluator.cpp" line="322" column="9" bodyfile="libraries/chain/proposal_evaluator.cpp" bodystart="322" bodyend="324"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1a8198469d601b9c7fd58e91ce7044398b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::chain::proposal_operation_hardfork_visitor::operator()</definition>
        <argsstring>(const graphene::chain::proposal_create_operation &amp;v) const</argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="structgraphene_1_1protocol_1_1proposal__create__operation" kindref="compound">graphene::chain::proposal_create_operation</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/proposal_evaluator.cpp" line="327" column="9" bodyfile="libraries/chain/proposal_evaluator.cpp" bodystart="327" bodyend="341"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>graphene::chain::proposal_operation_hardfork_visitor</label>
        <link refid="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor"/>
        <childnode refid="2" relation="usage">
          <edgelabel>block_time</edgelabel>
          <edgelabel>next_maintenance_time</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>db</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>fc::time_point_sec</label>
        <link refid="classfc_1_1time__point__sec"/>
      </node>
      <node id="4">
        <label>graphene::db::object_database</label>
        <link refid="classgraphene_1_1db_1_1object__database"/>
        <childnode refid="5" relation="usage">
          <edgelabel>_undo_db</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>graphene::chain::database</label>
        <link refid="classgraphene_1_1chain_1_1database"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="2" relation="usage">
          <edgelabel>_current_block_time</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>graphene::db::undo_database</label>
        <link refid="classgraphene_1_1db_1_1undo__database"/>
      </node>
    </collaborationgraph>
    <location file="libraries/chain/proposal_evaluator.cpp" line="60" column="1" bodyfile="libraries/chain/proposal_evaluator.cpp" bodystart="59" bodyend="342"/>
    <listofallmembers>
      <member refid="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1a49d262acc4a43da659e0aee75d1665d1" prot="public" virt="non-virtual"><scope>graphene::chain::proposal_operation_hardfork_visitor</scope><name>block_time</name></member>
      <member refid="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1a4d984fd0d3673e8dd5d232e7674b90ab" prot="public" virt="non-virtual"><scope>graphene::chain::proposal_operation_hardfork_visitor</scope><name>db</name></member>
      <member refid="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1a60e8c44ebd54d5aa07097f0321d48756" prot="public" virt="non-virtual"><scope>graphene::chain::proposal_operation_hardfork_visitor</scope><name>next_maintenance_time</name></member>
      <member refid="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1a4b670c3dbd01f7bd5bae1068af9701af" prot="public" virt="non-virtual"><scope>graphene::chain::proposal_operation_hardfork_visitor</scope><name>operator()</name></member>
      <member refid="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1a99a0f157fdac0c133a733f79a23d817f" prot="public" virt="non-virtual"><scope>graphene::chain::proposal_operation_hardfork_visitor</scope><name>operator()</name></member>
      <member refid="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1ae2f99a7c2efdc2db189bfb312d5639b4" prot="public" virt="non-virtual"><scope>graphene::chain::proposal_operation_hardfork_visitor</scope><name>operator()</name></member>
      <member refid="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1a56618d4712e99e76d9b423f0f13dac32" prot="public" virt="non-virtual"><scope>graphene::chain::proposal_operation_hardfork_visitor</scope><name>operator()</name></member>
      <member refid="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1add434bd02a501d483afec4a8c35b7d65" prot="public" virt="non-virtual"><scope>graphene::chain::proposal_operation_hardfork_visitor</scope><name>operator()</name></member>
      <member refid="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1a7d530d9309e33ad7795b795365befd3d" prot="public" virt="non-virtual"><scope>graphene::chain::proposal_operation_hardfork_visitor</scope><name>operator()</name></member>
      <member refid="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1a46c2a0ee9c76d0fd9240a49205195727" prot="public" virt="non-virtual"><scope>graphene::chain::proposal_operation_hardfork_visitor</scope><name>operator()</name></member>
      <member refid="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1a7ecc552bdadb8a312a2a3d6c6c969ae8" prot="public" virt="non-virtual"><scope>graphene::chain::proposal_operation_hardfork_visitor</scope><name>operator()</name></member>
      <member refid="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1af9f10d72d34a461351aa3484063ae588" prot="public" virt="non-virtual"><scope>graphene::chain::proposal_operation_hardfork_visitor</scope><name>operator()</name></member>
      <member refid="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1a1ae55b70a472da87689818ef543997a2" prot="public" virt="non-virtual"><scope>graphene::chain::proposal_operation_hardfork_visitor</scope><name>operator()</name></member>
      <member refid="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1ae511262432813b964d7759ce55aeb5fb" prot="public" virt="non-virtual"><scope>graphene::chain::proposal_operation_hardfork_visitor</scope><name>operator()</name></member>
      <member refid="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1a3f9d75b7baadda59d6bbefa276951f5f" prot="public" virt="non-virtual"><scope>graphene::chain::proposal_operation_hardfork_visitor</scope><name>operator()</name></member>
      <member refid="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1a45fe49a803fc5476d5181ad5f6748995" prot="public" virt="non-virtual"><scope>graphene::chain::proposal_operation_hardfork_visitor</scope><name>operator()</name></member>
      <member refid="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1a09d05b3d13b242f9662d7998f60246db" prot="public" virt="non-virtual"><scope>graphene::chain::proposal_operation_hardfork_visitor</scope><name>operator()</name></member>
      <member refid="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1acc61f24456b1e1fab017b973a34bf917" prot="public" virt="non-virtual"><scope>graphene::chain::proposal_operation_hardfork_visitor</scope><name>operator()</name></member>
      <member refid="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1a85711cfd59b5b81d2e04bd499bb0884a" prot="public" virt="non-virtual"><scope>graphene::chain::proposal_operation_hardfork_visitor</scope><name>operator()</name></member>
      <member refid="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1a1fb2ef9aa747ccd9d932317ef9ed362e" prot="public" virt="non-virtual"><scope>graphene::chain::proposal_operation_hardfork_visitor</scope><name>operator()</name></member>
      <member refid="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1ab4e2ad511470f0e4646c9fd51c277d6b" prot="public" virt="non-virtual"><scope>graphene::chain::proposal_operation_hardfork_visitor</scope><name>operator()</name></member>
      <member refid="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1a90aa2c1dba30dbe150ff8077991841f0" prot="public" virt="non-virtual"><scope>graphene::chain::proposal_operation_hardfork_visitor</scope><name>operator()</name></member>
      <member refid="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1ae833de43bf8ecdb1f60bf177c3942ccb" prot="public" virt="non-virtual"><scope>graphene::chain::proposal_operation_hardfork_visitor</scope><name>operator()</name></member>
      <member refid="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1ab72374501d07b653e1c94415af8122f6" prot="public" virt="non-virtual"><scope>graphene::chain::proposal_operation_hardfork_visitor</scope><name>operator()</name></member>
      <member refid="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1aa96474a8c17df24e59c8aa69f9302fcb" prot="public" virt="non-virtual"><scope>graphene::chain::proposal_operation_hardfork_visitor</scope><name>operator()</name></member>
      <member refid="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1a034fb6e9b3ffcb4bc0ab117d34dae640" prot="public" virt="non-virtual"><scope>graphene::chain::proposal_operation_hardfork_visitor</scope><name>operator()</name></member>
      <member refid="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1abe3ad93008968d1db2724953d1b828c6" prot="public" virt="non-virtual"><scope>graphene::chain::proposal_operation_hardfork_visitor</scope><name>operator()</name></member>
      <member refid="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1a08f2d4b25155acb4e25c4cc68769a0a0" prot="public" virt="non-virtual"><scope>graphene::chain::proposal_operation_hardfork_visitor</scope><name>operator()</name></member>
      <member refid="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1af4c4661e0de7d2eb730c55678cb88cb1" prot="public" virt="non-virtual"><scope>graphene::chain::proposal_operation_hardfork_visitor</scope><name>operator()</name></member>
      <member refid="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1a0ec05234360e92e68c9abc49e3f1fe85" prot="public" virt="non-virtual"><scope>graphene::chain::proposal_operation_hardfork_visitor</scope><name>operator()</name></member>
      <member refid="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1ad240638cf3c85d8a41343bce0562428d" prot="public" virt="non-virtual"><scope>graphene::chain::proposal_operation_hardfork_visitor</scope><name>operator()</name></member>
      <member refid="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1a428e85b646ca33dbe8ef6909948defd8" prot="public" virt="non-virtual"><scope>graphene::chain::proposal_operation_hardfork_visitor</scope><name>operator()</name></member>
      <member refid="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1ae7c60d41f79079c341b7b3af58fe594b" prot="public" virt="non-virtual"><scope>graphene::chain::proposal_operation_hardfork_visitor</scope><name>operator()</name></member>
      <member refid="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1ac594d3fde4ac0b6db2b7d4df23a30f59" prot="public" virt="non-virtual"><scope>graphene::chain::proposal_operation_hardfork_visitor</scope><name>operator()</name></member>
      <member refid="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1a7ab3884bd3fe3b0bfe2bba131027c98c" prot="public" virt="non-virtual"><scope>graphene::chain::proposal_operation_hardfork_visitor</scope><name>operator()</name></member>
      <member refid="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1aba0c74197df508bb9801d12cd73ecfcf" prot="public" virt="non-virtual"><scope>graphene::chain::proposal_operation_hardfork_visitor</scope><name>operator()</name></member>
      <member refid="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1a0c0543bab758ebcf41a80d524d96517a" prot="public" virt="non-virtual"><scope>graphene::chain::proposal_operation_hardfork_visitor</scope><name>operator()</name></member>
      <member refid="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1a8198469d601b9c7fd58e91ce7044398b" prot="public" virt="non-virtual"><scope>graphene::chain::proposal_operation_hardfork_visitor</scope><name>operator()</name></member>
      <member refid="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1a80b3700e7234cbb7f4990e7b00c3fa30" prot="public" virt="non-virtual"><scope>graphene::chain::proposal_operation_hardfork_visitor</scope><name>proposal_operation_hardfork_visitor</name></member>
      <member refid="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1adb804e5e83320af04f6cdb29b944a36d" prot="public" virt="non-virtual"><scope>graphene::chain::proposal_operation_hardfork_visitor</scope><name>result_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
