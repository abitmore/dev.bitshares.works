<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classfc_1_1directory__iterator" kind="class" language="C++" prot="public">
    <compoundname>fc::directory_iterator</compoundname>
    <includes refid="filesystem_8hpp" local="no">filesystem.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classfc_1_1directory__iterator_1a83a67498926b5de61a961d5c12314ec4" prot="private" static="no" mutable="no">
        <type><ref refid="classfc_1_1fwd" kindref="compound">fwd</ref>&lt; boost::filesystem::directory_iterator, 16 &gt;</type>
        <definition>fwd&lt;boost::filesystem::directory_iterator,16&gt; fc::directory_iterator::_p</definition>
        <argsstring></argsstring>
        <name>_p</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/filesystem.hpp" line="126" column="1" bodyfile="libraries/fc/include/fc/filesystem.hpp" bodystart="126" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classfc_1_1directory__iterator_1a5201c83d6567151f308c292b2fbb3665" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fc::directory_iterator::directory_iterator</definition>
        <argsstring>(const fc::path &amp;p)</argsstring>
        <name>directory_iterator</name>
        <param>
          <type>const <ref refid="classfc_1_1path" kindref="compound">fc::path</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/filesystem.hpp" line="114" column="1" bodyfile="libraries/fc/src/filesystem.cpp" bodystart="169" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1directory__iterator_1a841823714172ed6f121dd4ca01a8d59d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fc::directory_iterator::directory_iterator</definition>
        <argsstring>()</argsstring>
        <name>directory_iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/filesystem.hpp" line="115" column="1" bodyfile="libraries/fc/src/filesystem.cpp" bodystart="172" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1directory__iterator_1a63eb76aeb7ec24226b924eba45e58ec6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fc::directory_iterator::~directory_iterator</definition>
        <argsstring>()</argsstring>
        <name>~directory_iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/filesystem.hpp" line="116" column="1" bodyfile="libraries/fc/src/filesystem.cpp" bodystart="173" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1directory__iterator_1ad06ef6b54ef483d56672d8d8bddd5e26" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classfc_1_1path" kindref="compound">fc::path</ref></type>
        <definition>fc::path fc::directory_iterator::operator*</definition>
        <argsstring>() const</argsstring>
        <name>operator*</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/filesystem.hpp" line="118" column="1" bodyfile="libraries/fc/src/filesystem.cpp" bodystart="175" bodyend="175"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1directory__iterator_1aea174ce25dce1bae67c9dab956cc5750" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classfc_1_1detail_1_1path__wrapper" kindref="compound">detail::path_wrapper</ref></type>
        <definition>detail::path_wrapper fc::directory_iterator::operator-&gt;</definition>
        <argsstring>() const</argsstring>
        <name>operator-&gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/filesystem.hpp" line="119" column="1" bodyfile="libraries/fc/src/filesystem.cpp" bodystart="176" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1directory__iterator_1a4e372b3729bd88b0801f5c50bb0bb07a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classfc_1_1directory__iterator" kindref="compound">directory_iterator</ref> &amp;</type>
        <definition>directory_iterator &amp; fc::directory_iterator::operator++</definition>
        <argsstring>(int)</argsstring>
        <name>operator++</name>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/filesystem.hpp" line="120" column="1" bodyfile="libraries/fc/src/filesystem.cpp" bodystart="177" bodyend="177"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1directory__iterator_1a0644796a19c7ff77406a898230c2c029" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classfc_1_1directory__iterator" kindref="compound">directory_iterator</ref> &amp;</type>
        <definition>directory_iterator &amp; fc::directory_iterator::operator++</definition>
        <argsstring>()</argsstring>
        <name>operator++</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/filesystem.hpp" line="121" column="1" bodyfile="libraries/fc/src/filesystem.cpp" bodystart="178" bodyend="178"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classfc_1_1directory__iterator_1a7c558731903d512fc41e9d6bf929926a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator==</definition>
        <argsstring>(const directory_iterator &amp;, const directory_iterator &amp;)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classfc_1_1directory__iterator" kindref="compound">directory_iterator</ref> &amp;</type>
          <defname>r</defname>
        </param>
        <param>
          <type>const <ref refid="classfc_1_1directory__iterator" kindref="compound">directory_iterator</ref> &amp;</type>
          <defname>l</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/filesystem.hpp" line="123" column="1" bodyfile="libraries/fc/src/filesystem.cpp" bodystart="180" bodyend="182"/>
      </memberdef>
      <memberdef kind="friend" id="classfc_1_1directory__iterator_1a2382d11de064c526347c37c23806494d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator!=</definition>
        <argsstring>(const directory_iterator &amp;, const directory_iterator &amp;)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classfc_1_1directory__iterator" kindref="compound">directory_iterator</ref> &amp;</type>
          <defname>r</defname>
        </param>
        <param>
          <type>const <ref refid="classfc_1_1directory__iterator" kindref="compound">directory_iterator</ref> &amp;</type>
          <defname>l</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/filesystem.hpp" line="124" column="1" bodyfile="libraries/fc/src/filesystem.cpp" bodystart="183" bodyend="185"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="libraries/fc/include/fc/filesystem.hpp" line="112" column="1" bodyfile="libraries/fc/include/fc/filesystem.hpp" bodystart="112" bodyend="127"/>
    <listofallmembers>
      <member refid="classfc_1_1directory__iterator_1a83a67498926b5de61a961d5c12314ec4" prot="private" virt="non-virtual"><scope>fc::directory_iterator</scope><name>_p</name></member>
      <member refid="classfc_1_1directory__iterator_1a5201c83d6567151f308c292b2fbb3665" prot="public" virt="non-virtual"><scope>fc::directory_iterator</scope><name>directory_iterator</name></member>
      <member refid="classfc_1_1directory__iterator_1a841823714172ed6f121dd4ca01a8d59d" prot="public" virt="non-virtual"><scope>fc::directory_iterator</scope><name>directory_iterator</name></member>
      <member refid="classfc_1_1directory__iterator_1a2382d11de064c526347c37c23806494d" prot="public" virt="non-virtual"><scope>fc::directory_iterator</scope><name>operator!=</name></member>
      <member refid="classfc_1_1directory__iterator_1ad06ef6b54ef483d56672d8d8bddd5e26" prot="public" virt="non-virtual"><scope>fc::directory_iterator</scope><name>operator*</name></member>
      <member refid="classfc_1_1directory__iterator_1a4e372b3729bd88b0801f5c50bb0bb07a" prot="public" virt="non-virtual"><scope>fc::directory_iterator</scope><name>operator++</name></member>
      <member refid="classfc_1_1directory__iterator_1a0644796a19c7ff77406a898230c2c029" prot="public" virt="non-virtual"><scope>fc::directory_iterator</scope><name>operator++</name></member>
      <member refid="classfc_1_1directory__iterator_1aea174ce25dce1bae67c9dab956cc5750" prot="public" virt="non-virtual"><scope>fc::directory_iterator</scope><name>operator-&gt;</name></member>
      <member refid="classfc_1_1directory__iterator_1a7c558731903d512fc41e9d6bf929926a" prot="public" virt="non-virtual"><scope>fc::directory_iterator</scope><name>operator==</name></member>
      <member refid="classfc_1_1directory__iterator_1a63eb76aeb7ec24226b924eba45e58ec6" prot="public" virt="non-virtual"><scope>fc::directory_iterator</scope><name>~directory_iterator</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
