<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classfc_1_1bigint" kind="class" language="C++" prot="public">
    <compoundname>fc::bigint</compoundname>
    <includes refid="bigint_8hpp" local="no">bigint.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classfc_1_1bigint_1a5aebf90722f6b804e68dd5037bcdc7dd" prot="private" static="no" mutable="no">
        <type><ref refid="bigint_8hpp_1a62125ea4e1d748a4a9c1aed9766f451a" kindref="member">BIGNUM</ref> *</type>
        <definition>BIGNUM* fc::bigint::n</definition>
        <argsstring></argsstring>
        <name>n</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/crypto/bigint.hpp" line="67" column="1" bodyfile="libraries/fc/include/fc/crypto/bigint.hpp" bodystart="67" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classfc_1_1bigint_1acb4c464f1e016ccb00f0fa5a51a9873f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fc::bigint::bigint</definition>
        <argsstring>(const std::vector&lt; char &gt; &amp;bige)</argsstring>
        <name>bigint</name>
        <param>
          <type>const std::vector&lt; char &gt; &amp;</type>
          <declname>bige</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/crypto/bigint.hpp" line="12" column="1" bodyfile="libraries/fc/src/crypto/bigint.cpp" bodystart="15" bodyend="18"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1bigint_1af1df19a5e31f1b0620299c009d487c09" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fc::bigint::bigint</definition>
        <argsstring>(const char *bige, uint32_t l)</argsstring>
        <name>bigint</name>
        <param>
          <type>const char *</type>
          <declname>bige</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>l</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/crypto/bigint.hpp" line="13" column="1" bodyfile="libraries/fc/src/crypto/bigint.cpp" bodystart="11" bodyend="14"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1bigint_1a7875b887d6497e99944c10aeb6edf319" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fc::bigint::bigint</definition>
        <argsstring>(uint64_t value)</argsstring>
        <name>bigint</name>
        <param>
          <type>uint64_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/crypto/bigint.hpp" line="14" column="1" bodyfile="libraries/fc/src/crypto/bigint.cpp" bodystart="32" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1bigint_1a292d6c31fad8a84cfdddb24a6be1abae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fc::bigint::bigint</definition>
        <argsstring>()</argsstring>
        <name>bigint</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/crypto/bigint.hpp" line="15" column="1" bodyfile="libraries/fc/src/crypto/bigint.cpp" bodystart="23" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1bigint_1abda40ee38fb31fb92e75f8563ccb55d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fc::bigint::bigint</definition>
        <argsstring>(const bigint &amp;c)</argsstring>
        <name>bigint</name>
        <param>
          <type>const <ref refid="classfc_1_1bigint" kindref="compound">bigint</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/crypto/bigint.hpp" line="16" column="1" bodyfile="libraries/fc/src/crypto/bigint.cpp" bodystart="39" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1bigint_1a58132cc8096d969f5f058f346a259abf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fc::bigint::bigint</definition>
        <argsstring>(bigint &amp;&amp;c)</argsstring>
        <name>bigint</name>
        <param>
          <type><ref refid="classfc_1_1bigint" kindref="compound">bigint</ref> &amp;&amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/crypto/bigint.hpp" line="17" column="1" bodyfile="libraries/fc/src/crypto/bigint.cpp" bodystart="43" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1bigint_1a187e7d0c2cbad88460b3eb61697a5c01" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>fc::bigint::bigint</definition>
        <argsstring>(BIGNUM *n)</argsstring>
        <name>bigint</name>
        <param>
          <type><ref refid="bigint_8hpp_1a62125ea4e1d748a4a9c1aed9766f451a" kindref="member">BIGNUM</ref> *</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/crypto/bigint.hpp" line="18" column="1" bodyfile="libraries/fc/src/crypto/bigint.cpp" bodystart="19" bodyend="22"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1bigint_1a87f2030b5a9b9813c757d57a5880c9c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fc::bigint::~bigint</definition>
        <argsstring>()</argsstring>
        <name>~bigint</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/crypto/bigint.hpp" line="19" column="1" bodyfile="libraries/fc/src/crypto/bigint.cpp" bodystart="48" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1bigint_1a1b72b15a739f7a04bb87b32bb4f153d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classfc_1_1bigint" kindref="compound">bigint</ref> &amp;</type>
        <definition>bigint &amp; fc::bigint::operator=</definition>
        <argsstring>(const bigint &amp;a)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classfc_1_1bigint" kindref="compound">bigint</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/crypto/bigint.hpp" line="21" column="1" bodyfile="libraries/fc/src/crypto/bigint.cpp" bodystart="198" bodyend="203"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1bigint_1a3d6a9c0873e3b4e1546003ab9bb3f024" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classfc_1_1bigint" kindref="compound">bigint</ref> &amp;</type>
        <definition>bigint &amp; fc::bigint::operator=</definition>
        <argsstring>(bigint &amp;&amp;a)</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classfc_1_1bigint" kindref="compound">bigint</ref> &amp;&amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/crypto/bigint.hpp" line="22" column="1" bodyfile="libraries/fc/src/crypto/bigint.cpp" bodystart="192" bodyend="197"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1bigint_1ad2fed7f0d170376ea3ef7e9dd364b321" prot="public" static="no" const="yes" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>fc::bigint::operator bool</definition>
        <argsstring>() const</argsstring>
        <name>operator bool</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/crypto/bigint.hpp" line="24" column="1" bodyfile="libraries/fc/src/crypto/bigint.cpp" bodystart="80" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1bigint_1a8b2d3a048ea4ff9f245eb0f34e18a660" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool fc::bigint::is_negative</definition>
        <argsstring>() const</argsstring>
        <name>is_negative</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/crypto/bigint.hpp" line="26" column="1" bodyfile="libraries/fc/src/crypto/bigint.cpp" bodystart="52" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1bigint_1aae6162af1da04e4423975054d9b8f728" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t fc::bigint::to_int64</definition>
        <argsstring>() const</argsstring>
        <name>to_int64</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/crypto/bigint.hpp" line="27" column="1" bodyfile="libraries/fc/src/crypto/bigint.cpp" bodystart="54" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1bigint_1af969a998e489c5f8bd81c07b738519df" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t fc::bigint::log2</definition>
        <argsstring>() const</argsstring>
        <name>log2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/crypto/bigint.hpp" line="29" column="1" bodyfile="libraries/fc/src/crypto/bigint.cpp" bodystart="64" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1bigint_1a8bb114eb168697d5d697f0b3452bd0aa" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classfc_1_1bigint" kindref="compound">bigint</ref></type>
        <definition>bigint fc::bigint::exp</definition>
        <argsstring>(const bigint &amp;c) const</argsstring>
        <name>exp</name>
        <param>
          <type>const <ref refid="classfc_1_1bigint" kindref="compound">bigint</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/crypto/bigint.hpp" line="30" column="1" bodyfile="libraries/fc/src/crypto/bigint.cpp" bodystart="182" bodyend="189"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1bigint_1a8fcaf1fa0b03c87ce99abaf4c32840ee" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool fc::bigint::operator&lt;</definition>
        <argsstring>(const bigint &amp;c) const</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const <ref refid="classfc_1_1bigint" kindref="compound">bigint</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/crypto/bigint.hpp" line="34" column="1" bodyfile="libraries/fc/src/crypto/bigint.cpp" bodystart="65" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1bigint_1a79a57688c437dca31a7b3e394b41acba" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool fc::bigint::operator&gt;</definition>
        <argsstring>(const bigint &amp;c) const</argsstring>
        <name>operator&gt;</name>
        <param>
          <type>const <ref refid="classfc_1_1bigint" kindref="compound">bigint</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/crypto/bigint.hpp" line="35" column="1" bodyfile="libraries/fc/src/crypto/bigint.cpp" bodystart="68" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1bigint_1a1b52e45b5efa4098d406376f78749e48" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool fc::bigint::operator&gt;=</definition>
        <argsstring>(const bigint &amp;c) const</argsstring>
        <name>operator&gt;=</name>
        <param>
          <type>const <ref refid="classfc_1_1bigint" kindref="compound">bigint</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/crypto/bigint.hpp" line="36" column="1" bodyfile="libraries/fc/src/crypto/bigint.cpp" bodystart="71" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1bigint_1a649bffcc80e6348453a9704072f99b7e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool fc::bigint::operator==</definition>
        <argsstring>(const bigint &amp;c) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classfc_1_1bigint" kindref="compound">bigint</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/crypto/bigint.hpp" line="37" column="1" bodyfile="libraries/fc/src/crypto/bigint.cpp" bodystart="74" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1bigint_1ab887f3066de9cd1daad336cec80437c0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool fc::bigint::operator!=</definition>
        <argsstring>(const bigint &amp;c) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classfc_1_1bigint" kindref="compound">bigint</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/crypto/bigint.hpp" line="38" column="1" bodyfile="libraries/fc/src/crypto/bigint.cpp" bodystart="77" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1bigint_1a40ba09f4b0d2420bbd69823e41b13145" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classfc_1_1bigint" kindref="compound">bigint</ref></type>
        <definition>bigint fc::bigint::operator+</definition>
        <argsstring>(const bigint &amp;a) const</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="classfc_1_1bigint" kindref="compound">bigint</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/crypto/bigint.hpp" line="40" column="1" bodyfile="libraries/fc/src/crypto/bigint.cpp" bodystart="105" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1bigint_1a34e71f5ebcd8d8d53db777bcd8b53f00" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classfc_1_1bigint" kindref="compound">bigint</ref></type>
        <definition>bigint fc::bigint::operator*</definition>
        <argsstring>(const bigint &amp;a) const</argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="classfc_1_1bigint" kindref="compound">bigint</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/crypto/bigint.hpp" line="41" column="1" bodyfile="libraries/fc/src/crypto/bigint.cpp" bodystart="124" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1bigint_1a502fa596e53b743dc04a72879a21eb9d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classfc_1_1bigint" kindref="compound">bigint</ref></type>
        <definition>bigint fc::bigint::operator/</definition>
        <argsstring>(const bigint &amp;a) const</argsstring>
        <name>operator/</name>
        <param>
          <type>const <ref refid="classfc_1_1bigint" kindref="compound">bigint</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/crypto/bigint.hpp" line="42" column="1" bodyfile="libraries/fc/src/crypto/bigint.cpp" bodystart="131" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1bigint_1a824ed8d894a438619d3dac72189838fc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classfc_1_1bigint" kindref="compound">bigint</ref></type>
        <definition>bigint fc::bigint::operator%</definition>
        <argsstring>(const bigint &amp;a) const</argsstring>
        <name>operator%</name>
        <param>
          <type>const <ref refid="classfc_1_1bigint" kindref="compound">bigint</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/crypto/bigint.hpp" line="43" column="1" bodyfile="libraries/fc/src/crypto/bigint.cpp" bodystart="138" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1bigint_1aec66b7c4e3adfc4bb40c748afcff0b3e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classfc_1_1bigint" kindref="compound">bigint</ref></type>
        <definition>bigint fc::bigint::operator/=</definition>
        <argsstring>(const bigint &amp;a)</argsstring>
        <name>operator/=</name>
        <param>
          <type>const <ref refid="classfc_1_1bigint" kindref="compound">bigint</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/crypto/bigint.hpp" line="44" column="1" bodyfile="libraries/fc/src/crypto/bigint.cpp" bodystart="146" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1bigint_1ab672316597423732aaebff19d43012fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classfc_1_1bigint" kindref="compound">bigint</ref></type>
        <definition>bigint fc::bigint::operator*=</definition>
        <argsstring>(const bigint &amp;a)</argsstring>
        <name>operator*=</name>
        <param>
          <type>const <ref refid="classfc_1_1bigint" kindref="compound">bigint</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/crypto/bigint.hpp" line="45" column="1" bodyfile="libraries/fc/src/crypto/bigint.cpp" bodystart="154" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1bigint_1a899c326f06b59a060dab8b903199213d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classfc_1_1bigint" kindref="compound">bigint</ref> &amp;</type>
        <definition>bigint &amp; fc::bigint::operator+=</definition>
        <argsstring>(const bigint &amp;a)</argsstring>
        <name>operator+=</name>
        <param>
          <type>const <ref refid="classfc_1_1bigint" kindref="compound">bigint</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/crypto/bigint.hpp" line="46" column="1" bodyfile="libraries/fc/src/crypto/bigint.cpp" bodystart="110" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1bigint_1a8df3ffe8605b849cc71c8111818c53a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classfc_1_1bigint" kindref="compound">bigint</ref> &amp;</type>
        <definition>bigint &amp; fc::bigint::operator-=</definition>
        <argsstring>(const bigint &amp;a)</argsstring>
        <name>operator-=</name>
        <param>
          <type>const <ref refid="classfc_1_1bigint" kindref="compound">bigint</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/crypto/bigint.hpp" line="47" column="1" bodyfile="libraries/fc/src/crypto/bigint.cpp" bodystart="116" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1bigint_1a459bafab93e3ce8ed07939595fe1fc34" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classfc_1_1bigint" kindref="compound">bigint</ref> &amp;</type>
        <definition>bigint &amp; fc::bigint::operator&lt;&lt;=</definition>
        <argsstring>(uint32_t i)</argsstring>
        <name>operator&lt;&lt;=</name>
        <param>
          <type>uint32_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/crypto/bigint.hpp" line="48" column="1" bodyfile="libraries/fc/src/crypto/bigint.cpp" bodystart="167" bodyend="175"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1bigint_1abe6fa0986e47e98753b42924ad157a57" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classfc_1_1bigint" kindref="compound">bigint</ref> &amp;</type>
        <definition>bigint &amp; fc::bigint::operator&gt;&gt;=</definition>
        <argsstring>(uint32_t i)</argsstring>
        <name>operator&gt;&gt;=</name>
        <param>
          <type>uint32_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/crypto/bigint.hpp" line="49" column="1" bodyfile="libraries/fc/src/crypto/bigint.cpp" bodystart="159" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1bigint_1acf0167324b72a936b3777f5f4efcf15a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classfc_1_1bigint" kindref="compound">bigint</ref></type>
        <definition>bigint fc::bigint::operator-</definition>
        <argsstring>(const bigint &amp;a) const</argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="classfc_1_1bigint" kindref="compound">bigint</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/crypto/bigint.hpp" line="50" column="1" bodyfile="libraries/fc/src/crypto/bigint.cpp" bodystart="177" bodyend="181"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1bigint_1aeeed63218ddee1945d2903ec8de127df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classfc_1_1bigint" kindref="compound">bigint</ref></type>
        <definition>bigint fc::bigint::operator++</definition>
        <argsstring>(int)</argsstring>
        <name>operator++</name>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/crypto/bigint.hpp" line="53" column="1" bodyfile="libraries/fc/src/crypto/bigint.cpp" bodystart="84" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1bigint_1ad9bdb01f12f428d0e5addfa59c295962" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classfc_1_1bigint" kindref="compound">bigint</ref> &amp;</type>
        <definition>bigint &amp; fc::bigint::operator++</definition>
        <argsstring>()</argsstring>
        <name>operator++</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/crypto/bigint.hpp" line="54" column="1" bodyfile="libraries/fc/src/crypto/bigint.cpp" bodystart="90" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1bigint_1a3832b6df4103eff5b58ba388a0b2c6b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classfc_1_1bigint" kindref="compound">bigint</ref></type>
        <definition>bigint fc::bigint::operator--</definition>
        <argsstring>(int)</argsstring>
        <name>operator--</name>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/crypto/bigint.hpp" line="55" column="1" bodyfile="libraries/fc/src/crypto/bigint.cpp" bodystart="94" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1bigint_1a14299996f33c1f7abb645a1d0b20f8fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classfc_1_1bigint" kindref="compound">bigint</ref> &amp;</type>
        <definition>bigint &amp; fc::bigint::operator--</definition>
        <argsstring>()</argsstring>
        <name>operator--</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/crypto/bigint.hpp" line="56" column="1" bodyfile="libraries/fc/src/crypto/bigint.cpp" bodystart="100" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1bigint_1a07d20c4ef6a92d936e788a50f8d359b8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fc::bigint::operator std::string</definition>
        <argsstring>() const</argsstring>
        <name>operator std::string</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/crypto/bigint.hpp" line="58" column="1" bodyfile="libraries/fc/src/crypto/bigint.cpp" bodystart="204" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1bigint_1a8c10185176c6dfb4a10f16a760b79d72" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fc::bigint::operator std::vector&lt; char &gt;</definition>
        <argsstring>() const</argsstring>
        <name>operator std::vector&lt; char &gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/crypto/bigint.hpp" line="61" column="1" bodyfile="libraries/fc/src/crypto/bigint.cpp" bodystart="208" bodyend="212"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1bigint_1a4b2255410ddb1e3061f090746048c798" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="bigint_8hpp_1a62125ea4e1d748a4a9c1aed9766f451a" kindref="member">BIGNUM</ref> *</type>
        <definition>BIGNUM * fc::bigint::dup</definition>
        <argsstring>() const</argsstring>
        <name>dup</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/crypto/bigint.hpp" line="63" column="1" bodyfile="libraries/fc/src/crypto/bigint.cpp" bodystart="27" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1bigint_1ae69989f6110d91a3ee3433c7f50aef12" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="bigint_8hpp_1a62125ea4e1d748a4a9c1aed9766f451a" kindref="member">BIGNUM</ref> *</type>
        <definition>BIGNUM* fc::bigint::get</definition>
        <argsstring>() const</argsstring>
        <name>get</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/crypto/bigint.hpp" line="65" column="1" bodyfile="libraries/fc/include/fc/crypto/bigint.hpp" bodystart="65" bodyend="65"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classfc_1_1bigint_1a5c1dd3c77d67ffc96ed46717f1a25d54" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classfc_1_1bigint" kindref="compound">bigint</ref></type>
        <definition>static bigint fc::bigint::random</definition>
        <argsstring>(uint32_t bits, int t, int)</argsstring>
        <name>random</name>
        <param>
          <type>uint32_t</type>
          <declname>bits</declname>
        </param>
        <param>
          <type>int</type>
          <declname>t</declname>
        </param>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/crypto/bigint.hpp" line="32" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="libraries/fc/include/fc/crypto/bigint.hpp" line="10" column="1" bodyfile="libraries/fc/include/fc/crypto/bigint.hpp" bodystart="10" bodyend="68"/>
    <listofallmembers>
      <member refid="classfc_1_1bigint_1acb4c464f1e016ccb00f0fa5a51a9873f" prot="public" virt="non-virtual"><scope>fc::bigint</scope><name>bigint</name></member>
      <member refid="classfc_1_1bigint_1af1df19a5e31f1b0620299c009d487c09" prot="public" virt="non-virtual"><scope>fc::bigint</scope><name>bigint</name></member>
      <member refid="classfc_1_1bigint_1a7875b887d6497e99944c10aeb6edf319" prot="public" virt="non-virtual"><scope>fc::bigint</scope><name>bigint</name></member>
      <member refid="classfc_1_1bigint_1a292d6c31fad8a84cfdddb24a6be1abae" prot="public" virt="non-virtual"><scope>fc::bigint</scope><name>bigint</name></member>
      <member refid="classfc_1_1bigint_1abda40ee38fb31fb92e75f8563ccb55d9" prot="public" virt="non-virtual"><scope>fc::bigint</scope><name>bigint</name></member>
      <member refid="classfc_1_1bigint_1a58132cc8096d969f5f058f346a259abf" prot="public" virt="non-virtual"><scope>fc::bigint</scope><name>bigint</name></member>
      <member refid="classfc_1_1bigint_1a187e7d0c2cbad88460b3eb61697a5c01" prot="public" virt="non-virtual"><scope>fc::bigint</scope><name>bigint</name></member>
      <member refid="classfc_1_1bigint_1a4b2255410ddb1e3061f090746048c798" prot="public" virt="non-virtual"><scope>fc::bigint</scope><name>dup</name></member>
      <member refid="classfc_1_1bigint_1a8bb114eb168697d5d697f0b3452bd0aa" prot="public" virt="non-virtual"><scope>fc::bigint</scope><name>exp</name></member>
      <member refid="classfc_1_1bigint_1ae69989f6110d91a3ee3433c7f50aef12" prot="public" virt="non-virtual"><scope>fc::bigint</scope><name>get</name></member>
      <member refid="classfc_1_1bigint_1a8b2d3a048ea4ff9f245eb0f34e18a660" prot="public" virt="non-virtual"><scope>fc::bigint</scope><name>is_negative</name></member>
      <member refid="classfc_1_1bigint_1af969a998e489c5f8bd81c07b738519df" prot="public" virt="non-virtual"><scope>fc::bigint</scope><name>log2</name></member>
      <member refid="classfc_1_1bigint_1a5aebf90722f6b804e68dd5037bcdc7dd" prot="private" virt="non-virtual"><scope>fc::bigint</scope><name>n</name></member>
      <member refid="classfc_1_1bigint_1ad2fed7f0d170376ea3ef7e9dd364b321" prot="public" virt="non-virtual"><scope>fc::bigint</scope><name>operator bool</name></member>
      <member refid="classfc_1_1bigint_1a07d20c4ef6a92d936e788a50f8d359b8" prot="public" virt="non-virtual"><scope>fc::bigint</scope><name>operator std::string</name></member>
      <member refid="classfc_1_1bigint_1a8c10185176c6dfb4a10f16a760b79d72" prot="public" virt="non-virtual"><scope>fc::bigint</scope><name>operator std::vector&lt; char &gt;</name></member>
      <member refid="classfc_1_1bigint_1ab887f3066de9cd1daad336cec80437c0" prot="public" virt="non-virtual"><scope>fc::bigint</scope><name>operator!=</name></member>
      <member refid="classfc_1_1bigint_1a824ed8d894a438619d3dac72189838fc" prot="public" virt="non-virtual"><scope>fc::bigint</scope><name>operator%</name></member>
      <member refid="classfc_1_1bigint_1a34e71f5ebcd8d8d53db777bcd8b53f00" prot="public" virt="non-virtual"><scope>fc::bigint</scope><name>operator*</name></member>
      <member refid="classfc_1_1bigint_1ab672316597423732aaebff19d43012fa" prot="public" virt="non-virtual"><scope>fc::bigint</scope><name>operator*=</name></member>
      <member refid="classfc_1_1bigint_1a40ba09f4b0d2420bbd69823e41b13145" prot="public" virt="non-virtual"><scope>fc::bigint</scope><name>operator+</name></member>
      <member refid="classfc_1_1bigint_1aeeed63218ddee1945d2903ec8de127df" prot="public" virt="non-virtual"><scope>fc::bigint</scope><name>operator++</name></member>
      <member refid="classfc_1_1bigint_1ad9bdb01f12f428d0e5addfa59c295962" prot="public" virt="non-virtual"><scope>fc::bigint</scope><name>operator++</name></member>
      <member refid="classfc_1_1bigint_1a899c326f06b59a060dab8b903199213d" prot="public" virt="non-virtual"><scope>fc::bigint</scope><name>operator+=</name></member>
      <member refid="classfc_1_1bigint_1acf0167324b72a936b3777f5f4efcf15a" prot="public" virt="non-virtual"><scope>fc::bigint</scope><name>operator-</name></member>
      <member refid="classfc_1_1bigint_1a3832b6df4103eff5b58ba388a0b2c6b3" prot="public" virt="non-virtual"><scope>fc::bigint</scope><name>operator--</name></member>
      <member refid="classfc_1_1bigint_1a14299996f33c1f7abb645a1d0b20f8fd" prot="public" virt="non-virtual"><scope>fc::bigint</scope><name>operator--</name></member>
      <member refid="classfc_1_1bigint_1a8df3ffe8605b849cc71c8111818c53a3" prot="public" virt="non-virtual"><scope>fc::bigint</scope><name>operator-=</name></member>
      <member refid="classfc_1_1bigint_1a502fa596e53b743dc04a72879a21eb9d" prot="public" virt="non-virtual"><scope>fc::bigint</scope><name>operator/</name></member>
      <member refid="classfc_1_1bigint_1aec66b7c4e3adfc4bb40c748afcff0b3e" prot="public" virt="non-virtual"><scope>fc::bigint</scope><name>operator/=</name></member>
      <member refid="classfc_1_1bigint_1a8fcaf1fa0b03c87ce99abaf4c32840ee" prot="public" virt="non-virtual"><scope>fc::bigint</scope><name>operator&lt;</name></member>
      <member refid="classfc_1_1bigint_1a459bafab93e3ce8ed07939595fe1fc34" prot="public" virt="non-virtual"><scope>fc::bigint</scope><name>operator&lt;&lt;=</name></member>
      <member refid="classfc_1_1bigint_1a1b72b15a739f7a04bb87b32bb4f153d5" prot="public" virt="non-virtual"><scope>fc::bigint</scope><name>operator=</name></member>
      <member refid="classfc_1_1bigint_1a3d6a9c0873e3b4e1546003ab9bb3f024" prot="public" virt="non-virtual"><scope>fc::bigint</scope><name>operator=</name></member>
      <member refid="classfc_1_1bigint_1a649bffcc80e6348453a9704072f99b7e" prot="public" virt="non-virtual"><scope>fc::bigint</scope><name>operator==</name></member>
      <member refid="classfc_1_1bigint_1a79a57688c437dca31a7b3e394b41acba" prot="public" virt="non-virtual"><scope>fc::bigint</scope><name>operator&gt;</name></member>
      <member refid="classfc_1_1bigint_1a1b52e45b5efa4098d406376f78749e48" prot="public" virt="non-virtual"><scope>fc::bigint</scope><name>operator&gt;=</name></member>
      <member refid="classfc_1_1bigint_1abe6fa0986e47e98753b42924ad157a57" prot="public" virt="non-virtual"><scope>fc::bigint</scope><name>operator&gt;&gt;=</name></member>
      <member refid="classfc_1_1bigint_1a5c1dd3c77d67ffc96ed46717f1a25d54" prot="public" virt="non-virtual"><scope>fc::bigint</scope><name>random</name></member>
      <member refid="classfc_1_1bigint_1aae6162af1da04e4423975054d9b8f728" prot="public" virt="non-virtual"><scope>fc::bigint</scope><name>to_int64</name></member>
      <member refid="classfc_1_1bigint_1a87f2030b5a9b9813c757d57a5880c9c5" prot="public" virt="non-virtual"><scope>fc::bigint</scope><name>~bigint</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
