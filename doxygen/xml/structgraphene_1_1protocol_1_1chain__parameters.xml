<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="structgraphene_1_1protocol_1_1chain__parameters" kind="struct" language="C++" prot="public">
    <compoundname>graphene::protocol::chain_parameters</compoundname>
    <includes refid="chain__parameters_8hpp" local="no">chain_parameters.hpp</includes>
    <innerclass refid="structgraphene_1_1protocol_1_1chain__parameters_1_1ext" prot="public">graphene::protocol::chain_parameters::ext</innerclass>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1chain__parameters_1a9d10ab2a64ebcb154b3589d35166cb8e" prot="public" static="no" mutable="no">
        <type>std::shared_ptr&lt; const <ref refid="structgraphene_1_1protocol_1_1fee__schedule" kindref="compound">fee_schedule</ref> &gt;</type>
        <definition>std::shared_ptr&lt;const fee_schedule&gt; graphene::protocol::chain_parameters::current_fees</definition>
        <argsstring></argsstring>
        <name>current_fees</name>
        <briefdescription>
<para>current schedule of fees </para>
        </briefdescription>
        <detaileddescription>
<para>using a shared_ptr breaks the circular dependency created between operations and the fee schedule </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/chain_parameters.hpp" line="49" column="23" bodyfile="libraries/protocol/include/graphene/protocol/chain_parameters.hpp" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1chain__parameters_1a3a4bed37969b54e10d46b9294fd13b38" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t graphene::protocol::chain_parameters::block_interval</definition>
        <argsstring></argsstring>
        <name>block_interval</name>
        <initializer>= <ref refid="protocol_2include_2graphene_2protocol_2config_8hpp_1ab47b1de8de7ee3105ff3b61c450d1dfc" kindref="member">GRAPHENE_DEFAULT_BLOCK_INTERVAL</ref></initializer>
        <briefdescription>
<para>interval in seconds between blocks </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/chain_parameters.hpp" line="53" column="31" bodyfile="libraries/protocol/include/graphene/protocol/chain_parameters.hpp" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1chain__parameters_1af6362a843de8532fcb4a269e31fc4b61" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t graphene::protocol::chain_parameters::maintenance_interval</definition>
        <argsstring></argsstring>
        <name>maintenance_interval</name>
        <initializer>= <ref refid="protocol_2include_2graphene_2protocol_2config_8hpp_1ad12186aae0a9783e96537c122062ecd1" kindref="member">GRAPHENE_DEFAULT_MAINTENANCE_INTERVAL</ref></initializer>
        <briefdescription>
<para>interval in sections between blockchain maintenance events </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/chain_parameters.hpp" line="54" column="31" bodyfile="libraries/protocol/include/graphene/protocol/chain_parameters.hpp" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1chain__parameters_1ab51a10aaaf399a4472aa1f7c8984eed3" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t graphene::protocol::chain_parameters::maintenance_skip_slots</definition>
        <argsstring></argsstring>
        <name>maintenance_skip_slots</name>
        <initializer>= <ref refid="protocol_2include_2graphene_2protocol_2config_8hpp_1a04bbdcaa5c92016a645160ef8f549587" kindref="member">GRAPHENE_DEFAULT_MAINTENANCE_SKIP_SLOTS</ref></initializer>
        <briefdescription>
<para>number of block_intervals to skip at maintenance time </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/chain_parameters.hpp" line="55" column="31" bodyfile="libraries/protocol/include/graphene/protocol/chain_parameters.hpp" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1chain__parameters_1ace17b331410446c9b5566032bc0eb14a" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t graphene::protocol::chain_parameters::committee_proposal_review_period</definition>
        <argsstring></argsstring>
        <name>committee_proposal_review_period</name>
        <initializer>= <ref refid="protocol_2include_2graphene_2protocol_2config_8hpp_1af8a81062f23fc3810ff496d3de68cc64" kindref="member">GRAPHENE_DEFAULT_COMMITTEE_PROPOSAL_REVIEW_PERIOD_SEC</ref></initializer>
        <briefdescription>
<para>minimum time in seconds that a proposed transaction requiring committee authority may not be signed, prior to expiration </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/chain_parameters.hpp" line="56" column="31" bodyfile="libraries/protocol/include/graphene/protocol/chain_parameters.hpp" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1chain__parameters_1a953b98247dd4d20e0fa18521969fe56f" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t graphene::protocol::chain_parameters::maximum_transaction_size</definition>
        <argsstring></argsstring>
        <name>maximum_transaction_size</name>
        <initializer>= <ref refid="protocol_2include_2graphene_2protocol_2config_8hpp_1a6c0f6afdb5ed939f7de0cfd393678c97" kindref="member">GRAPHENE_DEFAULT_MAX_TRANSACTION_SIZE</ref></initializer>
        <briefdescription>
<para>maximum allowable size in bytes for a transaction </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/chain_parameters.hpp" line="57" column="31" bodyfile="libraries/protocol/include/graphene/protocol/chain_parameters.hpp" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1chain__parameters_1a0ef750f5d152f3c4bc750ef2ccc3a26a" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t graphene::protocol::chain_parameters::maximum_block_size</definition>
        <argsstring></argsstring>
        <name>maximum_block_size</name>
        <initializer>= <ref refid="protocol_2include_2graphene_2protocol_2config_8hpp_1a5507de233977b2a97d022d7c7d157fd4" kindref="member">GRAPHENE_DEFAULT_MAX_BLOCK_SIZE</ref></initializer>
        <briefdescription>
<para>maximum allowable size in bytes for a block </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/chain_parameters.hpp" line="58" column="31" bodyfile="libraries/protocol/include/graphene/protocol/chain_parameters.hpp" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1chain__parameters_1a7462692f45d265e1b49b761aba2ec32d" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t graphene::protocol::chain_parameters::maximum_time_until_expiration</definition>
        <argsstring></argsstring>
        <name>maximum_time_until_expiration</name>
        <initializer>= <ref refid="protocol_2include_2graphene_2protocol_2config_8hpp_1ac36f4584d2df1a975402b134a98f7847" kindref="member">GRAPHENE_DEFAULT_MAX_TIME_UNTIL_EXPIRATION</ref></initializer>
        <briefdescription>
<para>maximum lifetime in seconds for transactions to be valid, before expiring </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/chain_parameters.hpp" line="59" column="31" bodyfile="libraries/protocol/include/graphene/protocol/chain_parameters.hpp" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1chain__parameters_1a79b0a6d70c43fe22e923c5fc5b2a71d8" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t graphene::protocol::chain_parameters::maximum_proposal_lifetime</definition>
        <argsstring></argsstring>
        <name>maximum_proposal_lifetime</name>
        <initializer>= <ref refid="protocol_2include_2graphene_2protocol_2config_8hpp_1a5553c9d0284b6e6fcf836747b7098b4d" kindref="member">GRAPHENE_DEFAULT_MAX_PROPOSAL_LIFETIME_SEC</ref></initializer>
        <briefdescription>
<para>maximum lifetime in seconds for proposed transactions to be kept, before expiring </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/chain_parameters.hpp" line="60" column="31" bodyfile="libraries/protocol/include/graphene/protocol/chain_parameters.hpp" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1chain__parameters_1a2cf2e9e2757f29d5e5f6ab4ea1ecd57d" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t graphene::protocol::chain_parameters::maximum_asset_whitelist_authorities</definition>
        <argsstring></argsstring>
        <name>maximum_asset_whitelist_authorities</name>
        <initializer>= <ref refid="protocol_2include_2graphene_2protocol_2config_8hpp_1aad7db4cedff43976c903b82959ad695e" kindref="member">GRAPHENE_DEFAULT_MAX_ASSET_WHITELIST_AUTHORITIES</ref></initializer>
        <briefdescription>
<para>maximum number of accounts which an asset may list as authorities for its whitelist OR blacklist </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/chain_parameters.hpp" line="61" column="31" bodyfile="libraries/protocol/include/graphene/protocol/chain_parameters.hpp" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1chain__parameters_1a9debd1b8f388b5e45642916a0d801309" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t graphene::protocol::chain_parameters::maximum_asset_feed_publishers</definition>
        <argsstring></argsstring>
        <name>maximum_asset_feed_publishers</name>
        <initializer>= <ref refid="protocol_2include_2graphene_2protocol_2config_8hpp_1ad0caceda1891d3bef362d51c45283bec" kindref="member">GRAPHENE_DEFAULT_MAX_ASSET_FEED_PUBLISHERS</ref></initializer>
        <briefdescription>
<para>the maximum number of feed publishers for a given asset </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/chain_parameters.hpp" line="62" column="31" bodyfile="libraries/protocol/include/graphene/protocol/chain_parameters.hpp" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1chain__parameters_1a716263cfedc34a0ff9a36ef37fa814a1" prot="public" static="no" mutable="no">
        <type>uint16_t</type>
        <definition>uint16_t graphene::protocol::chain_parameters::maximum_witness_count</definition>
        <argsstring></argsstring>
        <name>maximum_witness_count</name>
        <initializer>= <ref refid="protocol_2include_2graphene_2protocol_2config_8hpp_1a2a9b6c2d9be489eff516ba7e40177923" kindref="member">GRAPHENE_DEFAULT_MAX_WITNESSES</ref></initializer>
        <briefdescription>
<para>maximum number of active witnesses </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/chain_parameters.hpp" line="63" column="31" bodyfile="libraries/protocol/include/graphene/protocol/chain_parameters.hpp" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1chain__parameters_1aea1f8bceca437aedb9c3e917e76b11a6" prot="public" static="no" mutable="no">
        <type>uint16_t</type>
        <definition>uint16_t graphene::protocol::chain_parameters::maximum_committee_count</definition>
        <argsstring></argsstring>
        <name>maximum_committee_count</name>
        <initializer>= <ref refid="protocol_2include_2graphene_2protocol_2config_8hpp_1a3ea51e053306c2b06a1216ab005f098f" kindref="member">GRAPHENE_DEFAULT_MAX_COMMITTEE</ref></initializer>
        <briefdescription>
<para>maximum number of active committee_members </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/chain_parameters.hpp" line="64" column="31" bodyfile="libraries/protocol/include/graphene/protocol/chain_parameters.hpp" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1chain__parameters_1a344cc4f7c9d7a58a084d99477b102109" prot="public" static="no" mutable="no">
        <type>uint16_t</type>
        <definition>uint16_t graphene::protocol::chain_parameters::maximum_authority_membership</definition>
        <argsstring></argsstring>
        <name>maximum_authority_membership</name>
        <initializer>= <ref refid="protocol_2include_2graphene_2protocol_2config_8hpp_1ad1a60bba10c69915ffcba271866ff06b" kindref="member">GRAPHENE_DEFAULT_MAX_AUTHORITY_MEMBERSHIP</ref></initializer>
        <briefdescription>
<para>largest number of keys/accounts an authority can have </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/chain_parameters.hpp" line="65" column="31" bodyfile="libraries/protocol/include/graphene/protocol/chain_parameters.hpp" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1chain__parameters_1a89a9454667ce8c69fa2ad2672ad5c453" prot="public" static="no" mutable="no">
        <type>uint16_t</type>
        <definition>uint16_t graphene::protocol::chain_parameters::reserve_percent_of_fee</definition>
        <argsstring></argsstring>
        <name>reserve_percent_of_fee</name>
        <initializer>= <ref refid="protocol_2include_2graphene_2protocol_2config_8hpp_1af986a90dcddbc1f12f593fbb7560476b" kindref="member">GRAPHENE_DEFAULT_BURN_PERCENT_OF_FEE</ref></initializer>
        <briefdescription>
<para>the percentage of the network&apos;s allocation of a fee that is taken out of circulation </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/chain_parameters.hpp" line="66" column="31" bodyfile="libraries/protocol/include/graphene/protocol/chain_parameters.hpp" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1chain__parameters_1a4b990a7c4f3c67dfc134c31219116708" prot="public" static="no" mutable="no">
        <type>uint16_t</type>
        <definition>uint16_t graphene::protocol::chain_parameters::network_percent_of_fee</definition>
        <argsstring></argsstring>
        <name>network_percent_of_fee</name>
        <initializer>= <ref refid="protocol_2include_2graphene_2protocol_2config_8hpp_1a04d434b39c86e609cc0de005f99f57c4" kindref="member">GRAPHENE_DEFAULT_NETWORK_PERCENT_OF_FEE</ref></initializer>
        <briefdescription>
<para>percent of transaction fees paid to network </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/chain_parameters.hpp" line="67" column="31" bodyfile="libraries/protocol/include/graphene/protocol/chain_parameters.hpp" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1chain__parameters_1a1a2f8f1a0e1556b12db1d5ea7eda8e00" prot="public" static="no" mutable="no">
        <type>uint16_t</type>
        <definition>uint16_t graphene::protocol::chain_parameters::lifetime_referrer_percent_of_fee</definition>
        <argsstring></argsstring>
        <name>lifetime_referrer_percent_of_fee</name>
        <initializer>= <ref refid="protocol_2include_2graphene_2protocol_2config_8hpp_1ac37a7ad07139226b9854f03ddcf450c0" kindref="member">GRAPHENE_DEFAULT_LIFETIME_REFERRER_PERCENT_OF_FEE</ref></initializer>
        <briefdescription>
<para>percent of fee which should go to lifetime referrer </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/chain_parameters.hpp" line="68" column="31" bodyfile="libraries/protocol/include/graphene/protocol/chain_parameters.hpp" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1chain__parameters_1adbcafb18479c6e3c9b932ef7d435a5a8" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t graphene::protocol::chain_parameters::cashback_vesting_period_seconds</definition>
        <argsstring></argsstring>
        <name>cashback_vesting_period_seconds</name>
        <initializer>= <ref refid="protocol_2include_2graphene_2protocol_2config_8hpp_1a0e5f685881efa4457f657c8318a51a8c" kindref="member">GRAPHENE_DEFAULT_CASHBACK_VESTING_PERIOD_SEC</ref></initializer>
        <briefdescription>
<para>time after cashback rewards are accrued before they become liquid </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/chain_parameters.hpp" line="69" column="31" bodyfile="libraries/protocol/include/graphene/protocol/chain_parameters.hpp" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1chain__parameters_1a11f14788e43467d5d957ea5e505e015b" prot="public" static="no" mutable="no">
        <type><ref refid="namespacegraphene_1_1protocol_1a69b2104c1c11eed2d17bd29b86713347" kindref="member">share_type</ref></type>
        <definition>share_type graphene::protocol::chain_parameters::cashback_vesting_threshold</definition>
        <argsstring></argsstring>
        <name>cashback_vesting_threshold</name>
        <initializer>= <ref refid="protocol_2include_2graphene_2protocol_2config_8hpp_1a008b6a1fba5955170fadcca27ad7b347" kindref="member">GRAPHENE_DEFAULT_CASHBACK_VESTING_THRESHOLD</ref></initializer>
        <briefdescription>
<para>the maximum cashback that can be received without vesting </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/chain_parameters.hpp" line="70" column="31" bodyfile="libraries/protocol/include/graphene/protocol/chain_parameters.hpp" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1chain__parameters_1ade497c6d337b099ee1ce8b64c13b8ced" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool graphene::protocol::chain_parameters::count_non_member_votes</definition>
        <argsstring></argsstring>
        <name>count_non_member_votes</name>
        <initializer>= true</initializer>
        <briefdescription>
<para>set to false to restrict voting privlegages to member accounts </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/chain_parameters.hpp" line="71" column="31" bodyfile="libraries/protocol/include/graphene/protocol/chain_parameters.hpp" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1chain__parameters_1aa8d07b7f45694d6d8d2a9279cc40d6da" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool graphene::protocol::chain_parameters::allow_non_member_whitelists</definition>
        <argsstring></argsstring>
        <name>allow_non_member_whitelists</name>
        <initializer>= false</initializer>
        <briefdescription>
<para>true if non-member accounts may set whitelists and blacklists; false otherwise </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/chain_parameters.hpp" line="72" column="31" bodyfile="libraries/protocol/include/graphene/protocol/chain_parameters.hpp" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1chain__parameters_1ae7d529c138047373c4955d5c93a34747" prot="public" static="no" mutable="no">
        <type><ref refid="namespacegraphene_1_1protocol_1a69b2104c1c11eed2d17bd29b86713347" kindref="member">share_type</ref></type>
        <definition>share_type graphene::protocol::chain_parameters::witness_pay_per_block</definition>
        <argsstring></argsstring>
        <name>witness_pay_per_block</name>
        <initializer>= <ref refid="protocol_2include_2graphene_2protocol_2config_8hpp_1a158de5b0da3023c0afc0c523bde7882d" kindref="member">GRAPHENE_DEFAULT_WITNESS_PAY_PER_BLOCK</ref></initializer>
        <briefdescription>
<para>CORE to be allocated to witnesses (per block) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/chain_parameters.hpp" line="73" column="31" bodyfile="libraries/protocol/include/graphene/protocol/chain_parameters.hpp" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1chain__parameters_1a014e98c0b24765ab08d09cf2691755be" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t graphene::protocol::chain_parameters::witness_pay_vesting_seconds</definition>
        <argsstring></argsstring>
        <name>witness_pay_vesting_seconds</name>
        <initializer>= <ref refid="protocol_2include_2graphene_2protocol_2config_8hpp_1ad90ee69e80aa2194fedad4b361355642" kindref="member">GRAPHENE_DEFAULT_WITNESS_PAY_VESTING_SECONDS</ref></initializer>
        <briefdescription>
<para>vesting_seconds parameter for witness VBO&apos;s </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/chain_parameters.hpp" line="74" column="31" bodyfile="libraries/protocol/include/graphene/protocol/chain_parameters.hpp" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1chain__parameters_1adcde3fcabdd3079a8dc157a030a14fdd" prot="public" static="no" mutable="no">
        <type><ref refid="namespacegraphene_1_1protocol_1a69b2104c1c11eed2d17bd29b86713347" kindref="member">share_type</ref></type>
        <definition>share_type graphene::protocol::chain_parameters::worker_budget_per_day</definition>
        <argsstring></argsstring>
        <name>worker_budget_per_day</name>
        <initializer>= <ref refid="protocol_2include_2graphene_2protocol_2config_8hpp_1ab274feb67555607fcb6786b4b25f8e7a" kindref="member">GRAPHENE_DEFAULT_WORKER_BUDGET_PER_DAY</ref></initializer>
        <briefdescription>
<para>CORE to be allocated to workers (per day) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/chain_parameters.hpp" line="75" column="31" bodyfile="libraries/protocol/include/graphene/protocol/chain_parameters.hpp" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1chain__parameters_1a0e454789e7075e8c05cde3a13c95d058" prot="public" static="no" mutable="no">
        <type>uint16_t</type>
        <definition>uint16_t graphene::protocol::chain_parameters::max_predicate_opcode</definition>
        <argsstring></argsstring>
        <name>max_predicate_opcode</name>
        <initializer>= <ref refid="protocol_2include_2graphene_2protocol_2config_8hpp_1a1cefa853deb9819ee768b0e4d578afd2" kindref="member">GRAPHENE_DEFAULT_MAX_ASSERT_OPCODE</ref></initializer>
        <briefdescription>
<para>predicate_opcode must be less than this number </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/chain_parameters.hpp" line="76" column="31" bodyfile="libraries/protocol/include/graphene/protocol/chain_parameters.hpp" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1chain__parameters_1a52b6e30486207b03653c6d754d4b8a2a" prot="public" static="no" mutable="no">
        <type><ref refid="namespacegraphene_1_1protocol_1a69b2104c1c11eed2d17bd29b86713347" kindref="member">share_type</ref></type>
        <definition>share_type graphene::protocol::chain_parameters::fee_liquidation_threshold</definition>
        <argsstring></argsstring>
        <name>fee_liquidation_threshold</name>
        <initializer>= <ref refid="protocol_2include_2graphene_2protocol_2config_8hpp_1a40df482047041602d67146a7e8660b96" kindref="member">GRAPHENE_DEFAULT_FEE_LIQUIDATION_THRESHOLD</ref></initializer>
        <briefdescription>
<para>value in CORE at which accumulated fees in blockchain-issued market assets should be liquidated </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/chain_parameters.hpp" line="77" column="31" bodyfile="libraries/protocol/include/graphene/protocol/chain_parameters.hpp" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1chain__parameters_1a64c965fb21542c51a5afffa82a6b0657" prot="public" static="no" mutable="no">
        <type>uint16_t</type>
        <definition>uint16_t graphene::protocol::chain_parameters::accounts_per_fee_scale</definition>
        <argsstring></argsstring>
        <name>accounts_per_fee_scale</name>
        <initializer>= <ref refid="protocol_2include_2graphene_2protocol_2config_8hpp_1ad4a17edb3143b3bcf887693100322770" kindref="member">GRAPHENE_DEFAULT_ACCOUNTS_PER_FEE_SCALE</ref></initializer>
        <briefdescription>
<para>number of accounts between fee scalings </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/chain_parameters.hpp" line="78" column="31" bodyfile="libraries/protocol/include/graphene/protocol/chain_parameters.hpp" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1chain__parameters_1a7c8198261f2680b35812b536801f17a0" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t graphene::protocol::chain_parameters::account_fee_scale_bitshifts</definition>
        <argsstring></argsstring>
        <name>account_fee_scale_bitshifts</name>
        <initializer>= <ref refid="protocol_2include_2graphene_2protocol_2config_8hpp_1a4bbb81094b0c56040cd9962beeaf1011" kindref="member">GRAPHENE_DEFAULT_ACCOUNT_FEE_SCALE_BITSHIFTS</ref></initializer>
        <briefdescription>
<para>number of times to left bitshift account registration fee at each scaling </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/chain_parameters.hpp" line="79" column="31" bodyfile="libraries/protocol/include/graphene/protocol/chain_parameters.hpp" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1chain__parameters_1a480b3602398a173af3aba99b1cad8433" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t graphene::protocol::chain_parameters::max_authority_depth</definition>
        <argsstring></argsstring>
        <name>max_authority_depth</name>
        <initializer>= <ref refid="protocol_2include_2graphene_2protocol_2config_8hpp_1aea0bc2216bc54371f7f54d6f6d6e4d9d" kindref="member">GRAPHENE_MAX_SIG_CHECK_DEPTH</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/chain_parameters.hpp" line="80" column="31" bodyfile="libraries/protocol/include/graphene/protocol/chain_parameters.hpp" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1chain__parameters_1abc19c5e14915700118ff4efe9e652f02" prot="public" static="no" mutable="no">
        <type><ref refid="structgraphene_1_1protocol_1_1extension" kindref="compound">extension</ref>&lt; <ref refid="structgraphene_1_1protocol_1_1chain__parameters_1_1ext" kindref="compound">ext</ref> &gt;</type>
        <definition>extension&lt;ext&gt; graphene::protocol::chain_parameters::extensions</definition>
        <argsstring></argsstring>
        <name>extensions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/chain_parameters.hpp" line="90" column="17" bodyfile="libraries/protocol/include/graphene/protocol/chain_parameters.hpp" bodystart="90" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structgraphene_1_1protocol_1_1chain__parameters_1a52b3f60b1deb3ae748d2a5b26560f713" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="structgraphene_1_1protocol_1_1fee__schedule" kindref="compound">fee_schedule</ref> &amp;</type>
        <definition>const fee_schedule&amp; graphene::protocol::chain_parameters::get_current_fees</definition>
        <argsstring>() const</argsstring>
        <name>get_current_fees</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/chain_parameters.hpp" line="50" column="26" bodyfile="libraries/protocol/include/graphene/protocol/chain_parameters.hpp" bodystart="50" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1protocol_1_1chain__parameters_1a4c0439a303ea165b0ce3612c73469b4d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structgraphene_1_1protocol_1_1fee__schedule" kindref="compound">fee_schedule</ref> &amp;</type>
        <definition>fee_schedule&amp; graphene::protocol::chain_parameters::get_mutable_fees</definition>
        <argsstring>()</argsstring>
        <name>get_mutable_fees</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/chain_parameters.hpp" line="51" column="20" bodyfile="libraries/protocol/include/graphene/protocol/chain_parameters.hpp" bodystart="51" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1protocol_1_1chain__parameters_1ae9ac355c0e13858e36970d21d1b1883d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::protocol::chain_parameters::validate</definition>
        <argsstring>() const</argsstring>
        <name>validate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/chain_parameters.hpp" line="92" column="12" bodyfile="libraries/protocol/chain_parameters.cpp" bodystart="81" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1protocol_1_1chain__parameters_1a277ce0d7221a903204649ca3a3deff5c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>graphene::protocol::chain_parameters::chain_parameters</definition>
        <argsstring>()</argsstring>
        <name>chain_parameters</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/chain_parameters.hpp" line="94" column="7" bodyfile="libraries/protocol/chain_parameters.cpp" bodystart="7" bodyend="9"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1protocol_1_1chain__parameters_1ac6de1b40399711c931003a640f4cba6c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>graphene::protocol::chain_parameters::chain_parameters</definition>
        <argsstring>(const chain_parameters &amp;other)</argsstring>
        <name>chain_parameters</name>
        <param>
          <type>const <ref refid="structgraphene_1_1protocol_1_1chain__parameters" kindref="compound">chain_parameters</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/chain_parameters.hpp" line="95" column="7" bodyfile="libraries/protocol/chain_parameters.cpp" bodystart="12" bodyend="16"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1protocol_1_1chain__parameters_1a6f4cbe2ad8d0963554074d663b39287c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>graphene::protocol::chain_parameters::chain_parameters</definition>
        <argsstring>(chain_parameters &amp;&amp;other)</argsstring>
        <name>chain_parameters</name>
        <param>
          <type><ref refid="structgraphene_1_1protocol_1_1chain__parameters" kindref="compound">chain_parameters</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/chain_parameters.hpp" line="96" column="7" bodyfile="libraries/protocol/chain_parameters.cpp" bodystart="64" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1protocol_1_1chain__parameters_1ae0efebcae3889082d1334c3348ec1e8d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structgraphene_1_1protocol_1_1chain__parameters" kindref="compound">chain_parameters</ref> &amp;</type>
        <definition>chain_parameters &amp; graphene::protocol::chain_parameters::operator=</definition>
        <argsstring>(const chain_parameters &amp;other)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="structgraphene_1_1protocol_1_1chain__parameters" kindref="compound">chain_parameters</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/chain_parameters.hpp" line="97" column="24" bodyfile="libraries/protocol/chain_parameters.cpp" bodystart="19" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1protocol_1_1chain__parameters_1a9629be78295170cbebf2af63771dfe9d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structgraphene_1_1protocol_1_1chain__parameters" kindref="compound">chain_parameters</ref> &amp;</type>
        <definition>chain_parameters &amp; graphene::protocol::chain_parameters::operator=</definition>
        <argsstring>(chain_parameters &amp;&amp;other)</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="structgraphene_1_1protocol_1_1chain__parameters" kindref="compound">chain_parameters</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/chain_parameters.hpp" line="98" column="24" bodyfile="libraries/protocol/chain_parameters.cpp" bodystart="71" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1protocol_1_1chain__parameters_1acea67fe88c8fc956744a609a6bf5146a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>uint16_t</type>
        <definition>uint16_t graphene::protocol::chain_parameters::get_market_fee_network_percent</definition>
        <argsstring>() const</argsstring>
        <name>get_market_fee_network_percent</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>If <computeroutput>market_fee_network_percent</computeroutput> in <ref refid="structgraphene_1_1protocol_1_1chain__parameters_1abc19c5e14915700118ff4efe9e652f02" kindref="member">extensions</ref> is valid, return the value it contains, otherwise return 0 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/chain_parameters.hpp" line="102" column="16" bodyfile="libraries/protocol/chain_parameters.cpp" bodystart="116" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1protocol_1_1chain__parameters_1a8b891374f952274c91d924e6fd20ae12" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>uint16_t</type>
        <definition>uint16_t graphene::protocol::chain_parameters::get_maker_fee_discount_percent</definition>
        <argsstring>() const</argsstring>
        <name>get_maker_fee_discount_percent</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>If <computeroutput>maker_fee_discount_percent</computeroutput> in <ref refid="structgraphene_1_1protocol_1_1chain__parameters_1abc19c5e14915700118ff4efe9e652f02" kindref="member">extensions</ref> is valid, return the value it contains, otherwise return 0 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/chain_parameters.hpp" line="106" column="16" bodyfile="libraries/protocol/chain_parameters.cpp" bodystart="122" bodyend="126"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="structgraphene_1_1protocol_1_1chain__parameters_1a981ddc0ec791646a28e1bcf1b56e970c" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::protocol::chain_parameters::safe_copy</definition>
        <argsstring>(chain_parameters &amp;to, const chain_parameters &amp;from)</argsstring>
        <name>safe_copy</name>
        <param>
          <type><ref refid="structgraphene_1_1protocol_1_1chain__parameters" kindref="compound">chain_parameters</ref> &amp;</type>
          <declname>to</declname>
        </param>
        <param>
          <type>const <ref refid="structgraphene_1_1protocol_1_1chain__parameters" kindref="compound">chain_parameters</ref> &amp;</type>
          <declname>from</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/chain_parameters.hpp" line="109" column="19" bodyfile="libraries/protocol/chain_parameters.cpp" bodystart="30" bodyend="61"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>graphene::protocol::chain_parameters</label>
        <link refid="structgraphene_1_1protocol_1_1chain__parameters"/>
        <childnode refid="2" relation="usage">
          <edgelabel>cashback_vesting_threshold</edgelabel>
          <edgelabel>worker_budget_per_day</edgelabel>
          <edgelabel>fee_liquidation_threshold</edgelabel>
          <edgelabel>witness_pay_per_block</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>extensions</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>fc::optional&lt; graphene::protocol::custom_authority_options_type &gt;</label>
        <link refid="classfc_1_1optional"/>
      </node>
      <node id="7">
        <label>fc::optional&lt; graphene::protocol::htlc_options &gt;</label>
        <link refid="classfc_1_1optional"/>
      </node>
      <node id="3">
        <label>fc::safe_base&lt; int64_t &gt;</label>
        <link refid="structfc_1_1safe__base"/>
      </node>
      <node id="4">
        <label>graphene::protocol::extension&lt; graphene::protocol::chain_parameters::ext &gt;</label>
        <link refid="structgraphene_1_1protocol_1_1extension"/>
        <childnode refid="5" relation="usage">
          <edgelabel>value</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>fc::safe&lt; int64_t &gt;</label>
        <link refid="structfc_1_1safe"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>graphene::protocol::chain_parameters::ext</label>
        <link refid="structgraphene_1_1protocol_1_1chain__parameters_1_1ext"/>
        <childnode refid="6" relation="usage">
          <edgelabel>market_fee_network_percent</edgelabel>
          <edgelabel>maker_fee_discount_percent</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>updatable_htlc_options</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>custom_authority_options</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>fc::optional&lt; uint16_t &gt;</label>
        <link refid="classfc_1_1optional"/>
      </node>
    </collaborationgraph>
    <location file="libraries/protocol/include/graphene/protocol/chain_parameters.hpp" line="47" column="1" bodyfile="libraries/protocol/include/graphene/protocol/chain_parameters.hpp" bodystart="46" bodyend="110"/>
    <listofallmembers>
      <member refid="structgraphene_1_1protocol_1_1chain__parameters_1a7c8198261f2680b35812b536801f17a0" prot="public" virt="non-virtual"><scope>graphene::protocol::chain_parameters</scope><name>account_fee_scale_bitshifts</name></member>
      <member refid="structgraphene_1_1protocol_1_1chain__parameters_1a64c965fb21542c51a5afffa82a6b0657" prot="public" virt="non-virtual"><scope>graphene::protocol::chain_parameters</scope><name>accounts_per_fee_scale</name></member>
      <member refid="structgraphene_1_1protocol_1_1chain__parameters_1aa8d07b7f45694d6d8d2a9279cc40d6da" prot="public" virt="non-virtual"><scope>graphene::protocol::chain_parameters</scope><name>allow_non_member_whitelists</name></member>
      <member refid="structgraphene_1_1protocol_1_1chain__parameters_1a3a4bed37969b54e10d46b9294fd13b38" prot="public" virt="non-virtual"><scope>graphene::protocol::chain_parameters</scope><name>block_interval</name></member>
      <member refid="structgraphene_1_1protocol_1_1chain__parameters_1adbcafb18479c6e3c9b932ef7d435a5a8" prot="public" virt="non-virtual"><scope>graphene::protocol::chain_parameters</scope><name>cashback_vesting_period_seconds</name></member>
      <member refid="structgraphene_1_1protocol_1_1chain__parameters_1a11f14788e43467d5d957ea5e505e015b" prot="public" virt="non-virtual"><scope>graphene::protocol::chain_parameters</scope><name>cashback_vesting_threshold</name></member>
      <member refid="structgraphene_1_1protocol_1_1chain__parameters_1a277ce0d7221a903204649ca3a3deff5c" prot="public" virt="non-virtual"><scope>graphene::protocol::chain_parameters</scope><name>chain_parameters</name></member>
      <member refid="structgraphene_1_1protocol_1_1chain__parameters_1ac6de1b40399711c931003a640f4cba6c" prot="public" virt="non-virtual"><scope>graphene::protocol::chain_parameters</scope><name>chain_parameters</name></member>
      <member refid="structgraphene_1_1protocol_1_1chain__parameters_1a6f4cbe2ad8d0963554074d663b39287c" prot="public" virt="non-virtual"><scope>graphene::protocol::chain_parameters</scope><name>chain_parameters</name></member>
      <member refid="structgraphene_1_1protocol_1_1chain__parameters_1ace17b331410446c9b5566032bc0eb14a" prot="public" virt="non-virtual"><scope>graphene::protocol::chain_parameters</scope><name>committee_proposal_review_period</name></member>
      <member refid="structgraphene_1_1protocol_1_1chain__parameters_1ade497c6d337b099ee1ce8b64c13b8ced" prot="public" virt="non-virtual"><scope>graphene::protocol::chain_parameters</scope><name>count_non_member_votes</name></member>
      <member refid="structgraphene_1_1protocol_1_1chain__parameters_1a9d10ab2a64ebcb154b3589d35166cb8e" prot="public" virt="non-virtual"><scope>graphene::protocol::chain_parameters</scope><name>current_fees</name></member>
      <member refid="structgraphene_1_1protocol_1_1chain__parameters_1abc19c5e14915700118ff4efe9e652f02" prot="public" virt="non-virtual"><scope>graphene::protocol::chain_parameters</scope><name>extensions</name></member>
      <member refid="structgraphene_1_1protocol_1_1chain__parameters_1a52b6e30486207b03653c6d754d4b8a2a" prot="public" virt="non-virtual"><scope>graphene::protocol::chain_parameters</scope><name>fee_liquidation_threshold</name></member>
      <member refid="structgraphene_1_1protocol_1_1chain__parameters_1a52b3f60b1deb3ae748d2a5b26560f713" prot="public" virt="non-virtual"><scope>graphene::protocol::chain_parameters</scope><name>get_current_fees</name></member>
      <member refid="structgraphene_1_1protocol_1_1chain__parameters_1a8b891374f952274c91d924e6fd20ae12" prot="public" virt="non-virtual"><scope>graphene::protocol::chain_parameters</scope><name>get_maker_fee_discount_percent</name></member>
      <member refid="structgraphene_1_1protocol_1_1chain__parameters_1acea67fe88c8fc956744a609a6bf5146a" prot="public" virt="non-virtual"><scope>graphene::protocol::chain_parameters</scope><name>get_market_fee_network_percent</name></member>
      <member refid="structgraphene_1_1protocol_1_1chain__parameters_1a4c0439a303ea165b0ce3612c73469b4d" prot="public" virt="non-virtual"><scope>graphene::protocol::chain_parameters</scope><name>get_mutable_fees</name></member>
      <member refid="structgraphene_1_1protocol_1_1chain__parameters_1a1a2f8f1a0e1556b12db1d5ea7eda8e00" prot="public" virt="non-virtual"><scope>graphene::protocol::chain_parameters</scope><name>lifetime_referrer_percent_of_fee</name></member>
      <member refid="structgraphene_1_1protocol_1_1chain__parameters_1af6362a843de8532fcb4a269e31fc4b61" prot="public" virt="non-virtual"><scope>graphene::protocol::chain_parameters</scope><name>maintenance_interval</name></member>
      <member refid="structgraphene_1_1protocol_1_1chain__parameters_1ab51a10aaaf399a4472aa1f7c8984eed3" prot="public" virt="non-virtual"><scope>graphene::protocol::chain_parameters</scope><name>maintenance_skip_slots</name></member>
      <member refid="structgraphene_1_1protocol_1_1chain__parameters_1a480b3602398a173af3aba99b1cad8433" prot="public" virt="non-virtual"><scope>graphene::protocol::chain_parameters</scope><name>max_authority_depth</name></member>
      <member refid="structgraphene_1_1protocol_1_1chain__parameters_1a0e454789e7075e8c05cde3a13c95d058" prot="public" virt="non-virtual"><scope>graphene::protocol::chain_parameters</scope><name>max_predicate_opcode</name></member>
      <member refid="structgraphene_1_1protocol_1_1chain__parameters_1a9debd1b8f388b5e45642916a0d801309" prot="public" virt="non-virtual"><scope>graphene::protocol::chain_parameters</scope><name>maximum_asset_feed_publishers</name></member>
      <member refid="structgraphene_1_1protocol_1_1chain__parameters_1a2cf2e9e2757f29d5e5f6ab4ea1ecd57d" prot="public" virt="non-virtual"><scope>graphene::protocol::chain_parameters</scope><name>maximum_asset_whitelist_authorities</name></member>
      <member refid="structgraphene_1_1protocol_1_1chain__parameters_1a344cc4f7c9d7a58a084d99477b102109" prot="public" virt="non-virtual"><scope>graphene::protocol::chain_parameters</scope><name>maximum_authority_membership</name></member>
      <member refid="structgraphene_1_1protocol_1_1chain__parameters_1a0ef750f5d152f3c4bc750ef2ccc3a26a" prot="public" virt="non-virtual"><scope>graphene::protocol::chain_parameters</scope><name>maximum_block_size</name></member>
      <member refid="structgraphene_1_1protocol_1_1chain__parameters_1aea1f8bceca437aedb9c3e917e76b11a6" prot="public" virt="non-virtual"><scope>graphene::protocol::chain_parameters</scope><name>maximum_committee_count</name></member>
      <member refid="structgraphene_1_1protocol_1_1chain__parameters_1a79b0a6d70c43fe22e923c5fc5b2a71d8" prot="public" virt="non-virtual"><scope>graphene::protocol::chain_parameters</scope><name>maximum_proposal_lifetime</name></member>
      <member refid="structgraphene_1_1protocol_1_1chain__parameters_1a7462692f45d265e1b49b761aba2ec32d" prot="public" virt="non-virtual"><scope>graphene::protocol::chain_parameters</scope><name>maximum_time_until_expiration</name></member>
      <member refid="structgraphene_1_1protocol_1_1chain__parameters_1a953b98247dd4d20e0fa18521969fe56f" prot="public" virt="non-virtual"><scope>graphene::protocol::chain_parameters</scope><name>maximum_transaction_size</name></member>
      <member refid="structgraphene_1_1protocol_1_1chain__parameters_1a716263cfedc34a0ff9a36ef37fa814a1" prot="public" virt="non-virtual"><scope>graphene::protocol::chain_parameters</scope><name>maximum_witness_count</name></member>
      <member refid="structgraphene_1_1protocol_1_1chain__parameters_1a4b990a7c4f3c67dfc134c31219116708" prot="public" virt="non-virtual"><scope>graphene::protocol::chain_parameters</scope><name>network_percent_of_fee</name></member>
      <member refid="structgraphene_1_1protocol_1_1chain__parameters_1ae0efebcae3889082d1334c3348ec1e8d" prot="public" virt="non-virtual"><scope>graphene::protocol::chain_parameters</scope><name>operator=</name></member>
      <member refid="structgraphene_1_1protocol_1_1chain__parameters_1a9629be78295170cbebf2af63771dfe9d" prot="public" virt="non-virtual"><scope>graphene::protocol::chain_parameters</scope><name>operator=</name></member>
      <member refid="structgraphene_1_1protocol_1_1chain__parameters_1a89a9454667ce8c69fa2ad2672ad5c453" prot="public" virt="non-virtual"><scope>graphene::protocol::chain_parameters</scope><name>reserve_percent_of_fee</name></member>
      <member refid="structgraphene_1_1protocol_1_1chain__parameters_1a981ddc0ec791646a28e1bcf1b56e970c" prot="private" virt="non-virtual"><scope>graphene::protocol::chain_parameters</scope><name>safe_copy</name></member>
      <member refid="structgraphene_1_1protocol_1_1chain__parameters_1ae9ac355c0e13858e36970d21d1b1883d" prot="public" virt="non-virtual"><scope>graphene::protocol::chain_parameters</scope><name>validate</name></member>
      <member refid="structgraphene_1_1protocol_1_1chain__parameters_1ae7d529c138047373c4955d5c93a34747" prot="public" virt="non-virtual"><scope>graphene::protocol::chain_parameters</scope><name>witness_pay_per_block</name></member>
      <member refid="structgraphene_1_1protocol_1_1chain__parameters_1a014e98c0b24765ab08d09cf2691755be" prot="public" virt="non-virtual"><scope>graphene::protocol::chain_parameters</scope><name>witness_pay_vesting_seconds</name></member>
      <member refid="structgraphene_1_1protocol_1_1chain__parameters_1adcde3fcabdd3079a8dc157a030a14fdd" prot="public" virt="non-virtual"><scope>graphene::protocol::chain_parameters</scope><name>worker_budget_per_day</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
