<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="structgraphene_1_1protocol_1_1variant__assertion_3_01static__variant_3_01_types_8_8_8_01_4_01_4" kind="struct" language="C++" prot="public">
    <compoundname>graphene::protocol::variant_assertion&lt; static_variant&lt; Types... &gt; &gt;</compoundname>
    <includes refid="restriction__predicate_8hxx" local="no">restriction_predicate.hxx</includes>
    <templateparamlist>
      <param>
        <type>typename...</type>
        <declname>Types</declname>
        <defname>Types</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structgraphene_1_1protocol_1_1variant__assertion_3_01static__variant_3_01_types_8_8_8_01_4_01_4_1a22dca92da657d8c2421f6d6e3010d542" prot="public" static="no">
        <type><ref refid="classfc_1_1static__variant" kindref="compound">static_variant</ref>&lt; Types... &gt;</type>
        <definition>using graphene::protocol::variant_assertion&lt; static_variant&lt; Types... &gt; &gt;::Variant =  static_variant&lt;Types...&gt;</definition>
        <argsstring></argsstring>
        <name>Variant</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/custom_authorities/restriction_predicate.hxx" line="410" column="4" bodyfile="libraries/protocol/custom_authorities/restriction_predicate.hxx" bodystart="410" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structgraphene_1_1protocol_1_1variant__assertion_3_01static__variant_3_01_types_8_8_8_01_4_01_4_1a36f432ce6ee286c9696a4169746f9775" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Value</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>static auto graphene::protocol::variant_assertion&lt; static_variant&lt; Types... &gt; &gt;::make_predicate</definition>
        <argsstring>(vector&lt; restriction &gt; &amp;&amp;rs)</argsstring>
        <name>make_predicate</name>
        <param>
          <type>vector&lt; <ref refid="structgraphene_1_1protocol_1_1restriction" kindref="compound">restriction</ref> &gt; &amp;&amp;</type>
          <declname>rs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/custom_authorities/restriction_predicate.hxx" line="413" column="16" bodyfile="libraries/protocol/custom_authorities/restriction_predicate.hxx" bodystart="413" bodyend="419"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1protocol_1_1variant__assertion_3_01static__variant_3_01_types_8_8_8_01_4_01_4_1adbfd6aeeaea381c7e2101313da757cf0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacegraphene_1_1protocol_1a7253c01693b853bacbc927c3430c9c5f" kindref="member">object_restriction_predicate</ref>&lt; <ref refid="structgraphene_1_1protocol_1_1variant__assertion_3_01static__variant_3_01_types_8_8_8_01_4_01_4_1a22dca92da657d8c2421f6d6e3010d542" kindref="member">Variant</ref> &gt;</type>
        <definition>static object_restriction_predicate&lt;Variant&gt; graphene::protocol::variant_assertion&lt; static_variant&lt; Types... &gt; &gt;::create</definition>
        <argsstring>(restriction::variant_assert_argument_type &amp;&amp;arg)</argsstring>
        <name>create</name>
        <param>
          <type><ref refid="structgraphene_1_1protocol_1_1restriction_1a4793cdff7586b6e4619a64954d9897ca" kindref="member">restriction::variant_assert_argument_type</ref> &amp;&amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/custom_authorities/restriction_predicate.hxx" line="420" column="40" bodyfile="libraries/protocol/custom_authorities/restriction_predicate.hxx" bodystart="420" bodyend="426"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="libraries/protocol/custom_authorities/restriction_predicate.hxx" line="409" column="26" bodyfile="libraries/protocol/custom_authorities/restriction_predicate.hxx" bodystart="409" bodyend="427"/>
    <listofallmembers>
      <member refid="structgraphene_1_1protocol_1_1variant__assertion_3_01static__variant_3_01_types_8_8_8_01_4_01_4_1adbfd6aeeaea381c7e2101313da757cf0" prot="public" virt="non-virtual"><scope>graphene::protocol::variant_assertion&lt; static_variant&lt; Types... &gt; &gt;</scope><name>create</name></member>
      <member refid="structgraphene_1_1protocol_1_1variant__assertion_3_01static__variant_3_01_types_8_8_8_01_4_01_4_1a36f432ce6ee286c9696a4169746f9775" prot="public" virt="non-virtual"><scope>graphene::protocol::variant_assertion&lt; static_variant&lt; Types... &gt; &gt;</scope><name>make_predicate</name></member>
      <member refid="structgraphene_1_1protocol_1_1variant__assertion_3_01static__variant_3_01_types_8_8_8_01_4_01_4_1a22dca92da657d8c2421f6d6e3010d542" prot="public" virt="non-virtual"><scope>graphene::protocol::variant_assertion&lt; static_variant&lt; Types... &gt; &gt;</scope><name>Variant</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
