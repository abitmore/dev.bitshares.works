<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classgraphene_1_1chain_1_1buyback__object" kind="class" language="C++" prot="public">
    <compoundname>graphene::chain::buyback_object</compoundname>
    <basecompoundref refid="classgraphene_1_1db_1_1abstract__object" prot="public" virt="non-virtual">graphene::db::abstract_object&lt; buyback_object, implementation_ids, impl_buyback_object_type &gt;</basecompoundref>
    <includes refid="buyback__object_8hpp" local="no">buyback_object.hpp</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classgraphene_1_1chain_1_1buyback__object_1a972380515965598a66e2e479a7249aa6" prot="public" static="no" mutable="no">
        <type>asset_id_type</type>
        <definition>asset_id_type graphene::chain::buyback_object::asset_to_buy</definition>
        <argsstring></argsstring>
        <name>asset_to_buy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/buyback_object.hpp" line="47" column="1" bodyfile="libraries/chain/include/graphene/chain/buyback_object.hpp" bodystart="47" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>buyback_authority_object only exists to help with a specific indexing problem. We want to be able to iterate over all assets that have a buyback program. However, assets which have a buyback program are very rare. So rather than indexing <ref refid="classgraphene_1_1chain_1_1asset__object" kindref="compound">asset_object</ref> by the buyback field (requiring additional bookkeeping for every asset), we instead maintain a <ref refid="classgraphene_1_1chain_1_1buyback__object" kindref="compound">buyback_object</ref> pointing to each asset which has buyback (requiring additional bookkeeping only for every asset which has buyback).</para><para>This class is an implementation detail. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="2180">
        <label>graphene::chain::buyback_object</label>
        <link refid="classgraphene_1_1chain_1_1buyback__object"/>
        <childnode refid="2181" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2181">
        <label>graphene::db::abstract_object&lt; buyback_object, implementation_ids, impl_buyback_object_type &gt;</label>
        <link refid="classgraphene_1_1db_1_1abstract__object"/>
        <childnode refid="2182" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2183">
        <label>graphene::db::object</label>
        <link refid="classgraphene_1_1db_1_1object"/>
      </node>
      <node id="2182">
        <label>graphene::db::base_abstract_object&lt; buyback_object &gt;</label>
        <link refid="classgraphene_1_1db_1_1base__abstract__object"/>
        <childnode refid="2183" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2184">
        <label>graphene::chain::buyback_object</label>
        <link refid="classgraphene_1_1chain_1_1buyback__object"/>
        <childnode refid="2185" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2185">
        <label>graphene::db::abstract_object&lt; buyback_object, implementation_ids, impl_buyback_object_type &gt;</label>
        <link refid="classgraphene_1_1db_1_1abstract__object"/>
        <childnode refid="2186" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2188">
        <label>graphene::db::object_id_type</label>
        <link refid="structgraphene_1_1db_1_1object__id__type"/>
      </node>
      <node id="2187">
        <label>graphene::db::object</label>
        <link refid="classgraphene_1_1db_1_1object"/>
        <childnode refid="2188" relation="usage">
          <edgelabel>id</edgelabel>
        </childnode>
      </node>
      <node id="2186">
        <label>graphene::db::base_abstract_object&lt; buyback_object &gt;</label>
        <link refid="classgraphene_1_1db_1_1base__abstract__object"/>
        <childnode refid="2187" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="libraries/chain/include/graphene/chain/buyback_object.hpp" line="45" column="1" bodyfile="libraries/chain/include/graphene/chain/buyback_object.hpp" bodystart="43" bodyend="48"/>
    <listofallmembers>
      <member refid="classgraphene_1_1db_1_1abstract__object_1a62b6a9a9290a38dc05763d920186872c" prot="public" virt="non-virtual"><scope>graphene::chain::buyback_object</scope><name>abstract_object</name></member>
      <member refid="classgraphene_1_1chain_1_1buyback__object_1a972380515965598a66e2e479a7249aa6" prot="public" virt="non-virtual"><scope>graphene::chain::buyback_object</scope><name>asset_to_buy</name></member>
      <member refid="classgraphene_1_1db_1_1base__abstract__object_1af3a4c0e78138f72a0e5fd120f4105488" prot="public" virt="virtual"><scope>graphene::chain::buyback_object</scope><name>clone</name></member>
      <member refid="classgraphene_1_1db_1_1abstract__object_1abdd95dc811d3bf7dbdc9aa0251129f81" prot="public" virt="non-virtual"><scope>graphene::chain::buyback_object</scope><name>get_id</name></member>
      <member refid="classgraphene_1_1db_1_1object_1a2ce812569d565a45dda1420cfbdf79ad" prot="public" virt="non-virtual"><scope>graphene::chain::buyback_object</scope><name>id</name></member>
      <member refid="classgraphene_1_1db_1_1base__abstract__object_1ae411f8719b1a5d32781c71a06c2b9386" prot="public" virt="virtual"><scope>graphene::chain::buyback_object</scope><name>move_from</name></member>
      <member refid="classgraphene_1_1db_1_1object_1ae57a6f64a9444b2f0fa0c937be480f54" prot="public" virt="non-virtual"><scope>graphene::chain::buyback_object</scope><name>object</name></member>
      <member refid="classgraphene_1_1db_1_1object_1abc6d16d10de6c2e780d62918a458276f" prot="public" virt="non-virtual"><scope>graphene::chain::buyback_object</scope><name>object</name></member>
      <member refid="classgraphene_1_1db_1_1base__abstract__object_1a9ba1e81bf5d130ad4f61cc95c8c9861f" prot="public" virt="virtual"><scope>graphene::chain::buyback_object</scope><name>pack</name></member>
      <member refid="classgraphene_1_1db_1_1abstract__object_1afb1fe30941a4e9e6d3ca3f4a55c9e59b" prot="public" virt="non-virtual"><scope>graphene::chain::buyback_object</scope><name>space_id</name></member>
      <member refid="classgraphene_1_1db_1_1base__abstract__object_1a7dd7f3ea796b0f3ec9b4899b3e33e4b2" prot="public" virt="virtual"><scope>graphene::chain::buyback_object</scope><name>to_variant</name></member>
      <member refid="classgraphene_1_1db_1_1abstract__object_1ab3d8c613dd39c1b04abfb7ac758246e6" prot="public" virt="non-virtual"><scope>graphene::chain::buyback_object</scope><name>type_id</name></member>
      <member refid="classgraphene_1_1db_1_1object_1ae8f3fa315d81c80cd93cf5ea2853e65f" prot="public" virt="virtual"><scope>graphene::chain::buyback_object</scope><name>~object</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
