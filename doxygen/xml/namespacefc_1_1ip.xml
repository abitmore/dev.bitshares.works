<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="namespacefc_1_1ip" kind="namespace" language="C++">
    <compoundname>fc::ip</compoundname>
    <innerclass refid="classfc_1_1ip_1_1address" prot="public">fc::ip::address</innerclass>
    <innerclass refid="classfc_1_1ip_1_1endpoint" prot="public">fc::ip::endpoint</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespacefc_1_1ip_1abb2c9cbc965c39c391c42959a2edf172" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool fc::ip::operator==</definition>
        <argsstring>(const address &amp;a, const address &amp;b)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classfc_1_1ip_1_1address" kindref="compound">address</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="classfc_1_1ip_1_1address" kindref="compound">address</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/src/network/ip.cpp" line="22" column="1" bodyfile="libraries/fc/src/network/ip.cpp" bodystart="22" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1ip_1a94f7db7a44c15848c126ae870d551e25" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool fc::ip::operator!=</definition>
        <argsstring>(const address &amp;a, const address &amp;b)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classfc_1_1ip_1_1address" kindref="compound">address</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="classfc_1_1ip_1_1address" kindref="compound">address</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/src/network/ip.cpp" line="25" column="1" bodyfile="libraries/fc/src/network/ip.cpp" bodystart="25" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1ip_1a9f860667823425fd1f46d6fd15a4f8af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool fc::ip::operator==</definition>
        <argsstring>(const endpoint &amp;a, const endpoint &amp;b)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classfc_1_1ip_1_1endpoint" kindref="compound">endpoint</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="classfc_1_1ip_1_1endpoint" kindref="compound">endpoint</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/src/network/ip.cpp" line="57" column="1" bodyfile="libraries/fc/src/network/ip.cpp" bodystart="57" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1ip_1ae860bb41a6a2f9db3988a5ba4dd3a023" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool fc::ip::operator!=</definition>
        <argsstring>(const endpoint &amp;a, const endpoint &amp;b)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classfc_1_1ip_1_1endpoint" kindref="compound">endpoint</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="classfc_1_1ip_1_1endpoint" kindref="compound">endpoint</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/src/network/ip.cpp" line="60" column="1" bodyfile="libraries/fc/src/network/ip.cpp" bodystart="60" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1ip_1a7d0cdc2b9447bd02b8689ee7ad601f4c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool fc::ip::operator&lt;</definition>
        <argsstring>(const endpoint &amp;a, const endpoint &amp;b)</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const <ref refid="classfc_1_1ip_1_1endpoint" kindref="compound">endpoint</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="classfc_1_1ip_1_1endpoint" kindref="compound">endpoint</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/src/network/ip.cpp" line="64" column="1" bodyfile="libraries/fc/src/network/ip.cpp" bodystart="64" bodyend="69"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="libraries/fc/include/fc/io/raw_fwd.hpp" line="35" column="1"/>
  </compounddef>
</doxygen>
