<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="structgraphene_1_1protocol_1_1call__order__update__operation" kind="struct" language="C++" prot="public">
    <compoundname>graphene::protocol::call_order_update_operation</compoundname>
    <basecompoundref refid="structgraphene_1_1protocol_1_1base__operation" prot="public" virt="non-virtual">graphene::protocol::base_operation</basecompoundref>
    <includes refid="market_8hpp" local="no">market.hpp</includes>
    <innerclass refid="structgraphene_1_1protocol_1_1call__order__update__operation_1_1fee__params__t" prot="public">graphene::protocol::call_order_update_operation::fee_params_t</innerclass>
    <innerclass refid="structgraphene_1_1protocol_1_1call__order__update__operation_1_1options__type" prot="public">graphene::protocol::call_order_update_operation::options_type</innerclass>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structgraphene_1_1protocol_1_1call__order__update__operation_1a958f7e80f33046557b30b3464b32c09e" prot="public" static="no">
        <type><ref refid="structgraphene_1_1protocol_1_1extension" kindref="compound">extension</ref>&lt; <ref refid="structgraphene_1_1protocol_1_1call__order__update__operation_1_1options__type" kindref="compound">options_type</ref> &gt;</type>
        <definition>using graphene::protocol::call_order_update_operation::extensions_type =  extension&lt;options_type&gt;</definition>
        <argsstring></argsstring>
        <name>extensions_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/market.hpp" line="192" column="7" bodyfile="libraries/protocol/include/graphene/protocol/market.hpp" bodystart="192" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1call__order__update__operation_1af98036211eabad5b09f3d7678a6e15ad" prot="public" static="no" mutable="no">
        <type><ref refid="structgraphene_1_1protocol_1_1asset" kindref="compound">asset</ref></type>
        <definition>asset graphene::protocol::call_order_update_operation::fee</definition>
        <argsstring></argsstring>
        <name>fee</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/market.hpp" line="187" column="27" bodyfile="libraries/protocol/include/graphene/protocol/market.hpp" bodystart="187" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1call__order__update__operation_1a7f2347439fc59d2c536f65e6460d31ab" prot="public" static="no" mutable="no">
        <type>account_id_type</type>
        <definition>account_id_type graphene::protocol::call_order_update_operation::funding_account</definition>
        <argsstring></argsstring>
        <name>funding_account</name>
        <briefdescription>
<para>pays fee, collateral, and cover </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/market.hpp" line="188" column="27" bodyfile="libraries/protocol/include/graphene/protocol/market.hpp" bodystart="188" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1call__order__update__operation_1a870e8dd141d59ee0267010cec3de4630" prot="public" static="no" mutable="no">
        <type><ref refid="structgraphene_1_1protocol_1_1asset" kindref="compound">asset</ref></type>
        <definition>asset graphene::protocol::call_order_update_operation::delta_collateral</definition>
        <argsstring></argsstring>
        <name>delta_collateral</name>
        <briefdescription>
<para>the amount of collateral to add to the margin position </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/market.hpp" line="189" column="27" bodyfile="libraries/protocol/include/graphene/protocol/market.hpp" bodystart="189" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1call__order__update__operation_1a41657ce377d09a23f8adc79a4d52e53e" prot="public" static="no" mutable="no">
        <type><ref refid="structgraphene_1_1protocol_1_1asset" kindref="compound">asset</ref></type>
        <definition>asset graphene::protocol::call_order_update_operation::delta_debt</definition>
        <argsstring></argsstring>
        <name>delta_debt</name>
        <briefdescription>
<para>the amount of the debt to be paid off, may be negative to issue new debt </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/market.hpp" line="190" column="27" bodyfile="libraries/protocol/include/graphene/protocol/market.hpp" bodystart="190" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1call__order__update__operation_1ac7aa115b1d0f3f94db675fafede9fa77" prot="public" static="no" mutable="no">
        <type><ref refid="structgraphene_1_1protocol_1_1call__order__update__operation_1a958f7e80f33046557b30b3464b32c09e" kindref="member">extensions_type</ref></type>
        <definition>extensions_type graphene::protocol::call_order_update_operation::extensions</definition>
        <argsstring></argsstring>
        <name>extensions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/market.hpp" line="193" column="27" bodyfile="libraries/protocol/include/graphene/protocol/market.hpp" bodystart="193" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structgraphene_1_1protocol_1_1call__order__update__operation_1a7a6582d49c40396870cbaff9e6ad82a0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>account_id_type</type>
        <definition>account_id_type graphene::protocol::call_order_update_operation::fee_payer</definition>
        <argsstring>() const</argsstring>
        <name>fee_payer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/market.hpp" line="195" column="23" bodyfile="libraries/protocol/include/graphene/protocol/market.hpp" bodystart="195" bodyend="195"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1protocol_1_1call__order__update__operation_1a4069002b40b4d11e8123f7bea0c20d7e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void graphene::protocol::call_order_update_operation::validate</definition>
        <argsstring>() const</argsstring>
        <name>validate</name>
        <reimplements refid="structgraphene_1_1protocol_1_1base__operation_1a23d617a6fa0921d3f5b51dd5167e7a29">validate</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/market.hpp" line="196" column="23" bodyfile="libraries/protocol/market.cpp" bodystart="89" bodyend="97"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>This operation can be used to add collateral, cover, and adjust the margin call price for a particular user.</para>
<para>For prediction markets the collateral and debt must always be equal.</para>
<para>This operation will fail if it would trigger a margin call that couldn&apos;t be filled. If the margin call hits the call price limit then it will fail if the call price is above the settlement price.</para>
<para><simplesect kind="note"><para>this operation can be used to force a market order using the collateral without requiring outside funds. </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>graphene::protocol::base_operation</label>
        <link refid="structgraphene_1_1protocol_1_1base__operation"/>
      </node>
      <node id="1">
        <label>graphene::protocol::call_order_update_operation</label>
        <link refid="structgraphene_1_1protocol_1_1call__order__update__operation"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="5">
        <label>fc::safe_base&lt; int64_t &gt;</label>
        <link refid="structfc_1_1safe__base"/>
      </node>
      <node id="7">
        <label>graphene::protocol::call_order_update_operation::options_type</label>
        <link refid="structgraphene_1_1protocol_1_1call__order__update__operation_1_1options__type"/>
        <childnode refid="8" relation="usage">
          <edgelabel>target_collateral_ratio</edgelabel>
        </childnode>
      </node>
      <node id="9">
        <label>account_id_type</label>
      </node>
      <node id="4">
        <label>fc::safe&lt; int64_t &gt;</label>
        <link refid="structfc_1_1safe"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>graphene::protocol::base_operation</label>
        <link refid="structgraphene_1_1protocol_1_1base__operation"/>
      </node>
      <node id="1">
        <label>graphene::protocol::call_order_update_operation</label>
        <link refid="structgraphene_1_1protocol_1_1call__order__update__operation"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>fee</edgelabel>
          <edgelabel>delta_collateral</edgelabel>
          <edgelabel>delta_debt</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>extensions</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>funding_account</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>graphene::protocol::asset</label>
        <link refid="structgraphene_1_1protocol_1_1asset"/>
        <childnode refid="4" relation="usage">
          <edgelabel>amount</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>graphene::protocol::extension&lt; options_type &gt;</label>
        <link refid="structgraphene_1_1protocol_1_1extension"/>
        <childnode refid="7" relation="usage">
          <edgelabel>value</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>fc::optional&lt; uint16_t &gt;</label>
        <link refid="classfc_1_1optional"/>
      </node>
    </collaborationgraph>
    <location file="libraries/protocol/include/graphene/protocol/market.hpp" line="172" column="1" bodyfile="libraries/protocol/include/graphene/protocol/market.hpp" bodystart="171" bodyend="197"/>
    <listofallmembers>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1aaccb0fa71ee529cf62324baaa99988fe" prot="public" virt="non-virtual"><scope>graphene::protocol::call_order_update_operation</scope><name>calculate_data_fee</name></member>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1a0be44badcee9a648413eb906dac1d3b3" prot="public" virt="non-virtual"><scope>graphene::protocol::call_order_update_operation</scope><name>calculate_fee</name></member>
      <member refid="structgraphene_1_1protocol_1_1call__order__update__operation_1a870e8dd141d59ee0267010cec3de4630" prot="public" virt="non-virtual"><scope>graphene::protocol::call_order_update_operation</scope><name>delta_collateral</name></member>
      <member refid="structgraphene_1_1protocol_1_1call__order__update__operation_1a41657ce377d09a23f8adc79a4d52e53e" prot="public" virt="non-virtual"><scope>graphene::protocol::call_order_update_operation</scope><name>delta_debt</name></member>
      <member refid="structgraphene_1_1protocol_1_1call__order__update__operation_1ac7aa115b1d0f3f94db675fafede9fa77" prot="public" virt="non-virtual"><scope>graphene::protocol::call_order_update_operation</scope><name>extensions</name></member>
      <member refid="structgraphene_1_1protocol_1_1call__order__update__operation_1a958f7e80f33046557b30b3464b32c09e" prot="public" virt="non-virtual"><scope>graphene::protocol::call_order_update_operation</scope><name>extensions_type</name></member>
      <member refid="structgraphene_1_1protocol_1_1call__order__update__operation_1af98036211eabad5b09f3d7678a6e15ad" prot="public" virt="non-virtual"><scope>graphene::protocol::call_order_update_operation</scope><name>fee</name></member>
      <member refid="structgraphene_1_1protocol_1_1call__order__update__operation_1a7a6582d49c40396870cbaff9e6ad82a0" prot="public" virt="non-virtual"><scope>graphene::protocol::call_order_update_operation</scope><name>fee_payer</name></member>
      <member refid="structgraphene_1_1protocol_1_1call__order__update__operation_1a7f2347439fc59d2c536f65e6460d31ab" prot="public" virt="non-virtual"><scope>graphene::protocol::call_order_update_operation</scope><name>funding_account</name></member>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1a89ed7c6e7da93cd99bb41bc8d7e2627b" prot="public" virt="virtual"><scope>graphene::protocol::call_order_update_operation</scope><name>get_required_active_authorities</name></member>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1aabc48ce97877c67ff560b94284a7c0bb" prot="public" virt="virtual"><scope>graphene::protocol::call_order_update_operation</scope><name>get_required_authorities</name></member>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1a3251978e7bd0bb2f2fa23bcea5dee95c" prot="public" virt="virtual"><scope>graphene::protocol::call_order_update_operation</scope><name>get_required_owner_authorities</name></member>
      <member refid="structgraphene_1_1protocol_1_1call__order__update__operation_1a4069002b40b4d11e8123f7bea0c20d7e" prot="public" virt="virtual"><scope>graphene::protocol::call_order_update_operation</scope><name>validate</name></member>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1a485f3d3b963ff4c081af85945cf27774" prot="public" virt="non-virtual"><scope>graphene::protocol::call_order_update_operation</scope><name>validate_parallel</name></member>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1a04ac6688e2df1d511514e4fc1983b828" prot="public" virt="virtual"><scope>graphene::protocol::call_order_update_operation</scope><name>~base_operation</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
