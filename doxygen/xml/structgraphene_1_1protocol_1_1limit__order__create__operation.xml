<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structgraphene_1_1protocol_1_1limit__order__create__operation" kind="class" language="C++" prot="public">
    <compoundname>graphene::protocol::limit_order_create_operation</compoundname>
    <basecompoundref refid="structgraphene_1_1protocol_1_1base__operation" prot="public" virt="non-virtual">graphene::protocol::base_operation</basecompoundref>
    <includes refid="market_8hpp" local="no">market.hpp</includes>
    <innerclass refid="structgraphene_1_1protocol_1_1limit__order__create__operation_1_1fee__parameters__type" prot="public">graphene::protocol::limit_order_create_operation::fee_parameters_type</innerclass>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1limit__order__create__operation_1a36d8f9a14a04609924813f4b113f386d" prot="public" static="no" mutable="no">
        <type><ref refid="structgraphene_1_1protocol_1_1asset" kindref="compound">asset</ref></type>
        <definition>asset graphene::protocol::limit_order_create_operation::fee</definition>
        <argsstring></argsstring>
        <name>fee</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/market.hpp" line="52" column="1" bodyfile="libraries/protocol/include/graphene/protocol/market.hpp" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1limit__order__create__operation_1a721bce63e0146136f77ac0b3033e8d7e" prot="public" static="no" mutable="no">
        <type>account_id_type</type>
        <definition>account_id_type graphene::protocol::limit_order_create_operation::seller</definition>
        <argsstring></argsstring>
        <name>seller</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/market.hpp" line="53" column="1" bodyfile="libraries/protocol/include/graphene/protocol/market.hpp" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1limit__order__create__operation_1ad92e268075a9c7ea51aaecc6e9670951" prot="public" static="no" mutable="no">
        <type><ref refid="structgraphene_1_1protocol_1_1asset" kindref="compound">asset</ref></type>
        <definition>asset graphene::protocol::limit_order_create_operation::amount_to_sell</definition>
        <argsstring></argsstring>
        <name>amount_to_sell</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/market.hpp" line="54" column="1" bodyfile="libraries/protocol/include/graphene/protocol/market.hpp" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1limit__order__create__operation_1a9a712685b26ec87d796858de6e8164e4" prot="public" static="no" mutable="no">
        <type><ref refid="structgraphene_1_1protocol_1_1asset" kindref="compound">asset</ref></type>
        <definition>asset graphene::protocol::limit_order_create_operation::min_to_receive</definition>
        <argsstring></argsstring>
        <name>min_to_receive</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/market.hpp" line="55" column="1" bodyfile="libraries/protocol/include/graphene/protocol/market.hpp" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1limit__order__create__operation_1a3c7a09bfaeebeb0fab8e56664dccb73d" prot="public" static="no" mutable="no">
        <type><ref refid="classfc_1_1time__point__sec" kindref="compound">time_point_sec</ref></type>
        <definition>time_point_sec graphene::protocol::limit_order_create_operation::expiration</definition>
        <argsstring></argsstring>
        <name>expiration</name>
        <initializer>= <ref refid="classfc_1_1time__point__sec_1a45d3b7342e76cfb07ef1845d75b57a39" kindref="member">time_point_sec::maximum</ref>()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The order will be removed from the books if not filled by expiration Upon expiration, all unsold asset will be returned to seller </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/market.hpp" line="59" column="1" bodyfile="libraries/protocol/include/graphene/protocol/market.hpp" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1limit__order__create__operation_1a09ea86a0713585349cd0653f73d90f4c" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool graphene::protocol::limit_order_create_operation::fill_or_kill</definition>
        <argsstring></argsstring>
        <name>fill_or_kill</name>
        <initializer>= false</initializer>
        <briefdescription>
<para>If this flag is set the entire order must be filled or the operation is rejected. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/market.hpp" line="62" column="1" bodyfile="libraries/protocol/include/graphene/protocol/market.hpp" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1limit__order__create__operation_1a22b2749ba786a28fcd644d7820f68ddf" prot="public" static="no" mutable="no">
        <type><ref refid="group__operations_1gabaddcaf5bde76414891b4c29031d9288" kindref="member">extensions_type</ref></type>
        <definition>extensions_type graphene::protocol::limit_order_create_operation::extensions</definition>
        <argsstring></argsstring>
        <name>extensions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/market.hpp" line="63" column="1" bodyfile="libraries/protocol/include/graphene/protocol/market.hpp" bodystart="63" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structgraphene_1_1protocol_1_1limit__order__create__operation_1a81bb8699ab6d7551d4a88dfbaa62eed6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>pair&lt; asset_id_type, asset_id_type &gt;</type>
        <definition>pair&lt;asset_id_type,asset_id_type&gt; graphene::protocol::limit_order_create_operation::get_market</definition>
        <argsstring>() const</argsstring>
        <name>get_market</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/market.hpp" line="65" column="1" bodyfile="libraries/protocol/include/graphene/protocol/market.hpp" bodystart="65" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1protocol_1_1limit__order__create__operation_1ab554dacf9269d09d2d75c2d4fbee9d9f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>account_id_type</type>
        <definition>account_id_type graphene::protocol::limit_order_create_operation::fee_payer</definition>
        <argsstring>() const</argsstring>
        <name>fee_payer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/market.hpp" line="71" column="1" bodyfile="libraries/protocol/include/graphene/protocol/market.hpp" bodystart="71" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1protocol_1_1limit__order__create__operation_1a8ac9c776e0629ba4cc2b8d8cc1c02e64" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void graphene::protocol::limit_order_create_operation::validate</definition>
        <argsstring>() const</argsstring>
        <name>validate</name>
        <reimplements refid="structgraphene_1_1protocol_1_1base__operation_1a23d617a6fa0921d3f5b51dd5167e7a29">validate</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/market.hpp" line="72" column="1" bodyfile="libraries/protocol/market.cpp" bodystart="30" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1protocol_1_1limit__order__create__operation_1a954051a74dfaadb6b06719ac366f769c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structgraphene_1_1protocol_1_1price" kindref="compound">price</ref></type>
        <definition>price graphene::protocol::limit_order_create_operation::get_price</definition>
        <argsstring>() const</argsstring>
        <name>get_price</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/market.hpp" line="73" column="1" bodyfile="libraries/protocol/include/graphene/protocol/market.hpp" bodystart="73" bodyend="73"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>instructs the blockchain to attempt to sell one asset for another</para><para>The blockchain will atempt to sell amount_to_sell.asset_id for as much min_to_receive.asset_id as possible. The fee will be paid by the seller&apos;s account. Market fees will apply as specified by the issuer of both the selling asset and the receiving asset as a percentage of the amount exchanged. </para>    </briefdescription>
    <detaileddescription>
<para>If either the selling asset or the receiving asset is white list restricted, the order will only be created if the seller is on the white list of the restricted asset type.</para><para>Market orders are matched in the order they are included in the block chain. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="5146">
        <label>graphene::protocol::base_operation</label>
        <link refid="structgraphene_1_1protocol_1_1base__operation"/>
      </node>
      <node id="5145">
        <label>graphene::protocol::limit_order_create_operation</label>
        <link refid="structgraphene_1_1protocol_1_1limit__order__create__operation"/>
        <childnode refid="5146" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="5152">
        <label>account_id_type</label>
      </node>
      <node id="5150">
        <label>fc::safe&lt; int64_t &gt;</label>
        <link refid="structfc_1_1safe"/>
      </node>
      <node id="5151">
        <label>fc::time_point_sec</label>
        <link refid="classfc_1_1time__point__sec"/>
      </node>
      <node id="5148">
        <label>graphene::protocol::base_operation</label>
        <link refid="structgraphene_1_1protocol_1_1base__operation"/>
      </node>
      <node id="5149">
        <label>graphene::protocol::asset</label>
        <link refid="structgraphene_1_1protocol_1_1asset"/>
        <childnode refid="5150" relation="usage">
          <edgelabel>amount</edgelabel>
        </childnode>
      </node>
      <node id="5147">
        <label>graphene::protocol::limit_order_create_operation</label>
        <link refid="structgraphene_1_1protocol_1_1limit__order__create__operation"/>
        <childnode refid="5148" relation="public-inheritance">
        </childnode>
        <childnode refid="5149" relation="usage">
          <edgelabel>fee</edgelabel>
          <edgelabel>min_to_receive</edgelabel>
          <edgelabel>amount_to_sell</edgelabel>
        </childnode>
        <childnode refid="5151" relation="usage">
          <edgelabel>expiration</edgelabel>
        </childnode>
        <childnode refid="5152" relation="usage">
          <edgelabel>seller</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="libraries/protocol/include/graphene/protocol/market.hpp" line="49" column="1" bodyfile="libraries/protocol/include/graphene/protocol/market.hpp" bodystart="48" bodyend="74"/>
    <listofallmembers>
      <member refid="structgraphene_1_1protocol_1_1limit__order__create__operation_1ad92e268075a9c7ea51aaecc6e9670951" prot="public" virt="non-virtual"><scope>graphene::protocol::limit_order_create_operation</scope><name>amount_to_sell</name></member>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1aaccb0fa71ee529cf62324baaa99988fe" prot="public" virt="non-virtual"><scope>graphene::protocol::limit_order_create_operation</scope><name>calculate_data_fee</name></member>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1a0be44badcee9a648413eb906dac1d3b3" prot="public" virt="non-virtual"><scope>graphene::protocol::limit_order_create_operation</scope><name>calculate_fee</name></member>
      <member refid="structgraphene_1_1protocol_1_1limit__order__create__operation_1a3c7a09bfaeebeb0fab8e56664dccb73d" prot="public" virt="non-virtual"><scope>graphene::protocol::limit_order_create_operation</scope><name>expiration</name></member>
      <member refid="structgraphene_1_1protocol_1_1limit__order__create__operation_1a22b2749ba786a28fcd644d7820f68ddf" prot="public" virt="non-virtual"><scope>graphene::protocol::limit_order_create_operation</scope><name>extensions</name></member>
      <member refid="structgraphene_1_1protocol_1_1limit__order__create__operation_1a36d8f9a14a04609924813f4b113f386d" prot="public" virt="non-virtual"><scope>graphene::protocol::limit_order_create_operation</scope><name>fee</name></member>
      <member refid="structgraphene_1_1protocol_1_1limit__order__create__operation_1ab554dacf9269d09d2d75c2d4fbee9d9f" prot="public" virt="non-virtual"><scope>graphene::protocol::limit_order_create_operation</scope><name>fee_payer</name></member>
      <member refid="structgraphene_1_1protocol_1_1limit__order__create__operation_1a09ea86a0713585349cd0653f73d90f4c" prot="public" virt="non-virtual"><scope>graphene::protocol::limit_order_create_operation</scope><name>fill_or_kill</name></member>
      <member refid="structgraphene_1_1protocol_1_1limit__order__create__operation_1a81bb8699ab6d7551d4a88dfbaa62eed6" prot="public" virt="non-virtual"><scope>graphene::protocol::limit_order_create_operation</scope><name>get_market</name></member>
      <member refid="structgraphene_1_1protocol_1_1limit__order__create__operation_1a954051a74dfaadb6b06719ac366f769c" prot="public" virt="non-virtual"><scope>graphene::protocol::limit_order_create_operation</scope><name>get_price</name></member>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1a89ed7c6e7da93cd99bb41bc8d7e2627b" prot="public" virt="virtual"><scope>graphene::protocol::limit_order_create_operation</scope><name>get_required_active_authorities</name></member>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1aabc48ce97877c67ff560b94284a7c0bb" prot="public" virt="virtual"><scope>graphene::protocol::limit_order_create_operation</scope><name>get_required_authorities</name></member>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1a3251978e7bd0bb2f2fa23bcea5dee95c" prot="public" virt="virtual"><scope>graphene::protocol::limit_order_create_operation</scope><name>get_required_owner_authorities</name></member>
      <member refid="structgraphene_1_1protocol_1_1limit__order__create__operation_1a9a712685b26ec87d796858de6e8164e4" prot="public" virt="non-virtual"><scope>graphene::protocol::limit_order_create_operation</scope><name>min_to_receive</name></member>
      <member refid="structgraphene_1_1protocol_1_1limit__order__create__operation_1a721bce63e0146136f77ac0b3033e8d7e" prot="public" virt="non-virtual"><scope>graphene::protocol::limit_order_create_operation</scope><name>seller</name></member>
      <member refid="structgraphene_1_1protocol_1_1limit__order__create__operation_1a8ac9c776e0629ba4cc2b8d8cc1c02e64" prot="public" virt="virtual"><scope>graphene::protocol::limit_order_create_operation</scope><name>validate</name></member>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1a485f3d3b963ff4c081af85945cf27774" prot="public" virt="non-virtual"><scope>graphene::protocol::limit_order_create_operation</scope><name>validate_parallel</name></member>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1a04ac6688e2df1d511514e4fc1983b828" prot="public" virt="virtual"><scope>graphene::protocol::limit_order_create_operation</scope><name>~base_operation</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
