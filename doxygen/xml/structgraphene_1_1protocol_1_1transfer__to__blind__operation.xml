<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="structgraphene_1_1protocol_1_1transfer__to__blind__operation" kind="class" language="C++" prot="public">
    <compoundname>graphene::protocol::transfer_to_blind_operation</compoundname>
    <basecompoundref refid="structgraphene_1_1protocol_1_1base__operation" prot="public" virt="non-virtual">graphene::protocol::base_operation</basecompoundref>
    <includes refid="confidential_8hpp" local="no">confidential.hpp</includes>
    <innerclass refid="structgraphene_1_1protocol_1_1transfer__to__blind__operation_1_1fee__parameters__type" prot="public">graphene::protocol::transfer_to_blind_operation::fee_parameters_type</innerclass>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1transfer__to__blind__operation_1a97378b8efbf98fd04cb6728f2b268cbd" prot="public" static="no" mutable="no">
        <type><ref refid="structgraphene_1_1protocol_1_1asset" kindref="compound">asset</ref></type>
        <definition>asset graphene::protocol::transfer_to_blind_operation::fee</definition>
        <argsstring></argsstring>
        <name>fee</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/confidential.hpp" line="158" column="1" bodyfile="libraries/protocol/include/graphene/protocol/confidential.hpp" bodystart="158" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1transfer__to__blind__operation_1a54115eb0edf78236e878a1173c5d2213" prot="public" static="no" mutable="no">
        <type><ref refid="structgraphene_1_1protocol_1_1asset" kindref="compound">asset</ref></type>
        <definition>asset graphene::protocol::transfer_to_blind_operation::amount</definition>
        <argsstring></argsstring>
        <name>amount</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/confidential.hpp" line="159" column="1" bodyfile="libraries/protocol/include/graphene/protocol/confidential.hpp" bodystart="159" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1transfer__to__blind__operation_1aac138ad0557c30453136bae37c8080cd" prot="public" static="no" mutable="no">
        <type>account_id_type</type>
        <definition>account_id_type graphene::protocol::transfer_to_blind_operation::from</definition>
        <argsstring></argsstring>
        <name>from</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/confidential.hpp" line="160" column="1" bodyfile="libraries/protocol/include/graphene/protocol/confidential.hpp" bodystart="160" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1transfer__to__blind__operation_1acd7ad38e111c7068fd6131223f06561b" prot="public" static="no" mutable="no">
        <type>blind_factor_type</type>
        <definition>blind_factor_type graphene::protocol::transfer_to_blind_operation::blinding_factor</definition>
        <argsstring></argsstring>
        <name>blinding_factor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/confidential.hpp" line="161" column="1" bodyfile="libraries/protocol/include/graphene/protocol/confidential.hpp" bodystart="161" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1transfer__to__blind__operation_1a091a7afe96691ef022298cb602d32f86" prot="public" static="no" mutable="no">
        <type>vector&lt; <ref refid="structgraphene_1_1protocol_1_1blind__output" kindref="compound">blind_output</ref> &gt;</type>
        <definition>vector&lt;blind_output&gt; graphene::protocol::transfer_to_blind_operation::outputs</definition>
        <argsstring></argsstring>
        <name>outputs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/confidential.hpp" line="162" column="1" bodyfile="libraries/protocol/include/graphene/protocol/confidential.hpp" bodystart="162" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structgraphene_1_1protocol_1_1transfer__to__blind__operation_1a0ea1282022cc50861d5930606a9de53a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>account_id_type</type>
        <definition>account_id_type graphene::protocol::transfer_to_blind_operation::fee_payer</definition>
        <argsstring>() const </argsstring>
        <name>fee_payer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/confidential.hpp" line="164" column="1" bodyfile="libraries/protocol/include/graphene/protocol/confidential.hpp" bodystart="164" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1protocol_1_1transfer__to__blind__operation_1af88b2562bcf184e824284c8a474b7b1a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::protocol::transfer_to_blind_operation::validate</definition>
        <argsstring>() const </argsstring>
        <name>validate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>require all outputs to be sorted prevents duplicates AND prevents implementations from accidentally leaking information by how they arrange commitments. </para>        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/confidential.hpp" line="165" column="1" bodyfile="libraries/protocol/confidential.cpp" bodystart="32" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1protocol_1_1transfer__to__blind__operation_1a9b6e7c2e85c2df824367a6481b3967c5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacegraphene_1_1protocol_1a69b2104c1c11eed2d17bd29b86713347" kindref="member">share_type</ref></type>
        <definition>share_type graphene::protocol::transfer_to_blind_operation::calculate_fee</definition>
        <argsstring>(const fee_parameters_type &amp;) const </argsstring>
        <name>calculate_fee</name>
        <param>
          <type>const <ref refid="structgraphene_1_1protocol_1_1transfer__to__blind__operation_1_1fee__parameters__type" kindref="compound">fee_parameters_type</ref> &amp;</type>
          <defname>k</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/confidential.hpp" line="166" column="1" bodyfile="libraries/protocol/confidential.cpp" bodystart="64" bodyend="67"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Converts public account balance to a blinded or stealth balance. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="6784">
        <label>graphene::protocol::base_operation</label>
        <link refid="structgraphene_1_1protocol_1_1base__operation"/>
      </node>
      <node id="6783">
        <label>graphene::protocol::transfer_to_blind_operation</label>
        <link refid="structgraphene_1_1protocol_1_1transfer__to__blind__operation"/>
        <childnode refid="6784" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="6790">
        <label>vector&lt; graphene::protocol::blind_output &gt;</label>
      </node>
      <node id="6791">
        <label>blind_factor_type</label>
      </node>
      <node id="6789">
        <label>account_id_type</label>
      </node>
      <node id="6788">
        <label>fc::safe&lt; int64_t &gt;</label>
        <link refid="structfc_1_1safe"/>
      </node>
      <node id="6786">
        <label>graphene::protocol::base_operation</label>
        <link refid="structgraphene_1_1protocol_1_1base__operation"/>
      </node>
      <node id="6787">
        <label>graphene::protocol::asset</label>
        <link refid="structgraphene_1_1protocol_1_1asset"/>
        <childnode refid="6788" relation="usage">
          <edgelabel>amount</edgelabel>
        </childnode>
      </node>
      <node id="6785">
        <label>graphene::protocol::transfer_to_blind_operation</label>
        <link refid="structgraphene_1_1protocol_1_1transfer__to__blind__operation"/>
        <childnode refid="6786" relation="public-inheritance">
        </childnode>
        <childnode refid="6787" relation="usage">
          <edgelabel>fee</edgelabel>
          <edgelabel>amount</edgelabel>
        </childnode>
        <childnode refid="6789" relation="usage">
          <edgelabel>from</edgelabel>
        </childnode>
        <childnode refid="6790" relation="usage">
          <edgelabel>outputs</edgelabel>
        </childnode>
        <childnode refid="6791" relation="usage">
          <edgelabel>blinding_factor</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="libraries/protocol/include/graphene/protocol/confidential.hpp" line="151" column="1" bodyfile="libraries/protocol/include/graphene/protocol/confidential.hpp" bodystart="150" bodyend="167"/>
    <listofallmembers>
      <member refid="structgraphene_1_1protocol_1_1transfer__to__blind__operation_1a54115eb0edf78236e878a1173c5d2213" prot="public" virt="non-virtual"><scope>graphene::protocol::transfer_to_blind_operation</scope><name>amount</name></member>
      <member refid="structgraphene_1_1protocol_1_1transfer__to__blind__operation_1acd7ad38e111c7068fd6131223f06561b" prot="public" virt="non-virtual"><scope>graphene::protocol::transfer_to_blind_operation</scope><name>blinding_factor</name></member>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1aaccb0fa71ee529cf62324baaa99988fe" prot="public" virt="non-virtual"><scope>graphene::protocol::transfer_to_blind_operation</scope><name>calculate_data_fee</name></member>
      <member refid="structgraphene_1_1protocol_1_1transfer__to__blind__operation_1a9b6e7c2e85c2df824367a6481b3967c5" prot="public" virt="non-virtual"><scope>graphene::protocol::transfer_to_blind_operation</scope><name>calculate_fee</name></member>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1afd01efa3e06367c572512e381b1106fb" prot="public" virt="non-virtual" ambiguityscope="graphene::protocol::base_operation::"><scope>graphene::protocol::transfer_to_blind_operation</scope><name>calculate_fee</name></member>
      <member refid="structgraphene_1_1protocol_1_1transfer__to__blind__operation_1a97378b8efbf98fd04cb6728f2b268cbd" prot="public" virt="non-virtual"><scope>graphene::protocol::transfer_to_blind_operation</scope><name>fee</name></member>
      <member refid="structgraphene_1_1protocol_1_1transfer__to__blind__operation_1a0ea1282022cc50861d5930606a9de53a" prot="public" virt="non-virtual"><scope>graphene::protocol::transfer_to_blind_operation</scope><name>fee_payer</name></member>
      <member refid="structgraphene_1_1protocol_1_1transfer__to__blind__operation_1aac138ad0557c30453136bae37c8080cd" prot="public" virt="non-virtual"><scope>graphene::protocol::transfer_to_blind_operation</scope><name>from</name></member>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1aded12887f115b2bfa54ecd59540fa242" prot="public" virt="non-virtual"><scope>graphene::protocol::transfer_to_blind_operation</scope><name>get_required_active_authorities</name></member>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1a6ea245f980406ab52fdb90283e687d1c" prot="public" virt="non-virtual"><scope>graphene::protocol::transfer_to_blind_operation</scope><name>get_required_authorities</name></member>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1a0742a4b91de875366ec466a5b67b2811" prot="public" virt="non-virtual"><scope>graphene::protocol::transfer_to_blind_operation</scope><name>get_required_owner_authorities</name></member>
      <member refid="structgraphene_1_1protocol_1_1transfer__to__blind__operation_1a091a7afe96691ef022298cb602d32f86" prot="public" virt="non-virtual"><scope>graphene::protocol::transfer_to_blind_operation</scope><name>outputs</name></member>
      <member refid="structgraphene_1_1protocol_1_1transfer__to__blind__operation_1af88b2562bcf184e824284c8a474b7b1a" prot="public" virt="non-virtual"><scope>graphene::protocol::transfer_to_blind_operation</scope><name>validate</name></member>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1a41d0a14a070ac634be11f30dbf559935" prot="public" virt="non-virtual"><scope>graphene::protocol::transfer_to_blind_operation</scope><name>validate_parallel</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
