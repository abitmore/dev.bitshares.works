<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classgraphene_1_1grouped__orders_1_1grouped__orders__plugin" kind="class" language="C++" prot="public">
    <compoundname>graphene::grouped_orders::grouped_orders_plugin</compoundname>
    <basecompoundref refid="classgraphene_1_1app_1_1plugin" prot="public" virt="non-virtual">graphene::app::plugin</basecompoundref>
    <includes refid="grouped__orders__plugin_8hpp" local="no">grouped_orders_plugin.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classgraphene_1_1grouped__orders_1_1grouped__orders__plugin_1accee64fe6d1aa204dbf3d55f26608b1e" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="classgraphene_1_1grouped__orders_1_1detail_1_1grouped__orders__plugin__impl" kindref="compound">detail::grouped_orders_plugin_impl</ref> &gt;</type>
        <definition>std::unique_ptr&lt;detail::grouped_orders_plugin_impl&gt; graphene::grouped_orders::grouped_orders_plugin::my</definition>
        <argsstring></argsstring>
        <name>my</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/plugins/grouped_orders/include/graphene/grouped_orders/grouped_orders_plugin.hpp" line="88" column="1" bodyfile="libraries/plugins/grouped_orders/include/graphene/grouped_orders/grouped_orders_plugin.hpp" bodystart="88" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classgraphene_1_1grouped__orders_1_1grouped__orders__plugin_1ad29fd9a484b286f7e387ff6b2bfd0d33" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>graphene::grouped_orders::grouped_orders_plugin::grouped_orders_plugin</definition>
        <argsstring>(graphene::app::application &amp;app)</argsstring>
        <name>grouped_orders_plugin</name>
        <param>
          <type><ref refid="classgraphene_1_1app_1_1application" kindref="compound">graphene::app::application</ref> &amp;</type>
          <declname>app</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/plugins/grouped_orders/include/graphene/grouped_orders/grouped_orders_plugin.hpp" line="72" column="1" bodyfile="libraries/plugins/grouped_orders/grouped_orders_plugin.cpp" bodystart="240" bodyend="245"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1grouped__orders_1_1grouped__orders__plugin_1a7499b1141f29d17797988a6517fb32e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>graphene::grouped_orders::grouped_orders_plugin::~grouped_orders_plugin</definition>
        <argsstring>() override</argsstring>
        <name>~grouped_orders_plugin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/plugins/grouped_orders/include/graphene/grouped_orders/grouped_orders_plugin.hpp" line="73" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1grouped__orders_1_1grouped__orders__plugin_1a07775dc0f365159aac465e56d3711f91" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::string</type>
        <definition>std::string graphene::grouped_orders::grouped_orders_plugin::plugin_name</definition>
        <argsstring>() const override</argsstring>
        <name>plugin_name</name>
        <reimplements refid="classgraphene_1_1app_1_1plugin_1a5712513a3211adf382a161f49e4a7327">plugin_name</reimplements>
        <briefdescription>
<para>Get the name of the plugin. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/plugins/grouped_orders/include/graphene/grouped_orders/grouped_orders_plugin.hpp" line="75" column="1" bodyfile="libraries/plugins/grouped_orders/grouped_orders_plugin.cpp" bodystart="249" bodyend="252"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1grouped__orders_1_1grouped__orders__plugin_1ab6a037e9d349eb783baebb6b8fed1e60" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void graphene::grouped_orders::grouped_orders_plugin::plugin_set_program_options</definition>
        <argsstring>(boost::program_options::options_description &amp;cli, boost::program_options::options_description &amp;cfg) override</argsstring>
        <name>plugin_set_program_options</name>
        <reimplements refid="classgraphene_1_1app_1_1plugin_1a99ffee727e0f7bd6e88e8201fc84f93f">plugin_set_program_options</reimplements>
        <param>
          <type>boost::program_options::options_description &amp;</type>
          <declname>command_line_options</declname>
        </param>
        <param>
          <type>boost::program_options::options_description &amp;</type>
          <declname>config_file_options</declname>
        </param>
        <briefdescription>
<para>Fill in command line parameters used by the plugin. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>command_line_options</parametername>
</parameternamelist>
<parameterdescription>
<para>All options this plugin supports taking on the command-line </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config_file_options</parametername>
</parameternamelist>
<parameterdescription>
<para>All options this plugin supports storing in a configuration file</para></parameterdescription>
</parameteritem>
</parameterlist>
This method populates its arguments with any command-line and configuration file options the plugin supports. If a plugin does not need these options, it may simply provide an empty implementation of this method. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/plugins/grouped_orders/include/graphene/grouped_orders/grouped_orders_plugin.hpp" line="76" column="1" bodyfile="libraries/plugins/grouped_orders/grouped_orders_plugin.cpp" bodystart="254" bodyend="264"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1grouped__orders_1_1grouped__orders__plugin_1ad3c6e5c63de1aa5013420ae5c7f62a64" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void graphene::grouped_orders::grouped_orders_plugin::plugin_initialize</definition>
        <argsstring>(const boost::program_options::variables_map &amp;options) override</argsstring>
        <name>plugin_initialize</name>
        <reimplements refid="classgraphene_1_1app_1_1plugin_1a55f3edacaa70b31121533c946c80f756">plugin_initialize</reimplements>
        <param>
          <type>const boost::program_options::variables_map &amp;</type>
          <declname>options</declname>
        </param>
        <briefdescription>
<para>Perform early startup routines and register plugin indexes, callbacks, etc. </para>        </briefdescription>
        <detaileddescription>
<para>Plugins MUST supply a method initialize() which will be called early in the application startup. This method should contain early setup code such as initializing variables, adding indexes to the database, registering callback methods from the database, adding APIs, etc., as well as applying any options in the <computeroutput>options</computeroutput> map</para><para>This method is called BEFORE the database is open, therefore any routines which require any chain state MUST NOT be called by this method. These routines should be performed in startup() instead.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>options</parametername>
</parameternamelist>
<parameterdescription>
<para>The options passed to the application, via configuration files or command line </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/plugins/grouped_orders/include/graphene/grouped_orders/grouped_orders_plugin.hpp" line="79" column="1" bodyfile="libraries/plugins/grouped_orders/grouped_orders_plugin.cpp" bodystart="266" bodyend="278"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1grouped__orders_1_1grouped__orders__plugin_1a44df7c39d16d23e9c64bc85d88e94428" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void graphene::grouped_orders::grouped_orders_plugin::plugin_startup</definition>
        <argsstring>() override</argsstring>
        <name>plugin_startup</name>
        <reimplements refid="classgraphene_1_1app_1_1plugin_1a6dc55708298e55234f7e2e8e5781854f">plugin_startup</reimplements>
        <briefdescription>
<para>Begin normal runtime operations. </para>        </briefdescription>
        <detaileddescription>
<para>Plugins MUST supply a method startup() which will be called at the end of application startup. This method should contain code which schedules any tasks, or requires chain state. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/plugins/grouped_orders/include/graphene/grouped_orders/grouped_orders_plugin.hpp" line="81" column="1" bodyfile="libraries/plugins/grouped_orders/grouped_orders_plugin.cpp" bodystart="280" bodyend="286"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1grouped__orders_1_1grouped__orders__plugin_1ae058d694bf74ffb1e3cc3757345e0c6e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const flat_set&lt; uint16_t &gt; &amp;</type>
        <definition>const flat_set&lt; uint16_t &gt; &amp; graphene::grouped_orders::grouped_orders_plugin::tracked_groups</definition>
        <argsstring>() const</argsstring>
        <name>tracked_groups</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/plugins/grouped_orders/include/graphene/grouped_orders/grouped_orders_plugin.hpp" line="83" column="1" bodyfile="libraries/plugins/grouped_orders/grouped_orders_plugin.cpp" bodystart="288" bodyend="291"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1grouped__orders_1_1grouped__orders__plugin_1ae263f1d86b87689a922a3dee40660aa2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const map&lt; <ref refid="structgraphene_1_1grouped__orders_1_1limit__order__group__key" kindref="compound">limit_order_group_key</ref>, <ref refid="structgraphene_1_1grouped__orders_1_1limit__order__group__data" kindref="compound">limit_order_group_data</ref> &gt; &amp;</type>
        <definition>const map&lt; limit_order_group_key, limit_order_group_data &gt; &amp; graphene::grouped_orders::grouped_orders_plugin::limit_order_groups</definition>
        <argsstring>()</argsstring>
        <name>limit_order_groups</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/plugins/grouped_orders/include/graphene/grouped_orders/grouped_orders_plugin.hpp" line="85" column="1" bodyfile="libraries/plugins/grouped_orders/grouped_orders_plugin.cpp" bodystart="293" bodyend="299"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>The grouped orders plugin can be configured to track any number of price diff percentages via its configuration. Every time when there is a change on an order in object database, it will update internal state to reflect the change. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="4421">
        <label>graphene::app::plugin</label>
        <link refid="classgraphene_1_1app_1_1plugin"/>
        <childnode refid="4422" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4420">
        <label>graphene::grouped_orders::grouped_orders_plugin</label>
        <link refid="classgraphene_1_1grouped__orders_1_1grouped__orders__plugin"/>
        <childnode refid="4421" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4422">
        <label>graphene::app::abstract_plugin</label>
        <link refid="classgraphene_1_1app_1_1abstract__plugin"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4424">
        <label>graphene::app::plugin</label>
        <link refid="classgraphene_1_1app_1_1plugin"/>
        <childnode refid="4425" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4426">
        <label>graphene::app::application</label>
        <link refid="classgraphene_1_1app_1_1application"/>
      </node>
      <node id="4423">
        <label>graphene::grouped_orders::grouped_orders_plugin</label>
        <link refid="classgraphene_1_1grouped__orders_1_1grouped__orders__plugin"/>
        <childnode refid="4424" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4425">
        <label>graphene::app::abstract_plugin</label>
        <link refid="classgraphene_1_1app_1_1abstract__plugin"/>
        <childnode refid="4426" relation="usage">
          <edgelabel>_app</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="libraries/plugins/grouped_orders/include/graphene/grouped_orders/grouped_orders_plugin.hpp" line="70" column="1" bodyfile="libraries/plugins/grouped_orders/include/graphene/grouped_orders/grouped_orders_plugin.hpp" bodystart="69" bodyend="89"/>
    <listofallmembers>
      <member refid="classgraphene_1_1app_1_1abstract__plugin_1aa9ab00af2288ed8d6f2e5a4b5b0cedf5" prot="protected" virt="non-virtual"><scope>graphene::grouped_orders::grouped_orders_plugin</scope><name>_app</name></member>
      <member refid="classgraphene_1_1app_1_1abstract__plugin_1aaf2afbb94cb0b6aa35ec487280386a3f" prot="public" virt="non-virtual"><scope>graphene::grouped_orders::grouped_orders_plugin</scope><name>abstract_plugin</name></member>
      <member refid="classgraphene_1_1app_1_1abstract__plugin_1af51087b05377f24da7be8379f426589f" prot="public" virt="non-virtual"><scope>graphene::grouped_orders::grouped_orders_plugin</scope><name>app</name></member>
      <member refid="classgraphene_1_1app_1_1plugin_1a4e387fd1543b949aba7f64d68a14b9e1" prot="public" virt="non-virtual"><scope>graphene::grouped_orders::grouped_orders_plugin</scope><name>database</name></member>
      <member refid="classgraphene_1_1grouped__orders_1_1grouped__orders__plugin_1ad29fd9a484b286f7e387ff6b2bfd0d33" prot="public" virt="non-virtual"><scope>graphene::grouped_orders::grouped_orders_plugin</scope><name>grouped_orders_plugin</name></member>
      <member refid="classgraphene_1_1grouped__orders_1_1grouped__orders__plugin_1ae263f1d86b87689a922a3dee40660aa2" prot="public" virt="non-virtual"><scope>graphene::grouped_orders::grouped_orders_plugin</scope><name>limit_order_groups</name></member>
      <member refid="classgraphene_1_1grouped__orders_1_1grouped__orders__plugin_1accee64fe6d1aa204dbf3d55f26608b1e" prot="private" virt="non-virtual"><scope>graphene::grouped_orders::grouped_orders_plugin</scope><name>my</name></member>
      <member refid="classgraphene_1_1app_1_1plugin_1ab47c3981acab8ee256889d9347e72cd3" prot="protected" virt="non-virtual"><scope>graphene::grouped_orders::grouped_orders_plugin</scope><name>p2p_node</name></member>
      <member refid="classgraphene_1_1app_1_1plugin_1acab8aae448b09ec9b904a4e2c6fcfc12" prot="public" virt="virtual"><scope>graphene::grouped_orders::grouped_orders_plugin</scope><name>plugin_description</name></member>
      <member refid="classgraphene_1_1grouped__orders_1_1grouped__orders__plugin_1ad3c6e5c63de1aa5013420ae5c7f62a64" prot="public" virt="virtual"><scope>graphene::grouped_orders::grouped_orders_plugin</scope><name>plugin_initialize</name></member>
      <member refid="classgraphene_1_1grouped__orders_1_1grouped__orders__plugin_1a07775dc0f365159aac465e56d3711f91" prot="public" virt="virtual"><scope>graphene::grouped_orders::grouped_orders_plugin</scope><name>plugin_name</name></member>
      <member refid="classgraphene_1_1grouped__orders_1_1grouped__orders__plugin_1ab6a037e9d349eb783baebb6b8fed1e60" prot="public" virt="virtual"><scope>graphene::grouped_orders::grouped_orders_plugin</scope><name>plugin_set_program_options</name></member>
      <member refid="classgraphene_1_1app_1_1plugin_1abe7030a505bb7fef8fc3d37f5b33e015" prot="public" virt="virtual"><scope>graphene::grouped_orders::grouped_orders_plugin</scope><name>plugin_shutdown</name></member>
      <member refid="classgraphene_1_1grouped__orders_1_1grouped__orders__plugin_1a44df7c39d16d23e9c64bc85d88e94428" prot="public" virt="virtual"><scope>graphene::grouped_orders::grouped_orders_plugin</scope><name>plugin_startup</name></member>
      <member refid="classgraphene_1_1grouped__orders_1_1grouped__orders__plugin_1ae058d694bf74ffb1e3cc3757345e0c6e" prot="public" virt="non-virtual"><scope>graphene::grouped_orders::grouped_orders_plugin</scope><name>tracked_groups</name></member>
      <member refid="classgraphene_1_1app_1_1abstract__plugin_1af00d7f67a0b3e7b1712d653d439ef94a" prot="public" virt="virtual"><scope>graphene::grouped_orders::grouped_orders_plugin</scope><name>~abstract_plugin</name></member>
      <member refid="classgraphene_1_1grouped__orders_1_1grouped__orders__plugin_1a7499b1141f29d17797988a6517fb32e9" prot="public" virt="non-virtual"><scope>graphene::grouped_orders::grouped_orders_plugin</scope><name>~grouped_orders_plugin</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
