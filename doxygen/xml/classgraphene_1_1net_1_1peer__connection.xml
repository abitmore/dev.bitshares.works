<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classgraphene_1_1net_1_1peer__connection" kind="class" language="C++" prot="public">
    <compoundname>graphene::net::peer_connection</compoundname>
    <basecompoundref refid="classgraphene_1_1net_1_1message__oriented__connection__delegate" prot="public" virt="non-virtual">graphene::net::message_oriented_connection_delegate</basecompoundref>
    <basecompoundref prot="public" virt="non-virtual">std::enable_shared_from_this&lt; peer_connection &gt;</basecompoundref>
    <includes refid="peer__connection_8hpp" local="no">peer_connection.hpp</includes>
    <innerclass refid="structgraphene_1_1net_1_1peer__connection_1_1queued__message" prot="private">graphene::net::peer_connection::queued_message</innerclass>
    <innerclass refid="structgraphene_1_1net_1_1peer__connection_1_1real__queued__message" prot="private">graphene::net::peer_connection::real_queued_message</innerclass>
    <innerclass refid="structgraphene_1_1net_1_1peer__connection_1_1timestamp__index" prot="public">graphene::net::peer_connection::timestamp_index</innerclass>
    <innerclass refid="structgraphene_1_1net_1_1peer__connection_1_1timestamped__item__id" prot="public">graphene::net::peer_connection::timestamped_item_id</innerclass>
    <innerclass refid="structgraphene_1_1net_1_1peer__connection_1_1virtual__queued__message" prot="private">graphene::net::peer_connection::virtual_queued_message</innerclass>
      <sectiondef kind="user-defined">
      <memberdef kind="variable" id="classgraphene_1_1net_1_1peer__connection_1a170d09091433c2c32c601f15fc6a448a" prot="public" static="no" mutable="no">
        <type><ref refid="namespacegraphene_1_1net_1a557da170930e273d5a42e3541bd768e0" kindref="member">node_id_t</ref></type>
        <definition>node_id_t graphene::net::peer_connection::node_public_key</definition>
        <argsstring></argsstring>
        <name>node_public_key</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>data about the peer nodenode_public_key from the hello message, zero-initialized before we get the hello </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/net/include/graphene/net/peer_connection.hpp" line="193" column="1" bodyfile="libraries/net/include/graphene/net/peer_connection.hpp" bodystart="193" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgraphene_1_1net_1_1peer__connection_1a62c7328f33d162221ccd7e5c4038b796" prot="public" static="no" mutable="no">
        <type><ref refid="namespacegraphene_1_1net_1a557da170930e273d5a42e3541bd768e0" kindref="member">node_id_t</ref></type>
        <definition>node_id_t graphene::net::peer_connection::node_id</definition>
        <argsstring></argsstring>
        <name>node_id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>the unique identifier we&apos;ll use to refer to the node with. zero-initialized before we receive the hello message, at which time it will be filled with either the &quot;node_id&quot; from the user_data field of the hello, or if none is present it will be filled with a copy of node_public_key </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/net/include/graphene/net/peer_connection.hpp" line="198" column="1" bodyfile="libraries/net/include/graphene/net/peer_connection.hpp" bodystart="198" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgraphene_1_1net_1_1peer__connection_1a04868d3cf24327b33c6fac67ebfc691e" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t graphene::net::peer_connection::core_protocol_version</definition>
        <argsstring></argsstring>
        <name>core_protocol_version</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/net/include/graphene/net/peer_connection.hpp" line="199" column="1" bodyfile="libraries/net/include/graphene/net/peer_connection.hpp" bodystart="199" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgraphene_1_1net_1_1peer__connection_1a2f18e1d4c2c58532fc48c15735249e52" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string graphene::net::peer_connection::user_agent</definition>
        <argsstring></argsstring>
        <name>user_agent</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/net/include/graphene/net/peer_connection.hpp" line="200" column="1" bodyfile="libraries/net/include/graphene/net/peer_connection.hpp" bodystart="200" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgraphene_1_1net_1_1peer__connection_1ac8f4dce0b25b85c7a2ed6048153f8787" prot="public" static="no" mutable="no">
        <type><ref refid="classfc_1_1optional" kindref="compound">fc::optional</ref>&lt; std::string &gt;</type>
        <definition>fc::optional&lt;std::string&gt; graphene::net::peer_connection::graphene_git_revision_sha</definition>
        <argsstring></argsstring>
        <name>graphene_git_revision_sha</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/net/include/graphene/net/peer_connection.hpp" line="201" column="1" bodyfile="libraries/net/include/graphene/net/peer_connection.hpp" bodystart="201" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgraphene_1_1net_1_1peer__connection_1a192fda9217f2acc9b57ecd64e2985776" prot="public" static="no" mutable="no">
        <type><ref refid="classfc_1_1optional" kindref="compound">fc::optional</ref>&lt; <ref refid="classfc_1_1time__point__sec" kindref="compound">fc::time_point_sec</ref> &gt;</type>
        <definition>fc::optional&lt;fc::time_point_sec&gt; graphene::net::peer_connection::graphene_git_revision_unix_timestamp</definition>
        <argsstring></argsstring>
        <name>graphene_git_revision_unix_timestamp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/net/include/graphene/net/peer_connection.hpp" line="202" column="1" bodyfile="libraries/net/include/graphene/net/peer_connection.hpp" bodystart="202" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgraphene_1_1net_1_1peer__connection_1ae2bc0bc154d732c3c167567545df032e" prot="public" static="no" mutable="no">
        <type><ref refid="classfc_1_1optional" kindref="compound">fc::optional</ref>&lt; std::string &gt;</type>
        <definition>fc::optional&lt;std::string&gt; graphene::net::peer_connection::fc_git_revision_sha</definition>
        <argsstring></argsstring>
        <name>fc_git_revision_sha</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/net/include/graphene/net/peer_connection.hpp" line="203" column="1" bodyfile="libraries/net/include/graphene/net/peer_connection.hpp" bodystart="203" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgraphene_1_1net_1_1peer__connection_1a68b127b9c3479048a6d157ca11530e20" prot="public" static="no" mutable="no">
        <type><ref refid="classfc_1_1optional" kindref="compound">fc::optional</ref>&lt; <ref refid="classfc_1_1time__point__sec" kindref="compound">fc::time_point_sec</ref> &gt;</type>
        <definition>fc::optional&lt;fc::time_point_sec&gt; graphene::net::peer_connection::fc_git_revision_unix_timestamp</definition>
        <argsstring></argsstring>
        <name>fc_git_revision_unix_timestamp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/net/include/graphene/net/peer_connection.hpp" line="204" column="1" bodyfile="libraries/net/include/graphene/net/peer_connection.hpp" bodystart="204" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgraphene_1_1net_1_1peer__connection_1a3e7c91ee86c09ec20fbf52338b053409" prot="public" static="no" mutable="no">
        <type><ref refid="classfc_1_1optional" kindref="compound">fc::optional</ref>&lt; std::string &gt;</type>
        <definition>fc::optional&lt;std::string&gt; graphene::net::peer_connection::platform</definition>
        <argsstring></argsstring>
        <name>platform</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/net/include/graphene/net/peer_connection.hpp" line="205" column="1" bodyfile="libraries/net/include/graphene/net/peer_connection.hpp" bodystart="205" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgraphene_1_1net_1_1peer__connection_1ae1aceef078cdccf1255ead4085c4d6d0" prot="public" static="no" mutable="no">
        <type><ref refid="classfc_1_1optional" kindref="compound">fc::optional</ref>&lt; uint32_t &gt;</type>
        <definition>fc::optional&lt;uint32_t&gt; graphene::net::peer_connection::bitness</definition>
        <argsstring></argsstring>
        <name>bitness</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/net/include/graphene/net/peer_connection.hpp" line="206" column="1" bodyfile="libraries/net/include/graphene/net/peer_connection.hpp" bodystart="206" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgraphene_1_1net_1_1peer__connection_1a3b55b821c4296b62200b770d4f2a2c31" prot="public" static="no" mutable="no">
        <type><ref refid="classfc_1_1ip_1_1address" kindref="compound">fc::ip::address</ref></type>
        <definition>fc::ip::address graphene::net::peer_connection::inbound_address</definition>
        <argsstring></argsstring>
        <name>inbound_address</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/net/include/graphene/net/peer_connection.hpp" line="211" column="1" bodyfile="libraries/net/include/graphene/net/peer_connection.hpp" bodystart="211" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgraphene_1_1net_1_1peer__connection_1a2c73beeb2725e7ab0e8a05ca843b0fd9" prot="public" static="no" mutable="no">
        <type>uint16_t</type>
        <definition>uint16_t graphene::net::peer_connection::inbound_port</definition>
        <argsstring></argsstring>
        <name>inbound_port</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/net/include/graphene/net/peer_connection.hpp" line="212" column="1" bodyfile="libraries/net/include/graphene/net/peer_connection.hpp" bodystart="212" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgraphene_1_1net_1_1peer__connection_1a73652b2101e722f23587b84441e070f8" prot="public" static="no" mutable="no">
        <type>uint16_t</type>
        <definition>uint16_t graphene::net::peer_connection::outbound_port</definition>
        <argsstring></argsstring>
        <name>outbound_port</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/net/include/graphene/net/peer_connection.hpp" line="213" column="1" bodyfile="libraries/net/include/graphene/net/peer_connection.hpp" bodystart="213" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="variable" id="classgraphene_1_1net_1_1peer__connection_1a34dbf395eb7b5b7695944bb941891a36" prot="public" static="no" mutable="no">
        <type>boost::container::deque&lt; <ref refid="namespacegraphene_1_1net_1ae6a74bd458bbef0d6d21dd35c74c6235" kindref="member">item_hash_t</ref> &gt;</type>
        <definition>boost::container::deque&lt;item_hash_t&gt; graphene::net::peer_connection::ids_of_items_to_get</definition>
        <argsstring></argsstring>
        <name>ids_of_items_to_get</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>blockchain synchronization state data </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/net/include/graphene/net/peer_connection.hpp" line="220" column="1" bodyfile="libraries/net/include/graphene/net/peer_connection.hpp" bodystart="220" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgraphene_1_1net_1_1peer__connection_1aa6c35b1f3eae294d2d072c3600dd5131" prot="public" static="no" mutable="no">
        <type>std::set&lt; <ref refid="namespacegraphene_1_1net_1ae6a74bd458bbef0d6d21dd35c74c6235" kindref="member">item_hash_t</ref> &gt;</type>
        <definition>std::set&lt;item_hash_t&gt; graphene::net::peer_connection::ids_of_items_being_processed</definition>
        <argsstring></argsstring>
        <name>ids_of_items_being_processed</name>
        <briefdescription>
<para>id of items in the blockchain that this peer has told us about </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/net/include/graphene/net/peer_connection.hpp" line="221" column="1" bodyfile="libraries/net/include/graphene/net/peer_connection.hpp" bodystart="221" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgraphene_1_1net_1_1peer__connection_1af8fb6fdfcdf941d1c6d843b48c407d08" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t graphene::net::peer_connection::number_of_unfetched_item_ids</definition>
        <argsstring></argsstring>
        <name>number_of_unfetched_item_ids</name>
        <initializer>= 0</initializer>
        <briefdescription>
<para>list of all items this peer has offered use that we&apos;ve already handed to the client but the client hasn&apos;t finished processing </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/net/include/graphene/net/peer_connection.hpp" line="222" column="1" bodyfile="libraries/net/include/graphene/net/peer_connection.hpp" bodystart="222" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgraphene_1_1net_1_1peer__connection_1a6017b9c24ba25ccdec3cfd8c995880f5" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool graphene::net::peer_connection::peer_needs_sync_items_from_us</definition>
        <argsstring></argsstring>
        <name>peer_needs_sync_items_from_us</name>
        <initializer>= false</initializer>
        <briefdescription>
<para>number of items in the blockchain that follow ids_of_items_to_get but the peer hasn&apos;t yet told us their ids </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/net/include/graphene/net/peer_connection.hpp" line="223" column="1" bodyfile="libraries/net/include/graphene/net/peer_connection.hpp" bodystart="223" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgraphene_1_1net_1_1peer__connection_1a886bcfaa83aa153c797cdb837452fa94" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool graphene::net::peer_connection::we_need_sync_items_from_peer</definition>
        <argsstring></argsstring>
        <name>we_need_sync_items_from_peer</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/net/include/graphene/net/peer_connection.hpp" line="224" column="1" bodyfile="libraries/net/include/graphene/net/peer_connection.hpp" bodystart="224" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgraphene_1_1net_1_1peer__connection_1a1db2486ae47972391f8d3b3689d027fa" prot="public" static="no" mutable="no">
        <type><ref refid="classfc_1_1optional" kindref="compound">fc::optional</ref>&lt; boost::tuple&lt; std::vector&lt; <ref refid="namespacegraphene_1_1net_1ae6a74bd458bbef0d6d21dd35c74c6235" kindref="member">item_hash_t</ref> &gt;, <ref refid="classfc_1_1time__point" kindref="compound">fc::time_point</ref> &gt; &gt;</type>
        <definition>fc::optional&lt;boost::tuple&lt;std::vector&lt;item_hash_t&gt;, fc::time_point&gt; &gt; graphene::net::peer_connection::item_ids_requested_from_peer</definition>
        <argsstring></argsstring>
        <name>item_ids_requested_from_peer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/net/include/graphene/net/peer_connection.hpp" line="225" column="1" bodyfile="libraries/net/include/graphene/net/peer_connection.hpp" bodystart="225" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgraphene_1_1net_1_1peer__connection_1a5a21e7b0a686ea910bbd3865e6d5240a" prot="public" static="no" mutable="no">
        <type><ref refid="classfc_1_1time__point" kindref="compound">fc::time_point</ref></type>
        <definition>fc::time_point graphene::net::peer_connection::last_sync_item_received_time</definition>
        <argsstring></argsstring>
        <name>last_sync_item_received_time</name>
        <briefdescription>
<para>we check this to detect a timed-out request and in <ref refid="classgraphene_1_1net_1_1peer__connection_1ad5fa3495b64326d612adb120e7d4f5b0" kindref="member">busy()</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/net/include/graphene/net/peer_connection.hpp" line="226" column="1" bodyfile="libraries/net/include/graphene/net/peer_connection.hpp" bodystart="226" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgraphene_1_1net_1_1peer__connection_1abb4b2cdaa42ed8bf1bf53a9163b7eb50" prot="public" static="no" mutable="no">
        <type>std::set&lt; <ref refid="namespacegraphene_1_1net_1ae6a74bd458bbef0d6d21dd35c74c6235" kindref="member">item_hash_t</ref> &gt;</type>
        <definition>std::set&lt;item_hash_t&gt; graphene::net::peer_connection::sync_items_requested_from_peer</definition>
        <argsstring></argsstring>
        <name>sync_items_requested_from_peer</name>
        <briefdescription>
<para>the time we received the last sync item or the time we sent the last batch of sync item requests to this peer </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/net/include/graphene/net/peer_connection.hpp" line="227" column="1" bodyfile="libraries/net/include/graphene/net/peer_connection.hpp" bodystart="227" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgraphene_1_1net_1_1peer__connection_1a482e6437f2acb29ee0326e3e87a276b3" prot="public" static="no" mutable="no">
        <type><ref refid="namespacegraphene_1_1net_1ae6a74bd458bbef0d6d21dd35c74c6235" kindref="member">item_hash_t</ref></type>
        <definition>item_hash_t graphene::net::peer_connection::last_block_delegate_has_seen</definition>
        <argsstring></argsstring>
        <name>last_block_delegate_has_seen</name>
        <briefdescription>
<para>ids of blocks we&apos;ve requested from this peer during sync. fetch from another peer if this peer disconnects </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/net/include/graphene/net/peer_connection.hpp" line="228" column="1" bodyfile="libraries/net/include/graphene/net/peer_connection.hpp" bodystart="228" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgraphene_1_1net_1_1peer__connection_1ae99ecdf3308476fc65e9cf8acb3821d7" prot="public" static="no" mutable="no">
        <type><ref refid="classfc_1_1time__point__sec" kindref="compound">fc::time_point_sec</ref></type>
        <definition>fc::time_point_sec graphene::net::peer_connection::last_block_time_delegate_has_seen</definition>
        <argsstring></argsstring>
        <name>last_block_time_delegate_has_seen</name>
        <briefdescription>
<para>the hash of the last block this peer has told us about that the peer knows </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/net/include/graphene/net/peer_connection.hpp" line="229" column="1" bodyfile="libraries/net/include/graphene/net/peer_connection.hpp" bodystart="229" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgraphene_1_1net_1_1peer__connection_1a4f234861a14d26da41d9441b337cdbe2" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool graphene::net::peer_connection::inhibit_fetching_sync_blocks</definition>
        <argsstring></argsstring>
        <name>inhibit_fetching_sync_blocks</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/net/include/graphene/net/peer_connection.hpp" line="230" column="1" bodyfile="libraries/net/include/graphene/net/peer_connection.hpp" bodystart="230" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="typedef" id="classgraphene_1_1net_1_1peer__connection_1a3c453ce025f0fcd97c4b4290d617f576" prot="public" static="no">
        <type>boost::multi_index_container&lt; <ref refid="structgraphene_1_1net_1_1peer__connection_1_1timestamped__item__id" kindref="compound">timestamped_item_id</ref>, boost::multi_index::indexed_by&lt; boost::multi_index::hashed_unique&lt; boost::multi_index::member&lt; <ref refid="structgraphene_1_1net_1_1peer__connection_1_1timestamped__item__id" kindref="compound">timestamped_item_id</ref>, <ref refid="structgraphene_1_1net_1_1item__id" kindref="compound">item_id</ref>, &amp;<ref refid="structgraphene_1_1net_1_1peer__connection_1_1timestamped__item__id_1ac4a4a62b942bf54aa72a36c819605476" kindref="member">timestamped_item_id::item</ref> &gt;, std::hash&lt; <ref refid="structgraphene_1_1net_1_1item__id" kindref="compound">item_id</ref> &gt; &gt;, boost::multi_index::ordered_non_unique&lt; boost::multi_index::tag&lt; <ref refid="structgraphene_1_1net_1_1peer__connection_1_1timestamp__index" kindref="compound">timestamp_index</ref> &gt;, boost::multi_index::member&lt; <ref refid="structgraphene_1_1net_1_1peer__connection_1_1timestamped__item__id" kindref="compound">timestamped_item_id</ref>, <ref refid="classfc_1_1time__point__sec" kindref="compound">fc::time_point_sec</ref>, &amp;<ref refid="structgraphene_1_1net_1_1peer__connection_1_1timestamped__item__id_1a12d7dbe2948bc86b9149327ee4500f45" kindref="member">timestamped_item_id::timestamp</ref> &gt; &gt; &gt; &gt;</type>
        <definition>typedef boost::multi_index_container&lt;timestamped_item_id, boost::multi_index::indexed_by&lt;boost::multi_index::hashed_unique&lt;boost::multi_index::member&lt;timestamped_item_id, item_id, &amp;timestamped_item_id::item&gt;, std::hash&lt;item_id&gt; &gt;, boost::multi_index::ordered_non_unique&lt;boost::multi_index::tag&lt;timestamp_index&gt;, boost::multi_index::member&lt;timestamped_item_id, fc::time_point_sec, &amp;timestamped_item_id::timestamp&gt; &gt; &gt; &gt; graphene::net::peer_connection::timestamped_items_set_type</definition>
        <argsstring></argsstring>
        <name>timestamped_items_set_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/net/include/graphene/net/peer_connection.hpp" line="249" column="1" bodyfile="libraries/net/include/graphene/net/peer_connection.hpp" bodystart="249" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgraphene_1_1net_1_1peer__connection_1ac004cc3b646a35365075ec71c679e6d4" prot="public" static="no" mutable="no">
        <type><ref refid="classgraphene_1_1net_1_1peer__connection_1a3c453ce025f0fcd97c4b4290d617f576" kindref="member">timestamped_items_set_type</ref></type>
        <definition>timestamped_items_set_type graphene::net::peer_connection::inventory_peer_advertised_to_us</definition>
        <argsstring></argsstring>
        <name>inventory_peer_advertised_to_us</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/net/include/graphene/net/peer_connection.hpp" line="250" column="1" bodyfile="libraries/net/include/graphene/net/peer_connection.hpp" bodystart="250" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgraphene_1_1net_1_1peer__connection_1a5900c7867a7e8687c65a25bdcb1604ff" prot="public" static="no" mutable="no">
        <type><ref refid="classgraphene_1_1net_1_1peer__connection_1a3c453ce025f0fcd97c4b4290d617f576" kindref="member">timestamped_items_set_type</ref></type>
        <definition>timestamped_items_set_type graphene::net::peer_connection::inventory_advertised_to_peer</definition>
        <argsstring></argsstring>
        <name>inventory_advertised_to_peer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/net/include/graphene/net/peer_connection.hpp" line="251" column="1" bodyfile="libraries/net/include/graphene/net/peer_connection.hpp" bodystart="251" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgraphene_1_1net_1_1peer__connection_1a64a25e3df43e06723c9fa2c28b707e4a" prot="public" static="no" mutable="no">
        <type><ref refid="classgraphene_1_1net_1_1peer__connection_1a749ac3cdd7a9185095f3af0b1449f379" kindref="member">item_to_time_map_type</ref></type>
        <definition>item_to_time_map_type graphene::net::peer_connection::items_requested_from_peer</definition>
        <argsstring></argsstring>
        <name>items_requested_from_peer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/net/include/graphene/net/peer_connection.hpp" line="253" column="1" bodyfile="libraries/net/include/graphene/net/peer_connection.hpp" bodystart="253" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="classgraphene_1_1net_1_1peer__connection_1a91930a9842bffe62e6727f16d74c720b" prot="public" static="no">
        <name>our_connection_state</name>
        <enumvalue id="classgraphene_1_1net_1_1peer__connection_1a91930a9842bffe62e6727f16d74c720ba3a561116f0c9675a3c83d21fa365050d" prot="public">
          <name>disconnected</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classgraphene_1_1net_1_1peer__connection_1a91930a9842bffe62e6727f16d74c720ba31e739215fb4d5e4025e178ec0dfd77a" prot="public">
          <name>just_connected</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classgraphene_1_1net_1_1peer__connection_1a91930a9842bffe62e6727f16d74c720badfa1aec77a9f6b9b176bf373f9c5b736" prot="public">
          <name>connection_accepted</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classgraphene_1_1net_1_1peer__connection_1a91930a9842bffe62e6727f16d74c720bac9bcbbf3c4dd09f0ebf68a6d1c2180bf" prot="public">
          <name>connection_rejected</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/net/include/graphene/net/peer_connection.hpp" line="78" column="1" bodyfile="libraries/net/include/graphene/net/peer_connection.hpp" bodystart="77" bodyend="83"/>
      </memberdef>
      <memberdef kind="enum" id="classgraphene_1_1net_1_1peer__connection_1af1fa5c4e1ef1bcad5f3e0c1743786eff" prot="public" static="no">
        <name>their_connection_state</name>
        <enumvalue id="classgraphene_1_1net_1_1peer__connection_1af1fa5c4e1ef1bcad5f3e0c1743786effa3a561116f0c9675a3c83d21fa365050d" prot="public">
          <name>disconnected</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classgraphene_1_1net_1_1peer__connection_1af1fa5c4e1ef1bcad5f3e0c1743786effa31e739215fb4d5e4025e178ec0dfd77a" prot="public">
          <name>just_connected</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classgraphene_1_1net_1_1peer__connection_1af1fa5c4e1ef1bcad5f3e0c1743786effadfa1aec77a9f6b9b176bf373f9c5b736" prot="public">
          <name>connection_accepted</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classgraphene_1_1net_1_1peer__connection_1af1fa5c4e1ef1bcad5f3e0c1743786effac9bcbbf3c4dd09f0ebf68a6d1c2180bf" prot="public">
          <name>connection_rejected</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/net/include/graphene/net/peer_connection.hpp" line="85" column="1" bodyfile="libraries/net/include/graphene/net/peer_connection.hpp" bodystart="84" bodyend="90"/>
      </memberdef>
      <memberdef kind="enum" id="classgraphene_1_1net_1_1peer__connection_1a1fc3e7d2bae4008c4c67164995f8c560" prot="public" static="no">
        <name>connection_negotiation_status</name>
        <enumvalue id="classgraphene_1_1net_1_1peer__connection_1a1fc3e7d2bae4008c4c67164995f8c560a3a561116f0c9675a3c83d21fa365050d" prot="public">
          <name>disconnected</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classgraphene_1_1net_1_1peer__connection_1a1fc3e7d2bae4008c4c67164995f8c560a9a27316fbc5ef38b2a19c202dbdc29b7" prot="public">
          <name>connecting</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classgraphene_1_1net_1_1peer__connection_1a1fc3e7d2bae4008c4c67164995f8c560a06aa6fa8bdc2078e7e1bd903e70c8f6a" prot="public">
          <name>connected</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classgraphene_1_1net_1_1peer__connection_1a1fc3e7d2bae4008c4c67164995f8c560ae15b2f0da0fd5e33b038d1ace601b574" prot="public">
          <name>accepting</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classgraphene_1_1net_1_1peer__connection_1a1fc3e7d2bae4008c4c67164995f8c560a3e4d891a5df3d6d0d7dd9432a1bc6470" prot="public">
          <name>accepted</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classgraphene_1_1net_1_1peer__connection_1a1fc3e7d2bae4008c4c67164995f8c560a3aa827ff693bb0ae5aa93211df032651" prot="public">
          <name>hello_sent</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classgraphene_1_1net_1_1peer__connection_1a1fc3e7d2bae4008c4c67164995f8c560aa3cdbe088a7eb477120e0a7b60221290" prot="public">
          <name>peer_connection_accepted</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classgraphene_1_1net_1_1peer__connection_1a1fc3e7d2bae4008c4c67164995f8c560a6116ae52be83a00a8a5e13d557ee63b4" prot="public">
          <name>peer_connection_rejected</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classgraphene_1_1net_1_1peer__connection_1a1fc3e7d2bae4008c4c67164995f8c560abb867853dc1f332c3c33c0b983d055ea" prot="public">
          <name>negotiation_complete</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classgraphene_1_1net_1_1peer__connection_1a1fc3e7d2bae4008c4c67164995f8c560a3b38bec18c8edcf71c5f25e5f4fee0fc" prot="public">
          <name>closing</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classgraphene_1_1net_1_1peer__connection_1a1fc3e7d2bae4008c4c67164995f8c560a349e686330723975502e9ef4f939a5ac" prot="public">
          <name>closed</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/net/include/graphene/net/peer_connection.hpp" line="92" column="1" bodyfile="libraries/net/include/graphene/net/peer_connection.hpp" bodystart="91" bodyend="104"/>
      </memberdef>
      <memberdef kind="typedef" id="classgraphene_1_1net_1_1peer__connection_1a749ac3cdd7a9185095f3af0b1449f379" prot="public" static="no">
        <type>std::unordered_map&lt; <ref refid="structgraphene_1_1net_1_1item__id" kindref="compound">item_id</ref>, <ref refid="classfc_1_1time__point" kindref="compound">fc::time_point</ref> &gt;</type>
        <definition>typedef std::unordered_map&lt;item_id, fc::time_point&gt; graphene::net::peer_connection::item_to_time_map_type</definition>
        <argsstring></argsstring>
        <name>item_to_time_map_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/net/include/graphene/net/peer_connection.hpp" line="216" column="1" bodyfile="libraries/net/include/graphene/net/peer_connection.hpp" bodystart="216" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classgraphene_1_1net_1_1peer__connection_1a0e4da88f650a48944d0eb5de7bd9ff27" prot="private" static="no" mutable="no">
        <type><ref refid="classgraphene_1_1net_1_1peer__connection__delegate" kindref="compound">peer_connection_delegate</ref> *</type>
        <definition>peer_connection_delegate* graphene::net::peer_connection::_node</definition>
        <argsstring></argsstring>
        <name>_node</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/net/include/graphene/net/peer_connection.hpp" line="106" column="1" bodyfile="libraries/net/include/graphene/net/peer_connection.hpp" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgraphene_1_1net_1_1peer__connection_1a12ff32ee51ea240164cc1801bd0d01ee" prot="private" static="no" mutable="no">
        <type><ref refid="classfc_1_1optional" kindref="compound">fc::optional</ref>&lt; <ref refid="classfc_1_1ip_1_1endpoint" kindref="compound">fc::ip::endpoint</ref> &gt;</type>
        <definition>fc::optional&lt;fc::ip::endpoint&gt; graphene::net::peer_connection::_remote_endpoint</definition>
        <argsstring></argsstring>
        <name>_remote_endpoint</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/net/include/graphene/net/peer_connection.hpp" line="107" column="1" bodyfile="libraries/net/include/graphene/net/peer_connection.hpp" bodystart="107" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgraphene_1_1net_1_1peer__connection_1a959cc588ef786b5b5b24e6c187fd21b0" prot="private" static="no" mutable="no">
        <type><ref refid="classgraphene_1_1net_1_1message__oriented__connection" kindref="compound">message_oriented_connection</ref></type>
        <definition>message_oriented_connection graphene::net::peer_connection::_message_connection</definition>
        <argsstring></argsstring>
        <name>_message_connection</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/net/include/graphene/net/peer_connection.hpp" line="108" column="1" bodyfile="libraries/net/include/graphene/net/peer_connection.hpp" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgraphene_1_1net_1_1peer__connection_1ad7a3beaa2fbe99ccf5aa478353358660" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t graphene::net::peer_connection::_total_queued_messages_size</definition>
        <argsstring></argsstring>
        <name>_total_queued_messages_size</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/net/include/graphene/net/peer_connection.hpp" line="166" column="1" bodyfile="libraries/net/include/graphene/net/peer_connection.hpp" bodystart="166" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgraphene_1_1net_1_1peer__connection_1a20f76df338d4a417a4dcbb624a49798c" prot="private" static="no" mutable="no">
        <type>std::queue&lt; std::unique_ptr&lt; queued_message &gt;, std::list&lt; std::unique_ptr&lt; queued_message &gt; &gt; &gt;</type>
        <definition>std::queue&lt;std::unique_ptr&lt;queued_message&gt;, std::list&lt;std::unique_ptr&lt;queued_message&gt; &gt; &gt; graphene::net::peer_connection::_queued_messages</definition>
        <argsstring></argsstring>
        <name>_queued_messages</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/net/include/graphene/net/peer_connection.hpp" line="167" column="1" bodyfile="libraries/net/include/graphene/net/peer_connection.hpp" bodystart="167" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgraphene_1_1net_1_1peer__connection_1a9e196ccbccf2f5e845e00f7dbf19a728" prot="private" static="no" mutable="no">
        <type><ref refid="classfc_1_1future" kindref="compound">fc::future</ref>&lt; void &gt;</type>
        <definition>fc::future&lt;void&gt; graphene::net::peer_connection::_send_queued_messages_done</definition>
        <argsstring></argsstring>
        <name>_send_queued_messages_done</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/net/include/graphene/net/peer_connection.hpp" line="168" column="1" bodyfile="libraries/net/include/graphene/net/peer_connection.hpp" bodystart="168" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgraphene_1_1net_1_1peer__connection_1a6c4a6abbf05af138da8537a6be78cf69" prot="private" static="no" mutable="no">
        <type><ref refid="classfc_1_1thread" kindref="compound">fc::thread</ref> *</type>
        <definition>fc::thread* graphene::net::peer_connection::_thread</definition>
        <argsstring></argsstring>
        <name>_thread</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/net/include/graphene/net/peer_connection.hpp" line="267" column="1" bodyfile="libraries/net/include/graphene/net/peer_connection.hpp" bodystart="267" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgraphene_1_1net_1_1peer__connection_1a98546e9c90cb5e6762ec481c866abe6a" prot="private" static="no" mutable="no">
        <type>unsigned</type>
        <definition>unsigned graphene::net::peer_connection::_send_message_queue_tasks_running</definition>
        <argsstring></argsstring>
        <name>_send_message_queue_tasks_running</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/net/include/graphene/net/peer_connection.hpp" line="268" column="1" bodyfile="libraries/net/include/graphene/net/peer_connection.hpp" bodystart="268" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgraphene_1_1net_1_1peer__connection_1ac2c1f52c490e29af2812ba3f7a961a0f" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool graphene::net::peer_connection::_currently_handling_message</definition>
        <argsstring></argsstring>
        <name>_currently_handling_message</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/net/include/graphene/net/peer_connection.hpp" line="270" column="1" bodyfile="libraries/net/include/graphene/net/peer_connection.hpp" bodystart="270" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classgraphene_1_1net_1_1peer__connection_1a2fffa50d9cb428e8df165fef2d85de4a" prot="public" static="no" mutable="no">
        <type><ref refid="classfc_1_1time__point" kindref="compound">fc::time_point</ref></type>
        <definition>fc::time_point graphene::net::peer_connection::connection_initiation_time</definition>
        <argsstring></argsstring>
        <name>connection_initiation_time</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/net/include/graphene/net/peer_connection.hpp" line="170" column="1" bodyfile="libraries/net/include/graphene/net/peer_connection.hpp" bodystart="170" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgraphene_1_1net_1_1peer__connection_1a115a3748aef39a1dd34a6bae541b6013" prot="public" static="no" mutable="no">
        <type><ref refid="classfc_1_1time__point" kindref="compound">fc::time_point</ref></type>
        <definition>fc::time_point graphene::net::peer_connection::connection_closed_time</definition>
        <argsstring></argsstring>
        <name>connection_closed_time</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/net/include/graphene/net/peer_connection.hpp" line="171" column="1" bodyfile="libraries/net/include/graphene/net/peer_connection.hpp" bodystart="171" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgraphene_1_1net_1_1peer__connection_1a5ca734dc0a0a7effb3973719986c66d8" prot="public" static="no" mutable="no">
        <type><ref refid="classfc_1_1time__point" kindref="compound">fc::time_point</ref></type>
        <definition>fc::time_point graphene::net::peer_connection::connection_terminated_time</definition>
        <argsstring></argsstring>
        <name>connection_terminated_time</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/net/include/graphene/net/peer_connection.hpp" line="172" column="1" bodyfile="libraries/net/include/graphene/net/peer_connection.hpp" bodystart="172" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgraphene_1_1net_1_1peer__connection_1afa940df579d2c4dfcc3678c1a57a931b" prot="public" static="no" mutable="no">
        <type><ref refid="namespacegraphene_1_1net_1ad0fa02c07eb80a168befc6c5931d6ccc" kindref="member">peer_connection_direction</ref></type>
        <definition>peer_connection_direction graphene::net::peer_connection::direction</definition>
        <argsstring></argsstring>
        <name>direction</name>
        <initializer>= <ref refid="namespacegraphene_1_1net_1ad0fa02c07eb80a168befc6c5931d6cccaad921d60486366258809553a3db49a4a" kindref="member">peer_connection_direction::unknown</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/net/include/graphene/net/peer_connection.hpp" line="173" column="1" bodyfile="libraries/net/include/graphene/net/peer_connection.hpp" bodystart="173" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgraphene_1_1net_1_1peer__connection_1aea47877a167f7e02a932da3fa796eaae" prot="public" static="no" mutable="no">
        <type><ref refid="namespacegraphene_1_1net_1a9a91847dec341192d7a7ae1104cb4aa2" kindref="member">firewalled_state</ref></type>
        <definition>firewalled_state graphene::net::peer_connection::is_firewalled</definition>
        <argsstring></argsstring>
        <name>is_firewalled</name>
        <initializer>= <ref refid="namespacegraphene_1_1net_1ad0fa02c07eb80a168befc6c5931d6cccaad921d60486366258809553a3db49a4a" kindref="member">firewalled_state::unknown</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/net/include/graphene/net/peer_connection.hpp" line="175" column="1" bodyfile="libraries/net/include/graphene/net/peer_connection.hpp" bodystart="175" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgraphene_1_1net_1_1peer__connection_1a95a50dfae5659c244c89deb246c62d17" prot="public" static="no" mutable="no">
        <type><ref refid="classfc_1_1microseconds" kindref="compound">fc::microseconds</ref></type>
        <definition>fc::microseconds graphene::net::peer_connection::clock_offset</definition>
        <argsstring></argsstring>
        <name>clock_offset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/net/include/graphene/net/peer_connection.hpp" line="176" column="1" bodyfile="libraries/net/include/graphene/net/peer_connection.hpp" bodystart="176" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgraphene_1_1net_1_1peer__connection_1aff1a611955fa9701e5a04d5b520753f7" prot="public" static="no" mutable="no">
        <type><ref refid="classfc_1_1microseconds" kindref="compound">fc::microseconds</ref></type>
        <definition>fc::microseconds graphene::net::peer_connection::round_trip_delay</definition>
        <argsstring></argsstring>
        <name>round_trip_delay</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/net/include/graphene/net/peer_connection.hpp" line="177" column="1" bodyfile="libraries/net/include/graphene/net/peer_connection.hpp" bodystart="177" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgraphene_1_1net_1_1peer__connection_1acb5aedd975e107b5f4796862ee4f2d1b" prot="public" static="no" mutable="no">
        <type><ref refid="classgraphene_1_1net_1_1peer__connection_1a91930a9842bffe62e6727f16d74c720b" kindref="member">our_connection_state</ref></type>
        <definition>our_connection_state graphene::net::peer_connection::our_state</definition>
        <argsstring></argsstring>
        <name>our_state</name>
        <initializer>= <ref refid="classgraphene_1_1net_1_1peer__connection_1a91930a9842bffe62e6727f16d74c720ba3a561116f0c9675a3c83d21fa365050d" kindref="member">our_connection_state::disconnected</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/net/include/graphene/net/peer_connection.hpp" line="179" column="1" bodyfile="libraries/net/include/graphene/net/peer_connection.hpp" bodystart="179" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgraphene_1_1net_1_1peer__connection_1acabb4963ac7aea86cd270c19cc36e55a" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool graphene::net::peer_connection::they_have_requested_close</definition>
        <argsstring></argsstring>
        <name>they_have_requested_close</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/net/include/graphene/net/peer_connection.hpp" line="180" column="1" bodyfile="libraries/net/include/graphene/net/peer_connection.hpp" bodystart="180" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgraphene_1_1net_1_1peer__connection_1ad38366eeae4e9ef56b2ff76323a9703b" prot="public" static="no" mutable="no">
        <type><ref refid="classgraphene_1_1net_1_1peer__connection_1af1fa5c4e1ef1bcad5f3e0c1743786eff" kindref="member">their_connection_state</ref></type>
        <definition>their_connection_state graphene::net::peer_connection::their_state</definition>
        <argsstring></argsstring>
        <name>their_state</name>
        <initializer>= <ref refid="classgraphene_1_1net_1_1peer__connection_1af1fa5c4e1ef1bcad5f3e0c1743786effa3a561116f0c9675a3c83d21fa365050d" kindref="member">their_connection_state::disconnected</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/net/include/graphene/net/peer_connection.hpp" line="181" column="1" bodyfile="libraries/net/include/graphene/net/peer_connection.hpp" bodystart="181" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgraphene_1_1net_1_1peer__connection_1ae157b64b6f41e82a4233286a9e5aa2a2" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool graphene::net::peer_connection::we_have_requested_close</definition>
        <argsstring></argsstring>
        <name>we_have_requested_close</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/net/include/graphene/net/peer_connection.hpp" line="182" column="1" bodyfile="libraries/net/include/graphene/net/peer_connection.hpp" bodystart="182" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgraphene_1_1net_1_1peer__connection_1a8661d42c3ba7289f0a69c1cc5f2770c7" prot="public" static="no" mutable="no">
        <type><ref refid="classgraphene_1_1net_1_1peer__connection_1a1fc3e7d2bae4008c4c67164995f8c560" kindref="member">connection_negotiation_status</ref></type>
        <definition>connection_negotiation_status graphene::net::peer_connection::negotiation_status</definition>
        <argsstring></argsstring>
        <name>negotiation_status</name>
        <initializer>= <ref refid="classgraphene_1_1net_1_1peer__connection_1a1fc3e7d2bae4008c4c67164995f8c560a3a561116f0c9675a3c83d21fa365050d" kindref="member">connection_negotiation_status::disconnected</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/net/include/graphene/net/peer_connection.hpp" line="184" column="1" bodyfile="libraries/net/include/graphene/net/peer_connection.hpp" bodystart="184" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgraphene_1_1net_1_1peer__connection_1a8b5a98d59f97f02aab7f085c85154da4" prot="public" static="no" mutable="no">
        <type><ref refid="namespacefc_1a16f272a3d05d2641cb2bf67bac4673dc" kindref="member">fc::oexception</ref></type>
        <definition>fc::oexception graphene::net::peer_connection::connection_closed_error</definition>
        <argsstring></argsstring>
        <name>connection_closed_error</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/net/include/graphene/net/peer_connection.hpp" line="185" column="1" bodyfile="libraries/net/include/graphene/net/peer_connection.hpp" bodystart="185" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgraphene_1_1net_1_1peer__connection_1a898660052a57f381ebe530a44481282b" prot="public" static="no" mutable="no">
        <type><ref refid="classfc_1_1time__point" kindref="compound">fc::time_point</ref></type>
        <definition>fc::time_point graphene::net::peer_connection::transaction_fetching_inhibited_until</definition>
        <argsstring></argsstring>
        <name>transaction_fetching_inhibited_until</name>
        <briefdescription>
<para>items we&apos;ve requested from this peer during normal operation. fetch from another peer if this peer disconnects </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/net/include/graphene/net/peer_connection.hpp" line="258" column="1" bodyfile="libraries/net/include/graphene/net/peer_connection.hpp" bodystart="258" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgraphene_1_1net_1_1peer__connection_1ad3906b5c828ae801c22d289189b99425" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t graphene::net::peer_connection::last_known_fork_block_number</definition>
        <argsstring></argsstring>
        <name>last_known_fork_block_number</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/net/include/graphene/net/peer_connection.hpp" line="260" column="1" bodyfile="libraries/net/include/graphene/net/peer_connection.hpp" bodystart="260" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgraphene_1_1net_1_1peer__connection_1ab3d11d38d80f9da30e9c8b8cd54b394e" prot="public" static="no" mutable="no">
        <type><ref refid="classfc_1_1future" kindref="compound">fc::future</ref>&lt; void &gt;</type>
        <definition>fc::future&lt;void&gt; graphene::net::peer_connection::accept_or_connect_task_done</definition>
        <argsstring></argsstring>
        <name>accept_or_connect_task_done</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/net/include/graphene/net/peer_connection.hpp" line="262" column="1" bodyfile="libraries/net/include/graphene/net/peer_connection.hpp" bodystart="262" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgraphene_1_1net_1_1peer__connection_1a9d019cb640d7aee423ff0679192ae2ef" prot="public" static="no" mutable="no">
        <type><ref refid="structgraphene_1_1net_1_1firewall__check__state__data" kindref="compound">firewall_check_state_data</ref> *</type>
        <definition>firewall_check_state_data* graphene::net::peer_connection::firewall_check_state</definition>
        <argsstring></argsstring>
        <name>firewall_check_state</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/net/include/graphene/net/peer_connection.hpp" line="264" column="1" bodyfile="libraries/net/include/graphene/net/peer_connection.hpp" bodystart="264" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classgraphene_1_1net_1_1peer__connection_1afb2e0dc62da3a264459bdfb791445435" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classfc_1_1time__point" kindref="compound">fc::time_point</ref></type>
        <definition>fc::time_point graphene::net::peer_connection::get_connection_time</definition>
        <argsstring>() const</argsstring>
        <name>get_connection_time</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/net/include/graphene/net/peer_connection.hpp" line="187" column="1" bodyfile="libraries/net/include/graphene/net/peer_connection.hpp" bodystart="187" bodyend="187"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1net_1_1peer__connection_1a83ea1b6fff6d03711990f937a788b2d9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classfc_1_1time__point" kindref="compound">fc::time_point</ref></type>
        <definition>fc::time_point graphene::net::peer_connection::get_connection_terminated_time</definition>
        <argsstring>() const</argsstring>
        <name>get_connection_terminated_time</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/net/include/graphene/net/peer_connection.hpp" line="188" column="1" bodyfile="libraries/net/include/graphene/net/peer_connection.hpp" bodystart="188" bodyend="188"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1net_1_1peer__connection_1aa2b19de59dfe0ef5e08e7b566410ab32" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>graphene::net::peer_connection::~peer_connection</definition>
        <argsstring>()</argsstring>
        <name>~peer_connection</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/net/include/graphene/net/peer_connection.hpp" line="275" column="1" bodyfile="libraries/net/peer_connection.cpp" bodystart="182" bodyend="186"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1net_1_1peer__connection_1aa70184ea95d9ee7e2e1521bb0c250304" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classfc_1_1tcp__socket" kindref="compound">fc::tcp_socket</ref> &amp;</type>
        <definition>fc::tcp_socket &amp; graphene::net::peer_connection::get_socket</definition>
        <argsstring>()</argsstring>
        <name>get_socket</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/net/include/graphene/net/peer_connection.hpp" line="277" column="1" bodyfile="libraries/net/peer_connection.cpp" bodystart="188" bodyend="192"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1net_1_1peer__connection_1a9d5adaa64534ad04cdb80a17c47de28a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::net::peer_connection::accept_connection</definition>
        <argsstring>()</argsstring>
        <name>accept_connection</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/net/include/graphene/net/peer_connection.hpp" line="278" column="1" bodyfile="libraries/net/peer_connection.cpp" bodystart="194" bodyend="229"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1net_1_1peer__connection_1a4b8f6e10e54cfcc48c6acd7718435d08" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::net::peer_connection::connect_to</definition>
        <argsstring>(const fc::ip::endpoint &amp;remote_endpoint, fc::optional&lt; fc::ip::endpoint &gt; local_endpoint=fc::optional&lt; fc::ip::endpoint &gt;())</argsstring>
        <name>connect_to</name>
        <param>
          <type>const <ref refid="classfc_1_1ip_1_1endpoint" kindref="compound">fc::ip::endpoint</ref> &amp;</type>
          <declname>remote_endpoint</declname>
        </param>
        <param>
          <type><ref refid="classfc_1_1optional" kindref="compound">fc::optional</ref>&lt; <ref refid="classfc_1_1ip_1_1endpoint" kindref="compound">fc::ip::endpoint</ref> &gt;</type>
          <declname>local_endpoint</declname>
          <defval><ref refid="classfc_1_1optional" kindref="compound">fc::optional</ref>&lt; <ref refid="classfc_1_1ip_1_1endpoint" kindref="compound">fc::ip::endpoint</ref> &gt;()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/net/include/graphene/net/peer_connection.hpp" line="279" column="1" bodyfile="libraries/net/peer_connection.cpp" bodystart="231" bodyend="272"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1net_1_1peer__connection_1a8871e3e1d4a2fc425d232e1bd0956c29" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void graphene::net::peer_connection::on_message</definition>
        <argsstring>(message_oriented_connection *originating_connection, const message &amp;received_message) override</argsstring>
        <name>on_message</name>
        <reimplements refid="classgraphene_1_1net_1_1message__oriented__connection__delegate_1a6aa4b95d232e1af0be578e3b5796d73a">on_message</reimplements>
        <param>
          <type><ref refid="classgraphene_1_1net_1_1message__oriented__connection" kindref="compound">message_oriented_connection</ref> *</type>
          <declname>originating_connection</declname>
        </param>
        <param>
          <type>const <ref refid="structgraphene_1_1net_1_1message" kindref="compound">message</ref> &amp;</type>
          <declname>received_message</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/net/include/graphene/net/peer_connection.hpp" line="281" column="1" bodyfile="libraries/net/peer_connection.cpp" bodystart="274" bodyend="282"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1net_1_1peer__connection_1a2c13af90dc86a5940694c1a1197e7281" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void graphene::net::peer_connection::on_connection_closed</definition>
        <argsstring>(message_oriented_connection *originating_connection) override</argsstring>
        <name>on_connection_closed</name>
        <reimplements refid="classgraphene_1_1net_1_1message__oriented__connection__delegate_1a04d990b17b898a3562a5ca77738eaa67">on_connection_closed</reimplements>
        <param>
          <type><ref refid="classgraphene_1_1net_1_1message__oriented__connection" kindref="compound">message_oriented_connection</ref> *</type>
          <declname>originating_connection</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/net/include/graphene/net/peer_connection.hpp" line="282" column="1" bodyfile="libraries/net/peer_connection.cpp" bodystart="284" bodyend="289"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1net_1_1peer__connection_1a35f68aac36feecf9f96e0d9f89334b8f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::net::peer_connection::send_queueable_message</definition>
        <argsstring>(std::unique_ptr&lt; queued_message &gt; &amp;&amp;message_to_send)</argsstring>
        <name>send_queueable_message</name>
        <param>
          <type>std::unique_ptr&lt; queued_message &gt; &amp;&amp;</type>
          <declname>message_to_send</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/net/include/graphene/net/peer_connection.hpp" line="284" column="1" bodyfile="libraries/net/peer_connection.cpp" bodystart="347" bodyend="377"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1net_1_1peer__connection_1ae0c5cd45659c572be805f125d70e5e5a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::net::peer_connection::send_message</definition>
        <argsstring>(const message &amp;message_to_send, size_t message_send_time_field_offset=(size_t) -1)</argsstring>
        <name>send_message</name>
        <param>
          <type>const <ref refid="structgraphene_1_1net_1_1message" kindref="compound">message</ref> &amp;</type>
          <declname>message_to_send</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>message_send_time_field_offset</declname>
          <defval>(size_t) -1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/net/include/graphene/net/peer_connection.hpp" line="285" column="1" bodyfile="libraries/net/peer_connection.cpp" bodystart="379" bodyend="387"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1net_1_1peer__connection_1a4e133d3af48d11f1e03c728d95b1dea7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::net::peer_connection::send_item</definition>
        <argsstring>(const item_id &amp;item_to_send)</argsstring>
        <name>send_item</name>
        <param>
          <type>const <ref refid="structgraphene_1_1net_1_1item__id" kindref="compound">item_id</ref> &amp;</type>
          <declname>item_to_send</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/net/include/graphene/net/peer_connection.hpp" line="286" column="1" bodyfile="libraries/net/peer_connection.cpp" bodystart="389" bodyend="396"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1net_1_1peer__connection_1a528eaf4d7a1aae25374faa3be3d9b8b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::net::peer_connection::close_connection</definition>
        <argsstring>()</argsstring>
        <name>close_connection</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/net/include/graphene/net/peer_connection.hpp" line="287" column="1" bodyfile="libraries/net/peer_connection.cpp" bodystart="398" bodyend="405"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1net_1_1peer__connection_1ad44c11c9cfb7b0976b68fe9002946fc8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::net::peer_connection::destroy_connection</definition>
        <argsstring>()</argsstring>
        <name>destroy_connection</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/net/include/graphene/net/peer_connection.hpp" line="288" column="1" bodyfile="libraries/net/peer_connection.cpp" bodystart="407" bodyend="412"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1net_1_1peer__connection_1a3fec81daff2c3fa60ce57db27330b5c2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t graphene::net::peer_connection::get_total_bytes_sent</definition>
        <argsstring>() const</argsstring>
        <name>get_total_bytes_sent</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/net/include/graphene/net/peer_connection.hpp" line="290" column="1" bodyfile="libraries/net/peer_connection.cpp" bodystart="414" bodyend="418"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1net_1_1peer__connection_1af8a224b60f0ac58a3c915f759955ac67" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t graphene::net::peer_connection::get_total_bytes_received</definition>
        <argsstring>() const</argsstring>
        <name>get_total_bytes_received</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/net/include/graphene/net/peer_connection.hpp" line="291" column="1" bodyfile="libraries/net/peer_connection.cpp" bodystart="420" bodyend="424"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1net_1_1peer__connection_1ad7b20b455c09b7e16e7f90a624cf74ac" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classfc_1_1time__point" kindref="compound">fc::time_point</ref></type>
        <definition>fc::time_point graphene::net::peer_connection::get_last_message_sent_time</definition>
        <argsstring>() const</argsstring>
        <name>get_last_message_sent_time</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/net/include/graphene/net/peer_connection.hpp" line="293" column="1" bodyfile="libraries/net/peer_connection.cpp" bodystart="426" bodyend="430"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1net_1_1peer__connection_1aa1c8c167347a20d16c1e62744fe268b6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classfc_1_1time__point" kindref="compound">fc::time_point</ref></type>
        <definition>fc::time_point graphene::net::peer_connection::get_last_message_received_time</definition>
        <argsstring>() const</argsstring>
        <name>get_last_message_received_time</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/net/include/graphene/net/peer_connection.hpp" line="294" column="1" bodyfile="libraries/net/peer_connection.cpp" bodystart="432" bodyend="436"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1net_1_1peer__connection_1ab61398cf17d6cf388622356026de9fcf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classfc_1_1optional" kindref="compound">fc::optional</ref>&lt; <ref refid="classfc_1_1ip_1_1endpoint" kindref="compound">fc::ip::endpoint</ref> &gt;</type>
        <definition>fc::optional&lt; fc::ip::endpoint &gt; graphene::net::peer_connection::get_remote_endpoint</definition>
        <argsstring>()</argsstring>
        <name>get_remote_endpoint</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/net/include/graphene/net/peer_connection.hpp" line="296" column="1" bodyfile="libraries/net/peer_connection.cpp" bodystart="438" bodyend="442"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1net_1_1peer__connection_1a8e1dfb1d2031eccac5fd4a469acb52cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classfc_1_1ip_1_1endpoint" kindref="compound">fc::ip::endpoint</ref></type>
        <definition>fc::ip::endpoint graphene::net::peer_connection::get_local_endpoint</definition>
        <argsstring>()</argsstring>
        <name>get_local_endpoint</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/net/include/graphene/net/peer_connection.hpp" line="297" column="1" bodyfile="libraries/net/peer_connection.cpp" bodystart="443" bodyend="447"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1net_1_1peer__connection_1abb1aa66fb27ab0e3be4a8cb6ddc475fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::net::peer_connection::set_remote_endpoint</definition>
        <argsstring>(fc::optional&lt; fc::ip::endpoint &gt; new_remote_endpoint)</argsstring>
        <name>set_remote_endpoint</name>
        <param>
          <type><ref refid="classfc_1_1optional" kindref="compound">fc::optional</ref>&lt; <ref refid="classfc_1_1ip_1_1endpoint" kindref="compound">fc::ip::endpoint</ref> &gt;</type>
          <declname>new_remote_endpoint</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/net/include/graphene/net/peer_connection.hpp" line="298" column="1" bodyfile="libraries/net/peer_connection.cpp" bodystart="449" bodyend="453"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1net_1_1peer__connection_1ad5fa3495b64326d612adb120e7d4f5b0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool graphene::net::peer_connection::busy</definition>
        <argsstring>() const</argsstring>
        <name>busy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/net/include/graphene/net/peer_connection.hpp" line="300" column="1" bodyfile="libraries/net/peer_connection.cpp" bodystart="455" bodyend="459"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1net_1_1peer__connection_1a354f91d0ba7478a7108b1612dc26705c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool graphene::net::peer_connection::idle</definition>
        <argsstring>() const</argsstring>
        <name>idle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/net/include/graphene/net/peer_connection.hpp" line="301" column="1" bodyfile="libraries/net/peer_connection.cpp" bodystart="461" bodyend="465"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1net_1_1peer__connection_1aad602bff9d9c82ceaef90bc30da272c9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool graphene::net::peer_connection::is_currently_handling_message</definition>
        <argsstring>() const</argsstring>
        <name>is_currently_handling_message</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/net/include/graphene/net/peer_connection.hpp" line="302" column="1" bodyfile="libraries/net/peer_connection.cpp" bodystart="467" bodyend="471"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1net_1_1peer__connection_1ac8284a7d8adfce259afbd5df79c4f59b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool graphene::net::peer_connection::is_transaction_fetching_inhibited</definition>
        <argsstring>() const</argsstring>
        <name>is_transaction_fetching_inhibited</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/net/include/graphene/net/peer_connection.hpp" line="304" column="1" bodyfile="libraries/net/peer_connection.cpp" bodystart="473" bodyend="477"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1net_1_1peer__connection_1af47a18ef8d93a40f5f3cd010f6aadb4c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classfc_1_1sha512" kindref="compound">fc::sha512</ref></type>
        <definition>fc::sha512 graphene::net::peer_connection::get_shared_secret</definition>
        <argsstring>() const</argsstring>
        <name>get_shared_secret</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/net/include/graphene/net/peer_connection.hpp" line="305" column="1" bodyfile="libraries/net/peer_connection.cpp" bodystart="479" bodyend="483"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1net_1_1peer__connection_1add398515c263a899eeb1266c951f6628" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::net::peer_connection::clear_old_inventory</definition>
        <argsstring>()</argsstring>
        <name>clear_old_inventory</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/net/include/graphene/net/peer_connection.hpp" line="306" column="1" bodyfile="libraries/net/peer_connection.cpp" bodystart="485" bodyend="505"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1net_1_1peer__connection_1a5976f205346898d279f97debf7c7181f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool graphene::net::peer_connection::is_inventory_advertised_to_us_list_full_for_transactions</definition>
        <argsstring>() const</argsstring>
        <name>is_inventory_advertised_to_us_list_full_for_transactions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/net/include/graphene/net/peer_connection.hpp" line="307" column="1" bodyfile="libraries/net/peer_connection.cpp" bodystart="508" bodyend="512"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1net_1_1peer__connection_1a118f70b619af2102c78f3fc485efec9f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool graphene::net::peer_connection::is_inventory_advertised_to_us_list_full</definition>
        <argsstring>() const</argsstring>
        <name>is_inventory_advertised_to_us_list_full</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/net/include/graphene/net/peer_connection.hpp" line="308" column="1" bodyfile="libraries/net/peer_connection.cpp" bodystart="514" bodyend="523"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1net_1_1peer__connection_1afcaed96cedc4e001c084593f17f2df7e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool graphene::net::peer_connection::performing_firewall_check</definition>
        <argsstring>() const</argsstring>
        <name>performing_firewall_check</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/net/include/graphene/net/peer_connection.hpp" line="309" column="1" bodyfile="libraries/net/peer_connection.cpp" bodystart="525" bodyend="528"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1net_1_1peer__connection_1a7d341147c197f40a47509aff1707a959" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classfc_1_1optional" kindref="compound">fc::optional</ref>&lt; <ref refid="classfc_1_1ip_1_1endpoint" kindref="compound">fc::ip::endpoint</ref> &gt;</type>
        <definition>fc::optional&lt; fc::ip::endpoint &gt; graphene::net::peer_connection::get_endpoint_for_connecting</definition>
        <argsstring>() const</argsstring>
        <name>get_endpoint_for_connecting</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/net/include/graphene/net/peer_connection.hpp" line="310" column="1" bodyfile="libraries/net/peer_connection.cpp" bodystart="530" bodyend="535"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classgraphene_1_1net_1_1peer__connection_1a9279ba8b94f89d4db5e5bbc934750a53" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>graphene::net::peer_connection::peer_connection</definition>
        <argsstring>(peer_connection_delegate *delegate)</argsstring>
        <name>peer_connection</name>
        <param>
          <type><ref refid="classgraphene_1_1net_1_1peer__connection__delegate" kindref="compound">peer_connection_delegate</ref> *</type>
          <declname>delegate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/net/include/graphene/net/peer_connection.hpp" line="271" column="1" bodyfile="libraries/net/peer_connection.cpp" bodystart="74" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1net_1_1peer__connection_1a62baa52eacb5210fe8fa823b36604d20" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::net::peer_connection::destroy</definition>
        <argsstring>()</argsstring>
        <name>destroy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/net/include/graphene/net/peer_connection.hpp" line="272" column="1" bodyfile="libraries/net/peer_connection.cpp" bodystart="120" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1net_1_1peer__connection_1a89e77bb73edd3115bf9fe50cd9033145" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::net::peer_connection::send_queued_messages_task</definition>
        <argsstring>()</argsstring>
        <name>send_queued_messages_task</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/net/include/graphene/net/peer_connection.hpp" line="312" column="1" bodyfile="libraries/net/peer_connection.cpp" bodystart="291" bodyend="345"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1net_1_1peer__connection_1aece18773b59c1b0d1c23c82b3aa0618b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::net::peer_connection::accept_connection_task</definition>
        <argsstring>()</argsstring>
        <name>accept_connection_task</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/net/include/graphene/net/peer_connection.hpp" line="313" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1net_1_1peer__connection_1a78fd38e66c7ae1d65f2fd34ea3229c2a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::net::peer_connection::connect_to_task</definition>
        <argsstring>(const fc::ip::endpoint &amp;remote_endpoint)</argsstring>
        <name>connect_to_task</name>
        <param>
          <type>const <ref refid="classfc_1_1ip_1_1endpoint" kindref="compound">fc::ip::endpoint</ref> &amp;</type>
          <declname>remote_endpoint</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/net/include/graphene/net/peer_connection.hpp" line="314" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classgraphene_1_1net_1_1peer__connection_1ad790314e7c5d51a572132fd9eb399f15" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacegraphene_1_1net_1a7c2063384e09cb0fc4191590fa004b89" kindref="member">peer_connection_ptr</ref></type>
        <definition>peer_connection_ptr graphene::net::peer_connection::make_shared</definition>
        <argsstring>(peer_connection_delegate *delegate)</argsstring>
        <name>make_shared</name>
        <param>
          <type><ref refid="classgraphene_1_1net_1_1peer__connection__delegate" kindref="compound">peer_connection_delegate</ref> *</type>
          <declname>delegate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/net/include/graphene/net/peer_connection.hpp" line="274" column="1" bodyfile="libraries/net/peer_connection.cpp" bodystart="100" bodyend="118"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="5841">
        <label>std::enable_shared_from_this&lt; peer_connection &gt;</label>
      </node>
      <node id="5840">
        <label>graphene::net::message_oriented_connection_delegate</label>
        <link refid="classgraphene_1_1net_1_1message__oriented__connection__delegate"/>
      </node>
      <node id="5839">
        <label>graphene::net::peer_connection</label>
        <link refid="classgraphene_1_1net_1_1peer__connection"/>
        <childnode refid="5840" relation="public-inheritance">
        </childnode>
        <childnode refid="5841" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="5856">
        <label>graphene::net::firewall_check_state_data</label>
        <link refid="structgraphene_1_1net_1_1firewall__check__state__data"/>
        <childnode refid="5857" relation="usage">
          <edgelabel>endpoint_to_test</edgelabel>
        </childnode>
        <childnode refid="5850" relation="usage">
          <edgelabel>requesting_peer</edgelabel>
          <edgelabel>expected_node_id</edgelabel>
        </childnode>
      </node>
      <node id="5846">
        <label>fc::ripemd160</label>
        <link refid="classfc_1_1ripemd160"/>
      </node>
      <node id="5857">
        <label>fc::ip::endpoint</label>
        <link refid="classfc_1_1ip_1_1endpoint"/>
      </node>
      <node id="5855">
        <label>fc::optional&lt; fc::time_point_sec &gt;</label>
        <link refid="classfc_1_1optional"/>
      </node>
      <node id="5848">
        <label>fc::optional&lt; uint32_t &gt;</label>
        <link refid="classfc_1_1optional"/>
      </node>
      <node id="5851">
        <label>fc::optional&lt; boost::tuple&lt; std::vector&lt; fc::ripemd160 &gt;, fc::time_point &gt; &gt;</label>
      </node>
      <node id="5854">
        <label>string</label>
      </node>
      <node id="5858">
        <label>fc::time_point</label>
        <link refid="classfc_1_1time__point"/>
      </node>
      <node id="5852">
        <label>fc::microseconds</label>
        <link refid="classfc_1_1microseconds"/>
      </node>
      <node id="5844">
        <label>std::enable_shared_from_this&lt; peer_connection &gt;</label>
      </node>
      <node id="5845">
        <label>fc::future&lt; void &gt;</label>
        <link refid="classfc_1_1future_3_01void_01_4"/>
      </node>
      <node id="5843">
        <label>graphene::net::message_oriented_connection_delegate</label>
        <link refid="classgraphene_1_1net_1_1message__oriented__connection__delegate"/>
      </node>
      <node id="5853">
        <label>fc::optional&lt; std::string &gt;</label>
        <link refid="classfc_1_1optional"/>
      </node>
      <node id="5849">
        <label>fc::time_point_sec</label>
        <link refid="classfc_1_1time__point__sec"/>
      </node>
      <node id="5847">
        <label>fc::ip::address</label>
        <link refid="classfc_1_1ip_1_1address"/>
      </node>
      <node id="5850">
        <label>fc::zero_initialized_array&lt; T, N &gt;</label>
        <link refid="classfc_1_1zero__initialized__array"/>
      </node>
      <node id="5842">
        <label>graphene::net::peer_connection</label>
        <link refid="classgraphene_1_1net_1_1peer__connection"/>
        <childnode refid="5843" relation="public-inheritance">
        </childnode>
        <childnode refid="5844" relation="public-inheritance">
        </childnode>
        <childnode refid="5845" relation="usage">
          <edgelabel>accept_or_connect_task_done</edgelabel>
        </childnode>
        <childnode refid="5846" relation="usage">
          <edgelabel>last_block_delegate_has_seen</edgelabel>
        </childnode>
        <childnode refid="5847" relation="usage">
          <edgelabel>inbound_address</edgelabel>
        </childnode>
        <childnode refid="5848" relation="usage">
          <edgelabel>bitness</edgelabel>
        </childnode>
        <childnode refid="5849" relation="usage">
          <edgelabel>last_block_time_delegate_has_seen</edgelabel>
        </childnode>
        <childnode refid="5850" relation="usage">
          <edgelabel>node_id</edgelabel>
          <edgelabel>node_public_key</edgelabel>
        </childnode>
        <childnode refid="5851" relation="usage">
          <edgelabel>item_ids_requested_from_peer</edgelabel>
        </childnode>
        <childnode refid="5852" relation="usage">
          <edgelabel>round_trip_delay</edgelabel>
          <edgelabel>clock_offset</edgelabel>
        </childnode>
        <childnode refid="5853" relation="usage">
          <edgelabel>platform</edgelabel>
          <edgelabel>fc_git_revision_sha</edgelabel>
          <edgelabel>graphene_git_revision_sha</edgelabel>
        </childnode>
        <childnode refid="5854" relation="usage">
          <edgelabel>user_agent</edgelabel>
        </childnode>
        <childnode refid="5855" relation="usage">
          <edgelabel>graphene_git_revision_unix_timestamp</edgelabel>
          <edgelabel>fc_git_revision_unix_timestamp</edgelabel>
        </childnode>
        <childnode refid="5856" relation="usage">
          <edgelabel>firewall_check_state</edgelabel>
        </childnode>
        <childnode refid="5858" relation="usage">
          <edgelabel>transaction_fetching_inhibited_until</edgelabel>
          <edgelabel>connection_closed_time</edgelabel>
          <edgelabel>connection_initiation_time</edgelabel>
          <edgelabel>connection_terminated_time</edgelabel>
          <edgelabel>last_sync_item_received_time</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="libraries/net/include/graphene/net/peer_connection.hpp" line="75" column="1" bodyfile="libraries/net/include/graphene/net/peer_connection.hpp" bodystart="73" bodyend="315"/>
    <listofallmembers>
      <member refid="classgraphene_1_1net_1_1peer__connection_1ac2c1f52c490e29af2812ba3f7a961a0f" prot="private" virt="non-virtual"><scope>graphene::net::peer_connection</scope><name>_currently_handling_message</name></member>
      <member refid="classgraphene_1_1net_1_1peer__connection_1a959cc588ef786b5b5b24e6c187fd21b0" prot="private" virt="non-virtual"><scope>graphene::net::peer_connection</scope><name>_message_connection</name></member>
      <member refid="classgraphene_1_1net_1_1peer__connection_1a0e4da88f650a48944d0eb5de7bd9ff27" prot="private" virt="non-virtual"><scope>graphene::net::peer_connection</scope><name>_node</name></member>
      <member refid="classgraphene_1_1net_1_1peer__connection_1a20f76df338d4a417a4dcbb624a49798c" prot="private" virt="non-virtual"><scope>graphene::net::peer_connection</scope><name>_queued_messages</name></member>
      <member refid="classgraphene_1_1net_1_1peer__connection_1a12ff32ee51ea240164cc1801bd0d01ee" prot="private" virt="non-virtual"><scope>graphene::net::peer_connection</scope><name>_remote_endpoint</name></member>
      <member refid="classgraphene_1_1net_1_1peer__connection_1a98546e9c90cb5e6762ec481c866abe6a" prot="private" virt="non-virtual"><scope>graphene::net::peer_connection</scope><name>_send_message_queue_tasks_running</name></member>
      <member refid="classgraphene_1_1net_1_1peer__connection_1a9e196ccbccf2f5e845e00f7dbf19a728" prot="private" virt="non-virtual"><scope>graphene::net::peer_connection</scope><name>_send_queued_messages_done</name></member>
      <member refid="classgraphene_1_1net_1_1peer__connection_1a6c4a6abbf05af138da8537a6be78cf69" prot="private" virt="non-virtual"><scope>graphene::net::peer_connection</scope><name>_thread</name></member>
      <member refid="classgraphene_1_1net_1_1peer__connection_1ad7a3beaa2fbe99ccf5aa478353358660" prot="private" virt="non-virtual"><scope>graphene::net::peer_connection</scope><name>_total_queued_messages_size</name></member>
      <member refid="classgraphene_1_1net_1_1peer__connection_1a9d5adaa64534ad04cdb80a17c47de28a" prot="public" virt="non-virtual"><scope>graphene::net::peer_connection</scope><name>accept_connection</name></member>
      <member refid="classgraphene_1_1net_1_1peer__connection_1aece18773b59c1b0d1c23c82b3aa0618b" prot="private" virt="non-virtual"><scope>graphene::net::peer_connection</scope><name>accept_connection_task</name></member>
      <member refid="classgraphene_1_1net_1_1peer__connection_1ab3d11d38d80f9da30e9c8b8cd54b394e" prot="public" virt="non-virtual"><scope>graphene::net::peer_connection</scope><name>accept_or_connect_task_done</name></member>
      <member refid="classgraphene_1_1net_1_1peer__connection_1ae1aceef078cdccf1255ead4085c4d6d0" prot="public" virt="non-virtual"><scope>graphene::net::peer_connection</scope><name>bitness</name></member>
      <member refid="classgraphene_1_1net_1_1peer__connection_1ad5fa3495b64326d612adb120e7d4f5b0" prot="public" virt="non-virtual"><scope>graphene::net::peer_connection</scope><name>busy</name></member>
      <member refid="classgraphene_1_1net_1_1peer__connection_1add398515c263a899eeb1266c951f6628" prot="public" virt="non-virtual"><scope>graphene::net::peer_connection</scope><name>clear_old_inventory</name></member>
      <member refid="classgraphene_1_1net_1_1peer__connection_1a95a50dfae5659c244c89deb246c62d17" prot="public" virt="non-virtual"><scope>graphene::net::peer_connection</scope><name>clock_offset</name></member>
      <member refid="classgraphene_1_1net_1_1peer__connection_1a528eaf4d7a1aae25374faa3be3d9b8b6" prot="public" virt="non-virtual"><scope>graphene::net::peer_connection</scope><name>close_connection</name></member>
      <member refid="classgraphene_1_1net_1_1peer__connection_1a4b8f6e10e54cfcc48c6acd7718435d08" prot="public" virt="non-virtual"><scope>graphene::net::peer_connection</scope><name>connect_to</name></member>
      <member refid="classgraphene_1_1net_1_1peer__connection_1a78fd38e66c7ae1d65f2fd34ea3229c2a" prot="private" virt="non-virtual"><scope>graphene::net::peer_connection</scope><name>connect_to_task</name></member>
      <member refid="classgraphene_1_1net_1_1peer__connection_1a8b5a98d59f97f02aab7f085c85154da4" prot="public" virt="non-virtual"><scope>graphene::net::peer_connection</scope><name>connection_closed_error</name></member>
      <member refid="classgraphene_1_1net_1_1peer__connection_1a115a3748aef39a1dd34a6bae541b6013" prot="public" virt="non-virtual"><scope>graphene::net::peer_connection</scope><name>connection_closed_time</name></member>
      <member refid="classgraphene_1_1net_1_1peer__connection_1a2fffa50d9cb428e8df165fef2d85de4a" prot="public" virt="non-virtual"><scope>graphene::net::peer_connection</scope><name>connection_initiation_time</name></member>
      <member refid="classgraphene_1_1net_1_1peer__connection_1a1fc3e7d2bae4008c4c67164995f8c560" prot="public" virt="non-virtual"><scope>graphene::net::peer_connection</scope><name>connection_negotiation_status</name></member>
      <member refid="classgraphene_1_1net_1_1peer__connection_1a5ca734dc0a0a7effb3973719986c66d8" prot="public" virt="non-virtual"><scope>graphene::net::peer_connection</scope><name>connection_terminated_time</name></member>
      <member refid="classgraphene_1_1net_1_1peer__connection_1a04868d3cf24327b33c6fac67ebfc691e" prot="public" virt="non-virtual"><scope>graphene::net::peer_connection</scope><name>core_protocol_version</name></member>
      <member refid="classgraphene_1_1net_1_1peer__connection_1a62baa52eacb5210fe8fa823b36604d20" prot="private" virt="non-virtual"><scope>graphene::net::peer_connection</scope><name>destroy</name></member>
      <member refid="classgraphene_1_1net_1_1peer__connection_1ad44c11c9cfb7b0976b68fe9002946fc8" prot="public" virt="non-virtual"><scope>graphene::net::peer_connection</scope><name>destroy_connection</name></member>
      <member refid="classgraphene_1_1net_1_1peer__connection_1afa940df579d2c4dfcc3678c1a57a931b" prot="public" virt="non-virtual"><scope>graphene::net::peer_connection</scope><name>direction</name></member>
      <member refid="classgraphene_1_1net_1_1peer__connection_1ae2bc0bc154d732c3c167567545df032e" prot="public" virt="non-virtual"><scope>graphene::net::peer_connection</scope><name>fc_git_revision_sha</name></member>
      <member refid="classgraphene_1_1net_1_1peer__connection_1a68b127b9c3479048a6d157ca11530e20" prot="public" virt="non-virtual"><scope>graphene::net::peer_connection</scope><name>fc_git_revision_unix_timestamp</name></member>
      <member refid="classgraphene_1_1net_1_1peer__connection_1a9d019cb640d7aee423ff0679192ae2ef" prot="public" virt="non-virtual"><scope>graphene::net::peer_connection</scope><name>firewall_check_state</name></member>
      <member refid="classgraphene_1_1net_1_1peer__connection_1a83ea1b6fff6d03711990f937a788b2d9" prot="public" virt="non-virtual"><scope>graphene::net::peer_connection</scope><name>get_connection_terminated_time</name></member>
      <member refid="classgraphene_1_1net_1_1peer__connection_1afb2e0dc62da3a264459bdfb791445435" prot="public" virt="non-virtual"><scope>graphene::net::peer_connection</scope><name>get_connection_time</name></member>
      <member refid="classgraphene_1_1net_1_1peer__connection_1a7d341147c197f40a47509aff1707a959" prot="public" virt="non-virtual"><scope>graphene::net::peer_connection</scope><name>get_endpoint_for_connecting</name></member>
      <member refid="classgraphene_1_1net_1_1peer__connection_1aa1c8c167347a20d16c1e62744fe268b6" prot="public" virt="non-virtual"><scope>graphene::net::peer_connection</scope><name>get_last_message_received_time</name></member>
      <member refid="classgraphene_1_1net_1_1peer__connection_1ad7b20b455c09b7e16e7f90a624cf74ac" prot="public" virt="non-virtual"><scope>graphene::net::peer_connection</scope><name>get_last_message_sent_time</name></member>
      <member refid="classgraphene_1_1net_1_1peer__connection_1a8e1dfb1d2031eccac5fd4a469acb52cd" prot="public" virt="non-virtual"><scope>graphene::net::peer_connection</scope><name>get_local_endpoint</name></member>
      <member refid="classgraphene_1_1net_1_1peer__connection_1ab61398cf17d6cf388622356026de9fcf" prot="public" virt="non-virtual"><scope>graphene::net::peer_connection</scope><name>get_remote_endpoint</name></member>
      <member refid="classgraphene_1_1net_1_1peer__connection_1af47a18ef8d93a40f5f3cd010f6aadb4c" prot="public" virt="non-virtual"><scope>graphene::net::peer_connection</scope><name>get_shared_secret</name></member>
      <member refid="classgraphene_1_1net_1_1peer__connection_1aa70184ea95d9ee7e2e1521bb0c250304" prot="public" virt="non-virtual"><scope>graphene::net::peer_connection</scope><name>get_socket</name></member>
      <member refid="classgraphene_1_1net_1_1peer__connection_1af8a224b60f0ac58a3c915f759955ac67" prot="public" virt="non-virtual"><scope>graphene::net::peer_connection</scope><name>get_total_bytes_received</name></member>
      <member refid="classgraphene_1_1net_1_1peer__connection_1a3fec81daff2c3fa60ce57db27330b5c2" prot="public" virt="non-virtual"><scope>graphene::net::peer_connection</scope><name>get_total_bytes_sent</name></member>
      <member refid="classgraphene_1_1net_1_1peer__connection_1ac8f4dce0b25b85c7a2ed6048153f8787" prot="public" virt="non-virtual"><scope>graphene::net::peer_connection</scope><name>graphene_git_revision_sha</name></member>
      <member refid="classgraphene_1_1net_1_1peer__connection_1a192fda9217f2acc9b57ecd64e2985776" prot="public" virt="non-virtual"><scope>graphene::net::peer_connection</scope><name>graphene_git_revision_unix_timestamp</name></member>
      <member refid="classgraphene_1_1net_1_1peer__connection_1a354f91d0ba7478a7108b1612dc26705c" prot="public" virt="non-virtual"><scope>graphene::net::peer_connection</scope><name>idle</name></member>
      <member refid="classgraphene_1_1net_1_1peer__connection_1aa6c35b1f3eae294d2d072c3600dd5131" prot="public" virt="non-virtual"><scope>graphene::net::peer_connection</scope><name>ids_of_items_being_processed</name></member>
      <member refid="classgraphene_1_1net_1_1peer__connection_1a34dbf395eb7b5b7695944bb941891a36" prot="public" virt="non-virtual"><scope>graphene::net::peer_connection</scope><name>ids_of_items_to_get</name></member>
      <member refid="classgraphene_1_1net_1_1peer__connection_1a3b55b821c4296b62200b770d4f2a2c31" prot="public" virt="non-virtual"><scope>graphene::net::peer_connection</scope><name>inbound_address</name></member>
      <member refid="classgraphene_1_1net_1_1peer__connection_1a2c73beeb2725e7ab0e8a05ca843b0fd9" prot="public" virt="non-virtual"><scope>graphene::net::peer_connection</scope><name>inbound_port</name></member>
      <member refid="classgraphene_1_1net_1_1peer__connection_1a4f234861a14d26da41d9441b337cdbe2" prot="public" virt="non-virtual"><scope>graphene::net::peer_connection</scope><name>inhibit_fetching_sync_blocks</name></member>
      <member refid="classgraphene_1_1net_1_1peer__connection_1a5900c7867a7e8687c65a25bdcb1604ff" prot="public" virt="non-virtual"><scope>graphene::net::peer_connection</scope><name>inventory_advertised_to_peer</name></member>
      <member refid="classgraphene_1_1net_1_1peer__connection_1ac004cc3b646a35365075ec71c679e6d4" prot="public" virt="non-virtual"><scope>graphene::net::peer_connection</scope><name>inventory_peer_advertised_to_us</name></member>
      <member refid="classgraphene_1_1net_1_1peer__connection_1aad602bff9d9c82ceaef90bc30da272c9" prot="public" virt="non-virtual"><scope>graphene::net::peer_connection</scope><name>is_currently_handling_message</name></member>
      <member refid="classgraphene_1_1net_1_1peer__connection_1aea47877a167f7e02a932da3fa796eaae" prot="public" virt="non-virtual"><scope>graphene::net::peer_connection</scope><name>is_firewalled</name></member>
      <member refid="classgraphene_1_1net_1_1peer__connection_1a118f70b619af2102c78f3fc485efec9f" prot="public" virt="non-virtual"><scope>graphene::net::peer_connection</scope><name>is_inventory_advertised_to_us_list_full</name></member>
      <member refid="classgraphene_1_1net_1_1peer__connection_1a5976f205346898d279f97debf7c7181f" prot="public" virt="non-virtual"><scope>graphene::net::peer_connection</scope><name>is_inventory_advertised_to_us_list_full_for_transactions</name></member>
      <member refid="classgraphene_1_1net_1_1peer__connection_1ac8284a7d8adfce259afbd5df79c4f59b" prot="public" virt="non-virtual"><scope>graphene::net::peer_connection</scope><name>is_transaction_fetching_inhibited</name></member>
      <member refid="classgraphene_1_1net_1_1peer__connection_1a1db2486ae47972391f8d3b3689d027fa" prot="public" virt="non-virtual"><scope>graphene::net::peer_connection</scope><name>item_ids_requested_from_peer</name></member>
      <member refid="classgraphene_1_1net_1_1peer__connection_1a749ac3cdd7a9185095f3af0b1449f379" prot="public" virt="non-virtual"><scope>graphene::net::peer_connection</scope><name>item_to_time_map_type</name></member>
      <member refid="classgraphene_1_1net_1_1peer__connection_1a64a25e3df43e06723c9fa2c28b707e4a" prot="public" virt="non-virtual"><scope>graphene::net::peer_connection</scope><name>items_requested_from_peer</name></member>
      <member refid="classgraphene_1_1net_1_1peer__connection_1a482e6437f2acb29ee0326e3e87a276b3" prot="public" virt="non-virtual"><scope>graphene::net::peer_connection</scope><name>last_block_delegate_has_seen</name></member>
      <member refid="classgraphene_1_1net_1_1peer__connection_1ae99ecdf3308476fc65e9cf8acb3821d7" prot="public" virt="non-virtual"><scope>graphene::net::peer_connection</scope><name>last_block_time_delegate_has_seen</name></member>
      <member refid="classgraphene_1_1net_1_1peer__connection_1ad3906b5c828ae801c22d289189b99425" prot="public" virt="non-virtual"><scope>graphene::net::peer_connection</scope><name>last_known_fork_block_number</name></member>
      <member refid="classgraphene_1_1net_1_1peer__connection_1a5a21e7b0a686ea910bbd3865e6d5240a" prot="public" virt="non-virtual"><scope>graphene::net::peer_connection</scope><name>last_sync_item_received_time</name></member>
      <member refid="classgraphene_1_1net_1_1peer__connection_1ad790314e7c5d51a572132fd9eb399f15" prot="public" virt="non-virtual"><scope>graphene::net::peer_connection</scope><name>make_shared</name></member>
      <member refid="classgraphene_1_1net_1_1peer__connection_1a8661d42c3ba7289f0a69c1cc5f2770c7" prot="public" virt="non-virtual"><scope>graphene::net::peer_connection</scope><name>negotiation_status</name></member>
      <member refid="classgraphene_1_1net_1_1peer__connection_1a62c7328f33d162221ccd7e5c4038b796" prot="public" virt="non-virtual"><scope>graphene::net::peer_connection</scope><name>node_id</name></member>
      <member refid="classgraphene_1_1net_1_1peer__connection_1a170d09091433c2c32c601f15fc6a448a" prot="public" virt="non-virtual"><scope>graphene::net::peer_connection</scope><name>node_public_key</name></member>
      <member refid="classgraphene_1_1net_1_1peer__connection_1af8fb6fdfcdf941d1c6d843b48c407d08" prot="public" virt="non-virtual"><scope>graphene::net::peer_connection</scope><name>number_of_unfetched_item_ids</name></member>
      <member refid="classgraphene_1_1net_1_1peer__connection_1a2c13af90dc86a5940694c1a1197e7281" prot="public" virt="virtual"><scope>graphene::net::peer_connection</scope><name>on_connection_closed</name></member>
      <member refid="classgraphene_1_1net_1_1peer__connection_1a8871e3e1d4a2fc425d232e1bd0956c29" prot="public" virt="virtual"><scope>graphene::net::peer_connection</scope><name>on_message</name></member>
      <member refid="classgraphene_1_1net_1_1peer__connection_1a91930a9842bffe62e6727f16d74c720b" prot="public" virt="non-virtual"><scope>graphene::net::peer_connection</scope><name>our_connection_state</name></member>
      <member refid="classgraphene_1_1net_1_1peer__connection_1acb5aedd975e107b5f4796862ee4f2d1b" prot="public" virt="non-virtual"><scope>graphene::net::peer_connection</scope><name>our_state</name></member>
      <member refid="classgraphene_1_1net_1_1peer__connection_1a73652b2101e722f23587b84441e070f8" prot="public" virt="non-virtual"><scope>graphene::net::peer_connection</scope><name>outbound_port</name></member>
      <member refid="classgraphene_1_1net_1_1peer__connection_1a9279ba8b94f89d4db5e5bbc934750a53" prot="private" virt="non-virtual"><scope>graphene::net::peer_connection</scope><name>peer_connection</name></member>
      <member refid="classgraphene_1_1net_1_1peer__connection_1a6017b9c24ba25ccdec3cfd8c995880f5" prot="public" virt="non-virtual"><scope>graphene::net::peer_connection</scope><name>peer_needs_sync_items_from_us</name></member>
      <member refid="classgraphene_1_1net_1_1peer__connection_1afcaed96cedc4e001c084593f17f2df7e" prot="public" virt="non-virtual"><scope>graphene::net::peer_connection</scope><name>performing_firewall_check</name></member>
      <member refid="classgraphene_1_1net_1_1peer__connection_1a3e7c91ee86c09ec20fbf52338b053409" prot="public" virt="non-virtual"><scope>graphene::net::peer_connection</scope><name>platform</name></member>
      <member refid="classgraphene_1_1net_1_1peer__connection_1aff1a611955fa9701e5a04d5b520753f7" prot="public" virt="non-virtual"><scope>graphene::net::peer_connection</scope><name>round_trip_delay</name></member>
      <member refid="classgraphene_1_1net_1_1peer__connection_1a4e133d3af48d11f1e03c728d95b1dea7" prot="public" virt="non-virtual"><scope>graphene::net::peer_connection</scope><name>send_item</name></member>
      <member refid="classgraphene_1_1net_1_1peer__connection_1ae0c5cd45659c572be805f125d70e5e5a" prot="public" virt="non-virtual"><scope>graphene::net::peer_connection</scope><name>send_message</name></member>
      <member refid="classgraphene_1_1net_1_1peer__connection_1a35f68aac36feecf9f96e0d9f89334b8f" prot="public" virt="non-virtual"><scope>graphene::net::peer_connection</scope><name>send_queueable_message</name></member>
      <member refid="classgraphene_1_1net_1_1peer__connection_1a89e77bb73edd3115bf9fe50cd9033145" prot="private" virt="non-virtual"><scope>graphene::net::peer_connection</scope><name>send_queued_messages_task</name></member>
      <member refid="classgraphene_1_1net_1_1peer__connection_1abb1aa66fb27ab0e3be4a8cb6ddc475fc" prot="public" virt="non-virtual"><scope>graphene::net::peer_connection</scope><name>set_remote_endpoint</name></member>
      <member refid="classgraphene_1_1net_1_1peer__connection_1abb4b2cdaa42ed8bf1bf53a9163b7eb50" prot="public" virt="non-virtual"><scope>graphene::net::peer_connection</scope><name>sync_items_requested_from_peer</name></member>
      <member refid="classgraphene_1_1net_1_1peer__connection_1af1fa5c4e1ef1bcad5f3e0c1743786eff" prot="public" virt="non-virtual"><scope>graphene::net::peer_connection</scope><name>their_connection_state</name></member>
      <member refid="classgraphene_1_1net_1_1peer__connection_1ad38366eeae4e9ef56b2ff76323a9703b" prot="public" virt="non-virtual"><scope>graphene::net::peer_connection</scope><name>their_state</name></member>
      <member refid="classgraphene_1_1net_1_1peer__connection_1acabb4963ac7aea86cd270c19cc36e55a" prot="public" virt="non-virtual"><scope>graphene::net::peer_connection</scope><name>they_have_requested_close</name></member>
      <member refid="classgraphene_1_1net_1_1peer__connection_1a3c453ce025f0fcd97c4b4290d617f576" prot="public" virt="non-virtual"><scope>graphene::net::peer_connection</scope><name>timestamped_items_set_type</name></member>
      <member refid="classgraphene_1_1net_1_1peer__connection_1a898660052a57f381ebe530a44481282b" prot="public" virt="non-virtual"><scope>graphene::net::peer_connection</scope><name>transaction_fetching_inhibited_until</name></member>
      <member refid="classgraphene_1_1net_1_1peer__connection_1a2f18e1d4c2c58532fc48c15735249e52" prot="public" virt="non-virtual"><scope>graphene::net::peer_connection</scope><name>user_agent</name></member>
      <member refid="classgraphene_1_1net_1_1peer__connection_1ae157b64b6f41e82a4233286a9e5aa2a2" prot="public" virt="non-virtual"><scope>graphene::net::peer_connection</scope><name>we_have_requested_close</name></member>
      <member refid="classgraphene_1_1net_1_1peer__connection_1a886bcfaa83aa153c797cdb837452fa94" prot="public" virt="non-virtual"><scope>graphene::net::peer_connection</scope><name>we_need_sync_items_from_peer</name></member>
      <member refid="classgraphene_1_1net_1_1peer__connection_1aa2b19de59dfe0ef5e08e7b566410ab32" prot="public" virt="virtual"><scope>graphene::net::peer_connection</scope><name>~peer_connection</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
