<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="structgraphene_1_1protocol_1_1asset__update__operation" kind="struct" language="C++" prot="public">
    <compoundname>graphene::protocol::asset_update_operation</compoundname>
    <basecompoundref refid="structgraphene_1_1protocol_1_1base__operation" prot="public" virt="non-virtual">graphene::protocol::base_operation</basecompoundref>
    <includes refid="asset__ops_8hpp" local="no">asset_ops.hpp</includes>
    <innerclass refid="structgraphene_1_1protocol_1_1asset__update__operation_1_1ext" prot="public">graphene::protocol::asset_update_operation::ext</innerclass>
    <innerclass refid="structgraphene_1_1protocol_1_1asset__update__operation_1_1fee__params__t" prot="public">graphene::protocol::asset_update_operation::fee_params_t</innerclass>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1asset__update__operation_1aae159a3f90c63125500fa2c63588a71e" prot="public" static="no" mutable="no">
        <type><ref refid="structgraphene_1_1protocol_1_1asset" kindref="compound">asset</ref></type>
        <definition>asset graphene::protocol::asset_update_operation::fee</definition>
        <argsstring></argsstring>
        <name>fee</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/asset_ops.hpp" line="370" column="23" bodyfile="libraries/protocol/include/graphene/protocol/asset_ops.hpp" bodystart="370" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1asset__update__operation_1a1b3dd3dc58b03b6e8e6901f2945d85db" prot="public" static="no" mutable="no">
        <type>account_id_type</type>
        <definition>account_id_type graphene::protocol::asset_update_operation::issuer</definition>
        <argsstring></argsstring>
        <name>issuer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/asset_ops.hpp" line="371" column="23" bodyfile="libraries/protocol/include/graphene/protocol/asset_ops.hpp" bodystart="371" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1asset__update__operation_1ae8f6726184da89de514756a405427da5" prot="public" static="no" mutable="no">
        <type>asset_id_type</type>
        <definition>asset_id_type graphene::protocol::asset_update_operation::asset_to_update</definition>
        <argsstring></argsstring>
        <name>asset_to_update</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/asset_ops.hpp" line="372" column="23" bodyfile="libraries/protocol/include/graphene/protocol/asset_ops.hpp" bodystart="372" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1asset__update__operation_1af510e9979520868a564a11c85c71d7f4" prot="public" static="no" mutable="no">
        <type><ref refid="classfc_1_1optional" kindref="compound">optional</ref>&lt; account_id_type &gt;</type>
        <definition>optional&lt;account_id_type&gt; graphene::protocol::asset_update_operation::new_issuer</definition>
        <argsstring></argsstring>
        <name>new_issuer</name>
        <briefdescription>
<para>If the asset is to be given a new issuer, specify his ID here. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/asset_ops.hpp" line="375" column="18" bodyfile="libraries/protocol/include/graphene/protocol/asset_ops.hpp" bodystart="375" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1asset__update__operation_1a8a4c9d5cbae0f5738412109b28f65d19" prot="public" static="no" mutable="no">
        <type><ref refid="structgraphene_1_1protocol_1_1asset__options" kindref="compound">asset_options</ref></type>
        <definition>asset_options graphene::protocol::asset_update_operation::new_options</definition>
        <argsstring></argsstring>
        <name>new_options</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/asset_ops.hpp" line="376" column="35" bodyfile="libraries/protocol/include/graphene/protocol/asset_ops.hpp" bodystart="376" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1asset__update__operation_1ad400633bf7cc34e38d34a9e1707d6cb7" prot="public" static="no" mutable="no">
        <type><ref refid="structgraphene_1_1protocol_1_1extension" kindref="compound">extension</ref>&lt; <ref refid="structgraphene_1_1protocol_1_1asset__update__operation_1_1ext" kindref="compound">ext</ref> &gt;</type>
        <definition>extension&lt;ext&gt; graphene::protocol::asset_update_operation::extensions</definition>
        <argsstring></argsstring>
        <name>extensions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/asset_ops.hpp" line="377" column="30" bodyfile="libraries/protocol/include/graphene/protocol/asset_ops.hpp" bodystart="377" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structgraphene_1_1protocol_1_1asset__update__operation_1ae6e6e169f91dce773dd276560a4e7845" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>graphene::protocol::asset_update_operation::asset_update_operation</definition>
        <argsstring>()</argsstring>
        <name>asset_update_operation</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/asset_ops.hpp" line="368" column="7" bodyfile="libraries/protocol/include/graphene/protocol/asset_ops.hpp" bodystart="368" bodyend="368"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1protocol_1_1asset__update__operation_1aaf2122aa59738778113b7edf87391e01" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>account_id_type</type>
        <definition>account_id_type graphene::protocol::asset_update_operation::fee_payer</definition>
        <argsstring>() const</argsstring>
        <name>fee_payer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/asset_ops.hpp" line="379" column="23" bodyfile="libraries/protocol/include/graphene/protocol/asset_ops.hpp" bodystart="379" bodyend="379"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1protocol_1_1asset__update__operation_1a7445df10a53a532b8b3bf8a96f4ef0cb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void graphene::protocol::asset_update_operation::validate</definition>
        <argsstring>() const</argsstring>
        <name>validate</name>
        <reimplements refid="structgraphene_1_1protocol_1_1base__operation_1a23d617a6fa0921d3f5b51dd5167e7a29">validate</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/asset_ops.hpp" line="380" column="23" bodyfile="libraries/protocol/asset_ops.cpp" bodystart="134" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1protocol_1_1asset__update__operation_1af9f53924987b35f3ae2073f78c1a08eb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacegraphene_1_1protocol_1a69b2104c1c11eed2d17bd29b86713347" kindref="member">share_type</ref></type>
        <definition>share_type graphene::protocol::asset_update_operation::calculate_fee</definition>
        <argsstring>(const fee_params_t &amp;k) const</argsstring>
        <name>calculate_fee</name>
        <param>
          <type>const <ref refid="structgraphene_1_1protocol_1_1asset__update__operation_1_1fee__params__t" kindref="compound">fee_params_t</ref> &amp;</type>
          <declname>k</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/asset_ops.hpp" line="381" column="23" bodyfile="libraries/protocol/asset_ops.cpp" bodystart="160" bodyend="163"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Update options common to all assets. </para>
    </briefdescription>
    <detaileddescription>
<para>There are a number of options which all assets in the network use. These options are enumerated in the <ref refid="structgraphene_1_1protocol_1_1asset__options" kindref="compound">asset_options</ref> struct. This operation is used to update these options for an existing asset.</para>
<para><simplesect kind="note"><para>This operation cannot be used to update BitAsset-specific options. For these options, use <ref refid="structgraphene_1_1protocol_1_1asset__update__bitasset__operation" kindref="compound">asset_update_bitasset_operation</ref> instead.</para>
</simplesect>
<simplesect kind="pre"><para><ref refid="structgraphene_1_1protocol_1_1asset__update__operation_1a1b3dd3dc58b03b6e8e6901f2945d85db" kindref="member">issuer</ref> SHALL be an existing account and MUST match asset_object::issuer on <ref refid="structgraphene_1_1protocol_1_1asset__update__operation_1ae8f6726184da89de514756a405427da5" kindref="member">asset_to_update</ref> </para>
</simplesect>
<simplesect kind="pre"><para><ref refid="structgraphene_1_1protocol_1_1asset__update__operation_1aae159a3f90c63125500fa2c63588a71e" kindref="member">fee</ref> SHALL be nonnegative, and <ref refid="structgraphene_1_1protocol_1_1asset__update__operation_1a1b3dd3dc58b03b6e8e6901f2945d85db" kindref="member">issuer</ref> MUST have a sufficient balance to pay it </para>
</simplesect>
<simplesect kind="pre"><para><ref refid="structgraphene_1_1protocol_1_1asset__update__operation_1a8a4c9d5cbae0f5738412109b28f65d19" kindref="member">new_options</ref> SHALL be internally consistent, as verified by <ref refid="structgraphene_1_1protocol_1_1asset__update__operation_1a7445df10a53a532b8b3bf8a96f4ef0cb" kindref="member">validate()</ref> </para>
</simplesect>
<simplesect kind="post"><para><ref refid="structgraphene_1_1protocol_1_1asset__update__operation_1ae8f6726184da89de514756a405427da5" kindref="member">asset_to_update</ref> will have options matching those of new_options </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>graphene::protocol::base_operation</label>
        <link refid="structgraphene_1_1protocol_1_1base__operation"/>
      </node>
      <node id="1">
        <label>graphene::protocol::asset_update_operation</label>
        <link refid="structgraphene_1_1protocol_1_1asset__update__operation"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="20">
        <label>fc::optional&lt; uint8_t &gt;</label>
        <link refid="classfc_1_1optional"/>
      </node>
      <node id="8">
        <label>flat_set&lt; asset_id_type &gt;</label>
      </node>
      <node id="10">
        <label>fc::safe_base&lt; int64_t &gt;</label>
        <link refid="structfc_1_1safe__base"/>
      </node>
      <node id="11">
        <label>string</label>
      </node>
      <node id="19">
        <label>fc::optional&lt; bool &gt;</label>
        <link refid="classfc_1_1optional"/>
      </node>
      <node id="17">
        <label>graphene::protocol::extension&lt; graphene::protocol::asset_update_operation::ext &gt;</label>
        <link refid="structgraphene_1_1protocol_1_1extension"/>
        <childnode refid="18" relation="usage">
          <edgelabel>value</edgelabel>
        </childnode>
      </node>
      <node id="12">
        <label>graphene::protocol::price</label>
        <link refid="structgraphene_1_1protocol_1_1price"/>
        <childnode refid="13" relation="usage">
          <edgelabel>base</edgelabel>
          <edgelabel>quote</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>graphene::protocol::additional_asset_options</label>
        <link refid="structgraphene_1_1protocol_1_1additional__asset__options"/>
        <childnode refid="6" relation="usage">
          <edgelabel>taker_fee_percent</edgelabel>
          <edgelabel>reward_percent</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>whitelist_market_fee_sharing</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>fc::optional&lt; flat_set&lt; account_id_type &gt; &gt;</label>
        <link refid="classfc_1_1optional"/>
      </node>
      <node id="16">
        <label>account_id_type</label>
      </node>
      <node id="14">
        <label>flat_set&lt; account_id_type &gt;</label>
      </node>
      <node id="9">
        <label>fc::safe&lt; int64_t &gt;</label>
        <link refid="structfc_1_1safe"/>
        <childnode refid="10" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>graphene::protocol::asset_options</label>
        <link refid="structgraphene_1_1protocol_1_1asset__options"/>
        <childnode refid="4" relation="usage">
          <edgelabel>extensions</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>whitelist_markets</edgelabel>
          <edgelabel>blacklist_markets</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>max_market_fee</edgelabel>
          <edgelabel>max_supply</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>description</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>core_exchange_rate</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>whitelist_authorities</edgelabel>
          <edgelabel>blacklist_authorities</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>graphene::protocol::base_operation</label>
        <link refid="structgraphene_1_1protocol_1_1base__operation"/>
      </node>
      <node id="1">
        <label>graphene::protocol::asset_update_operation</label>
        <link refid="structgraphene_1_1protocol_1_1asset__update__operation"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>new_options</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>fee</edgelabel>
        </childnode>
        <childnode refid="15" relation="usage">
          <edgelabel>new_issuer</edgelabel>
        </childnode>
        <childnode refid="16" relation="usage">
          <edgelabel>issuer</edgelabel>
        </childnode>
        <childnode refid="17" relation="usage">
          <edgelabel>extensions</edgelabel>
        </childnode>
      </node>
      <node id="13">
        <label>graphene::protocol::asset</label>
        <link refid="structgraphene_1_1protocol_1_1asset"/>
        <childnode refid="9" relation="usage">
          <edgelabel>amount</edgelabel>
        </childnode>
      </node>
      <node id="18">
        <label>graphene::protocol::asset_update_operation::ext</label>
        <link refid="structgraphene_1_1protocol_1_1asset__update__operation_1_1ext"/>
        <childnode refid="19" relation="usage">
          <edgelabel>skip_core_exchange_rate</edgelabel>
        </childnode>
        <childnode refid="20" relation="usage">
          <edgelabel>new_precision</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>graphene::protocol::extension&lt; additional_asset_options &gt;</label>
        <link refid="structgraphene_1_1protocol_1_1extension"/>
        <childnode refid="5" relation="usage">
          <edgelabel>value</edgelabel>
        </childnode>
      </node>
      <node id="15">
        <label>fc::optional&lt; account_id_type &gt;</label>
        <link refid="classfc_1_1optional"/>
      </node>
      <node id="6">
        <label>fc::optional&lt; uint16_t &gt;</label>
        <link refid="classfc_1_1optional"/>
      </node>
    </collaborationgraph>
    <location file="libraries/protocol/include/graphene/protocol/asset_ops.hpp" line="352" column="1" bodyfile="libraries/protocol/include/graphene/protocol/asset_ops.hpp" bodystart="351" bodyend="382"/>
    <listofallmembers>
      <member refid="structgraphene_1_1protocol_1_1asset__update__operation_1ae8f6726184da89de514756a405427da5" prot="public" virt="non-virtual"><scope>graphene::protocol::asset_update_operation</scope><name>asset_to_update</name></member>
      <member refid="structgraphene_1_1protocol_1_1asset__update__operation_1ae6e6e169f91dce773dd276560a4e7845" prot="public" virt="non-virtual"><scope>graphene::protocol::asset_update_operation</scope><name>asset_update_operation</name></member>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1aaccb0fa71ee529cf62324baaa99988fe" prot="public" virt="non-virtual"><scope>graphene::protocol::asset_update_operation</scope><name>calculate_data_fee</name></member>
      <member refid="structgraphene_1_1protocol_1_1asset__update__operation_1af9f53924987b35f3ae2073f78c1a08eb" prot="public" virt="non-virtual"><scope>graphene::protocol::asset_update_operation</scope><name>calculate_fee</name></member>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1a0be44badcee9a648413eb906dac1d3b3" prot="public" virt="non-virtual" ambiguityscope="graphene::protocol::base_operation::"><scope>graphene::protocol::asset_update_operation</scope><name>calculate_fee</name></member>
      <member refid="structgraphene_1_1protocol_1_1asset__update__operation_1ad400633bf7cc34e38d34a9e1707d6cb7" prot="public" virt="non-virtual"><scope>graphene::protocol::asset_update_operation</scope><name>extensions</name></member>
      <member refid="structgraphene_1_1protocol_1_1asset__update__operation_1aae159a3f90c63125500fa2c63588a71e" prot="public" virt="non-virtual"><scope>graphene::protocol::asset_update_operation</scope><name>fee</name></member>
      <member refid="structgraphene_1_1protocol_1_1asset__update__operation_1aaf2122aa59738778113b7edf87391e01" prot="public" virt="non-virtual"><scope>graphene::protocol::asset_update_operation</scope><name>fee_payer</name></member>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1a89ed7c6e7da93cd99bb41bc8d7e2627b" prot="public" virt="virtual"><scope>graphene::protocol::asset_update_operation</scope><name>get_required_active_authorities</name></member>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1aabc48ce97877c67ff560b94284a7c0bb" prot="public" virt="virtual"><scope>graphene::protocol::asset_update_operation</scope><name>get_required_authorities</name></member>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1a3251978e7bd0bb2f2fa23bcea5dee95c" prot="public" virt="virtual"><scope>graphene::protocol::asset_update_operation</scope><name>get_required_owner_authorities</name></member>
      <member refid="structgraphene_1_1protocol_1_1asset__update__operation_1a1b3dd3dc58b03b6e8e6901f2945d85db" prot="public" virt="non-virtual"><scope>graphene::protocol::asset_update_operation</scope><name>issuer</name></member>
      <member refid="structgraphene_1_1protocol_1_1asset__update__operation_1af510e9979520868a564a11c85c71d7f4" prot="public" virt="non-virtual"><scope>graphene::protocol::asset_update_operation</scope><name>new_issuer</name></member>
      <member refid="structgraphene_1_1protocol_1_1asset__update__operation_1a8a4c9d5cbae0f5738412109b28f65d19" prot="public" virt="non-virtual"><scope>graphene::protocol::asset_update_operation</scope><name>new_options</name></member>
      <member refid="structgraphene_1_1protocol_1_1asset__update__operation_1a7445df10a53a532b8b3bf8a96f4ef0cb" prot="public" virt="virtual"><scope>graphene::protocol::asset_update_operation</scope><name>validate</name></member>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1a485f3d3b963ff4c081af85945cf27774" prot="public" virt="non-virtual"><scope>graphene::protocol::asset_update_operation</scope><name>validate_parallel</name></member>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1a04ac6688e2df1d511514e4fc1983b828" prot="public" virt="virtual"><scope>graphene::protocol::asset_update_operation</scope><name>~base_operation</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
