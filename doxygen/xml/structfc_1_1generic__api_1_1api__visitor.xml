<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="structfc_1_1generic__api_1_1api__visitor" kind="struct" language="C++" prot="private">
    <compoundname>fc::generic_api::api_visitor</compoundname>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structfc_1_1generic__api_1_1api__visitor_1adab0327f4cd0fd3ee2a3557fa4537a3d" prot="public" static="no" mutable="no">
        <type><ref refid="classfc_1_1generic__api" kindref="compound">generic_api</ref> &amp;</type>
        <definition>generic_api&amp; fc::generic_api::api_visitor::_api</definition>
        <argsstring></argsstring>
        <name>_api</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/rpc/api_connection.hpp" line="227" column="1" bodyfile="libraries/fc/include/fc/rpc/api_connection.hpp" bodystart="227" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfc_1_1generic__api_1_1api__visitor_1a8d496bc1e8d88b199768ce89967b00cb" prot="public" static="no" mutable="no">
        <type>const std::weak_ptr&lt; <ref refid="classfc_1_1api__connection" kindref="compound">fc::api_connection</ref> &gt; &amp;</type>
        <definition>const std::weak_ptr&lt;fc::api_connection&gt;&amp; fc::generic_api::api_visitor::_api_con</definition>
        <argsstring></argsstring>
        <name>_api_con</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/rpc/api_connection.hpp" line="228" column="1" bodyfile="libraries/fc/include/fc/rpc/api_connection.hpp" bodystart="228" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structfc_1_1generic__api_1_1api__visitor_1ab115a30570b620790bc51378e669c939" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>fc::generic_api::api_visitor::api_visitor</definition>
        <argsstring>(generic_api &amp;a, const std::weak_ptr&lt; fc::api_connection &gt; &amp;s)</argsstring>
        <name>api_visitor</name>
        <param>
          <type><ref refid="classfc_1_1generic__api" kindref="compound">generic_api</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const std::weak_ptr&lt; <ref refid="classfc_1_1api__connection" kindref="compound">fc::api_connection</ref> &gt; &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/rpc/api_connection.hpp" line="204" column="1" bodyfile="libraries/fc/include/fc/rpc/api_connection.hpp" bodystart="204" bodyend="204"/>
      </memberdef>
      <memberdef kind="function" id="structfc_1_1generic__api_1_1api__visitor_1a6319b812c2a781214af002272f39e3d3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Interface</type>
          </param>
          <param>
            <type>typename Adaptor</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>std::function&lt; <ref refid="classfc_1_1variant" kindref="compound">variant</ref>(const <ref refid="namespacefc_1a2e5e6bdb302dfb79e684336f3fbbd8bc" kindref="member">fc::variants</ref> &amp;)&gt;</type>
        <definition>std::function&lt; variant(const fc::variants &amp;)&gt; fc::generic_api::api_visitor::to_generic</definition>
        <argsstring>(const std::function&lt; api&lt; Interface, Adaptor &gt;(Args...)&gt; &amp;f) const </argsstring>
        <name>to_generic</name>
        <param>
          <type>const std::function&lt; <ref refid="classfc_1_1api" kindref="compound">api</ref>&lt; Interface, Adaptor &gt;(Args...)&gt; &amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/rpc/api_connection.hpp" line="207" column="1" bodyfile="libraries/fc/include/fc/rpc/api_connection.hpp" bodystart="422" bodyend="434"/>
      </memberdef>
      <memberdef kind="function" id="structfc_1_1generic__api_1_1api__visitor_1aff8f46e53b555baa37897b0a0f5a7da7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Interface</type>
          </param>
          <param>
            <type>typename Adaptor</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>std::function&lt; <ref refid="classfc_1_1variant" kindref="compound">variant</ref>(const <ref refid="namespacefc_1a2e5e6bdb302dfb79e684336f3fbbd8bc" kindref="member">fc::variants</ref> &amp;)&gt;</type>
        <definition>std::function&lt; variant(const fc::variants &amp;)&gt; fc::generic_api::api_visitor::to_generic</definition>
        <argsstring>(const std::function&lt; fc::optional&lt; api&lt; Interface, Adaptor &gt;&gt;(Args...)&gt; &amp;f) const </argsstring>
        <name>to_generic</name>
        <param>
          <type>const std::function&lt; <ref refid="classfc_1_1optional" kindref="compound">fc::optional</ref>&lt; <ref refid="classfc_1_1api" kindref="compound">api</ref>&lt; Interface, Adaptor &gt;&gt;(Args...)&gt; &amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/rpc/api_connection.hpp" line="210" column="1" bodyfile="libraries/fc/include/fc/rpc/api_connection.hpp" bodystart="436" bodyend="450"/>
      </memberdef>
      <memberdef kind="function" id="structfc_1_1generic__api_1_1api__visitor_1a848ca6100955899de8bc74a286f6ebf4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>std::function&lt; <ref refid="classfc_1_1variant" kindref="compound">variant</ref>(const <ref refid="namespacefc_1a2e5e6bdb302dfb79e684336f3fbbd8bc" kindref="member">fc::variants</ref> &amp;)&gt;</type>
        <definition>std::function&lt; variant(const fc::variants &amp;)&gt; fc::generic_api::api_visitor::to_generic</definition>
        <argsstring>(const std::function&lt; fc::api_ptr(Args...)&gt; &amp;f) const </argsstring>
        <name>to_generic</name>
        <param>
          <type>const std::function&lt; <ref refid="namespacefc_1abc7fa69d18531d7645307d15b3102886" kindref="member">fc::api_ptr</ref>(Args...)&gt; &amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/rpc/api_connection.hpp" line="213" column="1" bodyfile="libraries/fc/include/fc/rpc/api_connection.hpp" bodystart="453" bodyend="467"/>
      </memberdef>
      <memberdef kind="function" id="structfc_1_1generic__api_1_1api__visitor_1a04e29968216026daa400d722ad6e4202" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename R</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>std::function&lt; <ref refid="classfc_1_1variant" kindref="compound">variant</ref>(const <ref refid="namespacefc_1a2e5e6bdb302dfb79e684336f3fbbd8bc" kindref="member">fc::variants</ref> &amp;)&gt;</type>
        <definition>std::function&lt; variant(const fc::variants &amp;)&gt; fc::generic_api::api_visitor::to_generic</definition>
        <argsstring>(const std::function&lt; R(Args...)&gt; &amp;f) const </argsstring>
        <name>to_generic</name>
        <param>
          <type>const std::function&lt; R(Args...)&gt; &amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/rpc/api_connection.hpp" line="216" column="1" bodyfile="libraries/fc/include/fc/rpc/api_connection.hpp" bodystart="470" bodyend="479"/>
      </memberdef>
      <memberdef kind="function" id="structfc_1_1generic__api_1_1api__visitor_1a0614787126d179a7e39f580f9f086ec8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>std::function&lt; <ref refid="classfc_1_1variant" kindref="compound">variant</ref>(const <ref refid="namespacefc_1a2e5e6bdb302dfb79e684336f3fbbd8bc" kindref="member">fc::variants</ref> &amp;)&gt;</type>
        <definition>std::function&lt; variant(const fc::variants &amp;)&gt; fc::generic_api::api_visitor::to_generic</definition>
        <argsstring>(const std::function&lt; void(Args...)&gt; &amp;f) const </argsstring>
        <name>to_generic</name>
        <param>
          <type>const std::function&lt; void(Args...)&gt; &amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/rpc/api_connection.hpp" line="219" column="1" bodyfile="libraries/fc/include/fc/rpc/api_connection.hpp" bodystart="482" bodyend="492"/>
      </memberdef>
      <memberdef kind="function" id="structfc_1_1generic__api_1_1api__visitor_1a5f5f83297c17817564cb2108925aa78b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Result</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void fc::generic_api::api_visitor::operator()</definition>
        <argsstring>(const char *name, std::function&lt; Result(Args...)&gt; &amp;memb) const </argsstring>
        <name>operator()</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>std::function&lt; Result(Args...)&gt; &amp;</type>
          <declname>memb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/rpc/api_connection.hpp" line="222" column="1" bodyfile="libraries/fc/include/fc/rpc/api_connection.hpp" bodystart="222" bodyend="225"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="510">
        <label>fc::generic_api</label>
        <link refid="classfc_1_1generic__api"/>
      </node>
      <node id="509">
        <label>fc::generic_api::api_visitor</label>
        <childnode refid="510" relation="usage">
          <edgelabel>_api</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="libraries/fc/include/fc/rpc/api_connection.hpp" line="203" column="1" bodyfile="libraries/fc/include/fc/rpc/api_connection.hpp" bodystart="202" bodyend="229"/>
    <listofallmembers>
      <member refid="structfc_1_1generic__api_1_1api__visitor_1adab0327f4cd0fd3ee2a3557fa4537a3d" prot="public" virt="non-virtual"><scope>fc::generic_api::api_visitor</scope><name>_api</name></member>
      <member refid="structfc_1_1generic__api_1_1api__visitor_1a8d496bc1e8d88b199768ce89967b00cb" prot="public" virt="non-virtual"><scope>fc::generic_api::api_visitor</scope><name>_api_con</name></member>
      <member refid="structfc_1_1generic__api_1_1api__visitor_1ab115a30570b620790bc51378e669c939" prot="public" virt="non-virtual"><scope>fc::generic_api::api_visitor</scope><name>api_visitor</name></member>
      <member refid="structfc_1_1generic__api_1_1api__visitor_1a5f5f83297c17817564cb2108925aa78b" prot="public" virt="non-virtual"><scope>fc::generic_api::api_visitor</scope><name>operator()</name></member>
      <member refid="structfc_1_1generic__api_1_1api__visitor_1a6319b812c2a781214af002272f39e3d3" prot="public" virt="non-virtual"><scope>fc::generic_api::api_visitor</scope><name>to_generic</name></member>
      <member refid="structfc_1_1generic__api_1_1api__visitor_1aff8f46e53b555baa37897b0a0f5a7da7" prot="public" virt="non-virtual"><scope>fc::generic_api::api_visitor</scope><name>to_generic</name></member>
      <member refid="structfc_1_1generic__api_1_1api__visitor_1a848ca6100955899de8bc74a286f6ebf4" prot="public" virt="non-virtual"><scope>fc::generic_api::api_visitor</scope><name>to_generic</name></member>
      <member refid="structfc_1_1generic__api_1_1api__visitor_1a04e29968216026daa400d722ad6e4202" prot="public" virt="non-virtual"><scope>fc::generic_api::api_visitor</scope><name>to_generic</name></member>
      <member refid="structfc_1_1generic__api_1_1api__visitor_1a0614787126d179a7e39f580f9f086ec8" prot="public" virt="non-virtual"><scope>fc::generic_api::api_visitor</scope><name>to_generic</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
