<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classfc_1_1datastream" kind="class" language="C++" prot="public">
    <compoundname>fc::datastream</compoundname>
    <includes refid="datastream_8hpp" local="no">datastream.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename</type>
        <declname>T</declname>
        <defname>T</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classfc_1_1datastream_1a8d9b05bcb8cffdad236ba5f42310698f" prot="private" static="no" mutable="no">
        <type>T</type>
        <definition>T fc::datastream&lt; T &gt;::_start</definition>
        <argsstring></argsstring>
        <name>_start</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/datastream.hpp" line="71" column="1" bodyfile="libraries/fc/include/fc/io/datastream.hpp" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classfc_1_1datastream_1a247e885a7dfd31cc7df4b002d75ba872" prot="private" static="no" mutable="no">
        <type>T</type>
        <definition>T fc::datastream&lt; T &gt;::_pos</definition>
        <argsstring></argsstring>
        <name>_pos</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/datastream.hpp" line="72" column="1" bodyfile="libraries/fc/include/fc/io/datastream.hpp" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classfc_1_1datastream_1a9f875cebe71bda9b1390b57e47f6760a" prot="private" static="no" mutable="no">
        <type>T</type>
        <definition>T fc::datastream&lt; T &gt;::_end</definition>
        <argsstring></argsstring>
        <name>_end</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/datastream.hpp" line="73" column="1" bodyfile="libraries/fc/include/fc/io/datastream.hpp" bodystart="73" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classfc_1_1datastream_1af3d9ff32d9d0099aa0e1fe2b32c27b52" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>fc::datastream&lt; T &gt;::datastream</definition>
        <argsstring>(T start, size_t s)</argsstring>
        <name>datastream</name>
        <param>
          <type>T</type>
          <declname>start</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/datastream.hpp" line="22" column="1" bodyfile="libraries/fc/include/fc/io/datastream.hpp" bodystart="22" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1datastream_1addcb56875ba172e946176d61545c7566" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void fc::datastream&lt; T &gt;::skip</definition>
        <argsstring>(size_t s)</argsstring>
        <name>skip</name>
        <param>
          <type>size_t</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/datastream.hpp" line="26" column="1" bodyfile="libraries/fc/include/fc/io/datastream.hpp" bodystart="26" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1datastream_1a214be629f6d6d28b77e530064808f215" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool fc::datastream&lt; T &gt;::read</definition>
        <argsstring>(char *d, size_t s)</argsstring>
        <name>read</name>
        <param>
          <type>char *</type>
          <declname>d</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/datastream.hpp" line="27" column="1" bodyfile="libraries/fc/include/fc/io/datastream.hpp" bodystart="27" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1datastream_1a34e2e9b2ff52859f6b642a1ea2d2de40" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool fc::datastream&lt; T &gt;::write</definition>
        <argsstring>(const char *d, size_t s)</argsstring>
        <name>write</name>
        <param>
          <type>const char *</type>
          <declname>d</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/datastream.hpp" line="36" column="1" bodyfile="libraries/fc/include/fc/io/datastream.hpp" bodystart="36" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1datastream_1a2273101ec71ad8ca79ceed3496551bfc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool fc::datastream&lt; T &gt;::put</definition>
        <argsstring>(char c)</argsstring>
        <name>put</name>
        <param>
          <type>char</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/datastream.hpp" line="45" column="1" bodyfile="libraries/fc/include/fc/io/datastream.hpp" bodystart="45" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1datastream_1a3b4ab7cddb2b1bf508a50ff071838a17" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool fc::datastream&lt; T &gt;::get</definition>
        <argsstring>(unsigned char &amp;c)</argsstring>
        <name>get</name>
        <param>
          <type>unsigned char &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/datastream.hpp" line="54" column="1" bodyfile="libraries/fc/include/fc/io/datastream.hpp" bodystart="54" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1datastream_1a5d4302e97258dc8e544b180de7bbe047" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool fc::datastream&lt; T &gt;::get</definition>
        <argsstring>(char &amp;c)</argsstring>
        <name>get</name>
        <param>
          <type>char &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/datastream.hpp" line="55" column="1" bodyfile="libraries/fc/include/fc/io/datastream.hpp" bodystart="55" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1datastream_1ad9a1c2df6a42a62e2d027d4892d5fc44" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>T</type>
        <definition>T fc::datastream&lt; T &gt;::pos</definition>
        <argsstring>() const</argsstring>
        <name>pos</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/datastream.hpp" line="65" column="1" bodyfile="libraries/fc/include/fc/io/datastream.hpp" bodystart="65" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1datastream_1a4ff633c9925fc602b8b0e8a12e2bc01d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool fc::datastream&lt; T &gt;::valid</definition>
        <argsstring>() const</argsstring>
        <name>valid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/datastream.hpp" line="66" column="1" bodyfile="libraries/fc/include/fc/io/datastream.hpp" bodystart="66" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1datastream_1a92e1204cc012776ccbfc8e2078d779dc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool fc::datastream&lt; T &gt;::seekp</definition>
        <argsstring>(size_t p)</argsstring>
        <name>seekp</name>
        <param>
          <type>size_t</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/datastream.hpp" line="67" column="1" bodyfile="libraries/fc/include/fc/io/datastream.hpp" bodystart="67" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1datastream_1a6cb60b9fd34f563116d4759b9a87d1eb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t fc::datastream&lt; T &gt;::tellp</definition>
        <argsstring>() const</argsstring>
        <name>tellp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/datastream.hpp" line="68" column="1" bodyfile="libraries/fc/include/fc/io/datastream.hpp" bodystart="68" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1datastream_1a15c5c832bd5682adc17f3d1f355b0dcf" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t fc::datastream&lt; T &gt;::remaining</definition>
        <argsstring>() const</argsstring>
        <name>remaining</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/datastream.hpp" line="69" column="1" bodyfile="libraries/fc/include/fc/io/datastream.hpp" bodystart="69" bodyend="69"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>The purpose of this datastream is to provide a fast, effecient, means of calculating the amount of data &quot;about to be written&quot; and then writing it. This means having two modes of operation, &quot;test run&quot; where you call the entire pack sequence calculating the size, and then actually packing it after doing a single allocation. </para>    </detaileddescription>
    <location file="libraries/fc/include/fc/io/datastream.hpp" line="20" column="1" bodyfile="libraries/fc/include/fc/io/datastream.hpp" bodystart="20" bodyend="74"/>
    <listofallmembers>
      <member refid="classfc_1_1datastream_1a9f875cebe71bda9b1390b57e47f6760a" prot="private" virt="non-virtual"><scope>fc::datastream</scope><name>_end</name></member>
      <member refid="classfc_1_1datastream_1a247e885a7dfd31cc7df4b002d75ba872" prot="private" virt="non-virtual"><scope>fc::datastream</scope><name>_pos</name></member>
      <member refid="classfc_1_1datastream_1a8d9b05bcb8cffdad236ba5f42310698f" prot="private" virt="non-virtual"><scope>fc::datastream</scope><name>_start</name></member>
      <member refid="classfc_1_1datastream_1af3d9ff32d9d0099aa0e1fe2b32c27b52" prot="public" virt="non-virtual"><scope>fc::datastream</scope><name>datastream</name></member>
      <member refid="classfc_1_1datastream_1a3b4ab7cddb2b1bf508a50ff071838a17" prot="public" virt="non-virtual"><scope>fc::datastream</scope><name>get</name></member>
      <member refid="classfc_1_1datastream_1a5d4302e97258dc8e544b180de7bbe047" prot="public" virt="non-virtual"><scope>fc::datastream</scope><name>get</name></member>
      <member refid="classfc_1_1datastream_1ad9a1c2df6a42a62e2d027d4892d5fc44" prot="public" virt="non-virtual"><scope>fc::datastream</scope><name>pos</name></member>
      <member refid="classfc_1_1datastream_1a2273101ec71ad8ca79ceed3496551bfc" prot="public" virt="non-virtual"><scope>fc::datastream</scope><name>put</name></member>
      <member refid="classfc_1_1datastream_1a214be629f6d6d28b77e530064808f215" prot="public" virt="non-virtual"><scope>fc::datastream</scope><name>read</name></member>
      <member refid="classfc_1_1datastream_1a15c5c832bd5682adc17f3d1f355b0dcf" prot="public" virt="non-virtual"><scope>fc::datastream</scope><name>remaining</name></member>
      <member refid="classfc_1_1datastream_1a92e1204cc012776ccbfc8e2078d779dc" prot="public" virt="non-virtual"><scope>fc::datastream</scope><name>seekp</name></member>
      <member refid="classfc_1_1datastream_1addcb56875ba172e946176d61545c7566" prot="public" virt="non-virtual"><scope>fc::datastream</scope><name>skip</name></member>
      <member refid="classfc_1_1datastream_1a6cb60b9fd34f563116d4759b9a87d1eb" prot="public" virt="non-virtual"><scope>fc::datastream</scope><name>tellp</name></member>
      <member refid="classfc_1_1datastream_1a4ff633c9925fc602b8b0e8a12e2bc01d" prot="public" virt="non-virtual"><scope>fc::datastream</scope><name>valid</name></member>
      <member refid="classfc_1_1datastream_1a34e2e9b2ff52859f6b642a1ea2d2de40" prot="public" virt="non-virtual"><scope>fc::datastream</scope><name>write</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
