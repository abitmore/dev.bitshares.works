<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structgraphene_1_1grouped__orders_1_1limit__order__group__key" kind="struct" language="C++" prot="public">
    <compoundname>graphene::grouped_orders::limit_order_group_key</compoundname>
    <includes refid="grouped__orders__plugin_8hpp" local="no">grouped_orders_plugin.hpp</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structgraphene_1_1grouped__orders_1_1limit__order__group__key_1a3755a439f91b13d86805fd7db614a300" prot="public" static="no" mutable="no">
        <type>uint16_t</type>
        <definition>uint16_t graphene::grouped_orders::limit_order_group_key::group</definition>
        <argsstring></argsstring>
        <name>group</name>
        <initializer>= 0</initializer>
        <briefdescription>
<para>percentage, 1 means 1 / 10000 </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/plugins/grouped_orders/include/graphene/grouped_orders/grouped_orders_plugin.hpp" line="37" column="1" bodyfile="libraries/plugins/grouped_orders/include/graphene/grouped_orders/grouped_orders_plugin.hpp" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1grouped__orders_1_1limit__order__group__key_1a6ab163299d574144f03964733f0f6dfd" prot="public" static="no" mutable="no">
        <type>price</type>
        <definition>price graphene::grouped_orders::limit_order_group_key::min_price</definition>
        <argsstring></argsstring>
        <name>min_price</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/plugins/grouped_orders/include/graphene/grouped_orders/grouped_orders_plugin.hpp" line="38" column="1" bodyfile="libraries/plugins/grouped_orders/include/graphene/grouped_orders/grouped_orders_plugin.hpp" bodystart="38" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structgraphene_1_1grouped__orders_1_1limit__order__group__key_1a841dbbd29866494d628a429131111367" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>graphene::grouped_orders::limit_order_group_key::limit_order_group_key</definition>
        <argsstring>(const uint16_t g, const price &amp;p)</argsstring>
        <name>limit_order_group_key</name>
        <param>
          <type>const uint16_t</type>
          <declname>g</declname>
        </param>
        <param>
          <type>const price &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/plugins/grouped_orders/include/graphene/grouped_orders/grouped_orders_plugin.hpp" line="34" column="1" bodyfile="libraries/plugins/grouped_orders/include/graphene/grouped_orders/grouped_orders_plugin.hpp" bodystart="34" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1grouped__orders_1_1limit__order__group__key_1a4ad89f32a67e095a48c9a8f37255c19c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>graphene::grouped_orders::limit_order_group_key::limit_order_group_key</definition>
        <argsstring>()</argsstring>
        <name>limit_order_group_key</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/plugins/grouped_orders/include/graphene/grouped_orders/grouped_orders_plugin.hpp" line="35" column="1" bodyfile="libraries/plugins/grouped_orders/include/graphene/grouped_orders/grouped_orders_plugin.hpp" bodystart="35" bodyend="35"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="structgraphene_1_1grouped__orders_1_1limit__order__group__key_1ac110103fa1787f85381e631eb4a2f522" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator&lt;</definition>
        <argsstring>(const limit_order_group_key &amp;a, const limit_order_group_key &amp;b)</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const <ref refid="structgraphene_1_1grouped__orders_1_1limit__order__group__key" kindref="compound">limit_order_group_key</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="structgraphene_1_1grouped__orders_1_1limit__order__group__key" kindref="compound">limit_order_group_key</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/plugins/grouped_orders/include/graphene/grouped_orders/grouped_orders_plugin.hpp" line="40" column="1" bodyfile="libraries/plugins/grouped_orders/include/graphene/grouped_orders/grouped_orders_plugin.hpp" bodystart="40" bodyend="44"/>
      </memberdef>
      <memberdef kind="friend" id="structgraphene_1_1grouped__orders_1_1limit__order__group__key_1acbc6af980a1dcd8bf823fbe03334104c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator==</definition>
        <argsstring>(const limit_order_group_key &amp;a, const limit_order_group_key &amp;b)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="structgraphene_1_1grouped__orders_1_1limit__order__group__key" kindref="compound">limit_order_group_key</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="structgraphene_1_1grouped__orders_1_1limit__order__group__key" kindref="compound">limit_order_group_key</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/plugins/grouped_orders/include/graphene/grouped_orders/grouped_orders_plugin.hpp" line="45" column="1" bodyfile="libraries/plugins/grouped_orders/include/graphene/grouped_orders/grouped_orders_plugin.hpp" bodystart="45" bodyend="48"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="libraries/plugins/grouped_orders/include/graphene/grouped_orders/grouped_orders_plugin.hpp" line="33" column="1" bodyfile="libraries/plugins/grouped_orders/include/graphene/grouped_orders/grouped_orders_plugin.hpp" bodystart="32" bodyend="49"/>
    <listofallmembers>
      <member refid="structgraphene_1_1grouped__orders_1_1limit__order__group__key_1a3755a439f91b13d86805fd7db614a300" prot="public" virt="non-virtual"><scope>graphene::grouped_orders::limit_order_group_key</scope><name>group</name></member>
      <member refid="structgraphene_1_1grouped__orders_1_1limit__order__group__key_1a841dbbd29866494d628a429131111367" prot="public" virt="non-virtual"><scope>graphene::grouped_orders::limit_order_group_key</scope><name>limit_order_group_key</name></member>
      <member refid="structgraphene_1_1grouped__orders_1_1limit__order__group__key_1a4ad89f32a67e095a48c9a8f37255c19c" prot="public" virt="non-virtual"><scope>graphene::grouped_orders::limit_order_group_key</scope><name>limit_order_group_key</name></member>
      <member refid="structgraphene_1_1grouped__orders_1_1limit__order__group__key_1a6ab163299d574144f03964733f0f6dfd" prot="public" virt="non-virtual"><scope>graphene::grouped_orders::limit_order_group_key</scope><name>min_price</name></member>
      <member refid="structgraphene_1_1grouped__orders_1_1limit__order__group__key_1ac110103fa1787f85381e631eb4a2f522" prot="public" virt="non-virtual"><scope>graphene::grouped_orders::limit_order_group_key</scope><name>operator&lt;</name></member>
      <member refid="structgraphene_1_1grouped__orders_1_1limit__order__group__key_1acbc6af980a1dcd8bf823fbe03334104c" prot="public" virt="non-virtual"><scope>graphene::grouped_orders::limit_order_group_key</scope><name>operator==</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
