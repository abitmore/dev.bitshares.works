<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structfc_1_1api__connection_1_1api__visitor" kind="struct" language="C++" prot="private">
    <compoundname>fc::api_connection::api_visitor</compoundname>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structfc_1_1api__connection_1_1api__visitor_1a04d219a6fa671c7a46443cbbf8177207" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t fc::api_connection::api_visitor::_api_id</definition>
        <argsstring></argsstring>
        <name>_api_id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/rpc/api_connection.hpp" line="307" column="1" bodyfile="libraries/fc/include/fc/rpc/api_connection.hpp" bodystart="307" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfc_1_1api__connection_1_1api__visitor_1a485417cb687f56fa49f39d6a68446103" prot="public" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classfc_1_1api__connection" kindref="compound">fc::api_connection</ref> &gt;</type>
        <definition>std::shared_ptr&lt;fc::api_connection&gt; fc::api_connection::api_visitor::_connection</definition>
        <argsstring></argsstring>
        <name>_connection</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/rpc/api_connection.hpp" line="308" column="1" bodyfile="libraries/fc/include/fc/rpc/api_connection.hpp" bodystart="308" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structfc_1_1api__connection_1_1api__visitor_1a03f4265c8ace7597b54e87097320900a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>fc::api_connection::api_visitor::api_visitor</definition>
        <argsstring>(uint32_t api_id, std::shared_ptr&lt; fc::api_connection &gt; con)</argsstring>
        <name>api_visitor</name>
        <param>
          <type>uint32_t</type>
          <declname>api_id</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classfc_1_1api__connection" kindref="compound">fc::api_connection</ref> &gt;</type>
          <declname>con</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/rpc/api_connection.hpp" line="310" column="1" bodyfile="libraries/fc/include/fc/rpc/api_connection.hpp" bodystart="310" bodyend="313"/>
      </memberdef>
      <memberdef kind="function" id="structfc_1_1api__connection_1_1api__visitor_1aa18d340286ae996a111860a036fcdf62" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fc::api_connection::api_visitor::api_visitor</definition>
        <argsstring>()=delete</argsstring>
        <name>api_visitor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/rpc/api_connection.hpp" line="315" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structfc_1_1api__connection_1_1api__visitor_1a490a6a2e84b004ec6a1ccfd0afcccacd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Result</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void fc::api_connection::api_visitor::operator()</definition>
        <argsstring>(const char *name, std::function&lt; Result(Args...)&gt; &amp;memb) const</argsstring>
        <name>operator()</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>std::function&lt; Result(Args...)&gt; &amp;</type>
          <declname>memb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/rpc/api_connection.hpp" line="358" column="1" bodyfile="libraries/fc/include/fc/rpc/api_connection.hpp" bodystart="358" bodyend="366"/>
      </memberdef>
      <memberdef kind="function" id="structfc_1_1api__connection_1_1api__visitor_1a2baac681d413a8eb3d02e1b9d5c26f6d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void fc::api_connection::api_visitor::operator()</definition>
        <argsstring>(const char *name, std::function&lt; void(Args...)&gt; &amp;memb) const</argsstring>
        <name>operator()</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>std::function&lt; void(Args...)&gt; &amp;</type>
          <declname>memb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/rpc/api_connection.hpp" line="368" column="1" bodyfile="libraries/fc/include/fc/rpc/api_connection.hpp" bodystart="368" bodyend="375"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structfc_1_1api__connection_1_1api__visitor_1ade1ecee0c774610b999aa36d46f982ed" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Result</type>
          </param>
        </templateparamlist>
        <type>Result</type>
        <definition>static Result fc::api_connection::api_visitor::from_variant</definition>
        <argsstring>(const variant &amp;v, Result *, const std::shared_ptr&lt; fc::api_connection &gt; &amp;, uint32_t max_depth)</argsstring>
        <name>from_variant</name>
        <param>
          <type>const <ref refid="classfc_1_1variant" kindref="compound">variant</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>Result *</type>
        </param>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classfc_1_1api__connection" kindref="compound">fc::api_connection</ref> &gt; &amp;</type>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>max_depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/rpc/api_connection.hpp" line="318" column="1" bodyfile="libraries/fc/include/fc/rpc/api_connection.hpp" bodystart="318" bodyend="321"/>
      </memberdef>
      <memberdef kind="function" id="structfc_1_1api__connection_1_1api__visitor_1a3c4596098f75f4a14c96396c0fe7f10e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ResultInterface</type>
          </param>
        </templateparamlist>
        <type><ref refid="classfc_1_1api" kindref="compound">fc::api</ref>&lt; ResultInterface &gt;</type>
        <definition>static fc::api&lt;ResultInterface&gt; fc::api_connection::api_visitor::from_variant</definition>
        <argsstring>(const variant &amp;v, fc::api&lt; ResultInterface &gt; *, const std::shared_ptr&lt; fc::api_connection &gt; &amp;con, uint32_t max_depth=1)</argsstring>
        <name>from_variant</name>
        <param>
          <type>const <ref refid="classfc_1_1variant" kindref="compound">variant</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type><ref refid="classfc_1_1api" kindref="compound">fc::api</ref>&lt; ResultInterface &gt; *</type>
        </param>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classfc_1_1api__connection" kindref="compound">fc::api_connection</ref> &gt; &amp;</type>
          <declname>con</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>max_depth</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/rpc/api_connection.hpp" line="324" column="1" bodyfile="libraries/fc/include/fc/rpc/api_connection.hpp" bodystart="324" bodyend="331"/>
      </memberdef>
      <memberdef kind="function" id="structfc_1_1api__connection_1_1api__visitor_1a7f15329b257f29bbfe38b021f4579e84" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacefc_1abc7fa69d18531d7645307d15b3102886" kindref="member">fc::api_ptr</ref></type>
        <definition>static fc::api_ptr fc::api_connection::api_visitor::from_variant</definition>
        <argsstring>(const variant &amp;v, fc::api_ptr *, const std::shared_ptr&lt; fc::api_connection &gt; &amp;con, uint32_t max_depth=1)</argsstring>
        <name>from_variant</name>
        <param>
          <type>const <ref refid="classfc_1_1variant" kindref="compound">variant</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type><ref refid="namespacefc_1abc7fa69d18531d7645307d15b3102886" kindref="member">fc::api_ptr</ref> *</type>
        </param>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classfc_1_1api__connection" kindref="compound">fc::api_connection</ref> &gt; &amp;</type>
          <declname>con</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>max_depth</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/rpc/api_connection.hpp" line="333" column="1" bodyfile="libraries/fc/include/fc/rpc/api_connection.hpp" bodystart="333" bodyend="343"/>
      </memberdef>
      <memberdef kind="function" id="structfc_1_1api__connection_1_1api__visitor_1ac2c32ac3db764af2a57266e33eb45d92" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="classfc_1_1variant" kindref="compound">fc::variant</ref></type>
        <definition>static fc::variant fc::api_connection::api_visitor::convert_callbacks</definition>
        <argsstring>(const std::shared_ptr&lt; fc::api_connection &gt; &amp;con, const T &amp;v)</argsstring>
        <name>convert_callbacks</name>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classfc_1_1api__connection" kindref="compound">fc::api_connection</ref> &gt; &amp;</type>
          <declname>con</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/rpc/api_connection.hpp" line="346" column="1" bodyfile="libraries/fc/include/fc/rpc/api_connection.hpp" bodystart="346" bodyend="349"/>
      </memberdef>
      <memberdef kind="function" id="structfc_1_1api__connection_1_1api__visitor_1a2fdb78b915e6661561b13866fd4a952e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Signature</type>
          </param>
        </templateparamlist>
        <type><ref refid="classfc_1_1variant" kindref="compound">fc::variant</ref></type>
        <definition>static fc::variant fc::api_connection::api_visitor::convert_callbacks</definition>
        <argsstring>(const std::shared_ptr&lt; fc::api_connection &gt; &amp;con, const std::function&lt; Signature &gt; &amp;v)</argsstring>
        <name>convert_callbacks</name>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classfc_1_1api__connection" kindref="compound">fc::api_connection</ref> &gt; &amp;</type>
          <declname>con</declname>
        </param>
        <param>
          <type>const std::function&lt; Signature &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/rpc/api_connection.hpp" line="352" column="1" bodyfile="libraries/fc/include/fc/rpc/api_connection.hpp" bodystart="352" bodyend="355"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="libraries/fc/include/fc/rpc/api_connection.hpp" line="306" column="1" bodyfile="libraries/fc/include/fc/rpc/api_connection.hpp" bodystart="305" bodyend="376"/>
    <listofallmembers>
      <member refid="structfc_1_1api__connection_1_1api__visitor_1a04d219a6fa671c7a46443cbbf8177207" prot="public" virt="non-virtual"><scope>fc::api_connection::api_visitor</scope><name>_api_id</name></member>
      <member refid="structfc_1_1api__connection_1_1api__visitor_1a485417cb687f56fa49f39d6a68446103" prot="public" virt="non-virtual"><scope>fc::api_connection::api_visitor</scope><name>_connection</name></member>
      <member refid="structfc_1_1api__connection_1_1api__visitor_1a03f4265c8ace7597b54e87097320900a" prot="public" virt="non-virtual"><scope>fc::api_connection::api_visitor</scope><name>api_visitor</name></member>
      <member refid="structfc_1_1api__connection_1_1api__visitor_1aa18d340286ae996a111860a036fcdf62" prot="public" virt="non-virtual"><scope>fc::api_connection::api_visitor</scope><name>api_visitor</name></member>
      <member refid="structfc_1_1api__connection_1_1api__visitor_1ac2c32ac3db764af2a57266e33eb45d92" prot="public" virt="non-virtual"><scope>fc::api_connection::api_visitor</scope><name>convert_callbacks</name></member>
      <member refid="structfc_1_1api__connection_1_1api__visitor_1a2fdb78b915e6661561b13866fd4a952e" prot="public" virt="non-virtual"><scope>fc::api_connection::api_visitor</scope><name>convert_callbacks</name></member>
      <member refid="structfc_1_1api__connection_1_1api__visitor_1ade1ecee0c774610b999aa36d46f982ed" prot="public" virt="non-virtual"><scope>fc::api_connection::api_visitor</scope><name>from_variant</name></member>
      <member refid="structfc_1_1api__connection_1_1api__visitor_1a3c4596098f75f4a14c96396c0fe7f10e" prot="public" virt="non-virtual"><scope>fc::api_connection::api_visitor</scope><name>from_variant</name></member>
      <member refid="structfc_1_1api__connection_1_1api__visitor_1a7f15329b257f29bbfe38b021f4579e84" prot="public" virt="non-virtual"><scope>fc::api_connection::api_visitor</scope><name>from_variant</name></member>
      <member refid="structfc_1_1api__connection_1_1api__visitor_1a490a6a2e84b004ec6a1ccfd0afcccacd" prot="public" virt="non-virtual"><scope>fc::api_connection::api_visitor</scope><name>operator()</name></member>
      <member refid="structfc_1_1api__connection_1_1api__visitor_1a2baac681d413a8eb3d02e1b9d5c26f6d" prot="public" virt="non-virtual"><scope>fc::api_connection::api_visitor</scope><name>operator()</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
