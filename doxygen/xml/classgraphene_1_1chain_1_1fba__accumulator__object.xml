<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classgraphene_1_1chain_1_1fba__accumulator__object" kind="class" language="C++" prot="public">
    <compoundname>graphene::chain::fba_accumulator_object</compoundname>
    <basecompoundref refid="classgraphene_1_1db_1_1abstract__object" prot="public" virt="non-virtual">graphene::db::abstract_object&lt; fba_accumulator_object, implementation_ids, impl_fba_accumulator_object_type &gt;</basecompoundref>
    <includes refid="fba__object_8hpp" local="no">fba_object.hpp</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classgraphene_1_1chain_1_1fba__accumulator__object_1a45696b9e94b9c21d01fc2908971fc598" prot="public" static="no" mutable="no">
        <type><ref refid="namespacegraphene_1_1protocol_1a69b2104c1c11eed2d17bd29b86713347" kindref="member">share_type</ref></type>
        <definition>share_type graphene::chain::fba_accumulator_object::accumulated_fba_fees</definition>
        <argsstring></argsstring>
        <name>accumulated_fba_fees</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/fba_object.hpp" line="41" column="18" bodyfile="libraries/chain/include/graphene/chain/fba_object.hpp" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgraphene_1_1chain_1_1fba__accumulator__object_1a5fc6661fec6010ac2951b18a2a6bfb24" prot="public" static="no" mutable="no">
        <type>optional&lt; asset_id_type &gt;</type>
        <definition>optional&lt; asset_id_type &gt; graphene::chain::fba_accumulator_object::designated_asset</definition>
        <argsstring></argsstring>
        <name>designated_asset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/fba_object.hpp" line="42" column="16" bodyfile="libraries/chain/include/graphene/chain/fba_object.hpp" bodystart="42" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classgraphene_1_1chain_1_1fba__accumulator__object_1a3db11e53cca10670dffcb825d104c1ef" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool graphene::chain::fba_accumulator_object::is_configured</definition>
        <argsstring>(const database &amp;db) const</argsstring>
        <name>is_configured</name>
        <param>
          <type>const <ref refid="classgraphene_1_1chain_1_1database" kindref="compound">database</ref> &amp;</type>
          <declname>db</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/fba_object.hpp" line="44" column="12" bodyfile="libraries/chain/fba_object.cpp" bodystart="31" bodyend="101"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><ref refid="classgraphene_1_1chain_1_1fba__accumulator__object" kindref="compound">fba_accumulator_object</ref> accumulates fees to be paid out via buyback or other FBA mechanism. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>graphene::db::abstract_object&lt; fba_accumulator_object, implementation_ids, impl_fba_accumulator_object_type &gt;</label>
        <link refid="classgraphene_1_1db_1_1abstract__object"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>graphene::chain::fba_accumulator_object</label>
        <link refid="classgraphene_1_1chain_1_1fba__accumulator__object"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>graphene::db::object</label>
        <link refid="classgraphene_1_1db_1_1object"/>
      </node>
      <node id="3">
        <label>graphene::db::base_abstract_object&lt; fba_accumulator_object &gt;</label>
        <link refid="classgraphene_1_1db_1_1base__abstract__object"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="6">
        <label>fc::optional&lt; asset_id_type &gt;</label>
        <link refid="classfc_1_1optional"/>
      </node>
      <node id="8">
        <label>fc::safe_base&lt; int64_t &gt;</label>
        <link refid="structfc_1_1safe__base"/>
      </node>
      <node id="2">
        <label>graphene::db::abstract_object&lt; fba_accumulator_object, implementation_ids, impl_fba_accumulator_object_type &gt;</label>
        <link refid="classgraphene_1_1db_1_1abstract__object"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>fc::safe&lt; int64_t &gt;</label>
        <link refid="structfc_1_1safe"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>graphene::chain::fba_accumulator_object</label>
        <link refid="classgraphene_1_1chain_1_1fba__accumulator__object"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>designated_asset</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>accumulated_fba_fees</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>graphene::db::object_id_type</label>
        <link refid="structgraphene_1_1db_1_1object__id__type"/>
      </node>
      <node id="4">
        <label>graphene::db::object</label>
        <link refid="classgraphene_1_1db_1_1object"/>
        <childnode refid="5" relation="usage">
          <edgelabel>id</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>graphene::db::base_abstract_object&lt; fba_accumulator_object &gt;</label>
        <link refid="classgraphene_1_1db_1_1base__abstract__object"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="libraries/chain/include/graphene/chain/fba_object.hpp" line="39" column="1" bodyfile="libraries/chain/include/graphene/chain/fba_object.hpp" bodystart="37" bodyend="45"/>
    <listofallmembers>
      <member refid="classgraphene_1_1db_1_1abstract__object_1a62b6a9a9290a38dc05763d920186872c" prot="public" virt="non-virtual"><scope>graphene::chain::fba_accumulator_object</scope><name>abstract_object</name></member>
      <member refid="classgraphene_1_1chain_1_1fba__accumulator__object_1a45696b9e94b9c21d01fc2908971fc598" prot="public" virt="non-virtual"><scope>graphene::chain::fba_accumulator_object</scope><name>accumulated_fba_fees</name></member>
      <member refid="classgraphene_1_1db_1_1base__abstract__object_1af3a4c0e78138f72a0e5fd120f4105488" prot="public" virt="non-virtual"><scope>graphene::chain::fba_accumulator_object</scope><name>clone</name></member>
      <member refid="classgraphene_1_1db_1_1object_1a338c362d7ad8dec65847ed1621b0364a" prot="public" virt="pure-virtual" ambiguityscope="graphene::db::object::"><scope>graphene::chain::fba_accumulator_object</scope><name>clone</name></member>
      <member refid="classgraphene_1_1chain_1_1fba__accumulator__object_1a5fc6661fec6010ac2951b18a2a6bfb24" prot="public" virt="non-virtual"><scope>graphene::chain::fba_accumulator_object</scope><name>designated_asset</name></member>
      <member refid="classgraphene_1_1db_1_1abstract__object_1abdd95dc811d3bf7dbdc9aa0251129f81" prot="public" virt="non-virtual"><scope>graphene::chain::fba_accumulator_object</scope><name>get_id</name></member>
      <member refid="classgraphene_1_1db_1_1object_1a2ce812569d565a45dda1420cfbdf79ad" prot="public" virt="non-virtual"><scope>graphene::chain::fba_accumulator_object</scope><name>id</name></member>
      <member refid="classgraphene_1_1chain_1_1fba__accumulator__object_1a3db11e53cca10670dffcb825d104c1ef" prot="public" virt="non-virtual"><scope>graphene::chain::fba_accumulator_object</scope><name>is_configured</name></member>
      <member refid="classgraphene_1_1db_1_1base__abstract__object_1ae411f8719b1a5d32781c71a06c2b9386" prot="public" virt="virtual"><scope>graphene::chain::fba_accumulator_object</scope><name>move_from</name></member>
      <member refid="classgraphene_1_1db_1_1base__abstract__object_1ae57a6f64a9444b2f0fa0c937be480f54" prot="public" virt="non-virtual"><scope>graphene::chain::fba_accumulator_object</scope><name>object</name></member>
      <member refid="classgraphene_1_1db_1_1base__abstract__object_1abc6d16d10de6c2e780d62918a458276f" prot="public" virt="non-virtual"><scope>graphene::chain::fba_accumulator_object</scope><name>object</name></member>
      <member refid="classgraphene_1_1db_1_1object_1abc6d16d10de6c2e780d62918a458276f" prot="public" virt="non-virtual" ambiguityscope="graphene::db::object::"><scope>graphene::chain::fba_accumulator_object</scope><name>object</name></member>
      <member refid="classgraphene_1_1db_1_1base__abstract__object_1a9ba1e81bf5d130ad4f61cc95c8c9861f" prot="public" virt="non-virtual"><scope>graphene::chain::fba_accumulator_object</scope><name>pack</name></member>
      <member refid="classgraphene_1_1db_1_1object_1ae0ac940716e76ee0876fbfc3023b26eb" prot="public" virt="pure-virtual" ambiguityscope="graphene::db::object::"><scope>graphene::chain::fba_accumulator_object</scope><name>pack</name></member>
      <member refid="classgraphene_1_1db_1_1abstract__object_1afb1fe30941a4e9e6d3ca3f4a55c9e59b" prot="public" virt="non-virtual"><scope>graphene::chain::fba_accumulator_object</scope><name>space_id</name></member>
      <member refid="classgraphene_1_1db_1_1base__abstract__object_1a7dd7f3ea796b0f3ec9b4899b3e33e4b2" prot="public" virt="non-virtual"><scope>graphene::chain::fba_accumulator_object</scope><name>to_variant</name></member>
      <member refid="classgraphene_1_1db_1_1object_1aca896a32d67ffbcddd2a831c87c24644" prot="public" virt="pure-virtual" ambiguityscope="graphene::db::object::"><scope>graphene::chain::fba_accumulator_object</scope><name>to_variant</name></member>
      <member refid="classgraphene_1_1db_1_1abstract__object_1ab3d8c613dd39c1b04abfb7ac758246e6" prot="public" virt="non-virtual"><scope>graphene::chain::fba_accumulator_object</scope><name>type_id</name></member>
      <member refid="classgraphene_1_1db_1_1object_1ae8f3fa315d81c80cd93cf5ea2853e65f" prot="public" virt="virtual"><scope>graphene::chain::fba_accumulator_object</scope><name>~object</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
