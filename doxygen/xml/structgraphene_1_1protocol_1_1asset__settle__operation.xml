<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structgraphene_1_1protocol_1_1asset__settle__operation" kind="struct" language="C++" prot="public">
    <compoundname>graphene::protocol::asset_settle_operation</compoundname>
    <basecompoundref refid="structgraphene_1_1protocol_1_1base__operation" prot="public" virt="non-virtual">graphene::protocol::base_operation</basecompoundref>
    <includes refid="asset__ops_8hpp" local="no">asset_ops.hpp</includes>
    <innerclass refid="structgraphene_1_1protocol_1_1asset__settle__operation_1_1fee__parameters__type" prot="public">graphene::protocol::asset_settle_operation::fee_parameters_type</innerclass>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1asset__settle__operation_1a3283e6d93a949dd35ef1e4c24743a6f3" prot="public" static="no" mutable="no">
        <type><ref refid="structgraphene_1_1protocol_1_1asset" kindref="compound">asset</ref></type>
        <definition>asset graphene::protocol::asset_settle_operation::fee</definition>
        <argsstring></argsstring>
        <name>fee</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/asset_ops.hpp" line="275" column="1" bodyfile="libraries/protocol/include/graphene/protocol/asset_ops.hpp" bodystart="275" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1asset__settle__operation_1a26d9f646c8426d417aa9de0de351c699" prot="public" static="no" mutable="no">
        <type>account_id_type</type>
        <definition>account_id_type graphene::protocol::asset_settle_operation::account</definition>
        <argsstring></argsstring>
        <name>account</name>
        <briefdescription>
<para>Account requesting the force settlement. This account pays the fee. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/asset_ops.hpp" line="277" column="1" bodyfile="libraries/protocol/include/graphene/protocol/asset_ops.hpp" bodystart="277" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1asset__settle__operation_1a4e209ef676305adc96d3472775a5c955" prot="public" static="no" mutable="no">
        <type><ref refid="structgraphene_1_1protocol_1_1asset" kindref="compound">asset</ref></type>
        <definition>asset graphene::protocol::asset_settle_operation::amount</definition>
        <argsstring></argsstring>
        <name>amount</name>
        <briefdescription>
<para>Amount of asset to force settle. This must be a market-issued asset. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/asset_ops.hpp" line="279" column="1" bodyfile="libraries/protocol/include/graphene/protocol/asset_ops.hpp" bodystart="279" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1asset__settle__operation_1afd952bfd95a9a13836b27f1b3aea8401" prot="public" static="no" mutable="no">
        <type><ref refid="group__operations_1gabaddcaf5bde76414891b4c29031d9288" kindref="member">extensions_type</ref></type>
        <definition>extensions_type graphene::protocol::asset_settle_operation::extensions</definition>
        <argsstring></argsstring>
        <name>extensions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/asset_ops.hpp" line="280" column="1" bodyfile="libraries/protocol/include/graphene/protocol/asset_ops.hpp" bodystart="280" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structgraphene_1_1protocol_1_1asset__settle__operation_1a958c9ab4ddb5343d85b894fef2e6105e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>account_id_type</type>
        <definition>account_id_type graphene::protocol::asset_settle_operation::fee_payer</definition>
        <argsstring>() const</argsstring>
        <name>fee_payer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/asset_ops.hpp" line="282" column="1" bodyfile="libraries/protocol/include/graphene/protocol/asset_ops.hpp" bodystart="282" bodyend="282"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1protocol_1_1asset__settle__operation_1a36bd9d3ce6bc24ad76fededfbedbf32c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void graphene::protocol::asset_settle_operation::validate</definition>
        <argsstring>() const</argsstring>
        <name>validate</name>
        <reimplements refid="structgraphene_1_1protocol_1_1base__operation_1a23d617a6fa0921d3f5b51dd5167e7a29">validate</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/asset_ops.hpp" line="283" column="1" bodyfile="libraries/protocol/asset_ops.cpp" bodystart="214" bodyend="218"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Schedules a market-issued asset for automatic settlement</para><para>Holders of market-issued assests may request a forced settlement for some amount of their asset. This means that the specified sum will be locked by the chain and held for the settlement period, after which time the chain will choose a margin posision holder and buy the settled asset using the margin&apos;s collateral. The price of this sale will be based on the feed price for the market-issued asset being settled. The exact settlement price will be the feed price at the time of settlement with an offset in favor of the margin position, where the offset is a blockchain parameter set in the global_property_object. </para>    </briefdescription>
    <detaileddescription>
<para>The fee is paid by <ref refid="structgraphene_1_1protocol_1_1asset__settle__operation_1a26d9f646c8426d417aa9de0de351c699" kindref="member">account</ref>, and <ref refid="structgraphene_1_1protocol_1_1asset__settle__operation_1a26d9f646c8426d417aa9de0de351c699" kindref="member">account</ref> must authorize this operation </para>    </detaileddescription>
    <inheritancegraph>
      <node id="1274">
        <label>graphene::protocol::base_operation</label>
        <link refid="structgraphene_1_1protocol_1_1base__operation"/>
      </node>
      <node id="1273">
        <label>graphene::protocol::asset_settle_operation</label>
        <link refid="structgraphene_1_1protocol_1_1asset__settle__operation"/>
        <childnode refid="1274" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1279">
        <label>account_id_type</label>
      </node>
      <node id="1278">
        <label>fc::safe&lt; int64_t &gt;</label>
        <link refid="structfc_1_1safe"/>
      </node>
      <node id="1276">
        <label>graphene::protocol::base_operation</label>
        <link refid="structgraphene_1_1protocol_1_1base__operation"/>
      </node>
      <node id="1275">
        <label>graphene::protocol::asset_settle_operation</label>
        <link refid="structgraphene_1_1protocol_1_1asset__settle__operation"/>
        <childnode refid="1276" relation="public-inheritance">
        </childnode>
        <childnode refid="1277" relation="usage">
          <edgelabel>fee</edgelabel>
          <edgelabel>amount</edgelabel>
        </childnode>
        <childnode refid="1279" relation="usage">
          <edgelabel>account</edgelabel>
        </childnode>
      </node>
      <node id="1277">
        <label>graphene::protocol::asset</label>
        <link refid="structgraphene_1_1protocol_1_1asset"/>
        <childnode refid="1278" relation="usage">
          <edgelabel>amount</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="libraries/protocol/include/graphene/protocol/asset_ops.hpp" line="264" column="1" bodyfile="libraries/protocol/include/graphene/protocol/asset_ops.hpp" bodystart="263" bodyend="284"/>
    <listofallmembers>
      <member refid="structgraphene_1_1protocol_1_1asset__settle__operation_1a26d9f646c8426d417aa9de0de351c699" prot="public" virt="non-virtual"><scope>graphene::protocol::asset_settle_operation</scope><name>account</name></member>
      <member refid="structgraphene_1_1protocol_1_1asset__settle__operation_1a4e209ef676305adc96d3472775a5c955" prot="public" virt="non-virtual"><scope>graphene::protocol::asset_settle_operation</scope><name>amount</name></member>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1aaccb0fa71ee529cf62324baaa99988fe" prot="public" virt="non-virtual"><scope>graphene::protocol::asset_settle_operation</scope><name>calculate_data_fee</name></member>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1a0be44badcee9a648413eb906dac1d3b3" prot="public" virt="non-virtual"><scope>graphene::protocol::asset_settle_operation</scope><name>calculate_fee</name></member>
      <member refid="structgraphene_1_1protocol_1_1asset__settle__operation_1afd952bfd95a9a13836b27f1b3aea8401" prot="public" virt="non-virtual"><scope>graphene::protocol::asset_settle_operation</scope><name>extensions</name></member>
      <member refid="structgraphene_1_1protocol_1_1asset__settle__operation_1a3283e6d93a949dd35ef1e4c24743a6f3" prot="public" virt="non-virtual"><scope>graphene::protocol::asset_settle_operation</scope><name>fee</name></member>
      <member refid="structgraphene_1_1protocol_1_1asset__settle__operation_1a958c9ab4ddb5343d85b894fef2e6105e" prot="public" virt="non-virtual"><scope>graphene::protocol::asset_settle_operation</scope><name>fee_payer</name></member>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1a89ed7c6e7da93cd99bb41bc8d7e2627b" prot="public" virt="virtual"><scope>graphene::protocol::asset_settle_operation</scope><name>get_required_active_authorities</name></member>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1aabc48ce97877c67ff560b94284a7c0bb" prot="public" virt="virtual"><scope>graphene::protocol::asset_settle_operation</scope><name>get_required_authorities</name></member>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1a3251978e7bd0bb2f2fa23bcea5dee95c" prot="public" virt="virtual"><scope>graphene::protocol::asset_settle_operation</scope><name>get_required_owner_authorities</name></member>
      <member refid="structgraphene_1_1protocol_1_1asset__settle__operation_1a36bd9d3ce6bc24ad76fededfbedbf32c" prot="public" virt="virtual"><scope>graphene::protocol::asset_settle_operation</scope><name>validate</name></member>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1a485f3d3b963ff4c081af85945cf27774" prot="public" virt="non-virtual"><scope>graphene::protocol::asset_settle_operation</scope><name>validate_parallel</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
