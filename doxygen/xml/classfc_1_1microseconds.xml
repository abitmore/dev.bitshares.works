<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classfc_1_1microseconds" kind="class" language="C++" prot="public">
    <compoundname>fc::microseconds</compoundname>
    <includes refid="time_8hpp" local="no">time.hpp</includes>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classfc_1_1microseconds_1aaba1d7b327cc33fcbaf19e870d0c1733" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class time_point</definition>
        <argsstring></argsstring>
        <name>time_point</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/time.hpp" line="31" column="1" bodyfile="libraries/fc/include/fc/time.hpp" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classfc_1_1microseconds_1a4aefc6bb1acd38167eb501722616714d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend <ref refid="classfc_1_1microseconds" kindref="compound">microseconds</ref></type>
        <definition>microseconds operator+</definition>
        <argsstring>(const microseconds &amp;l, const microseconds &amp;r)</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="classfc_1_1microseconds" kindref="compound">microseconds</ref> &amp;</type>
          <declname>l</declname>
        </param>
        <param>
          <type>const <ref refid="classfc_1_1microseconds" kindref="compound">microseconds</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/time.hpp" line="16" column="1" bodyfile="libraries/fc/include/fc/time.hpp" bodystart="16" bodyend="16"/>
      </memberdef>
      <memberdef kind="friend" id="classfc_1_1microseconds_1ada590d04fee1d36be15cdda38b581531" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend <ref refid="classfc_1_1microseconds" kindref="compound">microseconds</ref></type>
        <definition>microseconds operator-</definition>
        <argsstring>(const microseconds &amp;l, const microseconds &amp;r)</argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="classfc_1_1microseconds" kindref="compound">microseconds</ref> &amp;</type>
          <declname>l</declname>
        </param>
        <param>
          <type>const <ref refid="classfc_1_1microseconds" kindref="compound">microseconds</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/time.hpp" line="17" column="1" bodyfile="libraries/fc/include/fc/time.hpp" bodystart="17" bodyend="17"/>
      </memberdef>
      <memberdef kind="friend" id="classfc_1_1microseconds_1afce366cbc2e650931e2d1eb856c1339e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator&gt;</definition>
        <argsstring>(const microseconds &amp;a, const microseconds &amp;b)</argsstring>
        <name>operator&gt;</name>
        <param>
          <type>const <ref refid="classfc_1_1microseconds" kindref="compound">microseconds</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="classfc_1_1microseconds" kindref="compound">microseconds</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/time.hpp" line="22" column="1" bodyfile="libraries/fc/include/fc/time.hpp" bodystart="22" bodyend="22"/>
      </memberdef>
      <memberdef kind="friend" id="classfc_1_1microseconds_1ad4531296ec947832cc4b3f5dfbc9fc0b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator&gt;=</definition>
        <argsstring>(const microseconds &amp;a, const microseconds &amp;b)</argsstring>
        <name>operator&gt;=</name>
        <param>
          <type>const <ref refid="classfc_1_1microseconds" kindref="compound">microseconds</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="classfc_1_1microseconds" kindref="compound">microseconds</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/time.hpp" line="23" column="1" bodyfile="libraries/fc/include/fc/time.hpp" bodystart="23" bodyend="23"/>
      </memberdef>
      <memberdef kind="friend" id="classfc_1_1microseconds_1aa1877d2e6b18621502415bb755c51108" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator&lt;</definition>
        <argsstring>(const microseconds &amp;a, const microseconds &amp;b)</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const <ref refid="classfc_1_1microseconds" kindref="compound">microseconds</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="classfc_1_1microseconds" kindref="compound">microseconds</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/time.hpp" line="24" column="1" bodyfile="libraries/fc/include/fc/time.hpp" bodystart="24" bodyend="24"/>
      </memberdef>
      <memberdef kind="friend" id="classfc_1_1microseconds_1a01d844cd1e5a8b2108b564ac3b1a8ed4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator&lt;=</definition>
        <argsstring>(const microseconds &amp;a, const microseconds &amp;b)</argsstring>
        <name>operator&lt;=</name>
        <param>
          <type>const <ref refid="classfc_1_1microseconds" kindref="compound">microseconds</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="classfc_1_1microseconds" kindref="compound">microseconds</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/time.hpp" line="25" column="1" bodyfile="libraries/fc/include/fc/time.hpp" bodystart="25" bodyend="25"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classfc_1_1microseconds_1a6fa293569aee1383e5f7b1a97c6a0218" prot="private" static="no" mutable="no">
        <type>int64_t</type>
        <definition>int64_t fc::microseconds::_count</definition>
        <argsstring></argsstring>
        <name>_count</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/time.hpp" line="32" column="1" bodyfile="libraries/fc/include/fc/time.hpp" bodystart="32" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classfc_1_1microseconds_1a78f62fee263dcd62757df53148dbb3c8" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>fc::microseconds::microseconds</definition>
        <argsstring>(int64_t c=0)</argsstring>
        <name>microseconds</name>
        <param>
          <type>int64_t</type>
          <declname>c</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/time.hpp" line="14" column="1" bodyfile="libraries/fc/include/fc/time.hpp" bodystart="14" bodyend="14"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1microseconds_1a4ef8353a74c1f7dd4ae84e850f59a94a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool fc::microseconds::operator==</definition>
        <argsstring>(const microseconds &amp;c) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classfc_1_1microseconds" kindref="compound">microseconds</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/time.hpp" line="20" column="1" bodyfile="libraries/fc/include/fc/time.hpp" bodystart="20" bodyend="20"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1microseconds_1a47acd58eabdf1b5d1e023d8a69dd37cd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool fc::microseconds::operator!=</definition>
        <argsstring>(const microseconds &amp;c) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classfc_1_1microseconds" kindref="compound">microseconds</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/time.hpp" line="21" column="1" bodyfile="libraries/fc/include/fc/time.hpp" bodystart="21" bodyend="21"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1microseconds_1a7057e7821df5af6e99737bd765f60953" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classfc_1_1microseconds" kindref="compound">microseconds</ref> &amp;</type>
        <definition>microseconds&amp; fc::microseconds::operator+=</definition>
        <argsstring>(const microseconds &amp;c)</argsstring>
        <name>operator+=</name>
        <param>
          <type>const <ref refid="classfc_1_1microseconds" kindref="compound">microseconds</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/time.hpp" line="26" column="1" bodyfile="libraries/fc/include/fc/time.hpp" bodystart="26" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1microseconds_1a17b674779305e76b06ec25e456775fbf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classfc_1_1microseconds" kindref="compound">microseconds</ref> &amp;</type>
        <definition>microseconds&amp; fc::microseconds::operator-=</definition>
        <argsstring>(const microseconds &amp;c)</argsstring>
        <name>operator-=</name>
        <param>
          <type>const <ref refid="classfc_1_1microseconds" kindref="compound">microseconds</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/time.hpp" line="27" column="1" bodyfile="libraries/fc/include/fc/time.hpp" bodystart="27" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1microseconds_1ad510f79ef3c9b3d54fb16ef2d2c457b5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t fc::microseconds::count</definition>
        <argsstring>() const</argsstring>
        <name>count</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/time.hpp" line="28" column="1" bodyfile="libraries/fc/include/fc/time.hpp" bodystart="28" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1microseconds_1a32d2c09e50c2fd23e9e5866d9dbbc870" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t fc::microseconds::to_seconds</definition>
        <argsstring>() const</argsstring>
        <name>to_seconds</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/time.hpp" line="29" column="1" bodyfile="libraries/fc/include/fc/time.hpp" bodystart="29" bodyend="29"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classfc_1_1microseconds_1a83490e326e43e94a2b9f2d23b5645455" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classfc_1_1microseconds" kindref="compound">microseconds</ref></type>
        <definition>static microseconds fc::microseconds::maximum</definition>
        <argsstring>()</argsstring>
        <name>maximum</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/time.hpp" line="15" column="1" bodyfile="libraries/fc/include/fc/time.hpp" bodystart="15" bodyend="15"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="libraries/fc/include/fc/time.hpp" line="12" column="1" bodyfile="libraries/fc/include/fc/time.hpp" bodystart="12" bodyend="33"/>
    <listofallmembers>
      <member refid="classfc_1_1microseconds_1a6fa293569aee1383e5f7b1a97c6a0218" prot="private" virt="non-virtual"><scope>fc::microseconds</scope><name>_count</name></member>
      <member refid="classfc_1_1microseconds_1ad510f79ef3c9b3d54fb16ef2d2c457b5" prot="public" virt="non-virtual"><scope>fc::microseconds</scope><name>count</name></member>
      <member refid="classfc_1_1microseconds_1a83490e326e43e94a2b9f2d23b5645455" prot="public" virt="non-virtual"><scope>fc::microseconds</scope><name>maximum</name></member>
      <member refid="classfc_1_1microseconds_1a78f62fee263dcd62757df53148dbb3c8" prot="public" virt="non-virtual"><scope>fc::microseconds</scope><name>microseconds</name></member>
      <member refid="classfc_1_1microseconds_1a47acd58eabdf1b5d1e023d8a69dd37cd" prot="public" virt="non-virtual"><scope>fc::microseconds</scope><name>operator!=</name></member>
      <member refid="classfc_1_1microseconds_1a4aefc6bb1acd38167eb501722616714d" prot="public" virt="non-virtual"><scope>fc::microseconds</scope><name>operator+</name></member>
      <member refid="classfc_1_1microseconds_1a7057e7821df5af6e99737bd765f60953" prot="public" virt="non-virtual"><scope>fc::microseconds</scope><name>operator+=</name></member>
      <member refid="classfc_1_1microseconds_1ada590d04fee1d36be15cdda38b581531" prot="public" virt="non-virtual"><scope>fc::microseconds</scope><name>operator-</name></member>
      <member refid="classfc_1_1microseconds_1a17b674779305e76b06ec25e456775fbf" prot="public" virt="non-virtual"><scope>fc::microseconds</scope><name>operator-=</name></member>
      <member refid="classfc_1_1microseconds_1aa1877d2e6b18621502415bb755c51108" prot="public" virt="non-virtual"><scope>fc::microseconds</scope><name>operator&lt;</name></member>
      <member refid="classfc_1_1microseconds_1a01d844cd1e5a8b2108b564ac3b1a8ed4" prot="public" virt="non-virtual"><scope>fc::microseconds</scope><name>operator&lt;=</name></member>
      <member refid="classfc_1_1microseconds_1a4ef8353a74c1f7dd4ae84e850f59a94a" prot="public" virt="non-virtual"><scope>fc::microseconds</scope><name>operator==</name></member>
      <member refid="classfc_1_1microseconds_1afce366cbc2e650931e2d1eb856c1339e" prot="public" virt="non-virtual"><scope>fc::microseconds</scope><name>operator&gt;</name></member>
      <member refid="classfc_1_1microseconds_1ad4531296ec947832cc4b3f5dfbc9fc0b" prot="public" virt="non-virtual"><scope>fc::microseconds</scope><name>operator&gt;=</name></member>
      <member refid="classfc_1_1microseconds_1aaba1d7b327cc33fcbaf19e870d0c1733" prot="private" virt="non-virtual"><scope>fc::microseconds</scope><name>time_point</name></member>
      <member refid="classfc_1_1microseconds_1a32d2c09e50c2fd23e9e5866d9dbbc870" prot="public" virt="non-virtual"><scope>fc::microseconds</scope><name>to_seconds</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
