<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="non__preemptable__scope__check_8hpp" kind="file" language="C++">
    <compoundname>non_preemptable_scope_check.hpp</compoundname>
    <includes refid="time_8hpp" local="no">fc/time.hpp</includes>
    <includes refid="spin__yield__lock_8hpp" local="no">fc/thread/spin_yield_lock.hpp</includes>
    <includedby refid="non__preemptable__scope__check_8cpp" local="no">libraries/fc/src/thread/non_preemptable_scope_check.cpp</includedby>
    <includedby refid="node_8cpp" local="no">libraries/net/node.cpp</includedby>
    <incdepgraph>
      <node id="40164">
        <label>fc/config.hpp</label>
        <link refid="fc_2include_2fc_2config_8hpp"/>
      </node>
      <node id="40166">
        <label>functional</label>
      </node>
      <node id="40150">
        <label>boost/preprocessor/seq/seq.hpp</label>
      </node>
      <node id="40141">
        <label>assert.h</label>
      </node>
      <node id="40146">
        <label>boost/lexical_cast.hpp</label>
      </node>
      <node id="40138">
        <label>stdint.h</label>
      </node>
      <node id="40167">
        <label>fc/thread/spin_yield_lock.hpp</label>
        <link refid="spin__yield__lock_8hpp"/>
      </node>
      <node id="40143">
        <label>fc/reflect/reflect.hpp</label>
        <link refid="reflect_8hpp"/>
        <childnode refid="40144" relation="include">
        </childnode>
        <childnode refid="40146" relation="include">
        </childnode>
        <childnode refid="40147" relation="include">
        </childnode>
        <childnode refid="40148" relation="include">
        </childnode>
        <childnode refid="40149" relation="include">
        </childnode>
        <childnode refid="40150" relation="include">
        </childnode>
        <childnode refid="40151" relation="include">
        </childnode>
        <childnode refid="40138" relation="include">
        </childnode>
        <childnode refid="40152" relation="include">
        </childnode>
        <childnode refid="40153" relation="include">
        </childnode>
        <childnode refid="40154" relation="include">
        </childnode>
        <childnode refid="40165" relation="include">
        </childnode>
      </node>
      <node id="40139">
        <label>string</label>
      </node>
      <node id="40157">
        <label>map</label>
      </node>
      <node id="40154">
        <label>fc/reflect/typename.hpp</label>
        <link refid="typename_8hpp"/>
        <childnode refid="40155" relation="include">
        </childnode>
        <childnode refid="40156" relation="include">
        </childnode>
        <childnode refid="40157" relation="include">
        </childnode>
        <childnode refid="40158" relation="include">
        </childnode>
        <childnode refid="40139" relation="include">
        </childnode>
        <childnode refid="40159" relation="include">
        </childnode>
        <childnode refid="40140" relation="include">
        </childnode>
        <childnode refid="40144" relation="include">
        </childnode>
        <childnode refid="40160" relation="include">
        </childnode>
      </node>
      <node id="40136">
        <label>libraries/fc/include/fc/thread/non_preemptable_scope_check.hpp</label>
        <link refid="non__preemptable__scope__check_8hpp"/>
        <childnode refid="40137" relation="include">
        </childnode>
        <childnode refid="40167" relation="include">
        </childnode>
      </node>
      <node id="40144">
        <label>fc/string.hpp</label>
        <link refid="string_8hpp"/>
        <childnode refid="40145" relation="include">
        </childnode>
        <childnode refid="40140" relation="include">
        </childnode>
        <childnode refid="40139" relation="include">
        </childnode>
      </node>
      <node id="40151">
        <label>boost/preprocessor/stringize.hpp</label>
      </node>
      <node id="40149">
        <label>boost/preprocessor/seq/size.hpp</label>
      </node>
      <node id="40145">
        <label>fc/fwd.hpp</label>
        <link refid="fwd_8hpp"/>
      </node>
      <node id="40163">
        <label>boost/interprocess/containers/vector.hpp</label>
      </node>
      <node id="40152">
        <label>string.h</label>
      </node>
      <node id="40162">
        <label>boost/container/flat_set.hpp</label>
      </node>
      <node id="40159">
        <label>vector</label>
      </node>
      <node id="40142">
        <label>utility</label>
      </node>
      <node id="40155">
        <label>array</label>
      </node>
      <node id="40137">
        <label>fc/time.hpp</label>
        <link refid="time_8hpp"/>
        <childnode refid="40138" relation="include">
        </childnode>
        <childnode refid="40139" relation="include">
        </childnode>
        <childnode refid="40140" relation="include">
        </childnode>
        <childnode refid="40143" relation="include">
        </childnode>
      </node>
      <node id="40165">
        <label>fc/reflect/typelist.hpp</label>
        <link refid="typelist_8hpp"/>
        <childnode refid="40153" relation="include">
        </childnode>
        <childnode refid="40166" relation="include">
        </childnode>
      </node>
      <node id="40140">
        <label>fc/optional.hpp</label>
        <link refid="optional_8hpp"/>
        <childnode refid="40141" relation="include">
        </childnode>
        <childnode refid="40142" relation="include">
        </childnode>
      </node>
      <node id="40156">
        <label>deque</label>
      </node>
      <node id="40148">
        <label>boost/preprocessor/seq/enum.hpp</label>
      </node>
      <node id="40161">
        <label>boost/container/flat_map.hpp</label>
      </node>
      <node id="40153">
        <label>type_traits</label>
      </node>
      <node id="40158">
        <label>set</label>
      </node>
      <node id="40160">
        <label>fc/container/flat_fwd.hpp</label>
        <link refid="flat__fwd_8hpp"/>
        <childnode refid="40161" relation="include">
        </childnode>
        <childnode refid="40162" relation="include">
        </childnode>
        <childnode refid="40163" relation="include">
        </childnode>
        <childnode refid="40164" relation="include">
        </childnode>
      </node>
      <node id="40147">
        <label>boost/preprocessor/seq/for_each.hpp</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="40169">
        <label>libraries/fc/src/thread/non_preemptable_scope_check.cpp</label>
        <link refid="non__preemptable__scope__check_8cpp"/>
      </node>
      <node id="40170">
        <label>libraries/net/node.cpp</label>
        <link refid="node_8cpp"/>
      </node>
      <node id="40168">
        <label>libraries/fc/include/fc/thread/non_preemptable_scope_check.hpp</label>
        <link refid="non__preemptable__scope__check_8hpp"/>
        <childnode refid="40169" relation="include">
        </childnode>
        <childnode refid="40170" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classfc_1_1non__preemptable__scope__check" prot="public">fc::non_preemptable_scope_check</innerclass>
    <innernamespace refid="namespacefc">fc</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="non__preemptable__scope__check_8hpp_1a46397a84d4848e076623297f0731b56e" prot="public" static="no">
        <name>FC_NON_PREEMPTABLE_SCOPE_COMBINE_HELPER</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer>x ## y</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/thread/non_preemptable_scope_check.hpp" line="17" column="9" bodyfile="libraries/fc/include/fc/thread/non_preemptable_scope_check.hpp" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="non__preemptable__scope__check_8hpp_1acc6e1ea0c8f3ca541d1c50be1985f7b8" prot="public" static="no">
        <name>FC_NON_PREEMPTABLE_SCOPE_COMBINE</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer><ref refid="non__preemptable__scope__check_8hpp_1a46397a84d4848e076623297f0731b56e" kindref="member">FC_NON_PREEMPTABLE_SCOPE_COMBINE_HELPER</ref>(x,y)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/thread/non_preemptable_scope_check.hpp" line="18" column="9" bodyfile="libraries/fc/include/fc/thread/non_preemptable_scope_check.hpp" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="non__preemptable__scope__check_8hpp_1ae506494c9fb0a5f88dd9ca13b2d06ccd" prot="public" static="no">
        <name>ASSERT_TASK_NOT_PREEMPTED</name>
        <param></param>
        <initializer><ref refid="classfc_1_1non__preemptable__scope__check" kindref="compound">fc::non_preemptable_scope_check</ref> <ref refid="non__preemptable__scope__check_8hpp_1acc6e1ea0c8f3ca541d1c50be1985f7b8" kindref="member">FC_NON_PREEMPTABLE_SCOPE_COMBINE</ref>(scope_checker_, __LINE__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/thread/non_preemptable_scope_check.hpp" line="23" column="11" bodyfile="libraries/fc/include/fc/thread/non_preemptable_scope_check.hpp" bodystart="23" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="libraries/fc/include/fc/thread/non_preemptable_scope_check.hpp"/>
  </compounddef>
</doxygen>
