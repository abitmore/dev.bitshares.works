<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classfc_1_1buffered__istream" kind="class" language="C++" prot="public">
    <compoundname>fc::buffered_istream</compoundname>
    <basecompoundref refid="classfc_1_1istream" prot="public" virt="virtual">fc::istream</basecompoundref>
    <includes refid="buffered__iostream_8hpp" local="no">buffered_iostream.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classfc_1_1buffered__istream_1a5539718bd22faca77e39e9a7c4b36d11" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="classfc_1_1detail_1_1buffered__istream__impl" kindref="compound">detail::buffered_istream_impl</ref> &gt;</type>
        <definition>std::unique_ptr&lt;detail::buffered_istream_impl&gt; fc::buffered_istream::my</definition>
        <argsstring></argsstring>
        <name>my</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/buffered_iostream.hpp" line="44" column="1" bodyfile="libraries/fc/include/fc/io/buffered_iostream.hpp" bodystart="44" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classfc_1_1buffered__istream_1a2685f9f7e8514c848839b859d173dec6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fc::buffered_istream::buffered_istream</definition>
        <argsstring>(istream_ptr is)</argsstring>
        <name>buffered_istream</name>
        <param>
          <type><ref refid="namespacefc_1a989db13519a666ba07e85898065f442c" kindref="member">istream_ptr</ref></type>
          <declname>is</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/buffered_iostream.hpp" line="19" column="1" bodyfile="libraries/fc/src/io/buffered_iostream.cpp" bodystart="32" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1buffered__istream_1a6af022ec9841657f60d00089ddd2de90" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fc::buffered_istream::buffered_istream</definition>
        <argsstring>(buffered_istream &amp;&amp;o)</argsstring>
        <name>buffered_istream</name>
        <param>
          <type><ref refid="classfc_1_1buffered__istream" kindref="compound">buffered_istream</ref> &amp;&amp;</type>
          <declname>o</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/buffered_iostream.hpp" line="20" column="1" bodyfile="libraries/fc/src/io/buffered_iostream.cpp" bodystart="38" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1buffered__istream_1aa312532164c62e95fc7ecb2927d15465" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classfc_1_1buffered__istream" kindref="compound">buffered_istream</ref> &amp;</type>
        <definition>buffered_istream &amp; fc::buffered_istream::operator=</definition>
        <argsstring>(buffered_istream &amp;&amp;i)</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classfc_1_1buffered__istream" kindref="compound">buffered_istream</ref> &amp;&amp;</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/buffered_iostream.hpp" line="22" column="1" bodyfile="libraries/fc/src/io/buffered_iostream.cpp" bodystart="41" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1buffered__istream_1a263ef4eed4e11c939cfa7d97333c83f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>fc::buffered_istream::~buffered_istream</definition>
        <argsstring>()</argsstring>
        <name>~buffered_istream</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/buffered_iostream.hpp" line="24" column="1" bodyfile="libraries/fc/src/io/buffered_iostream.cpp" bodystart="47" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1buffered__istream_1a3e60752f783d05ba675b17562f08d011" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>size_t</type>
        <definition>size_t fc::buffered_istream::readsome</definition>
        <argsstring>(char *buf, size_t len)</argsstring>
        <name>readsome</name>
        <reimplements refid="classfc_1_1istream_1a2d8500cfafdd8ee8134a6dbe30ffbc57">readsome</reimplements>
        <param>
          <type>char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>read at least 1 byte or throw, if no data is available this method should block cooperatively until data is available or fc::eof_exception is thrown.</para><para><simplesect kind="pre"><para>len &gt; 0 </para></simplesect>
<simplesect kind="pre"><para>buf != nullptr </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>fc::eof</parametername>
</parameternamelist>
<parameterdescription>
<para>if at least 1 byte cannot be read </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/buffered_iostream.hpp" line="34" column="1" bodyfile="libraries/fc/src/io/buffered_iostream.cpp" bodystart="49" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1buffered__istream_1a462190e5205b4aaad1ad0108f31dd7d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>size_t</type>
        <definition>size_t fc::buffered_istream::readsome</definition>
        <argsstring>(const std::shared_ptr&lt; char &gt; &amp;buf, size_t len, size_t offset)</argsstring>
        <name>readsome</name>
        <reimplements refid="classfc_1_1istream_1a1480e604a53bd3f92f44c217a472fed0">readsome</reimplements>
        <param>
          <type>const std::shared_ptr&lt; char &gt; &amp;</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/buffered_iostream.hpp" line="35" column="1" bodyfile="libraries/fc/src/io/buffered_iostream.cpp" bodystart="75" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1buffered__istream_1a03792e0d056373465cbe47815cd0a99b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>char</type>
        <definition>char fc::buffered_istream::peek</definition>
        <argsstring>() const </argsstring>
        <name>peek</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method may block until at least 1 character is available. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/buffered_iostream.hpp" line="41" column="1" bodyfile="libraries/fc/src/io/buffered_iostream.cpp" bodystart="112" bodyend="129"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Reads data from an unbuffered stream and enables peek functionality. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2028">
        <label>fc::buffered_istream</label>
        <link refid="classfc_1_1buffered__istream"/>
        <childnode refid="2029" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2029">
        <label>fc::istream</label>
        <link refid="classfc_1_1istream"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2030">
        <label>fc::buffered_istream</label>
        <link refid="classfc_1_1buffered__istream"/>
        <childnode refid="2031" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2031">
        <label>fc::istream</label>
        <link refid="classfc_1_1istream"/>
      </node>
    </collaborationgraph>
    <location file="libraries/fc/include/fc/io/buffered_iostream.hpp" line="17" column="1" bodyfile="libraries/fc/include/fc/io/buffered_iostream.hpp" bodystart="16" bodyend="45"/>
    <listofallmembers>
      <member refid="classfc_1_1buffered__istream_1a2685f9f7e8514c848839b859d173dec6" prot="public" virt="non-virtual"><scope>fc::buffered_istream</scope><name>buffered_istream</name></member>
      <member refid="classfc_1_1buffered__istream_1a6af022ec9841657f60d00089ddd2de90" prot="public" virt="non-virtual"><scope>fc::buffered_istream</scope><name>buffered_istream</name></member>
      <member refid="classfc_1_1istream_1ac217a213d8fe2554eaba25b7daf6c9b2" prot="public" virt="virtual"><scope>fc::buffered_istream</scope><name>get</name></member>
      <member refid="classfc_1_1istream_1af20469d279f38832b5a2e13c95185e95" prot="public" virt="non-virtual"><scope>fc::buffered_istream</scope><name>get</name></member>
      <member refid="classfc_1_1buffered__istream_1a5539718bd22faca77e39e9a7c4b36d11" prot="private" virt="non-virtual"><scope>fc::buffered_istream</scope><name>my</name></member>
      <member refid="classfc_1_1buffered__istream_1aa312532164c62e95fc7ecb2927d15465" prot="public" virt="non-virtual"><scope>fc::buffered_istream</scope><name>operator=</name></member>
      <member refid="classfc_1_1buffered__istream_1a03792e0d056373465cbe47815cd0a99b" prot="public" virt="virtual"><scope>fc::buffered_istream</scope><name>peek</name></member>
      <member refid="classfc_1_1istream_1ad7f71af193e4aa4c2efaab0ca22b1b86" prot="public" virt="non-virtual"><scope>fc::buffered_istream</scope><name>read</name></member>
      <member refid="classfc_1_1istream_1a94e767f126e952db54be791ee0cc6d1e" prot="public" virt="non-virtual"><scope>fc::buffered_istream</scope><name>read</name></member>
      <member refid="classfc_1_1buffered__istream_1a3e60752f783d05ba675b17562f08d011" prot="public" virt="virtual"><scope>fc::buffered_istream</scope><name>readsome</name></member>
      <member refid="classfc_1_1buffered__istream_1a462190e5205b4aaad1ad0108f31dd7d4" prot="public" virt="virtual"><scope>fc::buffered_istream</scope><name>readsome</name></member>
      <member refid="classfc_1_1buffered__istream_1a263ef4eed4e11c939cfa7d97333c83f5" prot="public" virt="virtual"><scope>fc::buffered_istream</scope><name>~buffered_istream</name></member>
      <member refid="classfc_1_1istream_1a3d6f017f2fbcead4c7213618b5a21d36" prot="public" virt="virtual"><scope>fc::buffered_istream</scope><name>~istream</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
