<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classfc_1_1variant__object" kind="class" language="C++" prot="public">
    <compoundname>fc::variant_object</compoundname>
    <includes refid="variant__object_8hpp" local="no">variant_object.hpp</includes>
    <innerclass refid="classfc_1_1variant__object_1_1entry" prot="public">fc::variant_object::entry</innerclass>
      <sectiondef kind="user-defined">
      <header>Immutable Interface</header>
      <description><para>Calling these methods will not result in copies of the underlying type. </para></description>
      <memberdef kind="function" id="classfc_1_1variant__object_1ae0b10525c519de4e4ea077505cb09ac8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classfc_1_1variant__object_1aa916b09eef2dc02ea4a1400a1e69d2ae" kindref="member">iterator</ref></type>
        <definition>variant_object::iterator fc::variant_object::begin</definition>
        <argsstring>() const</argsstring>
        <name>begin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/variant_object.hpp" line="54" column="1" bodyfile="libraries/fc/src/variant_object.cpp" bodystart="53" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1variant__object_1a804706455398e249f6272b3ff19cef5d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classfc_1_1variant__object_1aa916b09eef2dc02ea4a1400a1e69d2ae" kindref="member">iterator</ref></type>
        <definition>variant_object::iterator fc::variant_object::end</definition>
        <argsstring>() const</argsstring>
        <name>end</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/variant_object.hpp" line="55" column="1" bodyfile="libraries/fc/src/variant_object.cpp" bodystart="59" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1variant__object_1acfef67913fd3c24ea8017b3a5ad49144" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classfc_1_1variant__object_1aa916b09eef2dc02ea4a1400a1e69d2ae" kindref="member">iterator</ref></type>
        <definition>variant_object::iterator fc::variant_object::find</definition>
        <argsstring>(const string &amp;key) const</argsstring>
        <name>find</name>
        <param>
          <type>const string &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/variant_object.hpp" line="56" column="1" bodyfile="libraries/fc/src/variant_object.cpp" bodystart="64" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1variant__object_1ac20032bbbaa2b452c02c9cb70c92d2af" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classfc_1_1variant__object_1aa916b09eef2dc02ea4a1400a1e69d2ae" kindref="member">iterator</ref></type>
        <definition>variant_object::iterator fc::variant_object::find</definition>
        <argsstring>(const char *key) const</argsstring>
        <name>find</name>
        <param>
          <type>const char *</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/variant_object.hpp" line="57" column="1" bodyfile="libraries/fc/src/variant_object.cpp" bodystart="69" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1variant__object_1a1eaacba2c397b848553efaa616e3b58f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classfc_1_1variant" kindref="compound">variant</ref> &amp;</type>
        <definition>const variant &amp; fc::variant_object::operator[]</definition>
        <argsstring>(const string &amp;key) const</argsstring>
        <name>operator[]</name>
        <param>
          <type>const string &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/variant_object.hpp" line="58" column="1" bodyfile="libraries/fc/src/variant_object.cpp" bodystart="81" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1variant__object_1ac1ce4210cfe70480c944fcb98bc9deb8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classfc_1_1variant" kindref="compound">variant</ref> &amp;</type>
        <definition>const variant &amp; fc::variant_object::operator[]</definition>
        <argsstring>(const char *key) const</argsstring>
        <name>operator[]</name>
        <param>
          <type>const char *</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/variant_object.hpp" line="59" column="1" bodyfile="libraries/fc/src/variant_object.cpp" bodystart="86" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1variant__object_1a0e523ff3ad212b0582ad2ac8a07773ae" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t fc::variant_object::size</definition>
        <argsstring>() const</argsstring>
        <name>size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/variant_object.hpp" line="60" column="1" bodyfile="libraries/fc/src/variant_object.cpp" bodystart="93" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1variant__object_1ae4ed31b7cb6bc6e1d2873f9121049589" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool fc::variant_object::contains</definition>
        <argsstring>(const char *key) const</argsstring>
        <name>contains</name>
        <param>
          <type>const char *</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/variant_object.hpp" line="61" column="1" bodyfile="libraries/fc/include/fc/variant_object.hpp" bodystart="61" bodyend="61"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classfc_1_1variant__object_1aa916b09eef2dc02ea4a1400a1e69d2ae" prot="public" static="no">
        <type>std::vector&lt; <ref refid="classfc_1_1variant__object_1_1entry" kindref="compound">entry</ref> &gt;::const_iterator</type>
        <definition>typedef std::vector&lt; entry &gt;::const_iterator fc::variant_object::iterator</definition>
        <argsstring></argsstring>
        <name>iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/variant_object.hpp" line="45" column="1" bodyfile="libraries/fc/include/fc/variant_object.hpp" bodystart="45" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classfc_1_1variant__object_1ab2d02aa1123b6cb11e59e7dc8745b37c" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; std::vector&lt; <ref refid="classfc_1_1variant__object_1_1entry" kindref="compound">entry</ref> &gt; &gt;</type>
        <definition>std::shared_ptr&lt; std::vector&lt; entry &gt; &gt; fc::variant_object::_key_value</definition>
        <argsstring></argsstring>
        <name>_key_value</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/variant_object.hpp" line="88" column="1" bodyfile="libraries/fc/include/fc/variant_object.hpp" bodystart="88" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classfc_1_1variant__object_1a8bc4fdcd652f006622ab45f1dfb948b7" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class mutable_variant_object</definition>
        <argsstring></argsstring>
        <name>mutable_variant_object</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/variant_object.hpp" line="89" column="1" bodyfile="libraries/fc/include/fc/variant_object.hpp" bodystart="89" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classfc_1_1variant__object_1a6eb437cd03989dd03401e2b9cb1c62a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fc::variant_object::variant_object</definition>
        <argsstring>()</argsstring>
        <name>variant_object</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/variant_object.hpp" line="64" column="1" bodyfile="libraries/fc/src/variant_object.cpp" bodystart="98" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1variant__object_1adf9035916f5395ac5858746b83ce6032" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fc::variant_object::variant_object</definition>
        <argsstring>(string key, variant val)</argsstring>
        <name>variant_object</name>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type><ref refid="classfc_1_1variant" kindref="compound">variant</ref></type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>initializes the first key/value pair in the object </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/variant_object.hpp" line="67" column="1" bodyfile="libraries/fc/src/variant_object.cpp" bodystart="103" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1variant__object_1a504a177eb5c5f1ce4e78852205f0438a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>fc::variant_object::variant_object</definition>
        <argsstring>(string key, T &amp;&amp;val)</argsstring>
        <name>variant_object</name>
        <param>
          <type>string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>T &amp;&amp;</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/variant_object.hpp" line="70" column="1" bodyfile="libraries/fc/include/fc/variant_object.hpp" bodystart="70" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1variant__object_1a3907c53c2ad996060f7fe537e4ec3cf5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fc::variant_object::variant_object</definition>
        <argsstring>(const variant_object &amp;)</argsstring>
        <name>variant_object</name>
        <param>
          <type>const <ref refid="classfc_1_1variant__object" kindref="compound">variant_object</ref> &amp;</type>
          <defname>obj</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/variant_object.hpp" line="75" column="1" bodyfile="libraries/fc/src/variant_object.cpp" bodystart="109" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1variant__object_1ad5d30ab5e0dcc6f681055d4448091eef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fc::variant_object::variant_object</definition>
        <argsstring>(variant_object &amp;&amp;)</argsstring>
        <name>variant_object</name>
        <param>
          <type><ref refid="classfc_1_1variant__object" kindref="compound">variant_object</ref> &amp;&amp;</type>
          <defname>obj</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/variant_object.hpp" line="76" column="1" bodyfile="libraries/fc/src/variant_object.cpp" bodystart="115" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1variant__object_1ace7473ca89fd326892850e1a6e6d8eb6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fc::variant_object::variant_object</definition>
        <argsstring>(const mutable_variant_object &amp;)</argsstring>
        <name>variant_object</name>
        <param>
          <type>const <ref refid="classfc_1_1mutable__variant__object" kindref="compound">mutable_variant_object</ref> &amp;</type>
          <defname>obj</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/variant_object.hpp" line="78" column="1" bodyfile="libraries/fc/src/variant_object.cpp" bodystart="122" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1variant__object_1adacb3e19bc46992cda48ef007316adf4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fc::variant_object::variant_object</definition>
        <argsstring>(mutable_variant_object &amp;&amp;)</argsstring>
        <name>variant_object</name>
        <param>
          <type><ref refid="classfc_1_1mutable__variant__object" kindref="compound">mutable_variant_object</ref> &amp;&amp;</type>
          <defname>obj</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/variant_object.hpp" line="79" column="1" bodyfile="libraries/fc/src/variant_object.cpp" bodystart="127" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1variant__object_1a9b220de00d57176dc5b33022288b6a19" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classfc_1_1variant__object" kindref="compound">variant_object</ref> &amp;</type>
        <definition>variant_object &amp; fc::variant_object::operator=</definition>
        <argsstring>(variant_object &amp;&amp;)</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classfc_1_1variant__object" kindref="compound">variant_object</ref> &amp;&amp;</type>
          <defname>obj</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/variant_object.hpp" line="81" column="1" bodyfile="libraries/fc/src/variant_object.cpp" bodystart="133" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1variant__object_1ab034399ddd26cdad32186284c9a0b959" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classfc_1_1variant__object" kindref="compound">variant_object</ref> &amp;</type>
        <definition>variant_object &amp; fc::variant_object::operator=</definition>
        <argsstring>(const variant_object &amp;)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classfc_1_1variant__object" kindref="compound">variant_object</ref> &amp;</type>
          <defname>obj</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/variant_object.hpp" line="82" column="1" bodyfile="libraries/fc/src/variant_object.cpp" bodystart="143" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1variant__object_1a8b1e8f4915247c5a2bdcb73500d7f500" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classfc_1_1variant__object" kindref="compound">variant_object</ref> &amp;</type>
        <definition>variant_object &amp; fc::variant_object::operator=</definition>
        <argsstring>(mutable_variant_object &amp;&amp;)</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classfc_1_1mutable__variant__object" kindref="compound">mutable_variant_object</ref> &amp;&amp;</type>
          <defname>obj</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/variant_object.hpp" line="84" column="1" bodyfile="libraries/fc/src/variant_object.cpp" bodystart="152" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1variant__object_1a96520c61594003f59d0e507b013949cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classfc_1_1variant__object" kindref="compound">variant_object</ref> &amp;</type>
        <definition>variant_object &amp; fc::variant_object::operator=</definition>
        <argsstring>(const mutable_variant_object &amp;)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classfc_1_1mutable__variant__object" kindref="compound">mutable_variant_object</ref> &amp;</type>
          <defname>obj</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/variant_object.hpp" line="85" column="1" bodyfile="libraries/fc/src/variant_object.cpp" bodystart="159" bodyend="163"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>An order-perserving dictionary of variant&apos;s. </para>    </briefdescription>
    <detaileddescription>
<para>Keys are kept in the order they are inserted. This dictionary implements copy-on-write</para><para><simplesect kind="note"><para>This class is not optimized for random-access on large sets of key-value pairs. </para></simplesect>
</para>    </detaileddescription>
    <location file="libraries/fc/include/fc/variant_object.hpp" line="21" column="1" bodyfile="libraries/fc/include/fc/variant_object.hpp" bodystart="20" bodyend="90"/>
    <listofallmembers>
      <member refid="classfc_1_1variant__object_1ab2d02aa1123b6cb11e59e7dc8745b37c" prot="private" virt="non-virtual"><scope>fc::variant_object</scope><name>_key_value</name></member>
      <member refid="classfc_1_1variant__object_1ae0b10525c519de4e4ea077505cb09ac8" prot="public" virt="non-virtual"><scope>fc::variant_object</scope><name>begin</name></member>
      <member refid="classfc_1_1variant__object_1ae4ed31b7cb6bc6e1d2873f9121049589" prot="public" virt="non-virtual"><scope>fc::variant_object</scope><name>contains</name></member>
      <member refid="classfc_1_1variant__object_1a804706455398e249f6272b3ff19cef5d" prot="public" virt="non-virtual"><scope>fc::variant_object</scope><name>end</name></member>
      <member refid="classfc_1_1variant__object_1acfef67913fd3c24ea8017b3a5ad49144" prot="public" virt="non-virtual"><scope>fc::variant_object</scope><name>find</name></member>
      <member refid="classfc_1_1variant__object_1ac20032bbbaa2b452c02c9cb70c92d2af" prot="public" virt="non-virtual"><scope>fc::variant_object</scope><name>find</name></member>
      <member refid="classfc_1_1variant__object_1aa916b09eef2dc02ea4a1400a1e69d2ae" prot="public" virt="non-virtual"><scope>fc::variant_object</scope><name>iterator</name></member>
      <member refid="classfc_1_1variant__object_1a8bc4fdcd652f006622ab45f1dfb948b7" prot="private" virt="non-virtual"><scope>fc::variant_object</scope><name>mutable_variant_object</name></member>
      <member refid="classfc_1_1variant__object_1a9b220de00d57176dc5b33022288b6a19" prot="public" virt="non-virtual"><scope>fc::variant_object</scope><name>operator=</name></member>
      <member refid="classfc_1_1variant__object_1ab034399ddd26cdad32186284c9a0b959" prot="public" virt="non-virtual"><scope>fc::variant_object</scope><name>operator=</name></member>
      <member refid="classfc_1_1variant__object_1a8b1e8f4915247c5a2bdcb73500d7f500" prot="public" virt="non-virtual"><scope>fc::variant_object</scope><name>operator=</name></member>
      <member refid="classfc_1_1variant__object_1a96520c61594003f59d0e507b013949cf" prot="public" virt="non-virtual"><scope>fc::variant_object</scope><name>operator=</name></member>
      <member refid="classfc_1_1variant__object_1a1eaacba2c397b848553efaa616e3b58f" prot="public" virt="non-virtual"><scope>fc::variant_object</scope><name>operator[]</name></member>
      <member refid="classfc_1_1variant__object_1ac1ce4210cfe70480c944fcb98bc9deb8" prot="public" virt="non-virtual"><scope>fc::variant_object</scope><name>operator[]</name></member>
      <member refid="classfc_1_1variant__object_1a0e523ff3ad212b0582ad2ac8a07773ae" prot="public" virt="non-virtual"><scope>fc::variant_object</scope><name>size</name></member>
      <member refid="classfc_1_1variant__object_1a6eb437cd03989dd03401e2b9cb1c62a1" prot="public" virt="non-virtual"><scope>fc::variant_object</scope><name>variant_object</name></member>
      <member refid="classfc_1_1variant__object_1adf9035916f5395ac5858746b83ce6032" prot="public" virt="non-virtual"><scope>fc::variant_object</scope><name>variant_object</name></member>
      <member refid="classfc_1_1variant__object_1a504a177eb5c5f1ce4e78852205f0438a" prot="public" virt="non-virtual"><scope>fc::variant_object</scope><name>variant_object</name></member>
      <member refid="classfc_1_1variant__object_1a3907c53c2ad996060f7fe537e4ec3cf5" prot="public" virt="non-virtual"><scope>fc::variant_object</scope><name>variant_object</name></member>
      <member refid="classfc_1_1variant__object_1ad5d30ab5e0dcc6f681055d4448091eef" prot="public" virt="non-virtual"><scope>fc::variant_object</scope><name>variant_object</name></member>
      <member refid="classfc_1_1variant__object_1ace7473ca89fd326892850e1a6e6d8eb6" prot="public" virt="non-virtual"><scope>fc::variant_object</scope><name>variant_object</name></member>
      <member refid="classfc_1_1variant__object_1adacb3e19bc46992cda48ef007316adf4" prot="public" virt="non-virtual"><scope>fc::variant_object</scope><name>variant_object</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
