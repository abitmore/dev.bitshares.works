<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classfc_1_1thread__specific__ptr" kind="class" language="C++" prot="public">
    <compoundname>fc::thread_specific_ptr</compoundname>
    <includes refid="thread__specific_8hpp" local="no">thread_specific.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classfc_1_1thread__specific__ptr_1a1579d78a7279e2a8034ce1394d3b3f2d" prot="private" static="no" mutable="no">
        <type>unsigned</type>
        <definition>unsigned fc::thread_specific_ptr&lt; T &gt;::slot</definition>
        <argsstring></argsstring>
        <name>slot</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/thread/thread_specific.hpp" line="16" column="1" bodyfile="libraries/fc/include/fc/thread/thread_specific.hpp" bodystart="16" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classfc_1_1thread__specific__ptr_1ae600f0a61206fb3b3d003f898dc4ee2e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>fc::thread_specific_ptr&lt; T &gt;::thread_specific_ptr</definition>
        <argsstring>()</argsstring>
        <name>thread_specific_ptr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/thread/thread_specific.hpp" line="18" column="1" bodyfile="libraries/fc/include/fc/thread/thread_specific.hpp" bodystart="18" bodyend="20"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1thread__specific__ptr_1ad60dff20dfd516e27f8ede17d1d7a120" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>T *</type>
        <definition>T* fc::thread_specific_ptr&lt; T &gt;::get</definition>
        <argsstring>() const</argsstring>
        <name>get</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/thread/thread_specific.hpp" line="22" column="1" bodyfile="libraries/fc/include/fc/thread/thread_specific.hpp" bodystart="22" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1thread__specific__ptr_1a2467f5659725ab1ba41916ba192a63c5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>T *</type>
        <definition>T* fc::thread_specific_ptr&lt; T &gt;::operator-&gt;</definition>
        <argsstring>() const</argsstring>
        <name>operator-&gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/thread/thread_specific.hpp" line="26" column="1" bodyfile="libraries/fc/include/fc/thread/thread_specific.hpp" bodystart="26" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1thread__specific__ptr_1a66d89a0b831dc924abbbcaae72fa8d0d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>T &amp;</type>
        <definition>T&amp; fc::thread_specific_ptr&lt; T &gt;::operator*</definition>
        <argsstring>() const</argsstring>
        <name>operator*</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/thread/thread_specific.hpp" line="30" column="1" bodyfile="libraries/fc/include/fc/thread/thread_specific.hpp" bodystart="30" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1thread__specific__ptr_1aaec02f786fd2b4d4f7ae79d3cacbc0a3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>fc::thread_specific_ptr&lt; T &gt;::operator bool</definition>
        <argsstring>() const</argsstring>
        <name>operator bool</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/thread/thread_specific.hpp" line="34" column="1" bodyfile="libraries/fc/include/fc/thread/thread_specific.hpp" bodystart="34" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1thread__specific__ptr_1a49b1018589e60f03b49ce695632925d3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void fc::thread_specific_ptr&lt; T &gt;::reset</definition>
        <argsstring>(T *new_value=0)</argsstring>
        <name>reset</name>
        <param>
          <type>T *</type>
          <declname>new_value</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/thread/thread_specific.hpp" line="42" column="1" bodyfile="libraries/fc/include/fc/thread/thread_specific.hpp" bodystart="42" bodyend="45"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classfc_1_1thread__specific__ptr_1aab81193699baee3761833607c2fd3aeb" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void fc::thread_specific_ptr&lt; T &gt;::cleanup_function</definition>
        <argsstring>(void *obj)</argsstring>
        <name>cleanup_function</name>
        <param>
          <type>void *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/thread/thread_specific.hpp" line="38" column="1" bodyfile="libraries/fc/include/fc/thread/thread_specific.hpp" bodystart="38" bodyend="41"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="libraries/fc/include/fc/thread/thread_specific.hpp" line="14" column="1" bodyfile="libraries/fc/include/fc/thread/thread_specific.hpp" bodystart="13" bodyend="46"/>
    <listofallmembers>
      <member refid="classfc_1_1thread__specific__ptr_1aab81193699baee3761833607c2fd3aeb" prot="public" virt="non-virtual"><scope>fc::thread_specific_ptr</scope><name>cleanup_function</name></member>
      <member refid="classfc_1_1thread__specific__ptr_1ad60dff20dfd516e27f8ede17d1d7a120" prot="public" virt="non-virtual"><scope>fc::thread_specific_ptr</scope><name>get</name></member>
      <member refid="classfc_1_1thread__specific__ptr_1aaec02f786fd2b4d4f7ae79d3cacbc0a3" prot="public" virt="non-virtual"><scope>fc::thread_specific_ptr</scope><name>operator bool</name></member>
      <member refid="classfc_1_1thread__specific__ptr_1a66d89a0b831dc924abbbcaae72fa8d0d" prot="public" virt="non-virtual"><scope>fc::thread_specific_ptr</scope><name>operator*</name></member>
      <member refid="classfc_1_1thread__specific__ptr_1a2467f5659725ab1ba41916ba192a63c5" prot="public" virt="non-virtual"><scope>fc::thread_specific_ptr</scope><name>operator-&gt;</name></member>
      <member refid="classfc_1_1thread__specific__ptr_1a49b1018589e60f03b49ce695632925d3" prot="public" virt="non-virtual"><scope>fc::thread_specific_ptr</scope><name>reset</name></member>
      <member refid="classfc_1_1thread__specific__ptr_1a1579d78a7279e2a8034ce1394d3b3f2d" prot="private" virt="non-virtual"><scope>fc::thread_specific_ptr</scope><name>slot</name></member>
      <member refid="classfc_1_1thread__specific__ptr_1ae600f0a61206fb3b3d003f898dc4ee2e" prot="public" virt="non-virtual"><scope>fc::thread_specific_ptr</scope><name>thread_specific_ptr</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
