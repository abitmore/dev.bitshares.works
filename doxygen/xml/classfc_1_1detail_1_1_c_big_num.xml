<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classfc_1_1detail_1_1_c_big_num" kind="class" language="C++" prot="public">
    <compoundname>fc::detail::CBigNum</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classfc_1_1detail_1_1_c_big_num_1aee9666fd5fa4280f32746c2c45c03e9c" prot="private" static="no" mutable="no">
        <type><ref refid="bigint_8hpp_1a62125ea4e1d748a4a9c1aed9766f451a" kindref="member">BIGNUM</ref> *</type>
        <definition>BIGNUM* fc::detail::CBigNum::bn</definition>
        <argsstring></argsstring>
        <name>bn</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/src/crypto/base58.cpp" line="72" column="12" bodyfile="libraries/fc/src/crypto/base58.cpp" bodystart="72" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classfc_1_1detail_1_1_c_big_num_1ac4330a63038758f356eaaad379f2e5d0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>fc::detail::CBigNum::CBigNum</definition>
        <argsstring>()</argsstring>
        <name>CBigNum</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/src/crypto/base58.cpp" line="74" column="5" bodyfile="libraries/fc/src/crypto/base58.cpp" bodystart="74" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1detail_1_1_c_big_num_1ae120554579ac3195ae015ed56a33d89d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>fc::detail::CBigNum::CBigNum</definition>
        <argsstring>(const CBigNum &amp;b)</argsstring>
        <name>CBigNum</name>
        <param>
          <type>const <ref refid="classfc_1_1detail_1_1_c_big_num" kindref="compound">CBigNum</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/src/crypto/base58.cpp" line="77" column="5" bodyfile="libraries/fc/src/crypto/base58.cpp" bodystart="77" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1detail_1_1_c_big_num_1ac8f2224dfa92c5bf1750ca795943eb52" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classfc_1_1detail_1_1_c_big_num" kindref="compound">CBigNum</ref> &amp;</type>
        <definition>CBigNum&amp; fc::detail::CBigNum::operator=</definition>
        <argsstring>(const CBigNum &amp;b)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classfc_1_1detail_1_1_c_big_num" kindref="compound">CBigNum</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/src/crypto/base58.cpp" line="87" column="13" bodyfile="libraries/fc/src/crypto/base58.cpp" bodystart="87" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1detail_1_1_c_big_num_1afafd488491c62e1c9984f4a8998e479b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>fc::detail::CBigNum::~CBigNum</definition>
        <argsstring>()</argsstring>
        <name>~CBigNum</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/src/crypto/base58.cpp" line="94" column="5" bodyfile="libraries/fc/src/crypto/base58.cpp" bodystart="94" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1detail_1_1_c_big_num_1af6c012e96af1b8da15c1b4dfbcdad81d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>fc::detail::CBigNum::CBigNum</definition>
        <argsstring>(signed char n)</argsstring>
        <name>CBigNum</name>
        <param>
          <type>signed char</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/src/crypto/base58.cpp" line="100" column="5" bodyfile="libraries/fc/src/crypto/base58.cpp" bodystart="100" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1detail_1_1_c_big_num_1af459732ac359cd8147833ab2036e7cae" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>fc::detail::CBigNum::CBigNum</definition>
        <argsstring>(short n)</argsstring>
        <name>CBigNum</name>
        <param>
          <type>short</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/src/crypto/base58.cpp" line="101" column="5" bodyfile="libraries/fc/src/crypto/base58.cpp" bodystart="101" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1detail_1_1_c_big_num_1a4f218d16647b86c47dfd12baab5f76bb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>fc::detail::CBigNum::CBigNum</definition>
        <argsstring>(int n)</argsstring>
        <name>CBigNum</name>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/src/crypto/base58.cpp" line="102" column="5" bodyfile="libraries/fc/src/crypto/base58.cpp" bodystart="102" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1detail_1_1_c_big_num_1afd9ec7f98b05efe5c7639c0f1893f016" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>fc::detail::CBigNum::CBigNum</definition>
        <argsstring>(int64_t n)</argsstring>
        <name>CBigNum</name>
        <param>
          <type>int64_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/src/crypto/base58.cpp" line="103" column="5" bodyfile="libraries/fc/src/crypto/base58.cpp" bodystart="103" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1detail_1_1_c_big_num_1a57d9791add71a1670bb3834bd2283ed2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>fc::detail::CBigNum::CBigNum</definition>
        <argsstring>(unsigned char n)</argsstring>
        <name>CBigNum</name>
        <param>
          <type>unsigned char</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/src/crypto/base58.cpp" line="104" column="5" bodyfile="libraries/fc/src/crypto/base58.cpp" bodystart="104" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1detail_1_1_c_big_num_1a37c1f98ea911a029eae4b1a7cbae8591" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>fc::detail::CBigNum::CBigNum</definition>
        <argsstring>(unsigned short n)</argsstring>
        <name>CBigNum</name>
        <param>
          <type>unsigned short</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/src/crypto/base58.cpp" line="105" column="5" bodyfile="libraries/fc/src/crypto/base58.cpp" bodystart="105" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1detail_1_1_c_big_num_1a18c6c386a536b893c82b1a43c5309420" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>fc::detail::CBigNum::CBigNum</definition>
        <argsstring>(unsigned int n)</argsstring>
        <name>CBigNum</name>
        <param>
          <type>unsigned int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/src/crypto/base58.cpp" line="106" column="5" bodyfile="libraries/fc/src/crypto/base58.cpp" bodystart="106" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1detail_1_1_c_big_num_1aefe08d51ced3f4cfaddcd5703e3abcff" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>fc::detail::CBigNum::CBigNum</definition>
        <argsstring>(uint64_t n)</argsstring>
        <name>CBigNum</name>
        <param>
          <type>uint64_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/src/crypto/base58.cpp" line="107" column="5" bodyfile="libraries/fc/src/crypto/base58.cpp" bodystart="107" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1detail_1_1_c_big_num_1a70b48837e403586a50179dda4cfe314c" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>fc::detail::CBigNum::CBigNum</definition>
        <argsstring>(const std::vector&lt; unsigned char &gt; &amp;vch)</argsstring>
        <name>CBigNum</name>
        <param>
          <type>const std::vector&lt; unsigned char &gt; &amp;</type>
          <declname>vch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/src/crypto/base58.cpp" line="109" column="14" bodyfile="libraries/fc/src/crypto/base58.cpp" bodystart="109" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1detail_1_1_c_big_num_1a13da803664428c66afdfa328e4bfb4c6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void fc::detail::CBigNum::setulong</definition>
        <argsstring>(unsigned long n)</argsstring>
        <name>setulong</name>
        <param>
          <type>unsigned long</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/src/crypto/base58.cpp" line="115" column="10" bodyfile="libraries/fc/src/crypto/base58.cpp" bodystart="115" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1detail_1_1_c_big_num_1a36afd162415599036ba7c1f15d92cb97" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned long</type>
        <definition>unsigned long fc::detail::CBigNum::getulong</definition>
        <argsstring>() const</argsstring>
        <name>getulong</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/src/crypto/base58.cpp" line="121" column="19" bodyfile="libraries/fc/src/crypto/base58.cpp" bodystart="121" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1detail_1_1_c_big_num_1af24d22c5411abff51eaaf3d8be6df19d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int fc::detail::CBigNum::getuint</definition>
        <argsstring>() const</argsstring>
        <name>getuint</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/src/crypto/base58.cpp" line="126" column="18" bodyfile="libraries/fc/src/crypto/base58.cpp" bodystart="126" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1detail_1_1_c_big_num_1a66add6053181dd0e2a4f054ddabc7175" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int fc::detail::CBigNum::getint</definition>
        <argsstring>() const</argsstring>
        <name>getint</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/src/crypto/base58.cpp" line="131" column="9" bodyfile="libraries/fc/src/crypto/base58.cpp" bodystart="131" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1detail_1_1_c_big_num_1ac4f32f781233ec03714fd791e9ab011b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void fc::detail::CBigNum::setint64</definition>
        <argsstring>(int64_t n)</argsstring>
        <name>setint64</name>
        <param>
          <type>int64_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/src/crypto/base58.cpp" line="140" column="10" bodyfile="libraries/fc/src/crypto/base58.cpp" bodystart="140" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1detail_1_1_c_big_num_1ade34244203be05ad5d005233e4cd44d8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void fc::detail::CBigNum::setuint64</definition>
        <argsstring>(uint64_t n)</argsstring>
        <name>setuint64</name>
        <param>
          <type>uint64_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/src/crypto/base58.cpp" line="175" column="10" bodyfile="libraries/fc/src/crypto/base58.cpp" bodystart="175" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1detail_1_1_c_big_num_1a8bf7a0fd6632f099dc15c82080b6bfd2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void fc::detail::CBigNum::setvch</definition>
        <argsstring>(const std::vector&lt; unsigned char &gt; &amp;vch)</argsstring>
        <name>setvch</name>
        <param>
          <type>const std::vector&lt; unsigned char &gt; &amp;</type>
          <declname>vch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/src/crypto/base58.cpp" line="203" column="10" bodyfile="libraries/fc/src/crypto/base58.cpp" bodystart="203" bodyend="216"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1detail_1_1_c_big_num_1a8663d08bedcddc4864fe203f2a41e81d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; unsigned char &gt;</type>
        <definition>std::vector&lt;unsigned char&gt; fc::detail::CBigNum::getvch</definition>
        <argsstring>() const</argsstring>
        <name>getvch</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/src/crypto/base58.cpp" line="218" column="17" bodyfile="libraries/fc/src/crypto/base58.cpp" bodystart="218" bodyend="228"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1detail_1_1_c_big_num_1a2e48046ee0af8bc1354f2ee2fafdbddc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classfc_1_1detail_1_1_c_big_num" kindref="compound">CBigNum</ref> &amp;</type>
        <definition>CBigNum&amp; fc::detail::CBigNum::SetCompact</definition>
        <argsstring>(unsigned int nCompact)</argsstring>
        <name>SetCompact</name>
        <param>
          <type>unsigned int</type>
          <declname>nCompact</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/src/crypto/base58.cpp" line="230" column="13" bodyfile="libraries/fc/src/crypto/base58.cpp" bodystart="230" bodyend="240"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1detail_1_1_c_big_num_1ae9c05fac76dcf5f29dd1d09d6b595874" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int fc::detail::CBigNum::GetCompact</definition>
        <argsstring>() const</argsstring>
        <name>GetCompact</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/src/crypto/base58.cpp" line="242" column="18" bodyfile="libraries/fc/src/crypto/base58.cpp" bodystart="242" bodyend="253"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1detail_1_1_c_big_num_1a7d108f276fb52aebe9ce861fdfd927fd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void fc::detail::CBigNum::SetHex</definition>
        <argsstring>(const std::string &amp;str)</argsstring>
        <name>SetHex</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/src/crypto/base58.cpp" line="255" column="10" bodyfile="libraries/fc/src/crypto/base58.cpp" bodystart="255" bodyend="283"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1detail_1_1_c_big_num_1a038a33252b385d22905ec81af9ecb562" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string fc::detail::CBigNum::ToString</definition>
        <argsstring>(int nBase=10) const</argsstring>
        <name>ToString</name>
        <param>
          <type>int</type>
          <declname>nBase</declname>
          <defval>10</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/src/crypto/base58.cpp" line="285" column="17" bodyfile="libraries/fc/src/crypto/base58.cpp" bodystart="285" bodyend="309"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1detail_1_1_c_big_num_1a4ab9fed48df3d9d8ab8ba1e8f3dae691" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string fc::detail::CBigNum::GetHex</definition>
        <argsstring>() const</argsstring>
        <name>GetHex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/src/crypto/base58.cpp" line="311" column="17" bodyfile="libraries/fc/src/crypto/base58.cpp" bodystart="311" bodyend="314"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1detail_1_1_c_big_num_1a46c3bbe3b43ae8afb0adbb07750ed626" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool fc::detail::CBigNum::operator!</definition>
        <argsstring>() const</argsstring>
        <name>operator!</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/src/crypto/base58.cpp" line="318" column="10" bodyfile="libraries/fc/src/crypto/base58.cpp" bodystart="318" bodyend="321"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1detail_1_1_c_big_num_1abdd035783227190293870985192d6fff" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classfc_1_1detail_1_1_c_big_num" kindref="compound">CBigNum</ref> &amp;</type>
        <definition>CBigNum&amp; fc::detail::CBigNum::operator+=</definition>
        <argsstring>(const CBigNum &amp;b)</argsstring>
        <name>operator+=</name>
        <param>
          <type>const <ref refid="classfc_1_1detail_1_1_c_big_num" kindref="compound">CBigNum</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/src/crypto/base58.cpp" line="323" column="13" bodyfile="libraries/fc/src/crypto/base58.cpp" bodystart="323" bodyend="328"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1detail_1_1_c_big_num_1a8869d320aaab1ca352a48fb57dd2434b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classfc_1_1detail_1_1_c_big_num" kindref="compound">CBigNum</ref> &amp;</type>
        <definition>CBigNum&amp; fc::detail::CBigNum::operator-=</definition>
        <argsstring>(const CBigNum &amp;b)</argsstring>
        <name>operator-=</name>
        <param>
          <type>const <ref refid="classfc_1_1detail_1_1_c_big_num" kindref="compound">CBigNum</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/src/crypto/base58.cpp" line="330" column="13" bodyfile="libraries/fc/src/crypto/base58.cpp" bodystart="330" bodyend="335"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1detail_1_1_c_big_num_1acd4ca8f9616c3dec61f510a9922179bd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classfc_1_1detail_1_1_c_big_num" kindref="compound">CBigNum</ref> &amp;</type>
        <definition>CBigNum&amp; fc::detail::CBigNum::operator*=</definition>
        <argsstring>(const CBigNum &amp;b)</argsstring>
        <name>operator*=</name>
        <param>
          <type>const <ref refid="classfc_1_1detail_1_1_c_big_num" kindref="compound">CBigNum</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/src/crypto/base58.cpp" line="337" column="13" bodyfile="libraries/fc/src/crypto/base58.cpp" bodystart="337" bodyend="343"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1detail_1_1_c_big_num_1a27c2cb745a55d6a449aba429e7e09e40" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classfc_1_1detail_1_1_c_big_num" kindref="compound">CBigNum</ref> &amp;</type>
        <definition>CBigNum&amp; fc::detail::CBigNum::operator/=</definition>
        <argsstring>(const CBigNum &amp;b)</argsstring>
        <name>operator/=</name>
        <param>
          <type>const <ref refid="classfc_1_1detail_1_1_c_big_num" kindref="compound">CBigNum</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/src/crypto/base58.cpp" line="345" column="13" bodyfile="libraries/fc/src/crypto/base58.cpp" bodystart="345" bodyend="351"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1detail_1_1_c_big_num_1a15931f5c6db453aed2703eeac52cf79e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classfc_1_1detail_1_1_c_big_num" kindref="compound">CBigNum</ref> &amp;</type>
        <definition>CBigNum&amp; fc::detail::CBigNum::operator%=</definition>
        <argsstring>(const CBigNum &amp;b)</argsstring>
        <name>operator%=</name>
        <param>
          <type>const <ref refid="classfc_1_1detail_1_1_c_big_num" kindref="compound">CBigNum</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/src/crypto/base58.cpp" line="353" column="13" bodyfile="libraries/fc/src/crypto/base58.cpp" bodystart="353" bodyend="359"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1detail_1_1_c_big_num_1ab2557d30a9c80ff72531acf89d8ade1e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classfc_1_1detail_1_1_c_big_num" kindref="compound">CBigNum</ref> &amp;</type>
        <definition>CBigNum&amp; fc::detail::CBigNum::operator&lt;&lt;=</definition>
        <argsstring>(unsigned int shift)</argsstring>
        <name>operator&lt;&lt;=</name>
        <param>
          <type>unsigned int</type>
          <declname>shift</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/src/crypto/base58.cpp" line="361" column="5" bodyfile="libraries/fc/src/crypto/base58.cpp" bodystart="361" bodyend="366"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1detail_1_1_c_big_num_1a52f51a1852e4dbc165f7df21313ebdb1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classfc_1_1detail_1_1_c_big_num" kindref="compound">CBigNum</ref> &amp;</type>
        <definition>CBigNum&amp; fc::detail::CBigNum::operator&gt;&gt;=</definition>
        <argsstring>(unsigned int shift)</argsstring>
        <name>operator&gt;&gt;=</name>
        <param>
          <type>unsigned int</type>
          <declname>shift</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/src/crypto/base58.cpp" line="368" column="13" bodyfile="libraries/fc/src/crypto/base58.cpp" bodystart="368" bodyend="383"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1detail_1_1_c_big_num_1a42f967fdd2bf3ce9a23bffc399afd66f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classfc_1_1detail_1_1_c_big_num" kindref="compound">CBigNum</ref> &amp;</type>
        <definition>CBigNum&amp; fc::detail::CBigNum::operator++</definition>
        <argsstring>()</argsstring>
        <name>operator++</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/src/crypto/base58.cpp" line="386" column="13" bodyfile="libraries/fc/src/crypto/base58.cpp" bodystart="386" bodyend="392"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1detail_1_1_c_big_num_1a43bddec0b62786005e6575dad9ef8460" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classfc_1_1detail_1_1_c_big_num" kindref="compound">CBigNum</ref></type>
        <definition>const CBigNum fc::detail::CBigNum::operator++</definition>
        <argsstring>(int)</argsstring>
        <name>operator++</name>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/src/crypto/base58.cpp" line="394" column="19" bodyfile="libraries/fc/src/crypto/base58.cpp" bodystart="394" bodyend="400"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1detail_1_1_c_big_num_1a19664fbf7c2e024f70da1815eaeae66a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classfc_1_1detail_1_1_c_big_num" kindref="compound">CBigNum</ref> &amp;</type>
        <definition>CBigNum&amp; fc::detail::CBigNum::operator--</definition>
        <argsstring>()</argsstring>
        <name>operator--</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/src/crypto/base58.cpp" line="402" column="13" bodyfile="libraries/fc/src/crypto/base58.cpp" bodystart="402" bodyend="410"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1detail_1_1_c_big_num_1ac899b01b3deb3b231d802a58b5ad8142" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classfc_1_1detail_1_1_c_big_num" kindref="compound">CBigNum</ref></type>
        <definition>const CBigNum fc::detail::CBigNum::operator--</definition>
        <argsstring>(int)</argsstring>
        <name>operator--</name>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/src/crypto/base58.cpp" line="412" column="19" bodyfile="libraries/fc/src/crypto/base58.cpp" bodystart="412" bodyend="418"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1detail_1_1_c_big_num_1a153ac08c694520cbc1a6210f8fe413d9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="bigint_8hpp_1a62125ea4e1d748a4a9c1aed9766f451a" kindref="member">BIGNUM</ref> *</type>
        <definition>const BIGNUM* fc::detail::CBigNum::to_bignum</definition>
        <argsstring>() const</argsstring>
        <name>to_bignum</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/src/crypto/base58.cpp" line="420" column="18" bodyfile="libraries/fc/src/crypto/base58.cpp" bodystart="420" bodyend="422"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1detail_1_1_c_big_num_1a71d27564fa78276fee1db619f9787466" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="bigint_8hpp_1a62125ea4e1d748a4a9c1aed9766f451a" kindref="member">BIGNUM</ref> *</type>
        <definition>BIGNUM* fc::detail::CBigNum::to_bignum</definition>
        <argsstring>()</argsstring>
        <name>to_bignum</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/src/crypto/base58.cpp" line="423" column="12" bodyfile="libraries/fc/src/crypto/base58.cpp" bodystart="423" bodyend="425"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>C++ wrapper for BIGNUM (OpenSSL bignum) </para>
    </detaileddescription>
    <location file="libraries/fc/src/crypto/base58.cpp" line="71" column="1" bodyfile="libraries/fc/src/crypto/base58.cpp" bodystart="70" bodyend="426"/>
    <listofallmembers>
      <member refid="classfc_1_1detail_1_1_c_big_num_1aee9666fd5fa4280f32746c2c45c03e9c" prot="private" virt="non-virtual"><scope>fc::detail::CBigNum</scope><name>bn</name></member>
      <member refid="classfc_1_1detail_1_1_c_big_num_1ac4330a63038758f356eaaad379f2e5d0" prot="public" virt="non-virtual"><scope>fc::detail::CBigNum</scope><name>CBigNum</name></member>
      <member refid="classfc_1_1detail_1_1_c_big_num_1ae120554579ac3195ae015ed56a33d89d" prot="public" virt="non-virtual"><scope>fc::detail::CBigNum</scope><name>CBigNum</name></member>
      <member refid="classfc_1_1detail_1_1_c_big_num_1af6c012e96af1b8da15c1b4dfbcdad81d" prot="public" virt="non-virtual"><scope>fc::detail::CBigNum</scope><name>CBigNum</name></member>
      <member refid="classfc_1_1detail_1_1_c_big_num_1af459732ac359cd8147833ab2036e7cae" prot="public" virt="non-virtual"><scope>fc::detail::CBigNum</scope><name>CBigNum</name></member>
      <member refid="classfc_1_1detail_1_1_c_big_num_1a4f218d16647b86c47dfd12baab5f76bb" prot="public" virt="non-virtual"><scope>fc::detail::CBigNum</scope><name>CBigNum</name></member>
      <member refid="classfc_1_1detail_1_1_c_big_num_1afd9ec7f98b05efe5c7639c0f1893f016" prot="public" virt="non-virtual"><scope>fc::detail::CBigNum</scope><name>CBigNum</name></member>
      <member refid="classfc_1_1detail_1_1_c_big_num_1a57d9791add71a1670bb3834bd2283ed2" prot="public" virt="non-virtual"><scope>fc::detail::CBigNum</scope><name>CBigNum</name></member>
      <member refid="classfc_1_1detail_1_1_c_big_num_1a37c1f98ea911a029eae4b1a7cbae8591" prot="public" virt="non-virtual"><scope>fc::detail::CBigNum</scope><name>CBigNum</name></member>
      <member refid="classfc_1_1detail_1_1_c_big_num_1a18c6c386a536b893c82b1a43c5309420" prot="public" virt="non-virtual"><scope>fc::detail::CBigNum</scope><name>CBigNum</name></member>
      <member refid="classfc_1_1detail_1_1_c_big_num_1aefe08d51ced3f4cfaddcd5703e3abcff" prot="public" virt="non-virtual"><scope>fc::detail::CBigNum</scope><name>CBigNum</name></member>
      <member refid="classfc_1_1detail_1_1_c_big_num_1a70b48837e403586a50179dda4cfe314c" prot="public" virt="non-virtual"><scope>fc::detail::CBigNum</scope><name>CBigNum</name></member>
      <member refid="classfc_1_1detail_1_1_c_big_num_1ae9c05fac76dcf5f29dd1d09d6b595874" prot="public" virt="non-virtual"><scope>fc::detail::CBigNum</scope><name>GetCompact</name></member>
      <member refid="classfc_1_1detail_1_1_c_big_num_1a4ab9fed48df3d9d8ab8ba1e8f3dae691" prot="public" virt="non-virtual"><scope>fc::detail::CBigNum</scope><name>GetHex</name></member>
      <member refid="classfc_1_1detail_1_1_c_big_num_1a66add6053181dd0e2a4f054ddabc7175" prot="public" virt="non-virtual"><scope>fc::detail::CBigNum</scope><name>getint</name></member>
      <member refid="classfc_1_1detail_1_1_c_big_num_1af24d22c5411abff51eaaf3d8be6df19d" prot="public" virt="non-virtual"><scope>fc::detail::CBigNum</scope><name>getuint</name></member>
      <member refid="classfc_1_1detail_1_1_c_big_num_1a36afd162415599036ba7c1f15d92cb97" prot="public" virt="non-virtual"><scope>fc::detail::CBigNum</scope><name>getulong</name></member>
      <member refid="classfc_1_1detail_1_1_c_big_num_1a8663d08bedcddc4864fe203f2a41e81d" prot="public" virt="non-virtual"><scope>fc::detail::CBigNum</scope><name>getvch</name></member>
      <member refid="classfc_1_1detail_1_1_c_big_num_1a46c3bbe3b43ae8afb0adbb07750ed626" prot="public" virt="non-virtual"><scope>fc::detail::CBigNum</scope><name>operator!</name></member>
      <member refid="classfc_1_1detail_1_1_c_big_num_1a15931f5c6db453aed2703eeac52cf79e" prot="public" virt="non-virtual"><scope>fc::detail::CBigNum</scope><name>operator%=</name></member>
      <member refid="classfc_1_1detail_1_1_c_big_num_1acd4ca8f9616c3dec61f510a9922179bd" prot="public" virt="non-virtual"><scope>fc::detail::CBigNum</scope><name>operator*=</name></member>
      <member refid="classfc_1_1detail_1_1_c_big_num_1a42f967fdd2bf3ce9a23bffc399afd66f" prot="public" virt="non-virtual"><scope>fc::detail::CBigNum</scope><name>operator++</name></member>
      <member refid="classfc_1_1detail_1_1_c_big_num_1a43bddec0b62786005e6575dad9ef8460" prot="public" virt="non-virtual"><scope>fc::detail::CBigNum</scope><name>operator++</name></member>
      <member refid="classfc_1_1detail_1_1_c_big_num_1abdd035783227190293870985192d6fff" prot="public" virt="non-virtual"><scope>fc::detail::CBigNum</scope><name>operator+=</name></member>
      <member refid="classfc_1_1detail_1_1_c_big_num_1a19664fbf7c2e024f70da1815eaeae66a" prot="public" virt="non-virtual"><scope>fc::detail::CBigNum</scope><name>operator--</name></member>
      <member refid="classfc_1_1detail_1_1_c_big_num_1ac899b01b3deb3b231d802a58b5ad8142" prot="public" virt="non-virtual"><scope>fc::detail::CBigNum</scope><name>operator--</name></member>
      <member refid="classfc_1_1detail_1_1_c_big_num_1a8869d320aaab1ca352a48fb57dd2434b" prot="public" virt="non-virtual"><scope>fc::detail::CBigNum</scope><name>operator-=</name></member>
      <member refid="classfc_1_1detail_1_1_c_big_num_1a27c2cb745a55d6a449aba429e7e09e40" prot="public" virt="non-virtual"><scope>fc::detail::CBigNum</scope><name>operator/=</name></member>
      <member refid="classfc_1_1detail_1_1_c_big_num_1ab2557d30a9c80ff72531acf89d8ade1e" prot="public" virt="non-virtual"><scope>fc::detail::CBigNum</scope><name>operator&lt;&lt;=</name></member>
      <member refid="classfc_1_1detail_1_1_c_big_num_1ac8f2224dfa92c5bf1750ca795943eb52" prot="public" virt="non-virtual"><scope>fc::detail::CBigNum</scope><name>operator=</name></member>
      <member refid="classfc_1_1detail_1_1_c_big_num_1a52f51a1852e4dbc165f7df21313ebdb1" prot="public" virt="non-virtual"><scope>fc::detail::CBigNum</scope><name>operator&gt;&gt;=</name></member>
      <member refid="classfc_1_1detail_1_1_c_big_num_1a2e48046ee0af8bc1354f2ee2fafdbddc" prot="public" virt="non-virtual"><scope>fc::detail::CBigNum</scope><name>SetCompact</name></member>
      <member refid="classfc_1_1detail_1_1_c_big_num_1a7d108f276fb52aebe9ce861fdfd927fd" prot="public" virt="non-virtual"><scope>fc::detail::CBigNum</scope><name>SetHex</name></member>
      <member refid="classfc_1_1detail_1_1_c_big_num_1ac4f32f781233ec03714fd791e9ab011b" prot="public" virt="non-virtual"><scope>fc::detail::CBigNum</scope><name>setint64</name></member>
      <member refid="classfc_1_1detail_1_1_c_big_num_1ade34244203be05ad5d005233e4cd44d8" prot="public" virt="non-virtual"><scope>fc::detail::CBigNum</scope><name>setuint64</name></member>
      <member refid="classfc_1_1detail_1_1_c_big_num_1a13da803664428c66afdfa328e4bfb4c6" prot="public" virt="non-virtual"><scope>fc::detail::CBigNum</scope><name>setulong</name></member>
      <member refid="classfc_1_1detail_1_1_c_big_num_1a8bf7a0fd6632f099dc15c82080b6bfd2" prot="public" virt="non-virtual"><scope>fc::detail::CBigNum</scope><name>setvch</name></member>
      <member refid="classfc_1_1detail_1_1_c_big_num_1a153ac08c694520cbc1a6210f8fe413d9" prot="public" virt="non-virtual"><scope>fc::detail::CBigNum</scope><name>to_bignum</name></member>
      <member refid="classfc_1_1detail_1_1_c_big_num_1a71d27564fa78276fee1db619f9787466" prot="public" virt="non-virtual"><scope>fc::detail::CBigNum</scope><name>to_bignum</name></member>
      <member refid="classfc_1_1detail_1_1_c_big_num_1a038a33252b385d22905ec81af9ecb562" prot="public" virt="non-virtual"><scope>fc::detail::CBigNum</scope><name>ToString</name></member>
      <member refid="classfc_1_1detail_1_1_c_big_num_1afafd488491c62e1c9984f4a8998e479b" prot="public" virt="non-virtual"><scope>fc::detail::CBigNum</scope><name>~CBigNum</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
