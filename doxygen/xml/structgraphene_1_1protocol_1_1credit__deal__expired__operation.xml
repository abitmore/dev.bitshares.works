<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structgraphene_1_1protocol_1_1credit__deal__expired__operation" kind="struct" language="C++" prot="public">
    <compoundname>graphene::protocol::credit_deal_expired_operation</compoundname>
    <basecompoundref refid="structgraphene_1_1protocol_1_1base__operation" prot="public" virt="non-virtual">graphene::protocol::base_operation</basecompoundref>
    <includes refid="credit__offer_8hpp" local="no">credit_offer.hpp</includes>
    <innerclass refid="structgraphene_1_1protocol_1_1credit__deal__expired__operation_1_1fee__parameters__type" prot="public">graphene::protocol::credit_deal_expired_operation::fee_parameters_type</innerclass>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1credit__deal__expired__operation_1a9d8de4330b3293f7dde0aebcfb2d1ee7" prot="public" static="no" mutable="no">
        <type><ref refid="structgraphene_1_1protocol_1_1asset" kindref="compound">asset</ref></type>
        <definition>asset graphene::protocol::credit_deal_expired_operation::fee</definition>
        <argsstring></argsstring>
        <name>fee</name>
        <briefdescription>
<para>Only for compatibility, unused. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/credit_offer.hpp" line="176" column="1" bodyfile="libraries/protocol/include/graphene/protocol/credit_offer.hpp" bodystart="176" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1credit__deal__expired__operation_1a956ea9ab5ca35c916df7667e62e2ac7d" prot="public" static="no" mutable="no">
        <type>credit_deal_id_type</type>
        <definition>credit_deal_id_type graphene::protocol::credit_deal_expired_operation::deal_id</definition>
        <argsstring></argsstring>
        <name>deal_id</name>
        <briefdescription>
<para>ID of the credit deal. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/credit_offer.hpp" line="177" column="1" bodyfile="libraries/protocol/include/graphene/protocol/credit_offer.hpp" bodystart="177" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1credit__deal__expired__operation_1a61aefa15727f6694299873fecf78fb24" prot="public" static="no" mutable="no">
        <type>credit_offer_id_type</type>
        <definition>credit_offer_id_type graphene::protocol::credit_deal_expired_operation::offer_id</definition>
        <argsstring></argsstring>
        <name>offer_id</name>
        <briefdescription>
<para>ID of the credit offer. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/credit_offer.hpp" line="178" column="1" bodyfile="libraries/protocol/include/graphene/protocol/credit_offer.hpp" bodystart="178" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1credit__deal__expired__operation_1ae3b2805f7b2d3828966d4c6d647194af" prot="public" static="no" mutable="no">
        <type>account_id_type</type>
        <definition>account_id_type graphene::protocol::credit_deal_expired_operation::offer_owner</definition>
        <argsstring></argsstring>
        <name>offer_owner</name>
        <briefdescription>
<para>Owner of the credit offer. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/credit_offer.hpp" line="179" column="1" bodyfile="libraries/protocol/include/graphene/protocol/credit_offer.hpp" bodystart="179" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1credit__deal__expired__operation_1a7352ce15449c6750b34b4690544f1d1b" prot="public" static="no" mutable="no">
        <type>account_id_type</type>
        <definition>account_id_type graphene::protocol::credit_deal_expired_operation::borrower</definition>
        <argsstring></argsstring>
        <name>borrower</name>
        <briefdescription>
<para>The account who repays to the credit offer. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/credit_offer.hpp" line="180" column="1" bodyfile="libraries/protocol/include/graphene/protocol/credit_offer.hpp" bodystart="180" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1credit__deal__expired__operation_1ac9a6d30004e2ad19f0e7e4d12676f5ac" prot="public" static="no" mutable="no">
        <type><ref refid="structgraphene_1_1protocol_1_1asset" kindref="compound">asset</ref></type>
        <definition>asset graphene::protocol::credit_deal_expired_operation::unpaid_amount</definition>
        <argsstring></argsstring>
        <name>unpaid_amount</name>
        <briefdescription>
<para>The amount that is unpaid. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/credit_offer.hpp" line="181" column="1" bodyfile="libraries/protocol/include/graphene/protocol/credit_offer.hpp" bodystart="181" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1credit__deal__expired__operation_1a17e0aff26ab11dfa2f25ca0c4f8672fe" prot="public" static="no" mutable="no">
        <type><ref refid="structgraphene_1_1protocol_1_1asset" kindref="compound">asset</ref></type>
        <definition>asset graphene::protocol::credit_deal_expired_operation::collateral</definition>
        <argsstring></argsstring>
        <name>collateral</name>
        <briefdescription>
<para>The collateral liquidated. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/credit_offer.hpp" line="182" column="1" bodyfile="libraries/protocol/include/graphene/protocol/credit_offer.hpp" bodystart="182" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1credit__deal__expired__operation_1a16437032e120a89a4082e9d63ddb61f8" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t graphene::protocol::credit_deal_expired_operation::fee_rate</definition>
        <argsstring></argsstring>
        <name>fee_rate</name>
        <initializer>= 0</initializer>
        <briefdescription>
<para>Fee rate, the demominator is GRAPHENE_FEE_RATE_DENOM. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/credit_offer.hpp" line="183" column="1" bodyfile="libraries/protocol/include/graphene/protocol/credit_offer.hpp" bodystart="183" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structgraphene_1_1protocol_1_1credit__deal__expired__operation_1ad9f2745a788b43af0a006fad61f36d1a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>graphene::protocol::credit_deal_expired_operation::credit_deal_expired_operation</definition>
        <argsstring>()=default</argsstring>
        <name>credit_deal_expired_operation</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/credit_offer.hpp" line="169" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1protocol_1_1credit__deal__expired__operation_1afbf3488301204dbd79f23bae1420aaa5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>graphene::protocol::credit_deal_expired_operation::credit_deal_expired_operation</definition>
        <argsstring>(const credit_deal_id_type &amp;did, const credit_offer_id_type &amp;oid, const account_id_type &amp;o, const account_id_type &amp;b, const asset &amp;u, const asset &amp;c, const uint32_t fr)</argsstring>
        <name>credit_deal_expired_operation</name>
        <param>
          <type>const credit_deal_id_type &amp;</type>
          <declname>did</declname>
        </param>
        <param>
          <type>const credit_offer_id_type &amp;</type>
          <declname>oid</declname>
        </param>
        <param>
          <type>const account_id_type &amp;</type>
          <declname>o</declname>
        </param>
        <param>
          <type>const account_id_type &amp;</type>
          <declname>b</declname>
        </param>
        <param>
          <type>const <ref refid="structgraphene_1_1protocol_1_1asset" kindref="compound">asset</ref> &amp;</type>
          <declname>u</declname>
        </param>
        <param>
          <type>const <ref refid="structgraphene_1_1protocol_1_1asset" kindref="compound">asset</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <param>
          <type>const uint32_t</type>
          <declname>fr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/credit_offer.hpp" line="171" column="1" bodyfile="libraries/protocol/include/graphene/protocol/credit_offer.hpp" bodystart="171" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1protocol_1_1credit__deal__expired__operation_1a63c673e6a9195936e15ac9bde99e8a3c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>account_id_type</type>
        <definition>account_id_type graphene::protocol::credit_deal_expired_operation::fee_payer</definition>
        <argsstring>() const</argsstring>
        <name>fee_payer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/credit_offer.hpp" line="185" column="1" bodyfile="libraries/protocol/include/graphene/protocol/credit_offer.hpp" bodystart="185" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1protocol_1_1credit__deal__expired__operation_1a632b2fc0f7a61e7ba9e1c97bdc303dfa" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void graphene::protocol::credit_deal_expired_operation::validate</definition>
        <argsstring>() const override</argsstring>
        <name>validate</name>
        <reimplements refid="structgraphene_1_1protocol_1_1base__operation_1a23d617a6fa0921d3f5b51dd5167e7a29">validate</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/credit_offer.hpp" line="186" column="1" bodyfile="libraries/protocol/include/graphene/protocol/credit_offer.hpp" bodystart="186" bodyend="186"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1protocol_1_1credit__deal__expired__operation_1afed6a2634ebf0760c0ba6d01ce4cd1d7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacegraphene_1_1protocol_1a69b2104c1c11eed2d17bd29b86713347" kindref="member">share_type</ref></type>
        <definition>share_type graphene::protocol::credit_deal_expired_operation::calculate_fee</definition>
        <argsstring>(const fee_parameters_type &amp;) const</argsstring>
        <name>calculate_fee</name>
        <param>
          <type>const <ref refid="structgraphene_1_1protocol_1_1credit__deal__expired__operation_1_1fee__parameters__type" kindref="compound">fee_parameters_type</ref> &amp;</type>
        </param>
        <briefdescription>
<para>This is a virtual operation; there is no fee. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/credit_offer.hpp" line="189" column="1" bodyfile="libraries/protocol/include/graphene/protocol/credit_offer.hpp" bodystart="189" bodyend="189"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A credit deal expired without being fully repaid. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="note"><para>This is a virtual operation. </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="2660">
        <label>graphene::protocol::credit_deal_expired_operation</label>
        <link refid="structgraphene_1_1protocol_1_1credit__deal__expired__operation"/>
        <childnode refid="2661" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2661">
        <label>graphene::protocol::base_operation</label>
        <link refid="structgraphene_1_1protocol_1_1base__operation"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2662">
        <label>graphene::protocol::credit_deal_expired_operation</label>
        <link refid="structgraphene_1_1protocol_1_1credit__deal__expired__operation"/>
        <childnode refid="2663" relation="public-inheritance">
        </childnode>
        <childnode refid="2664" relation="usage">
          <edgelabel>fee</edgelabel>
          <edgelabel>collateral</edgelabel>
          <edgelabel>unpaid_amount</edgelabel>
        </childnode>
        <childnode refid="2666" relation="usage">
          <edgelabel>borrower</edgelabel>
          <edgelabel>offer_owner</edgelabel>
        </childnode>
      </node>
      <node id="2666">
        <label>account_id_type</label>
      </node>
      <node id="2665">
        <label>fc::safe&lt; int64_t &gt;</label>
        <link refid="structfc_1_1safe"/>
      </node>
      <node id="2663">
        <label>graphene::protocol::base_operation</label>
        <link refid="structgraphene_1_1protocol_1_1base__operation"/>
      </node>
      <node id="2664">
        <label>graphene::protocol::asset</label>
        <link refid="structgraphene_1_1protocol_1_1asset"/>
        <childnode refid="2665" relation="usage">
          <edgelabel>amount</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="libraries/protocol/include/graphene/protocol/credit_offer.hpp" line="166" column="1" bodyfile="libraries/protocol/include/graphene/protocol/credit_offer.hpp" bodystart="165" bodyend="190"/>
    <listofallmembers>
      <member refid="structgraphene_1_1protocol_1_1credit__deal__expired__operation_1a7352ce15449c6750b34b4690544f1d1b" prot="public" virt="non-virtual"><scope>graphene::protocol::credit_deal_expired_operation</scope><name>borrower</name></member>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1aaccb0fa71ee529cf62324baaa99988fe" prot="public" virt="non-virtual"><scope>graphene::protocol::credit_deal_expired_operation</scope><name>calculate_data_fee</name></member>
      <member refid="structgraphene_1_1protocol_1_1credit__deal__expired__operation_1afed6a2634ebf0760c0ba6d01ce4cd1d7" prot="public" virt="non-virtual"><scope>graphene::protocol::credit_deal_expired_operation</scope><name>calculate_fee</name></member>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1a0be44badcee9a648413eb906dac1d3b3" prot="public" virt="non-virtual" ambiguityscope="graphene::protocol::base_operation::"><scope>graphene::protocol::credit_deal_expired_operation</scope><name>calculate_fee</name></member>
      <member refid="structgraphene_1_1protocol_1_1credit__deal__expired__operation_1a17e0aff26ab11dfa2f25ca0c4f8672fe" prot="public" virt="non-virtual"><scope>graphene::protocol::credit_deal_expired_operation</scope><name>collateral</name></member>
      <member refid="structgraphene_1_1protocol_1_1credit__deal__expired__operation_1ad9f2745a788b43af0a006fad61f36d1a" prot="public" virt="non-virtual"><scope>graphene::protocol::credit_deal_expired_operation</scope><name>credit_deal_expired_operation</name></member>
      <member refid="structgraphene_1_1protocol_1_1credit__deal__expired__operation_1afbf3488301204dbd79f23bae1420aaa5" prot="public" virt="non-virtual"><scope>graphene::protocol::credit_deal_expired_operation</scope><name>credit_deal_expired_operation</name></member>
      <member refid="structgraphene_1_1protocol_1_1credit__deal__expired__operation_1a956ea9ab5ca35c916df7667e62e2ac7d" prot="public" virt="non-virtual"><scope>graphene::protocol::credit_deal_expired_operation</scope><name>deal_id</name></member>
      <member refid="structgraphene_1_1protocol_1_1credit__deal__expired__operation_1a9d8de4330b3293f7dde0aebcfb2d1ee7" prot="public" virt="non-virtual"><scope>graphene::protocol::credit_deal_expired_operation</scope><name>fee</name></member>
      <member refid="structgraphene_1_1protocol_1_1credit__deal__expired__operation_1a63c673e6a9195936e15ac9bde99e8a3c" prot="public" virt="non-virtual"><scope>graphene::protocol::credit_deal_expired_operation</scope><name>fee_payer</name></member>
      <member refid="structgraphene_1_1protocol_1_1credit__deal__expired__operation_1a16437032e120a89a4082e9d63ddb61f8" prot="public" virt="non-virtual"><scope>graphene::protocol::credit_deal_expired_operation</scope><name>fee_rate</name></member>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1a89ed7c6e7da93cd99bb41bc8d7e2627b" prot="public" virt="virtual"><scope>graphene::protocol::credit_deal_expired_operation</scope><name>get_required_active_authorities</name></member>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1aabc48ce97877c67ff560b94284a7c0bb" prot="public" virt="virtual"><scope>graphene::protocol::credit_deal_expired_operation</scope><name>get_required_authorities</name></member>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1a3251978e7bd0bb2f2fa23bcea5dee95c" prot="public" virt="virtual"><scope>graphene::protocol::credit_deal_expired_operation</scope><name>get_required_owner_authorities</name></member>
      <member refid="structgraphene_1_1protocol_1_1credit__deal__expired__operation_1a61aefa15727f6694299873fecf78fb24" prot="public" virt="non-virtual"><scope>graphene::protocol::credit_deal_expired_operation</scope><name>offer_id</name></member>
      <member refid="structgraphene_1_1protocol_1_1credit__deal__expired__operation_1ae3b2805f7b2d3828966d4c6d647194af" prot="public" virt="non-virtual"><scope>graphene::protocol::credit_deal_expired_operation</scope><name>offer_owner</name></member>
      <member refid="structgraphene_1_1protocol_1_1credit__deal__expired__operation_1ac9a6d30004e2ad19f0e7e4d12676f5ac" prot="public" virt="non-virtual"><scope>graphene::protocol::credit_deal_expired_operation</scope><name>unpaid_amount</name></member>
      <member refid="structgraphene_1_1protocol_1_1credit__deal__expired__operation_1a632b2fc0f7a61e7ba9e1c97bdc303dfa" prot="public" virt="virtual"><scope>graphene::protocol::credit_deal_expired_operation</scope><name>validate</name></member>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1a485f3d3b963ff4c081af85945cf27774" prot="public" virt="non-virtual"><scope>graphene::protocol::credit_deal_expired_operation</scope><name>validate_parallel</name></member>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1a04ac6688e2df1d511514e4fc1983b828" prot="public" virt="virtual"><scope>graphene::protocol::credit_deal_expired_operation</scope><name>~base_operation</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
