<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classfc_1_1tcp__socket__io__hooks" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>fc::tcp_socket_io_hooks</compoundname>
    <derivedcompoundref refid="classfc_1_1detail_1_1rate__limiting__group__impl" prot="public" virt="non-virtual">fc::detail::rate_limiting_group_impl</derivedcompoundref>
    <derivedcompoundref refid="classfc_1_1tcp__socket_1_1impl" prot="public" virt="non-virtual">fc::tcp_socket::impl</derivedcompoundref>
    <includes refid="tcp__socket__io__hooks_8hpp" local="no">tcp_socket_io_hooks.hpp</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classfc_1_1tcp__socket__io__hooks_1aff0001c8cbd21bed59f205b2cfb1deb6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual fc::tcp_socket_io_hooks::~tcp_socket_io_hooks</definition>
        <argsstring>()</argsstring>
        <name>~tcp_socket_io_hooks</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/network/tcp_socket_io_hooks.hpp" line="9" column="13" bodyfile="libraries/fc/include/fc/network/tcp_socket_io_hooks.hpp" bodystart="9" bodyend="9"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1tcp__socket__io__hooks_1a07cd41e5c1c99a482dfededde2cdc569" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>size_t</type>
        <definition>virtual size_t fc::tcp_socket_io_hooks::readsome</definition>
        <argsstring>(boost::asio::ip::tcp::socket &amp;socket, char *buffer, size_t length)=0</argsstring>
        <name>readsome</name>
        <reimplementedby refid="classfc_1_1tcp__socket_1_1impl_1a227d73b46fe2857e60370ae8e6a8b281">readsome</reimplementedby>
        <reimplementedby refid="classfc_1_1detail_1_1rate__limiting__group__impl_1a8fe749da93ec7a60083d03c8a82a5091">readsome</reimplementedby>
        <param>
          <type>boost::asio::ip::tcp::socket &amp;</type>
          <declname>socket</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/network/tcp_socket_io_hooks.hpp" line="10" column="20"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1tcp__socket__io__hooks_1ab05e5d0d49b639f49636bb20ea3dfc78" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>size_t</type>
        <definition>virtual size_t fc::tcp_socket_io_hooks::readsome</definition>
        <argsstring>(boost::asio::ip::tcp::socket &amp;socket, const std::shared_ptr&lt; char &gt; &amp;buffer, size_t length, size_t offset)=0</argsstring>
        <name>readsome</name>
        <reimplementedby refid="classfc_1_1tcp__socket_1_1impl_1ab2755393e3ba9ee2de7db230d7f98e47">readsome</reimplementedby>
        <reimplementedby refid="classfc_1_1detail_1_1rate__limiting__group__impl_1a77951eaab9932d076e231fabdbfde61e">readsome</reimplementedby>
        <param>
          <type>boost::asio::ip::tcp::socket &amp;</type>
          <declname>socket</declname>
        </param>
        <param>
          <type>const std::shared_ptr&lt; char &gt; &amp;</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>length</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/network/tcp_socket_io_hooks.hpp" line="11" column="20"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1tcp__socket__io__hooks_1a7ff9577650a793837c53983671644393" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>size_t</type>
        <definition>virtual size_t fc::tcp_socket_io_hooks::writesome</definition>
        <argsstring>(boost::asio::ip::tcp::socket &amp;socket, const char *buffer, size_t length)=0</argsstring>
        <name>writesome</name>
        <reimplementedby refid="classfc_1_1tcp__socket_1_1impl_1af400365fe77a5d4bcf65f2c3b469ad7a">writesome</reimplementedby>
        <reimplementedby refid="classfc_1_1detail_1_1rate__limiting__group__impl_1a50b7ec22b99f4ff67d71e44f2e2bdc88">writesome</reimplementedby>
        <param>
          <type>boost::asio::ip::tcp::socket &amp;</type>
          <declname>socket</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/network/tcp_socket_io_hooks.hpp" line="12" column="20"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1tcp__socket__io__hooks_1a81a99bd54d3619f76e14a4f20d68beca" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>size_t</type>
        <definition>virtual size_t fc::tcp_socket_io_hooks::writesome</definition>
        <argsstring>(boost::asio::ip::tcp::socket &amp;socket, const std::shared_ptr&lt; const char &gt; &amp;buffer, size_t length, size_t offset)=0</argsstring>
        <name>writesome</name>
        <reimplementedby refid="classfc_1_1tcp__socket_1_1impl_1adf212edc6d5e21ffde8524b47f8566a8">writesome</reimplementedby>
        <reimplementedby refid="classfc_1_1detail_1_1rate__limiting__group__impl_1ab6a53d6b835cb2d3ada56c834dc0bbe5">writesome</reimplementedby>
        <param>
          <type>boost::asio::ip::tcp::socket &amp;</type>
          <declname>socket</declname>
        </param>
        <param>
          <type>const std::shared_ptr&lt; const char &gt; &amp;</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>length</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/network/tcp_socket_io_hooks.hpp" line="13" column="20"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>fc::tcp_socket::impl</label>
        <link refid="classfc_1_1tcp__socket_1_1impl"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>fc::tcp_socket_io_hooks</label>
        <link refid="classfc_1_1tcp__socket__io__hooks"/>
      </node>
      <node id="2">
        <label>fc::detail::rate_limiting_group_impl</label>
        <link refid="classfc_1_1detail_1_1rate__limiting__group__impl"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="libraries/fc/include/fc/network/tcp_socket_io_hooks.hpp" line="7" column="1" bodyfile="libraries/fc/include/fc/network/tcp_socket_io_hooks.hpp" bodystart="6" bodyend="14"/>
    <listofallmembers>
      <member refid="classfc_1_1tcp__socket__io__hooks_1a07cd41e5c1c99a482dfededde2cdc569" prot="public" virt="pure-virtual"><scope>fc::tcp_socket_io_hooks</scope><name>readsome</name></member>
      <member refid="classfc_1_1tcp__socket__io__hooks_1ab05e5d0d49b639f49636bb20ea3dfc78" prot="public" virt="pure-virtual"><scope>fc::tcp_socket_io_hooks</scope><name>readsome</name></member>
      <member refid="classfc_1_1tcp__socket__io__hooks_1a7ff9577650a793837c53983671644393" prot="public" virt="pure-virtual"><scope>fc::tcp_socket_io_hooks</scope><name>writesome</name></member>
      <member refid="classfc_1_1tcp__socket__io__hooks_1a81a99bd54d3619f76e14a4f20d68beca" prot="public" virt="pure-virtual"><scope>fc::tcp_socket_io_hooks</scope><name>writesome</name></member>
      <member refid="classfc_1_1tcp__socket__io__hooks_1aff0001c8cbd21bed59f205b2cfb1deb6" prot="public" virt="virtual"><scope>fc::tcp_socket_io_hooks</scope><name>~tcp_socket_io_hooks</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
