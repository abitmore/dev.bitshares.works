<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classgraphene_1_1net_1_1detail_1_1peer__database__iterator" kind="class" language="C++" prot="public">
    <compoundname>graphene::net::detail::peer_database_iterator</compoundname>
    <basecompoundref prot="public" virt="non-virtual">boost::iterator_facade&lt; peer_database_iterator, const potential_peer_record, boost::forward_traversal_tag &gt;</basecompoundref>
    <includes refid="peer__database_8hpp" local="no">peer_database.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classgraphene_1_1net_1_1detail_1_1peer__database__iterator_1a773bb1969844933ce5111c2d38d924dc" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="classgraphene_1_1net_1_1detail_1_1peer__database__iterator__impl" kindref="compound">peer_database_iterator_impl</ref> &gt;</type>
        <definition>std::unique_ptr&lt;peer_database_iterator_impl&gt; graphene::net::detail::peer_database_iterator::my</definition>
        <argsstring></argsstring>
        <name>my</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/net/include/graphene/net/peer_database.hpp" line="91" column="1" bodyfile="libraries/net/include/graphene/net/peer_database.hpp" bodystart="91" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classgraphene_1_1net_1_1detail_1_1peer__database__iterator_1a1006ffef5253043a3728f6b4700205f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>graphene::net::detail::peer_database_iterator::peer_database_iterator</definition>
        <argsstring>()</argsstring>
        <name>peer_database_iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/net/include/graphene/net/peer_database.hpp" line="80" column="1" bodyfile="libraries/net/peer_database.cpp" bodystart="191" bodyend="193"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1net_1_1detail_1_1peer__database__iterator_1a1aa709f172ae6627e95ae262925b4465" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>graphene::net::detail::peer_database_iterator::~peer_database_iterator</definition>
        <argsstring>()</argsstring>
        <name>~peer_database_iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/net/include/graphene/net/peer_database.hpp" line="81" column="1" bodyfile="libraries/net/peer_database.cpp" bodystart="195" bodyend="197"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1net_1_1detail_1_1peer__database__iterator_1a23a1854fa571489c6a6befdd56621888" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>graphene::net::detail::peer_database_iterator::peer_database_iterator</definition>
        <argsstring>(std::unique_ptr&lt; peer_database_iterator_impl &gt; &amp;&amp;impl)</argsstring>
        <name>peer_database_iterator</name>
        <param>
          <type>std::unique_ptr&lt; <ref refid="classgraphene_1_1net_1_1detail_1_1peer__database__iterator__impl" kindref="compound">peer_database_iterator_impl</ref> &gt; &amp;&amp;</type>
          <declname>impl</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/net/include/graphene/net/peer_database.hpp" line="82" column="1" bodyfile="libraries/net/peer_database.cpp" bodystart="199" bodyend="202"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1net_1_1detail_1_1peer__database__iterator_1aecee879e793aaa40db2609a2ed9b299f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>graphene::net::detail::peer_database_iterator::peer_database_iterator</definition>
        <argsstring>(const peer_database_iterator &amp;c)</argsstring>
        <name>peer_database_iterator</name>
        <param>
          <type>const <ref refid="classgraphene_1_1net_1_1detail_1_1peer__database__iterator" kindref="compound">peer_database_iterator</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/net/include/graphene/net/peer_database.hpp" line="83" column="1" bodyfile="libraries/net/peer_database.cpp" bodystart="88" bodyend="89"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classgraphene_1_1net_1_1detail_1_1peer__database__iterator_1a201ed9b0547a572480fc523f78307a37" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::net::detail::peer_database_iterator::increment</definition>
        <argsstring>()</argsstring>
        <name>increment</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/net/include/graphene/net/peer_database.hpp" line="87" column="1" bodyfile="libraries/net/peer_database.cpp" bodystart="204" bodyend="207"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1net_1_1detail_1_1peer__database__iterator_1a67a2445324c4eb6d3588f7ea21cf36e1" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool graphene::net::detail::peer_database_iterator::equal</definition>
        <argsstring>(const peer_database_iterator &amp;other) const </argsstring>
        <name>equal</name>
        <param>
          <type>const <ref refid="classgraphene_1_1net_1_1detail_1_1peer__database__iterator" kindref="compound">peer_database_iterator</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/net/include/graphene/net/peer_database.hpp" line="88" column="1" bodyfile="libraries/net/peer_database.cpp" bodystart="209" bodyend="212"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1net_1_1detail_1_1peer__database__iterator_1a3e19e4961d9efb99d6d51ffb8961e106" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="structgraphene_1_1net_1_1potential__peer__record" kindref="compound">potential_peer_record</ref> &amp;</type>
        <definition>const potential_peer_record &amp; graphene::net::detail::peer_database_iterator::dereference</definition>
        <argsstring>() const </argsstring>
        <name>dereference</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/net/include/graphene/net/peer_database.hpp" line="89" column="1" bodyfile="libraries/net/peer_database.cpp" bodystart="214" bodyend="217"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="5471">
        <label>boost::iterator_facade&lt; peer_database_iterator, const potential_peer_record, boost::forward_traversal_tag &gt;</label>
      </node>
      <node id="5470">
        <label>graphene::net::detail::peer_database_iterator</label>
        <link refid="classgraphene_1_1net_1_1detail_1_1peer__database__iterator"/>
        <childnode refid="5471" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="5473">
        <label>boost::iterator_facade&lt; peer_database_iterator, const potential_peer_record, boost::forward_traversal_tag &gt;</label>
      </node>
      <node id="5472">
        <label>graphene::net::detail::peer_database_iterator</label>
        <link refid="classgraphene_1_1net_1_1detail_1_1peer__database__iterator"/>
        <childnode refid="5473" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="libraries/net/include/graphene/net/peer_database.hpp" line="78" column="1" bodyfile="libraries/net/include/graphene/net/peer_database.hpp" bodystart="77" bodyend="92"/>
    <listofallmembers>
      <member refid="classgraphene_1_1net_1_1detail_1_1peer__database__iterator_1a3e19e4961d9efb99d6d51ffb8961e106" prot="private" virt="non-virtual"><scope>graphene::net::detail::peer_database_iterator</scope><name>dereference</name></member>
      <member refid="classgraphene_1_1net_1_1detail_1_1peer__database__iterator_1a67a2445324c4eb6d3588f7ea21cf36e1" prot="private" virt="non-virtual"><scope>graphene::net::detail::peer_database_iterator</scope><name>equal</name></member>
      <member refid="classgraphene_1_1net_1_1detail_1_1peer__database__iterator_1a201ed9b0547a572480fc523f78307a37" prot="private" virt="non-virtual"><scope>graphene::net::detail::peer_database_iterator</scope><name>increment</name></member>
      <member refid="classgraphene_1_1net_1_1detail_1_1peer__database__iterator_1a773bb1969844933ce5111c2d38d924dc" prot="private" virt="non-virtual"><scope>graphene::net::detail::peer_database_iterator</scope><name>my</name></member>
      <member refid="classgraphene_1_1net_1_1detail_1_1peer__database__iterator_1a1006ffef5253043a3728f6b4700205f2" prot="public" virt="non-virtual"><scope>graphene::net::detail::peer_database_iterator</scope><name>peer_database_iterator</name></member>
      <member refid="classgraphene_1_1net_1_1detail_1_1peer__database__iterator_1a23a1854fa571489c6a6befdd56621888" prot="public" virt="non-virtual"><scope>graphene::net::detail::peer_database_iterator</scope><name>peer_database_iterator</name></member>
      <member refid="classgraphene_1_1net_1_1detail_1_1peer__database__iterator_1aecee879e793aaa40db2609a2ed9b299f" prot="public" virt="non-virtual"><scope>graphene::net::detail::peer_database_iterator</scope><name>peer_database_iterator</name></member>
      <member refid="classgraphene_1_1net_1_1detail_1_1peer__database__iterator_1a1aa709f172ae6627e95ae262925b4465" prot="public" virt="non-virtual"><scope>graphene::net::detail::peer_database_iterator</scope><name>~peer_database_iterator</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
