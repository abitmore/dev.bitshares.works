<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classfc_1_1time__point" kind="class" language="C++" prot="public">
    <compoundname>fc::time_point</compoundname>
    <includes refid="time_8hpp" local="no">time.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classfc_1_1time__point_1ad5eca0e5baf3b42fbad40966cc8fed12" prot="private" static="no" mutable="no">
        <type><ref refid="classfc_1_1microseconds" kindref="compound">microseconds</ref></type>
        <definition>microseconds fc::time_point::elapsed</definition>
        <argsstring></argsstring>
        <name>elapsed</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/time.hpp" line="68" column="1" bodyfile="libraries/fc/include/fc/time.hpp" bodystart="68" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classfc_1_1time__point_1ada7b7d3ad6a93247eb2da29f193d0a3f" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>fc::time_point::time_point</definition>
        <argsstring>(microseconds e=microseconds())</argsstring>
        <name>time_point</name>
        <param>
          <type><ref refid="classfc_1_1microseconds" kindref="compound">microseconds</ref></type>
          <declname>e</declname>
          <defval><ref refid="classfc_1_1microseconds" kindref="compound">microseconds</ref>()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/time.hpp" line="46" column="1" bodyfile="libraries/fc/include/fc/time.hpp" bodystart="46" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1time__point_1a10a9b8cebed86de891d42e2fa778b62b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fc::time_point::operator std::string</definition>
        <argsstring>() const</argsstring>
        <name>operator std::string</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/time.hpp" line="51" column="1" bodyfile="libraries/fc/src/time.cpp" bodystart="46" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1time__point_1afade7a8da1b09194ef414d11fee9e5cd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classfc_1_1microseconds" kindref="compound">microseconds</ref> &amp;</type>
        <definition>const microseconds&amp; fc::time_point::time_since_epoch</definition>
        <argsstring>() const</argsstring>
        <name>time_since_epoch</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/time.hpp" line="54" column="1" bodyfile="libraries/fc/include/fc/time.hpp" bodystart="54" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1time__point_1a46ab5dd7191bdc785f4f841e88c5fe44" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t fc::time_point::sec_since_epoch</definition>
        <argsstring>() const</argsstring>
        <name>sec_since_epoch</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/time.hpp" line="55" column="1" bodyfile="libraries/fc/include/fc/time.hpp" bodystart="55" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1time__point_1a7703cda4b67e4f413bb30b9b50339ee1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool fc::time_point::operator&gt;</definition>
        <argsstring>(const time_point &amp;t) const</argsstring>
        <name>operator&gt;</name>
        <param>
          <type>const <ref refid="classfc_1_1time__point" kindref="compound">time_point</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/time.hpp" line="56" column="1" bodyfile="libraries/fc/include/fc/time.hpp" bodystart="56" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1time__point_1a7f785a12a1941259887eda2d6f6f518a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool fc::time_point::operator&gt;=</definition>
        <argsstring>(const time_point &amp;t) const</argsstring>
        <name>operator&gt;=</name>
        <param>
          <type>const <ref refid="classfc_1_1time__point" kindref="compound">time_point</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/time.hpp" line="57" column="1" bodyfile="libraries/fc/include/fc/time.hpp" bodystart="57" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1time__point_1ab13056b8561d13e378baff1526839440" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool fc::time_point::operator&lt;</definition>
        <argsstring>(const time_point &amp;t) const</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const <ref refid="classfc_1_1time__point" kindref="compound">time_point</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/time.hpp" line="58" column="1" bodyfile="libraries/fc/include/fc/time.hpp" bodystart="58" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1time__point_1a2b153e7ba438bc292e1460e572b2e132" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool fc::time_point::operator&lt;=</definition>
        <argsstring>(const time_point &amp;t) const</argsstring>
        <name>operator&lt;=</name>
        <param>
          <type>const <ref refid="classfc_1_1time__point" kindref="compound">time_point</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/time.hpp" line="59" column="1" bodyfile="libraries/fc/include/fc/time.hpp" bodystart="59" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1time__point_1a518a8071f161f1ac2d70f82911d08a47" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool fc::time_point::operator==</definition>
        <argsstring>(const time_point &amp;t) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classfc_1_1time__point" kindref="compound">time_point</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/time.hpp" line="60" column="1" bodyfile="libraries/fc/include/fc/time.hpp" bodystart="60" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1time__point_1ab6e9bdfda529a482160341939380a79e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool fc::time_point::operator!=</definition>
        <argsstring>(const time_point &amp;t) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classfc_1_1time__point" kindref="compound">time_point</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/time.hpp" line="61" column="1" bodyfile="libraries/fc/include/fc/time.hpp" bodystart="61" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1time__point_1a5b18fb63d14039935fbf3a1c2fb43c92" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classfc_1_1time__point" kindref="compound">time_point</ref> &amp;</type>
        <definition>time_point&amp; fc::time_point::operator+=</definition>
        <argsstring>(const microseconds &amp;m)</argsstring>
        <name>operator+=</name>
        <param>
          <type>const <ref refid="classfc_1_1microseconds" kindref="compound">microseconds</ref> &amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/time.hpp" line="62" column="1" bodyfile="libraries/fc/include/fc/time.hpp" bodystart="62" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1time__point_1aae57570284a342e14814c4099a51c7b4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classfc_1_1time__point" kindref="compound">time_point</ref> &amp;</type>
        <definition>time_point&amp; fc::time_point::operator-=</definition>
        <argsstring>(const microseconds &amp;m)</argsstring>
        <name>operator-=</name>
        <param>
          <type>const <ref refid="classfc_1_1microseconds" kindref="compound">microseconds</ref> &amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/time.hpp" line="63" column="1" bodyfile="libraries/fc/include/fc/time.hpp" bodystart="63" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1time__point_1a35420c20bee5c77617a68a70204c5234" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classfc_1_1time__point" kindref="compound">time_point</ref></type>
        <definition>time_point fc::time_point::operator+</definition>
        <argsstring>(const microseconds &amp;m) const</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="classfc_1_1microseconds" kindref="compound">microseconds</ref> &amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/time.hpp" line="64" column="1" bodyfile="libraries/fc/include/fc/time.hpp" bodystart="64" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1time__point_1a9d7e8bdb373d46afef955f4e4a201b6e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classfc_1_1time__point" kindref="compound">time_point</ref></type>
        <definition>time_point fc::time_point::operator-</definition>
        <argsstring>(const microseconds &amp;m) const</argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="classfc_1_1microseconds" kindref="compound">microseconds</ref> &amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/time.hpp" line="65" column="1" bodyfile="libraries/fc/include/fc/time.hpp" bodystart="65" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1time__point_1a587aac92995863efd22855649c34bfa9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classfc_1_1microseconds" kindref="compound">microseconds</ref></type>
        <definition>microseconds fc::time_point::operator-</definition>
        <argsstring>(const time_point &amp;m) const</argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="classfc_1_1time__point" kindref="compound">time_point</ref> &amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/time.hpp" line="66" column="1" bodyfile="libraries/fc/include/fc/time.hpp" bodystart="66" bodyend="66"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classfc_1_1time__point_1aa164ff1268a16d4b32afcff181f6100e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classfc_1_1time__point" kindref="compound">time_point</ref></type>
        <definition>time_point fc::time_point::now</definition>
        <argsstring>()</argsstring>
        <name>now</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/time.hpp" line="47" column="1" bodyfile="libraries/fc/src/time.cpp" bodystart="13" bodyend="16"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1time__point_1ae76e89eff3519239bd8346ce0f28a100" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classfc_1_1time__point" kindref="compound">time_point</ref></type>
        <definition>static time_point fc::time_point::maximum</definition>
        <argsstring>()</argsstring>
        <name>maximum</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/time.hpp" line="48" column="1" bodyfile="libraries/fc/include/fc/time.hpp" bodystart="48" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1time__point_1a29d4e1a74bc55af7c585952360573273" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classfc_1_1time__point" kindref="compound">time_point</ref></type>
        <definition>static time_point fc::time_point::min</definition>
        <argsstring>()</argsstring>
        <name>min</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/time.hpp" line="49" column="1" bodyfile="libraries/fc/include/fc/time.hpp" bodystart="49" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1time__point_1a2e1412c05ce3f9a902f90eadc03da273" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classfc_1_1time__point" kindref="compound">time_point</ref></type>
        <definition>time_point fc::time_point::from_iso_string</definition>
        <argsstring>(const std::string &amp;s)</argsstring>
        <name>from_iso_string</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/time.hpp" line="52" column="1" bodyfile="libraries/fc/src/time.cpp" bodystart="51" bodyend="54"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="libraries/fc/include/fc/time.hpp" line="44" column="1" bodyfile="libraries/fc/include/fc/time.hpp" bodystart="44" bodyend="69"/>
    <listofallmembers>
      <member refid="classfc_1_1time__point_1ad5eca0e5baf3b42fbad40966cc8fed12" prot="private" virt="non-virtual"><scope>fc::time_point</scope><name>elapsed</name></member>
      <member refid="classfc_1_1time__point_1a2e1412c05ce3f9a902f90eadc03da273" prot="public" virt="non-virtual"><scope>fc::time_point</scope><name>from_iso_string</name></member>
      <member refid="classfc_1_1time__point_1ae76e89eff3519239bd8346ce0f28a100" prot="public" virt="non-virtual"><scope>fc::time_point</scope><name>maximum</name></member>
      <member refid="classfc_1_1time__point_1a29d4e1a74bc55af7c585952360573273" prot="public" virt="non-virtual"><scope>fc::time_point</scope><name>min</name></member>
      <member refid="classfc_1_1time__point_1aa164ff1268a16d4b32afcff181f6100e" prot="public" virt="non-virtual"><scope>fc::time_point</scope><name>now</name></member>
      <member refid="classfc_1_1time__point_1a10a9b8cebed86de891d42e2fa778b62b" prot="public" virt="non-virtual"><scope>fc::time_point</scope><name>operator std::string</name></member>
      <member refid="classfc_1_1time__point_1ab6e9bdfda529a482160341939380a79e" prot="public" virt="non-virtual"><scope>fc::time_point</scope><name>operator!=</name></member>
      <member refid="classfc_1_1time__point_1a35420c20bee5c77617a68a70204c5234" prot="public" virt="non-virtual"><scope>fc::time_point</scope><name>operator+</name></member>
      <member refid="classfc_1_1time__point_1a5b18fb63d14039935fbf3a1c2fb43c92" prot="public" virt="non-virtual"><scope>fc::time_point</scope><name>operator+=</name></member>
      <member refid="classfc_1_1time__point_1a9d7e8bdb373d46afef955f4e4a201b6e" prot="public" virt="non-virtual"><scope>fc::time_point</scope><name>operator-</name></member>
      <member refid="classfc_1_1time__point_1a587aac92995863efd22855649c34bfa9" prot="public" virt="non-virtual"><scope>fc::time_point</scope><name>operator-</name></member>
      <member refid="classfc_1_1time__point_1aae57570284a342e14814c4099a51c7b4" prot="public" virt="non-virtual"><scope>fc::time_point</scope><name>operator-=</name></member>
      <member refid="classfc_1_1time__point_1ab13056b8561d13e378baff1526839440" prot="public" virt="non-virtual"><scope>fc::time_point</scope><name>operator&lt;</name></member>
      <member refid="classfc_1_1time__point_1a2b153e7ba438bc292e1460e572b2e132" prot="public" virt="non-virtual"><scope>fc::time_point</scope><name>operator&lt;=</name></member>
      <member refid="classfc_1_1time__point_1a518a8071f161f1ac2d70f82911d08a47" prot="public" virt="non-virtual"><scope>fc::time_point</scope><name>operator==</name></member>
      <member refid="classfc_1_1time__point_1a7703cda4b67e4f413bb30b9b50339ee1" prot="public" virt="non-virtual"><scope>fc::time_point</scope><name>operator&gt;</name></member>
      <member refid="classfc_1_1time__point_1a7f785a12a1941259887eda2d6f6f518a" prot="public" virt="non-virtual"><scope>fc::time_point</scope><name>operator&gt;=</name></member>
      <member refid="classfc_1_1time__point_1a46ab5dd7191bdc785f4f841e88c5fe44" prot="public" virt="non-virtual"><scope>fc::time_point</scope><name>sec_since_epoch</name></member>
      <member refid="classfc_1_1time__point_1ada7b7d3ad6a93247eb2da29f193d0a3f" prot="public" virt="non-virtual"><scope>fc::time_point</scope><name>time_point</name></member>
      <member refid="classfc_1_1time__point_1afade7a8da1b09194ef414d11fee9e5cd" prot="public" virt="non-virtual"><scope>fc::time_point</scope><name>time_since_epoch</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
