<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="structgraphene_1_1protocol_1_1proposal__create__operation" kind="struct" language="C++" prot="public">
    <compoundname>graphene::protocol::proposal_create_operation</compoundname>
    <basecompoundref refid="structgraphene_1_1protocol_1_1base__operation" prot="public" virt="non-virtual">graphene::protocol::base_operation</basecompoundref>
    <includes refid="proposal_8hpp" local="no">proposal.hpp</includes>
    <innerclass refid="structgraphene_1_1protocol_1_1proposal__create__operation_1_1fee__parameters__type" prot="public">graphene::protocol::proposal_create_operation::fee_parameters_type</innerclass>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1proposal__create__operation_1af97c84e7d2f9bdcc0d631e3122c169f3" prot="public" static="no" mutable="no">
        <type><ref refid="structgraphene_1_1protocol_1_1asset" kindref="compound">asset</ref></type>
        <definition>asset graphene::protocol::proposal_create_operation::fee</definition>
        <argsstring></argsstring>
        <name>fee</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/proposal.hpp" line="77" column="1" bodyfile="libraries/protocol/include/graphene/protocol/proposal.hpp" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1proposal__create__operation_1a0a065e081d018b208f1a4491497acc14" prot="public" static="no" mutable="no">
        <type>account_id_type</type>
        <definition>account_id_type graphene::protocol::proposal_create_operation::fee_paying_account</definition>
        <argsstring></argsstring>
        <name>fee_paying_account</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/proposal.hpp" line="78" column="1" bodyfile="libraries/protocol/include/graphene/protocol/proposal.hpp" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1proposal__create__operation_1a6d4c86744ff8d26a36af2f3c480f610a" prot="public" static="no" mutable="no">
        <type>vector&lt; <ref refid="structgraphene_1_1protocol_1_1op__wrapper" kindref="compound">op_wrapper</ref> &gt;</type>
        <definition>vector&lt;op_wrapper&gt; graphene::protocol::proposal_create_operation::proposed_ops</definition>
        <argsstring></argsstring>
        <name>proposed_ops</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/proposal.hpp" line="79" column="1" bodyfile="libraries/protocol/include/graphene/protocol/proposal.hpp" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1proposal__create__operation_1ad6d410faad937a65932c2f51d668abb7" prot="public" static="no" mutable="no">
        <type><ref refid="classfc_1_1time__point__sec" kindref="compound">time_point_sec</ref></type>
        <definition>time_point_sec graphene::protocol::proposal_create_operation::expiration_time</definition>
        <argsstring></argsstring>
        <name>expiration_time</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/proposal.hpp" line="80" column="1" bodyfile="libraries/protocol/include/graphene/protocol/proposal.hpp" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1proposal__create__operation_1a3fa5418c4e45dfb1d146ac19efb6516f" prot="public" static="no" mutable="no">
        <type><ref refid="classfc_1_1optional" kindref="compound">optional</ref>&lt; uint32_t &gt;</type>
        <definition>optional&lt;uint32_t&gt; graphene::protocol::proposal_create_operation::review_period_seconds</definition>
        <argsstring></argsstring>
        <name>review_period_seconds</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/proposal.hpp" line="81" column="1" bodyfile="libraries/protocol/include/graphene/protocol/proposal.hpp" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1proposal__create__operation_1ac3c219622310fa1a79761c3768c2957f" prot="public" static="no" mutable="no">
        <type><ref refid="group__operations_1gabaddcaf5bde76414891b4c29031d9288" kindref="member">extensions_type</ref></type>
        <definition>extensions_type graphene::protocol::proposal_create_operation::extensions</definition>
        <argsstring></argsstring>
        <name>extensions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/proposal.hpp" line="82" column="1" bodyfile="libraries/protocol/include/graphene/protocol/proposal.hpp" bodystart="82" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structgraphene_1_1protocol_1_1proposal__create__operation_1a90d9894dffb1c5f83984e993772df134" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structgraphene_1_1protocol_1_1proposal__create__operation" kindref="compound">proposal_create_operation</ref></type>
        <definition>proposal_create_operation graphene::protocol::proposal_create_operation::committee_proposal</definition>
        <argsstring>(const chain_parameters &amp;param, fc::time_point_sec head_block_time)</argsstring>
        <name>committee_proposal</name>
        <param>
          <type>const <ref refid="structgraphene_1_1protocol_1_1chain__parameters" kindref="compound">chain_parameters</ref> &amp;</type>
          <declname>param</declname>
        </param>
        <param>
          <type><ref refid="classfc_1_1time__point__sec" kindref="compound">fc::time_point_sec</ref></type>
          <declname>head_block_time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructs a <ref refid="structgraphene_1_1protocol_1_1proposal__create__operation" kindref="compound">proposal_create_operation</ref> suitable for committee proposals, with expiration time and review period set appropriately. No proposed_ops are added. When used to create a proposal to change chain parameters, this method expects to receive the currently effective parameters, not the proposed parameters. (The proposed parameters will go in proposed_ops, and proposed_ops is untouched by this function.) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/proposal.hpp" line="94" column="1" bodyfile="libraries/protocol/proposal.cpp" bodystart="31" bodyend="38"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structgraphene_1_1protocol_1_1proposal__create__operation_1a1b50961a1fb9d7d9f3c8db58362df692" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>account_id_type</type>
        <definition>account_id_type graphene::protocol::proposal_create_operation::fee_payer</definition>
        <argsstring>() const </argsstring>
        <name>fee_payer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/proposal.hpp" line="96" column="1" bodyfile="libraries/protocol/include/graphene/protocol/proposal.hpp" bodystart="96" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1protocol_1_1proposal__create__operation_1ac274becbc5f96c35aa82c6c0413d3040" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::protocol::proposal_create_operation::validate</definition>
        <argsstring>() const </argsstring>
        <name>validate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/proposal.hpp" line="97" column="1" bodyfile="libraries/protocol/proposal.cpp" bodystart="40" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1protocol_1_1proposal__create__operation_1ac3456502a90bf3634967ddd9049c790a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacegraphene_1_1protocol_1a69b2104c1c11eed2d17bd29b86713347" kindref="member">share_type</ref></type>
        <definition>share_type graphene::protocol::proposal_create_operation::calculate_fee</definition>
        <argsstring>(const fee_parameters_type &amp;k) const </argsstring>
        <name>calculate_fee</name>
        <param>
          <type>const <ref refid="structgraphene_1_1protocol_1_1proposal__create__operation_1_1fee__parameters__type" kindref="compound">fee_parameters_type</ref> &amp;</type>
          <declname>k</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/proposal.hpp" line="98" column="1" bodyfile="libraries/protocol/proposal.cpp" bodystart="46" bodyend="49"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The <ref refid="structgraphene_1_1protocol_1_1proposal__create__operation" kindref="compound">proposal_create_operation</ref> creates a transaction proposal, for use in multi-sig scenarios</para><para>Creates a transaction proposal. The operations which compose the transaction are listed in order in proposed_ops, and expiration_time specifies the time by which the proposal must be accepted or it will fail permanently. The expiration_time cannot be farther in the future than the maximum expiration time set in the global properties object. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="5796">
        <label>graphene::protocol::proposal_create_operation</label>
        <link refid="structgraphene_1_1protocol_1_1proposal__create__operation"/>
        <childnode refid="5797" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5797">
        <label>graphene::protocol::base_operation</label>
        <link refid="structgraphene_1_1protocol_1_1base__operation"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="5800">
        <label>vector&lt; graphene::protocol::op_wrapper &gt;</label>
      </node>
      <node id="5803">
        <label>fc::optional&lt; uint32_t &gt;</label>
        <link refid="classfc_1_1optional"/>
      </node>
      <node id="5805">
        <label>account_id_type</label>
      </node>
      <node id="5798">
        <label>graphene::protocol::proposal_create_operation</label>
        <link refid="structgraphene_1_1protocol_1_1proposal__create__operation"/>
        <childnode refid="5799" relation="public-inheritance">
        </childnode>
        <childnode refid="5800" relation="usage">
          <edgelabel>proposed_ops</edgelabel>
        </childnode>
        <childnode refid="5801" relation="usage">
          <edgelabel>fee</edgelabel>
        </childnode>
        <childnode refid="5803" relation="usage">
          <edgelabel>review_period_seconds</edgelabel>
        </childnode>
        <childnode refid="5804" relation="usage">
          <edgelabel>expiration_time</edgelabel>
        </childnode>
        <childnode refid="5805" relation="usage">
          <edgelabel>fee_paying_account</edgelabel>
        </childnode>
      </node>
      <node id="5802">
        <label>fc::safe&lt; int64_t &gt;</label>
        <link refid="structfc_1_1safe"/>
      </node>
      <node id="5804">
        <label>fc::time_point_sec</label>
        <link refid="classfc_1_1time__point__sec"/>
      </node>
      <node id="5799">
        <label>graphene::protocol::base_operation</label>
        <link refid="structgraphene_1_1protocol_1_1base__operation"/>
      </node>
      <node id="5801">
        <label>graphene::protocol::asset</label>
        <link refid="structgraphene_1_1protocol_1_1asset"/>
        <childnode refid="5802" relation="usage">
          <edgelabel>amount</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="libraries/protocol/include/graphene/protocol/proposal.hpp" line="71" column="1" bodyfile="libraries/protocol/include/graphene/protocol/proposal.hpp" bodystart="70" bodyend="99"/>
    <listofallmembers>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1aaccb0fa71ee529cf62324baaa99988fe" prot="public" virt="non-virtual"><scope>graphene::protocol::proposal_create_operation</scope><name>calculate_data_fee</name></member>
      <member refid="structgraphene_1_1protocol_1_1proposal__create__operation_1ac3456502a90bf3634967ddd9049c790a" prot="public" virt="non-virtual"><scope>graphene::protocol::proposal_create_operation</scope><name>calculate_fee</name></member>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1afd01efa3e06367c572512e381b1106fb" prot="public" virt="non-virtual" ambiguityscope="graphene::protocol::base_operation::"><scope>graphene::protocol::proposal_create_operation</scope><name>calculate_fee</name></member>
      <member refid="structgraphene_1_1protocol_1_1proposal__create__operation_1a90d9894dffb1c5f83984e993772df134" prot="public" virt="non-virtual"><scope>graphene::protocol::proposal_create_operation</scope><name>committee_proposal</name></member>
      <member refid="structgraphene_1_1protocol_1_1proposal__create__operation_1ad6d410faad937a65932c2f51d668abb7" prot="public" virt="non-virtual"><scope>graphene::protocol::proposal_create_operation</scope><name>expiration_time</name></member>
      <member refid="structgraphene_1_1protocol_1_1proposal__create__operation_1ac3c219622310fa1a79761c3768c2957f" prot="public" virt="non-virtual"><scope>graphene::protocol::proposal_create_operation</scope><name>extensions</name></member>
      <member refid="structgraphene_1_1protocol_1_1proposal__create__operation_1af97c84e7d2f9bdcc0d631e3122c169f3" prot="public" virt="non-virtual"><scope>graphene::protocol::proposal_create_operation</scope><name>fee</name></member>
      <member refid="structgraphene_1_1protocol_1_1proposal__create__operation_1a1b50961a1fb9d7d9f3c8db58362df692" prot="public" virt="non-virtual"><scope>graphene::protocol::proposal_create_operation</scope><name>fee_payer</name></member>
      <member refid="structgraphene_1_1protocol_1_1proposal__create__operation_1a0a065e081d018b208f1a4491497acc14" prot="public" virt="non-virtual"><scope>graphene::protocol::proposal_create_operation</scope><name>fee_paying_account</name></member>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1aded12887f115b2bfa54ecd59540fa242" prot="public" virt="non-virtual"><scope>graphene::protocol::proposal_create_operation</scope><name>get_required_active_authorities</name></member>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1a6ea245f980406ab52fdb90283e687d1c" prot="public" virt="non-virtual"><scope>graphene::protocol::proposal_create_operation</scope><name>get_required_authorities</name></member>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1a0742a4b91de875366ec466a5b67b2811" prot="public" virt="non-virtual"><scope>graphene::protocol::proposal_create_operation</scope><name>get_required_owner_authorities</name></member>
      <member refid="structgraphene_1_1protocol_1_1proposal__create__operation_1a6d4c86744ff8d26a36af2f3c480f610a" prot="public" virt="non-virtual"><scope>graphene::protocol::proposal_create_operation</scope><name>proposed_ops</name></member>
      <member refid="structgraphene_1_1protocol_1_1proposal__create__operation_1a3fa5418c4e45dfb1d146ac19efb6516f" prot="public" virt="non-virtual"><scope>graphene::protocol::proposal_create_operation</scope><name>review_period_seconds</name></member>
      <member refid="structgraphene_1_1protocol_1_1proposal__create__operation_1ac274becbc5f96c35aa82c6c0413d3040" prot="public" virt="non-virtual"><scope>graphene::protocol::proposal_create_operation</scope><name>validate</name></member>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1a41d0a14a070ac634be11f30dbf559935" prot="public" virt="non-virtual"><scope>graphene::protocol::proposal_create_operation</scope><name>validate_parallel</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
