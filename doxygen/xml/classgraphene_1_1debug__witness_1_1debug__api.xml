<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classgraphene_1_1debug__witness_1_1debug__api" kind="class" language="C++" prot="public">
    <compoundname>graphene::debug_witness::debug_api</compoundname>
    <includes refid="debug__api_8hpp" local="no">debug_api.hpp</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classgraphene_1_1debug__witness_1_1debug__api_1a3983668c7bcfc255a25ee5d836e5d39d" prot="public" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classgraphene_1_1debug__witness_1_1detail_1_1debug__api__impl" kindref="compound">detail::debug_api_impl</ref> &gt;</type>
        <definition>std::shared_ptr&lt; detail::debug_api_impl &gt; graphene::debug_witness::debug_api::my</definition>
        <argsstring></argsstring>
        <name>my</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/plugins/debug_witness/include/graphene/debug_witness/debug_api.hpp" line="85" column="1" bodyfile="libraries/plugins/debug_witness/include/graphene/debug_witness/debug_api.hpp" bodystart="85" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classgraphene_1_1debug__witness_1_1debug__api_1a58dc2ef694cb443d94fce6ee578ab22c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>graphene::debug_witness::debug_api::debug_api</definition>
        <argsstring>(graphene::app::application &amp;app)</argsstring>
        <name>debug_api</name>
        <param>
          <type><ref refid="classgraphene_1_1app_1_1application" kindref="compound">graphene::app::application</ref> &amp;</type>
          <declname>app</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/plugins/debug_witness/include/graphene/debug_witness/debug_api.hpp" line="45" column="1" bodyfile="libraries/plugins/debug_witness/debug_api.cpp" bodystart="126" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1debug__witness_1_1debug__api_1a85f0addcd04c114df9f383107e66f366" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::debug_witness::debug_api::debug_push_blocks</definition>
        <argsstring>(std::string src_filename, uint32_t count)</argsstring>
        <name>debug_push_blocks</name>
        <param>
          <type>std::string</type>
          <declname>src_filename</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Push blocks from existing database. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/plugins/debug_witness/include/graphene/debug_witness/debug_api.hpp" line="50" column="1" bodyfile="libraries/plugins/debug_witness/debug_api.cpp" bodystart="131" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1debug__witness_1_1debug__api_1a52ba1a397120e4c911b3f91426a5f786" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::debug_witness::debug_api::debug_generate_blocks</definition>
        <argsstring>(std::string debug_key, uint32_t count)</argsstring>
        <name>debug_generate_blocks</name>
        <param>
          <type>std::string</type>
          <declname>debug_key</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Generate blocks locally. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/plugins/debug_witness/include/graphene/debug_witness/debug_api.hpp" line="55" column="1" bodyfile="libraries/plugins/debug_witness/debug_api.cpp" bodystart="136" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1debug__witness_1_1debug__api_1af28b1ff6f430bc1f54a5d94d69679a05" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::debug_witness::debug_api::debug_update_object</definition>
        <argsstring>(fc::variant_object update)</argsstring>
        <name>debug_update_object</name>
        <param>
          <type><ref refid="classfc_1_1variant__object" kindref="compound">fc::variant_object</ref></type>
          <declname>update</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Directly manipulate database objects (will undo and re-apply last block with new changes post-applied). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/plugins/debug_witness/include/graphene/debug_witness/debug_api.hpp" line="60" column="1" bodyfile="libraries/plugins/debug_witness/debug_api.cpp" bodystart="141" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1debug__witness_1_1debug__api_1a37b32fdf2a07d862f06f7c7dc166d962" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::debug_witness::debug_api::debug_stream_json_objects</definition>
        <argsstring>(std::string filename)</argsstring>
        <name>debug_stream_json_objects</name>
        <param>
          <type>std::string</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Start a node with given initial path. Save the database to disk. Stream objects to file. (Hint: Create with mkfifo and pipe it to a script) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/plugins/debug_witness/include/graphene/debug_witness/debug_api.hpp" line="78" column="1" bodyfile="libraries/plugins/debug_witness/debug_api.cpp" bodystart="146" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1debug__witness_1_1debug__api_1a9afec2946bb8fa30b90ff3231618c288" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::debug_witness::debug_api::debug_stream_json_objects_flush</definition>
        <argsstring>()</argsstring>
        <name>debug_stream_json_objects_flush</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Flush streaming file. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/plugins/debug_witness/include/graphene/debug_witness/debug_api.hpp" line="83" column="1" bodyfile="libraries/plugins/debug_witness/debug_api.cpp" bodystart="151" bodyend="154"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="libraries/plugins/debug_witness/include/graphene/debug_witness/debug_api.hpp" line="43" column="1" bodyfile="libraries/plugins/debug_witness/include/graphene/debug_witness/debug_api.hpp" bodystart="42" bodyend="86"/>
    <listofallmembers>
      <member refid="classgraphene_1_1debug__witness_1_1debug__api_1a58dc2ef694cb443d94fce6ee578ab22c" prot="public" virt="non-virtual"><scope>graphene::debug_witness::debug_api</scope><name>debug_api</name></member>
      <member refid="classgraphene_1_1debug__witness_1_1debug__api_1a52ba1a397120e4c911b3f91426a5f786" prot="public" virt="non-virtual"><scope>graphene::debug_witness::debug_api</scope><name>debug_generate_blocks</name></member>
      <member refid="classgraphene_1_1debug__witness_1_1debug__api_1a85f0addcd04c114df9f383107e66f366" prot="public" virt="non-virtual"><scope>graphene::debug_witness::debug_api</scope><name>debug_push_blocks</name></member>
      <member refid="classgraphene_1_1debug__witness_1_1debug__api_1a37b32fdf2a07d862f06f7c7dc166d962" prot="public" virt="non-virtual"><scope>graphene::debug_witness::debug_api</scope><name>debug_stream_json_objects</name></member>
      <member refid="classgraphene_1_1debug__witness_1_1debug__api_1a9afec2946bb8fa30b90ff3231618c288" prot="public" virt="non-virtual"><scope>graphene::debug_witness::debug_api</scope><name>debug_stream_json_objects_flush</name></member>
      <member refid="classgraphene_1_1debug__witness_1_1debug__api_1af28b1ff6f430bc1f54a5d94d69679a05" prot="public" virt="non-virtual"><scope>graphene::debug_witness::debug_api</scope><name>debug_update_object</name></member>
      <member refid="classgraphene_1_1debug__witness_1_1debug__api_1a3983668c7bcfc255a25ee5d836e5d39d" prot="public" virt="non-virtual"><scope>graphene::debug_witness::debug_api</scope><name>my</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
