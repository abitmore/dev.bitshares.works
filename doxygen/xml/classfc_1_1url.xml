<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classfc_1_1url" kind="class" language="C++" prot="public">
    <compoundname>fc::url</compoundname>
    <includes refid="url_8hpp" local="no">url.hpp</includes>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classfc_1_1url_1a8fcf17901a1b195dcdf8f64c90b86e6e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class mutable_url</definition>
        <argsstring></argsstring>
        <name>mutable_url</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/network/url.hpp" line="53" column="7" bodyfile="libraries/fc/include/fc/network/url.hpp" bodystart="53" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classfc_1_1url_1ad0f2f2a1f819d1f3ea350918981634b0" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classfc_1_1detail_1_1url__impl" kindref="compound">detail::url_impl</ref> &gt;</type>
        <definition>std::shared_ptr&lt;detail::url_impl&gt; fc::url::my</definition>
        <argsstring></argsstring>
        <name>my</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/network/url.hpp" line="54" column="23" bodyfile="libraries/fc/include/fc/network/url.hpp" bodystart="54" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classfc_1_1url_1adf20d82c41215765f09b9b8e5379777f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fc::url::url</definition>
        <argsstring>()</argsstring>
        <name>url</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/network/url.hpp" line="25" column="7" bodyfile="libraries/fc/src/network/url.cpp" bodystart="116" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1url_1af12948fe0aaa05d76dea827012fcbd90" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>fc::url::url</definition>
        <argsstring>(const string &amp;u)</argsstring>
        <name>url</name>
        <param>
          <type>const string &amp;</type>
          <declname>u</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/network/url.hpp" line="26" column="16" bodyfile="libraries/fc/src/network/url.cpp" bodystart="104" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1url_1a8f8f39a1aba8378fa7ae546bf36f9576" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fc::url::url</definition>
        <argsstring>(const url &amp;c)</argsstring>
        <name>url</name>
        <param>
          <type>const <ref refid="classfc_1_1url" kindref="compound">url</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/network/url.hpp" line="27" column="7" bodyfile="libraries/fc/src/network/url.cpp" bodystart="120" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1url_1aea2a56853fd24a7d6ba990e3ae92ba44" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fc::url::url</definition>
        <argsstring>(url &amp;&amp;c)</argsstring>
        <name>url</name>
        <param>
          <type><ref refid="classfc_1_1url" kindref="compound">url</ref> &amp;&amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/network/url.hpp" line="28" column="7" bodyfile="libraries/fc/src/network/url.cpp" bodystart="123" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1url_1abd98cf11c0993aad2563314dc89433b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fc::url::url</definition>
        <argsstring>(mutable_url &amp;&amp;c)</argsstring>
        <name>url</name>
        <param>
          <type><ref refid="classfc_1_1mutable__url" kindref="compound">mutable_url</ref> &amp;&amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/network/url.hpp" line="29" column="7" bodyfile="libraries/fc/src/network/url.cpp" bodystart="134" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1url_1af23145370c0f907a4c2fedfaf84780dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fc::url::url</definition>
        <argsstring>(const mutable_url &amp;c)</argsstring>
        <name>url</name>
        <param>
          <type>const <ref refid="classfc_1_1mutable__url" kindref="compound">mutable_url</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/network/url.hpp" line="30" column="7" bodyfile="libraries/fc/src/network/url.cpp" bodystart="129" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1url_1a2955eab2a161fdee5f5badcd7132166d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fc::url::~url</definition>
        <argsstring>()</argsstring>
        <name>~url</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/network/url.hpp" line="31" column="7" bodyfile="libraries/fc/src/network/url.cpp" bodystart="138" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1url_1ab13e459f6c60df51ca0af09f6194c6f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classfc_1_1url" kindref="compound">url</ref> &amp;</type>
        <definition>url &amp; fc::url::operator=</definition>
        <argsstring>(const url &amp;c)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classfc_1_1url" kindref="compound">url</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/network/url.hpp" line="33" column="11" bodyfile="libraries/fc/src/network/url.cpp" bodystart="140" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1url_1a01d044f81a0b8630cad9658f1ff75fc5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classfc_1_1url" kindref="compound">url</ref> &amp;</type>
        <definition>url &amp; fc::url::operator=</definition>
        <argsstring>(url &amp;&amp;c)</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classfc_1_1url" kindref="compound">url</ref> &amp;&amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/network/url.hpp" line="34" column="11" bodyfile="libraries/fc/src/network/url.cpp" bodystart="146" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1url_1a45aa1636f02172bfc079e2adbc14bc69" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classfc_1_1url" kindref="compound">url</ref> &amp;</type>
        <definition>url &amp; fc::url::operator=</definition>
        <argsstring>(const mutable_url &amp;c)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classfc_1_1mutable__url" kindref="compound">mutable_url</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/network/url.hpp" line="36" column="11" bodyfile="libraries/fc/src/network/url.cpp" bodystart="155" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1url_1a89f7487aabb2bf5ca2e5cc60f44259a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classfc_1_1url" kindref="compound">url</ref> &amp;</type>
        <definition>url &amp; fc::url::operator=</definition>
        <argsstring>(mutable_url &amp;&amp;c)</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classfc_1_1mutable__url" kindref="compound">mutable_url</ref> &amp;&amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/network/url.hpp" line="37" column="11" bodyfile="libraries/fc/src/network/url.cpp" bodystart="160" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1url_1af9b0c1ce36beb2844d32621649598951" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool fc::url::operator==</definition>
        <argsstring>(const url &amp;cmp) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classfc_1_1url" kindref="compound">url</ref> &amp;</type>
          <declname>cmp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/network/url.hpp" line="39" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1url_1ae400aa57813f9192a421e32e02b0791e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fc::url::operator string</definition>
        <argsstring>() const</argsstring>
        <name>operator string</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/network/url.hpp" line="41" column="7" bodyfile="libraries/fc/src/network/url.cpp" bodystart="87" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1url_1a5133c026182f0f10a9bf13ac81483565" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>string fc::url::proto</definition>
        <argsstring>() const</argsstring>
        <name>proto</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/network/url.hpp" line="44" column="33" bodyfile="libraries/fc/src/network/url.cpp" bodystart="166" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1url_1a195a2322d4ed37d3a6a8be6e5144473c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacefc_1ae6325fac6e1f347087ba4bd17327a223" kindref="member">ostring</ref></type>
        <definition>ostring fc::url::host</definition>
        <argsstring>() const</argsstring>
        <name>host</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/network/url.hpp" line="45" column="33" bodyfile="libraries/fc/src/network/url.cpp" bodystart="170" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1url_1ac1a5470dba235aeb41a1b248d0f83ca3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacefc_1ae6325fac6e1f347087ba4bd17327a223" kindref="member">ostring</ref></type>
        <definition>ostring fc::url::user</definition>
        <argsstring>() const</argsstring>
        <name>user</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/network/url.hpp" line="46" column="33" bodyfile="libraries/fc/src/network/url.cpp" bodystart="174" bodyend="177"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1url_1afec5669397d1687d1677e84ff90874c1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacefc_1ae6325fac6e1f347087ba4bd17327a223" kindref="member">ostring</ref></type>
        <definition>ostring fc::url::pass</definition>
        <argsstring>() const</argsstring>
        <name>pass</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/network/url.hpp" line="47" column="33" bodyfile="libraries/fc/src/network/url.cpp" bodystart="178" bodyend="181"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1url_1a10ff9ce7fa8d6bfb6eec81652c4f0df9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacefc_1a454f339e33678107b206f925ddb7237b" kindref="member">opath</ref></type>
        <definition>opath fc::url::path</definition>
        <argsstring>() const</argsstring>
        <name>path</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/network/url.hpp" line="48" column="33" bodyfile="libraries/fc/src/network/url.cpp" bodystart="182" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1url_1aab56124d8e19579c35bda1e56d6811f6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacefc_1acbb95eb9af4c73366c47e15ad4c5a183" kindref="member">ovariant_object</ref></type>
        <definition>ovariant_object fc::url::args</definition>
        <argsstring>() const</argsstring>
        <name>args</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/network/url.hpp" line="49" column="33" bodyfile="libraries/fc/src/network/url.cpp" bodystart="186" bodyend="189"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1url_1a37a9cd8ad9991e2905ed7fb2cd9f50a4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classfc_1_1optional" kindref="compound">fc::optional</ref>&lt; uint16_t &gt;</type>
        <definition>fc::optional&lt; uint16_t &gt; fc::url::port</definition>
        <argsstring>() const</argsstring>
        <name>port</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/network/url.hpp" line="50" column="23" bodyfile="libraries/fc/src/network/url.cpp" bodystart="190" bodyend="193"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Used to pass an immutable URL and query its parts. </para>
    </detaileddescription>
    <location file="libraries/fc/include/fc/network/url.hpp" line="23" column="1" bodyfile="libraries/fc/include/fc/network/url.hpp" bodystart="22" bodyend="55"/>
    <listofallmembers>
      <member refid="classfc_1_1url_1aab56124d8e19579c35bda1e56d6811f6" prot="public" virt="non-virtual"><scope>fc::url</scope><name>args</name></member>
      <member refid="classfc_1_1url_1a195a2322d4ed37d3a6a8be6e5144473c" prot="public" virt="non-virtual"><scope>fc::url</scope><name>host</name></member>
      <member refid="classfc_1_1url_1a8fcf17901a1b195dcdf8f64c90b86e6e" prot="private" virt="non-virtual"><scope>fc::url</scope><name>mutable_url</name></member>
      <member refid="classfc_1_1url_1ad0f2f2a1f819d1f3ea350918981634b0" prot="private" virt="non-virtual"><scope>fc::url</scope><name>my</name></member>
      <member refid="classfc_1_1url_1ae400aa57813f9192a421e32e02b0791e" prot="public" virt="non-virtual"><scope>fc::url</scope><name>operator string</name></member>
      <member refid="classfc_1_1url_1ab13e459f6c60df51ca0af09f6194c6f2" prot="public" virt="non-virtual"><scope>fc::url</scope><name>operator=</name></member>
      <member refid="classfc_1_1url_1a01d044f81a0b8630cad9658f1ff75fc5" prot="public" virt="non-virtual"><scope>fc::url</scope><name>operator=</name></member>
      <member refid="classfc_1_1url_1a45aa1636f02172bfc079e2adbc14bc69" prot="public" virt="non-virtual"><scope>fc::url</scope><name>operator=</name></member>
      <member refid="classfc_1_1url_1a89f7487aabb2bf5ca2e5cc60f44259a6" prot="public" virt="non-virtual"><scope>fc::url</scope><name>operator=</name></member>
      <member refid="classfc_1_1url_1af9b0c1ce36beb2844d32621649598951" prot="public" virt="non-virtual"><scope>fc::url</scope><name>operator==</name></member>
      <member refid="classfc_1_1url_1afec5669397d1687d1677e84ff90874c1" prot="public" virt="non-virtual"><scope>fc::url</scope><name>pass</name></member>
      <member refid="classfc_1_1url_1a10ff9ce7fa8d6bfb6eec81652c4f0df9" prot="public" virt="non-virtual"><scope>fc::url</scope><name>path</name></member>
      <member refid="classfc_1_1url_1a37a9cd8ad9991e2905ed7fb2cd9f50a4" prot="public" virt="non-virtual"><scope>fc::url</scope><name>port</name></member>
      <member refid="classfc_1_1url_1a5133c026182f0f10a9bf13ac81483565" prot="public" virt="non-virtual"><scope>fc::url</scope><name>proto</name></member>
      <member refid="classfc_1_1url_1adf20d82c41215765f09b9b8e5379777f" prot="public" virt="non-virtual"><scope>fc::url</scope><name>url</name></member>
      <member refid="classfc_1_1url_1af12948fe0aaa05d76dea827012fcbd90" prot="public" virt="non-virtual"><scope>fc::url</scope><name>url</name></member>
      <member refid="classfc_1_1url_1a8f8f39a1aba8378fa7ae546bf36f9576" prot="public" virt="non-virtual"><scope>fc::url</scope><name>url</name></member>
      <member refid="classfc_1_1url_1aea2a56853fd24a7d6ba990e3ae92ba44" prot="public" virt="non-virtual"><scope>fc::url</scope><name>url</name></member>
      <member refid="classfc_1_1url_1abd98cf11c0993aad2563314dc89433b9" prot="public" virt="non-virtual"><scope>fc::url</scope><name>url</name></member>
      <member refid="classfc_1_1url_1af23145370c0f907a4c2fedfaf84780dc" prot="public" virt="non-virtual"><scope>fc::url</scope><name>url</name></member>
      <member refid="classfc_1_1url_1ac1a5470dba235aeb41a1b248d0f83ca3" prot="public" virt="non-virtual"><scope>fc::url</scope><name>user</name></member>
      <member refid="classfc_1_1url_1a2955eab2a161fdee5f5badcd7132166d" prot="public" virt="non-virtual"><scope>fc::url</scope><name>~url</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
