<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classfc_1_1path" kind="class" language="C++" prot="public">
    <compoundname>fc::path</compoundname>
    <includes refid="filesystem_8hpp" local="no">filesystem.hpp</includes>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classfc_1_1path_1a613fc8b20159868e1aa62670d81a0aad" prot="public" static="yes" mutable="no">
        <type>char</type>
        <definition>char fc::path::separator_char</definition>
        <argsstring></argsstring>
        <name>separator_char</name>
        <initializer>= static_cast&lt;char&gt;(boost::filesystem::path(&quot;/&quot;).make_preferred().native()[0])</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/filesystem.hpp" line="84" column="22" bodyfile="libraries/fc/include/fc/filesystem.hpp" bodystart="84" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classfc_1_1path_1ab5d00eb8d3feae8609cf71dc56432792" prot="private" static="no" mutable="no">
        <type><ref refid="classfc_1_1fwd" kindref="compound">fwd</ref>&lt; boost::filesystem::path, 32 &gt;</type>
        <definition>fwd&lt;boost::filesystem::path,32&gt; fc::path::_p</definition>
        <argsstring></argsstring>
        <name>_p</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/filesystem.hpp" line="90" column="11" bodyfile="libraries/fc/include/fc/filesystem.hpp" bodystart="90" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classfc_1_1path_1a2eac01e2a01fae18aa931c4b9369db08" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fc::path::path</definition>
        <argsstring>()</argsstring>
        <name>path</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/filesystem.hpp" line="30" column="7" bodyfile="libraries/fc/src/filesystem.cpp" bodystart="47" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1path_1a5c57209bbb7561e35dcbd8ce8804e9c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fc::path::~path</definition>
        <argsstring>()</argsstring>
        <name>~path</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/filesystem.hpp" line="31" column="7" bodyfile="libraries/fc/src/filesystem.cpp" bodystart="48" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1path_1add8f88ad5dd493b16904860ce9be6493" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fc::path::path</definition>
        <argsstring>(const boost::filesystem::path &amp;)</argsstring>
        <name>path</name>
        <param>
          <type>const boost::filesystem::path &amp;</type>
          <defname>p</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/filesystem.hpp" line="32" column="7" bodyfile="libraries/fc/src/filesystem.cpp" bodystart="49" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1path_1aca67292cff9d14da2d8814d09e0a7193" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fc::path::path</definition>
        <argsstring>(const std::string &amp;p)</argsstring>
        <name>path</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/filesystem.hpp" line="33" column="7" bodyfile="libraries/fc/src/filesystem.cpp" bodystart="54" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1path_1a53f157da299530b9241885abc9aed113" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fc::path::path</definition>
        <argsstring>(const std::wstring &amp;p)</argsstring>
        <name>path</name>
        <param>
          <type>const std::wstring &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Constructor to build path using unicode native characters. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/filesystem.hpp" line="35" column="7" bodyfile="libraries/fc/src/filesystem.cpp" bodystart="57" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1path_1ab7e23e521ace1a15d0958d16e43cb69f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fc::path::path</definition>
        <argsstring>(const char *)</argsstring>
        <name>path</name>
        <param>
          <type>const char *</type>
          <defname>p</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/filesystem.hpp" line="36" column="7" bodyfile="libraries/fc/src/filesystem.cpp" bodystart="52" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1path_1a29e0e41c28ed846b7c9dca9b3031a4da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fc::path::path</definition>
        <argsstring>(const path &amp;p)</argsstring>
        <name>path</name>
        <param>
          <type>const <ref refid="classfc_1_1path" kindref="compound">path</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/filesystem.hpp" line="37" column="7" bodyfile="libraries/fc/src/filesystem.cpp" bodystart="60" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1path_1ab7ad3a6bc6a10744488f4fd18c163f16" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fc::path::path</definition>
        <argsstring>(path &amp;&amp;p)</argsstring>
        <name>path</name>
        <param>
          <type><ref refid="classfc_1_1path" kindref="compound">path</ref> &amp;&amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/filesystem.hpp" line="38" column="7" bodyfile="libraries/fc/src/filesystem.cpp" bodystart="63" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1path_1a76df00a037a781a2ebb3ae3100e06929" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classfc_1_1path" kindref="compound">path</ref> &amp;</type>
        <definition>path &amp; fc::path::operator=</definition>
        <argsstring>(const path &amp;)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classfc_1_1path" kindref="compound">path</ref> &amp;</type>
          <defname>p</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/filesystem.hpp" line="39" column="12" bodyfile="libraries/fc/src/filesystem.cpp" bodystart="66" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1path_1abd300298b33db4c752481d93245fcbf4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classfc_1_1path" kindref="compound">path</ref> &amp;</type>
        <definition>path &amp; fc::path::operator=</definition>
        <argsstring>(path &amp;&amp;)</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classfc_1_1path" kindref="compound">path</ref> &amp;&amp;</type>
          <defname>p</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/filesystem.hpp" line="40" column="12" bodyfile="libraries/fc/src/filesystem.cpp" bodystart="70" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1path_1addfacdbec90fcbdea3161373d314300d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classfc_1_1path" kindref="compound">path</ref> &amp;</type>
        <definition>path &amp; fc::path::operator/=</definition>
        <argsstring>(const fc::path &amp;)</argsstring>
        <name>operator/=</name>
        <param>
          <type>const <ref refid="classfc_1_1path" kindref="compound">fc::path</ref> &amp;</type>
          <defname>p</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/filesystem.hpp" line="42" column="12" bodyfile="libraries/fc/src/filesystem.cpp" bodystart="79" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1path_1af7de3b21cee1e93c7496e480181e7af2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void fc::path::replace_extension</definition>
        <argsstring>(const fc::path &amp;e)</argsstring>
        <name>replace_extension</name>
        <param>
          <type>const <ref refid="classfc_1_1path" kindref="compound">fc::path</ref> &amp;</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/filesystem.hpp" line="51" column="20" bodyfile="libraries/fc/src/filesystem.cpp" bodystart="154" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1path_1a6756e8e4adb1f4f2423f454adfbbf205" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classfc_1_1path" kindref="compound">fc::path</ref></type>
        <definition>fc::path fc::path::stem</definition>
        <argsstring>() const</argsstring>
        <name>stem</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/filesystem.hpp" line="52" column="20" bodyfile="libraries/fc/src/filesystem.cpp" bodystart="160" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1path_1ab0d2cca0994e599a7d65a89c5c8f9e54" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classfc_1_1path" kindref="compound">fc::path</ref></type>
        <definition>fc::path fc::path::extension</definition>
        <argsstring>() const</argsstring>
        <name>extension</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/filesystem.hpp" line="53" column="20" bodyfile="libraries/fc/src/filesystem.cpp" bodystart="157" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1path_1a1e6beb6e05c3f6d6f699c1c448c4b1d6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classfc_1_1path" kindref="compound">fc::path</ref></type>
        <definition>fc::path fc::path::filename</definition>
        <argsstring>() const</argsstring>
        <name>filename</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/filesystem.hpp" line="54" column="20" bodyfile="libraries/fc/src/filesystem.cpp" bodystart="151" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1path_1a10985bab813b9197980458e4345d0f36" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classfc_1_1path" kindref="compound">fc::path</ref></type>
        <definition>fc::path fc::path::parent_path</definition>
        <argsstring>() const</argsstring>
        <name>parent_path</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/filesystem.hpp" line="55" column="20" bodyfile="libraries/fc/src/filesystem.cpp" bodystart="163" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1path_1abeeabf3ad6c6c7b18d8934a4e321c075" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string fc::path::string</definition>
        <argsstring>() const</argsstring>
        <name>string</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/filesystem.hpp" line="56" column="21" bodyfile="libraries/fc/src/filesystem.cpp" bodystart="148" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1path_1adb64b74a55a575d51120d9ca4c2b3461" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string fc::path::generic_string</definition>
        <argsstring>() const</argsstring>
        <name>generic_string</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/filesystem.hpp" line="57" column="21" bodyfile="libraries/fc/src/filesystem.cpp" bodystart="95" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1path_1a85e68cb32dad4605c6c2c95789885db6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string fc::path::preferred_string</definition>
        <argsstring>() const</argsstring>
        <name>preferred_string</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>On windows, returns a path where all path separators are &apos;\&apos; suitable for displaying to users. On other platforms, it does the same as <ref refid="classfc_1_1path_1adb64b74a55a575d51120d9ca4c2b3461" kindref="member">generic_string()</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/filesystem.hpp" line="61" column="21" bodyfile="libraries/fc/src/filesystem.cpp" bodystart="99" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1path_1a2eef878144c6265508787f3b9a6355e8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::wstring</type>
        <definition>std::wstring fc::path::wstring</definition>
        <argsstring>() const</argsstring>
        <name>wstring</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/filesystem.hpp" line="63" column="20" bodyfile="libraries/fc/src/filesystem.cpp" bodystart="104" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1path_1a018f35936535482432e303d4b7d10c31" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::wstring</type>
        <definition>std::wstring fc::path::generic_wstring</definition>
        <argsstring>() const</argsstring>
        <name>generic_wstring</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/filesystem.hpp" line="64" column="20" bodyfile="libraries/fc/src/filesystem.cpp" bodystart="109" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1path_1a02b8088f909ec69bd18f1f2617cb1c1f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::wstring</type>
        <definition>std::wstring fc::path::preferred_wstring</definition>
        <argsstring>() const</argsstring>
        <name>preferred_wstring</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/filesystem.hpp" line="65" column="20" bodyfile="libraries/fc/src/filesystem.cpp" bodystart="114" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1path_1a9712c4ccfcfc54e02cc913510a858733" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string fc::path::to_native_ansi_path</definition>
        <argsstring>() const</argsstring>
        <name>to_native_ansi_path</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieves native string path representation and next converts it into ANSI UTF-8 representation. It is needed since not all parts of fc library accept unicode paths (<ref refid="classfc_1_1file__mapping" kindref="compound">fc::file_mapping</ref>). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/filesystem.hpp" line="72" column="20" bodyfile="libraries/fc/src/filesystem.cpp" bodystart="119" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1path_1af94e229aed1e8b082dec022887b38db7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string fc::path::windows_string</definition>
        <argsstring>() const</argsstring>
        <name>windows_string</name>
        <briefdescription>
<para>replaces &apos;/&apos; with &apos;\&apos; in the result of <ref refid="classfc_1_1path_1adb64b74a55a575d51120d9ca4c2b3461" kindref="member">generic_string()</ref> </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>not part of boost::filesystem::path</para>
</simplesect>
<xrefsect id="todo_1_todo000002"><xreftitle>Todo</xreftitle><xrefdescription><para>use iterators instead of indexes for faster performance </para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/filesystem.hpp" line="79" column="19" bodyfile="libraries/fc/src/filesystem.cpp" bodystart="142" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1path_1afbbbaae83c2d714a07cc424dc7b9f329" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool fc::path::is_relative</definition>
        <argsstring>() const</argsstring>
        <name>is_relative</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/filesystem.hpp" line="81" column="18" bodyfile="libraries/fc/src/filesystem.cpp" bodystart="166" bodyend="166"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1path_1ae8ca694b3a1a776ae4a3c7d4622d746a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool fc::path::is_absolute</definition>
        <argsstring>() const</argsstring>
        <name>is_absolute</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/filesystem.hpp" line="82" column="18" bodyfile="libraries/fc/src/filesystem.cpp" bodystart="167" bodyend="167"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classfc_1_1path_1af45dc6cd4ecfc8ca7d0d76fa394e7c3d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend <ref refid="classfc_1_1path" kindref="compound">path</ref></type>
        <definition>path operator/</definition>
        <argsstring>(const fc::path &amp;p, const fc::path &amp;)</argsstring>
        <name>operator/</name>
        <param>
          <type>const <ref refid="classfc_1_1path" kindref="compound">fc::path</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classfc_1_1path" kindref="compound">fc::path</ref> &amp;</type>
          <defname>o</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/filesystem.hpp" line="43" column="19" bodyfile="libraries/fc/src/filesystem.cpp" bodystart="83" bodyend="87"/>
      </memberdef>
      <memberdef kind="friend" id="classfc_1_1path_1afd02e7ea89cb6a2b81d8bc4369e9636b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator==</definition>
        <argsstring>(const fc::path &amp;p, const fc::path &amp;)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classfc_1_1path" kindref="compound">fc::path</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classfc_1_1path" kindref="compound">fc::path</ref> &amp;</type>
          <defname>r</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/filesystem.hpp" line="44" column="19" bodyfile="libraries/fc/src/filesystem.cpp" bodystart="76" bodyend="76"/>
      </memberdef>
      <memberdef kind="friend" id="classfc_1_1path_1a8f32b11a97d3c20600c24dc2d0f31643" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator!=</definition>
        <argsstring>(const fc::path &amp;p, const fc::path &amp;)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classfc_1_1path" kindref="compound">fc::path</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classfc_1_1path" kindref="compound">fc::path</ref> &amp;</type>
          <defname>r</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/filesystem.hpp" line="45" column="19" bodyfile="libraries/fc/src/filesystem.cpp" bodystart="77" bodyend="77"/>
      </memberdef>
      <memberdef kind="friend" id="classfc_1_1path_1ad90b5a13641f4566ff587ee41dc964a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator&lt;</definition>
        <argsstring>(const fc::path &amp;p, const fc::path &amp;)</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const <ref refid="classfc_1_1path" kindref="compound">fc::path</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="classfc_1_1path" kindref="compound">fc::path</ref> &amp;</type>
          <defname>r</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/filesystem.hpp" line="46" column="14" bodyfile="libraries/fc/src/filesystem.cpp" bodystart="75" bodyend="75"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>wraps boost::filesystem::path to provide platform independent path manipulation. </para>
    </briefdescription>
    <detaileddescription>
<para>Most calls are simply a passthrough to boost::filesystem::path, however exceptions are wrapped in an fc::error_report and the additional helper method <ref refid="classfc_1_1path_1af94e229aed1e8b082dec022887b38db7" kindref="member">fc::path::windows_string()</ref>, can be used to calculate paths intended for systems different than the host.</para>
<para><simplesect kind="note"><para>Serializes to a fc::value() as the result of <ref refid="classfc_1_1path_1adb64b74a55a575d51120d9ca4c2b3461" kindref="member">generic_string()</ref> </para>
</simplesect>
</para>
    </detaileddescription>
    <location file="libraries/fc/include/fc/filesystem.hpp" line="28" column="13" bodyfile="libraries/fc/include/fc/filesystem.hpp" bodystart="28" bodyend="92"/>
    <listofallmembers>
      <member refid="classfc_1_1path_1ab5d00eb8d3feae8609cf71dc56432792" prot="private" virt="non-virtual"><scope>fc::path</scope><name>_p</name></member>
      <member refid="classfc_1_1path_1ab0d2cca0994e599a7d65a89c5c8f9e54" prot="public" virt="non-virtual"><scope>fc::path</scope><name>extension</name></member>
      <member refid="classfc_1_1path_1a1e6beb6e05c3f6d6f699c1c448c4b1d6" prot="public" virt="non-virtual"><scope>fc::path</scope><name>filename</name></member>
      <member refid="classfc_1_1path_1adb64b74a55a575d51120d9ca4c2b3461" prot="public" virt="non-virtual"><scope>fc::path</scope><name>generic_string</name></member>
      <member refid="classfc_1_1path_1a018f35936535482432e303d4b7d10c31" prot="public" virt="non-virtual"><scope>fc::path</scope><name>generic_wstring</name></member>
      <member refid="classfc_1_1path_1ae8ca694b3a1a776ae4a3c7d4622d746a" prot="public" virt="non-virtual"><scope>fc::path</scope><name>is_absolute</name></member>
      <member refid="classfc_1_1path_1afbbbaae83c2d714a07cc424dc7b9f329" prot="public" virt="non-virtual"><scope>fc::path</scope><name>is_relative</name></member>
      <member refid="classfc_1_1path_1a8f32b11a97d3c20600c24dc2d0f31643" prot="public" virt="non-virtual"><scope>fc::path</scope><name>operator!=</name></member>
      <member refid="classfc_1_1path_1af45dc6cd4ecfc8ca7d0d76fa394e7c3d" prot="public" virt="non-virtual"><scope>fc::path</scope><name>operator/</name></member>
      <member refid="classfc_1_1path_1addfacdbec90fcbdea3161373d314300d" prot="public" virt="non-virtual"><scope>fc::path</scope><name>operator/=</name></member>
      <member refid="classfc_1_1path_1ad90b5a13641f4566ff587ee41dc964a8" prot="public" virt="non-virtual"><scope>fc::path</scope><name>operator&lt;</name></member>
      <member refid="classfc_1_1path_1a76df00a037a781a2ebb3ae3100e06929" prot="public" virt="non-virtual"><scope>fc::path</scope><name>operator=</name></member>
      <member refid="classfc_1_1path_1abd300298b33db4c752481d93245fcbf4" prot="public" virt="non-virtual"><scope>fc::path</scope><name>operator=</name></member>
      <member refid="classfc_1_1path_1afd02e7ea89cb6a2b81d8bc4369e9636b" prot="public" virt="non-virtual"><scope>fc::path</scope><name>operator==</name></member>
      <member refid="classfc_1_1path_1a10985bab813b9197980458e4345d0f36" prot="public" virt="non-virtual"><scope>fc::path</scope><name>parent_path</name></member>
      <member refid="classfc_1_1path_1a2eac01e2a01fae18aa931c4b9369db08" prot="public" virt="non-virtual"><scope>fc::path</scope><name>path</name></member>
      <member refid="classfc_1_1path_1add8f88ad5dd493b16904860ce9be6493" prot="public" virt="non-virtual"><scope>fc::path</scope><name>path</name></member>
      <member refid="classfc_1_1path_1aca67292cff9d14da2d8814d09e0a7193" prot="public" virt="non-virtual"><scope>fc::path</scope><name>path</name></member>
      <member refid="classfc_1_1path_1a53f157da299530b9241885abc9aed113" prot="public" virt="non-virtual"><scope>fc::path</scope><name>path</name></member>
      <member refid="classfc_1_1path_1ab7e23e521ace1a15d0958d16e43cb69f" prot="public" virt="non-virtual"><scope>fc::path</scope><name>path</name></member>
      <member refid="classfc_1_1path_1a29e0e41c28ed846b7c9dca9b3031a4da" prot="public" virt="non-virtual"><scope>fc::path</scope><name>path</name></member>
      <member refid="classfc_1_1path_1ab7ad3a6bc6a10744488f4fd18c163f16" prot="public" virt="non-virtual"><scope>fc::path</scope><name>path</name></member>
      <member refid="classfc_1_1path_1a85e68cb32dad4605c6c2c95789885db6" prot="public" virt="non-virtual"><scope>fc::path</scope><name>preferred_string</name></member>
      <member refid="classfc_1_1path_1a02b8088f909ec69bd18f1f2617cb1c1f" prot="public" virt="non-virtual"><scope>fc::path</scope><name>preferred_wstring</name></member>
      <member refid="classfc_1_1path_1af7de3b21cee1e93c7496e480181e7af2" prot="public" virt="non-virtual"><scope>fc::path</scope><name>replace_extension</name></member>
      <member refid="classfc_1_1path_1a613fc8b20159868e1aa62670d81a0aad" prot="public" virt="non-virtual"><scope>fc::path</scope><name>separator_char</name></member>
      <member refid="classfc_1_1path_1a6756e8e4adb1f4f2423f454adfbbf205" prot="public" virt="non-virtual"><scope>fc::path</scope><name>stem</name></member>
      <member refid="classfc_1_1path_1abeeabf3ad6c6c7b18d8934a4e321c075" prot="public" virt="non-virtual"><scope>fc::path</scope><name>string</name></member>
      <member refid="classfc_1_1path_1a9712c4ccfcfc54e02cc913510a858733" prot="public" virt="non-virtual"><scope>fc::path</scope><name>to_native_ansi_path</name></member>
      <member refid="classfc_1_1path_1af94e229aed1e8b082dec022887b38db7" prot="public" virt="non-virtual"><scope>fc::path</scope><name>windows_string</name></member>
      <member refid="classfc_1_1path_1a2eef878144c6265508787f3b9a6355e8" prot="public" virt="non-virtual"><scope>fc::path</scope><name>wstring</name></member>
      <member refid="classfc_1_1path_1a5c57209bbb7561e35dcbd8ce8804e9c7" prot="public" virt="non-virtual"><scope>fc::path</scope><name>~path</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
