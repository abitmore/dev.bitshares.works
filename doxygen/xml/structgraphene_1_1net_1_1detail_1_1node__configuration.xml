<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="structgraphene_1_1net_1_1detail_1_1node__configuration" kind="struct" language="C++" prot="public">
    <compoundname>graphene::net::detail::node_configuration</compoundname>
    <includes refid="node__impl_8hxx" local="no">node_impl.hxx</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structgraphene_1_1net_1_1detail_1_1node__configuration_1a449677799f680e5acb42c1da3441d75e" prot="public" static="no" mutable="no">
        <type><ref refid="classfc_1_1ip_1_1endpoint" kindref="compound">fc::ip::endpoint</ref></type>
        <definition>fc::ip::endpoint graphene::net::detail::node_configuration::listen_endpoint</definition>
        <argsstring></argsstring>
        <name>listen_endpoint</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/net/node_impl.hxx" line="367" column="1" bodyfile="libraries/net/node_impl.hxx" bodystart="367" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1net_1_1detail_1_1node__configuration_1ae0ec9b2a79b7e8ff0f50c028eacf89f0" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool graphene::net::detail::node_configuration::accept_incoming_connections</definition>
        <argsstring></argsstring>
        <name>accept_incoming_connections</name>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/net/node_impl.hxx" line="368" column="1" bodyfile="libraries/net/node_impl.hxx" bodystart="368" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1net_1_1detail_1_1node__configuration_1a908d2ed64d9b68ba7ea76224f32ad7be" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool graphene::net::detail::node_configuration::wait_if_endpoint_is_busy</definition>
        <argsstring></argsstring>
        <name>wait_if_endpoint_is_busy</name>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/net/node_impl.hxx" line="369" column="1" bodyfile="libraries/net/node_impl.hxx" bodystart="369" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1net_1_1detail_1_1node__configuration_1adfb549f1df4eebd5b7b6d174313ed2a2" prot="public" static="no" mutable="no">
        <type><ref refid="classfc_1_1ecc_1_1private__key" kindref="compound">fc::ecc::private_key</ref></type>
        <definition>fc::ecc::private_key graphene::net::detail::node_configuration::private_key</definition>
        <argsstring></argsstring>
        <name>private_key</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Originally, our p2p code just had a &apos;node-id&apos; that was a random number identifying this node on the network. This is now a private key/public key pair, where the public key is used in place of the old random node-id. The private part is unused, but might be used in the future to support some notion of trusted peers. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/net/node_impl.hxx" line="376" column="1" bodyfile="libraries/net/node_impl.hxx" bodystart="376" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>This specifies configuration info for the local node. It&apos;s stored as JSON in the configuration directory (application data directory) </para>    </detaileddescription>
    <collaborationgraph>
      <node id="5050">
        <label>graphene::net::detail::node_configuration</label>
        <link refid="structgraphene_1_1net_1_1detail_1_1node__configuration"/>
        <childnode refid="5051" relation="usage">
          <edgelabel>listen_endpoint</edgelabel>
        </childnode>
        <childnode refid="5052" relation="usage">
          <edgelabel>private_key</edgelabel>
        </childnode>
      </node>
      <node id="5051">
        <label>fc::ip::endpoint</label>
        <link refid="classfc_1_1ip_1_1endpoint"/>
      </node>
      <node id="5052">
        <label>fc::ecc::private_key</label>
        <link refid="classfc_1_1ecc_1_1private__key"/>
      </node>
    </collaborationgraph>
    <location file="libraries/net/node_impl.hxx" line="366" column="1" bodyfile="libraries/net/node_impl.hxx" bodystart="365" bodyend="377"/>
    <listofallmembers>
      <member refid="structgraphene_1_1net_1_1detail_1_1node__configuration_1ae0ec9b2a79b7e8ff0f50c028eacf89f0" prot="public" virt="non-virtual"><scope>graphene::net::detail::node_configuration</scope><name>accept_incoming_connections</name></member>
      <member refid="structgraphene_1_1net_1_1detail_1_1node__configuration_1a449677799f680e5acb42c1da3441d75e" prot="public" virt="non-virtual"><scope>graphene::net::detail::node_configuration</scope><name>listen_endpoint</name></member>
      <member refid="structgraphene_1_1net_1_1detail_1_1node__configuration_1adfb549f1df4eebd5b7b6d174313ed2a2" prot="public" virt="non-virtual"><scope>graphene::net::detail::node_configuration</scope><name>private_key</name></member>
      <member refid="structgraphene_1_1net_1_1detail_1_1node__configuration_1a908d2ed64d9b68ba7ea76224f32ad7be" prot="public" virt="non-virtual"><scope>graphene::net::detail::node_configuration</scope><name>wait_if_endpoint_is_busy</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
