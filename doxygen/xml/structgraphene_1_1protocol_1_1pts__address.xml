<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structgraphene_1_1protocol_1_1pts__address" kind="struct" language="C++" prot="public">
    <compoundname>graphene::protocol::pts_address</compoundname>
    <includes refid="pts__address_8hpp" local="no">pts_address.hpp</includes>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1pts__address_1a6d7cfaac2d02783882ceb721857e290f" prot="public" static="yes" mutable="no">
        <type>constexpr uint8_t</type>
        <definition>constexpr uint8_t graphene::protocol::pts_address::default_version</definition>
        <argsstring></argsstring>
        <name>default_version</name>
        <initializer>= 56</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/pts_address.hpp" line="43" column="1" bodyfile="libraries/protocol/include/graphene/protocol/pts_address.hpp" bodystart="43" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1pts__address_1ad323ac65b6257cad103596166dd63af0" prot="public" static="no" mutable="no">
        <type>std::array&lt; char, 25 &gt;</type>
        <definition>std::array&lt;char,25&gt; graphene::protocol::pts_address::addr</definition>
        <argsstring></argsstring>
        <name>addr</name>
        <initializer>{}</initializer>
        <briefdescription>
<para>binary representation of address, 0-initialized </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/pts_address.hpp" line="57" column="1" bodyfile="libraries/protocol/include/graphene/protocol/pts_address.hpp" bodystart="57" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structgraphene_1_1protocol_1_1pts__address_1aafbe1214a62ca7f4cf809f488a615dbe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>graphene::protocol::pts_address::pts_address</definition>
        <argsstring>()</argsstring>
        <name>pts_address</name>
        <briefdescription>
<para>constructs empty / null address </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/pts_address.hpp" line="45" column="1" bodyfile="libraries/protocol/pts_address.cpp" bodystart="34" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1protocol_1_1pts__address_1aaa69ebbe5787581654312a783019e8ab" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>graphene::protocol::pts_address::pts_address</definition>
        <argsstring>(const std::string &amp;base58str)</argsstring>
        <name>pts_address</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>base58str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>converts to binary, validates checksum </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/pts_address.hpp" line="46" column="1" bodyfile="libraries/protocol/pts_address.cpp" bodystart="39" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1protocol_1_1pts__address_1a73de69fb20543a78bfe2bc0fa6fe777d" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>graphene::protocol::pts_address::pts_address</definition>
        <argsstring>(const fc::ecc::public_key &amp;pub, bool compressed=true, uint8_t version=default_version)</argsstring>
        <name>pts_address</name>
        <param>
          <type>const <ref refid="classfc_1_1ecc_1_1public__key" kindref="compound">fc::ecc::public_key</ref> &amp;</type>
          <declname>pub</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>compressed</declname>
          <defval>true</defval>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>version</declname>
          <defval><ref refid="structgraphene_1_1protocol_1_1pts__address_1a6d7cfaac2d02783882ceb721857e290f" kindref="member">default_version</ref></defval>
        </param>
        <briefdescription>
<para>Constructs from a public key. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/pts_address.hpp" line="48" column="1" bodyfile="libraries/protocol/pts_address.cpp" bodystart="48" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1protocol_1_1pts__address_1a29cac6ed797ea38d966d4c07d7170832" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t graphene::protocol::pts_address::version</definition>
        <argsstring>() const</argsstring>
        <name>version</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/pts_address.hpp" line="52" column="1" bodyfile="libraries/protocol/include/graphene/protocol/pts_address.hpp" bodystart="52" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1protocol_1_1pts__address_1a93aaa5f9a4a259ad11c0ff7ba27990eb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool graphene::protocol::pts_address::is_valid</definition>
        <argsstring>() const</argsstring>
        <name>is_valid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Checks the address to verify it has a valid checksum </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/pts_address.hpp" line="53" column="1" bodyfile="libraries/protocol/pts_address.cpp" bodystart="73" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1protocol_1_1pts__address_1a22b4dd27236e91cbe66235da9b3f0060" prot="public" static="no" const="yes" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>graphene::protocol::pts_address::operator std::string</definition>
        <argsstring>() const</argsstring>
        <name>operator std::string</name>
        <briefdescription>
<para>converts to base58 + checksum </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/pts_address.hpp" line="55" column="1" bodyfile="libraries/protocol/pts_address.cpp" bodystart="80" bodyend="83"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Implements address stringification and validation from PTS </para>    </detaileddescription>
    <location file="libraries/protocol/include/graphene/protocol/pts_address.hpp" line="42" column="1" bodyfile="libraries/protocol/include/graphene/protocol/pts_address.hpp" bodystart="41" bodyend="58"/>
    <listofallmembers>
      <member refid="structgraphene_1_1protocol_1_1pts__address_1ad323ac65b6257cad103596166dd63af0" prot="public" virt="non-virtual"><scope>graphene::protocol::pts_address</scope><name>addr</name></member>
      <member refid="structgraphene_1_1protocol_1_1pts__address_1a6d7cfaac2d02783882ceb721857e290f" prot="public" virt="non-virtual"><scope>graphene::protocol::pts_address</scope><name>default_version</name></member>
      <member refid="structgraphene_1_1protocol_1_1pts__address_1a93aaa5f9a4a259ad11c0ff7ba27990eb" prot="public" virt="non-virtual"><scope>graphene::protocol::pts_address</scope><name>is_valid</name></member>
      <member refid="structgraphene_1_1protocol_1_1pts__address_1a22b4dd27236e91cbe66235da9b3f0060" prot="public" virt="non-virtual"><scope>graphene::protocol::pts_address</scope><name>operator std::string</name></member>
      <member refid="structgraphene_1_1protocol_1_1pts__address_1aafbe1214a62ca7f4cf809f488a615dbe" prot="public" virt="non-virtual"><scope>graphene::protocol::pts_address</scope><name>pts_address</name></member>
      <member refid="structgraphene_1_1protocol_1_1pts__address_1aaa69ebbe5787581654312a783019e8ab" prot="public" virt="non-virtual"><scope>graphene::protocol::pts_address</scope><name>pts_address</name></member>
      <member refid="structgraphene_1_1protocol_1_1pts__address_1a73de69fb20543a78bfe2bc0fa6fe777d" prot="public" virt="non-virtual"><scope>graphene::protocol::pts_address</scope><name>pts_address</name></member>
      <member refid="structgraphene_1_1protocol_1_1pts__address_1a29cac6ed797ea38d966d4c07d7170832" prot="public" virt="non-virtual"><scope>graphene::protocol::pts_address</scope><name>version</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
