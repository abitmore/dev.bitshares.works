<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classfc_1_1task__specific__ptr" kind="class" language="C++" prot="public">
    <compoundname>fc::task_specific_ptr</compoundname>
    <includes refid="thread__specific_8hpp" local="no">thread_specific.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classfc_1_1task__specific__ptr_1a882e79276d4c6566f5c8dc91a02441b7" prot="private" static="no" mutable="no">
        <type>unsigned</type>
        <definition>unsigned fc::task_specific_ptr&lt; T &gt;::slot</definition>
        <argsstring></argsstring>
        <name>slot</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/thread/thread_specific.hpp" line="52" column="1" bodyfile="libraries/fc/include/fc/thread/thread_specific.hpp" bodystart="52" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classfc_1_1task__specific__ptr_1a92b8ff9de574e155f1c98d0ff1405d3a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>fc::task_specific_ptr&lt; T &gt;::task_specific_ptr</definition>
        <argsstring>()</argsstring>
        <name>task_specific_ptr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/thread/thread_specific.hpp" line="54" column="1" bodyfile="libraries/fc/include/fc/thread/thread_specific.hpp" bodystart="54" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1task__specific__ptr_1aa947861a12784bf948363d08d589410d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>T *</type>
        <definition>T* fc::task_specific_ptr&lt; T &gt;::get</definition>
        <argsstring>() const</argsstring>
        <name>get</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/thread/thread_specific.hpp" line="58" column="1" bodyfile="libraries/fc/include/fc/thread/thread_specific.hpp" bodystart="58" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1task__specific__ptr_1ab8bdb755690c5a954ccdf5c911de0614" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>T *</type>
        <definition>T* fc::task_specific_ptr&lt; T &gt;::operator-&gt;</definition>
        <argsstring>() const</argsstring>
        <name>operator-&gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/thread/thread_specific.hpp" line="62" column="1" bodyfile="libraries/fc/include/fc/thread/thread_specific.hpp" bodystart="62" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1task__specific__ptr_1aa81f5ec74845c5b547aefb08c4a5dbe5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>T &amp;</type>
        <definition>T&amp; fc::task_specific_ptr&lt; T &gt;::operator*</definition>
        <argsstring>() const</argsstring>
        <name>operator*</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/thread/thread_specific.hpp" line="66" column="1" bodyfile="libraries/fc/include/fc/thread/thread_specific.hpp" bodystart="66" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1task__specific__ptr_1ac75949dd95cdd884522dee577667ad39" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>fc::task_specific_ptr&lt; T &gt;::operator bool</definition>
        <argsstring>() const</argsstring>
        <name>operator bool</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/thread/thread_specific.hpp" line="70" column="1" bodyfile="libraries/fc/include/fc/thread/thread_specific.hpp" bodystart="70" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1task__specific__ptr_1a9aee38c2788e9eb026a9331a5039b915" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void fc::task_specific_ptr&lt; T &gt;::reset</definition>
        <argsstring>(T *new_value=0)</argsstring>
        <name>reset</name>
        <param>
          <type>T *</type>
          <declname>new_value</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/thread/thread_specific.hpp" line="78" column="1" bodyfile="libraries/fc/include/fc/thread/thread_specific.hpp" bodystart="78" bodyend="81"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classfc_1_1task__specific__ptr_1a83fa4714ca286a7c927fe92ca91098fd" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void fc::task_specific_ptr&lt; T &gt;::cleanup_function</definition>
        <argsstring>(void *obj)</argsstring>
        <name>cleanup_function</name>
        <param>
          <type>void *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/thread/thread_specific.hpp" line="74" column="1" bodyfile="libraries/fc/include/fc/thread/thread_specific.hpp" bodystart="74" bodyend="77"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="libraries/fc/include/fc/thread/thread_specific.hpp" line="50" column="1" bodyfile="libraries/fc/include/fc/thread/thread_specific.hpp" bodystart="49" bodyend="82"/>
    <listofallmembers>
      <member refid="classfc_1_1task__specific__ptr_1a83fa4714ca286a7c927fe92ca91098fd" prot="public" virt="non-virtual"><scope>fc::task_specific_ptr</scope><name>cleanup_function</name></member>
      <member refid="classfc_1_1task__specific__ptr_1aa947861a12784bf948363d08d589410d" prot="public" virt="non-virtual"><scope>fc::task_specific_ptr</scope><name>get</name></member>
      <member refid="classfc_1_1task__specific__ptr_1ac75949dd95cdd884522dee577667ad39" prot="public" virt="non-virtual"><scope>fc::task_specific_ptr</scope><name>operator bool</name></member>
      <member refid="classfc_1_1task__specific__ptr_1aa81f5ec74845c5b547aefb08c4a5dbe5" prot="public" virt="non-virtual"><scope>fc::task_specific_ptr</scope><name>operator*</name></member>
      <member refid="classfc_1_1task__specific__ptr_1ab8bdb755690c5a954ccdf5c911de0614" prot="public" virt="non-virtual"><scope>fc::task_specific_ptr</scope><name>operator-&gt;</name></member>
      <member refid="classfc_1_1task__specific__ptr_1a9aee38c2788e9eb026a9331a5039b915" prot="public" virt="non-virtual"><scope>fc::task_specific_ptr</scope><name>reset</name></member>
      <member refid="classfc_1_1task__specific__ptr_1a882e79276d4c6566f5c8dc91a02441b7" prot="private" virt="non-virtual"><scope>fc::task_specific_ptr</scope><name>slot</name></member>
      <member refid="classfc_1_1task__specific__ptr_1a92b8ff9de574e155f1c98d0ff1405d3a" prot="public" virt="non-virtual"><scope>fc::task_specific_ptr</scope><name>task_specific_ptr</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
