<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classfc_1_1logger" kind="class" language="C++" prot="public">
    <compoundname>fc::logger</compoundname>
    <includes refid="logger_8hpp" local="no">logger.hpp</includes>
    <innerclass refid="classfc_1_1logger_1_1impl" prot="public">fc::logger::impl</innerclass>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classfc_1_1logger_1ab6f316d908974b043bd17f06cf91b810" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classfc_1_1logger_1_1impl" kindref="compound">impl</ref> &gt;</type>
        <definition>std::shared_ptr&lt;impl&gt; fc::logger::my</definition>
        <argsstring></argsstring>
        <name>my</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/log/logger.hpp" line="54" column="26" bodyfile="libraries/fc/include/fc/log/logger.hpp" bodystart="53" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classfc_1_1logger_1ae5dad804f9d6a06eb323d42f843ed65a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classfc_1_1logger" kindref="compound">logger</ref></type>
        <definition>logger fc::logger::get</definition>
        <argsstring>(const std::string &amp;name=&quot;default&quot;)</argsstring>
        <name>get</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
          <defval>&quot;default&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/log/logger.hpp" line="24" column="24" bodyfile="libraries/fc/src/log/logger.cpp" bodystart="87" bodyend="91"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classfc_1_1logger_1ac541c6ab75f50c5ed68967d857bcf61f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fc::logger::logger</definition>
        <argsstring>()</argsstring>
        <name>logger</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/log/logger.hpp" line="26" column="10" bodyfile="libraries/fc/src/log/logger.cpp" bodystart="28" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1logger_1a4a01ac75a86de42b725708b5e63474f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fc::logger::logger</definition>
        <argsstring>(const string &amp;name, const logger &amp;parent=nullptr)</argsstring>
        <name>logger</name>
        <param>
          <type>const string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const <ref refid="classfc_1_1logger" kindref="compound">logger</ref> &amp;</type>
          <declname>parent</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/log/logger.hpp" line="27" column="10" bodyfile="libraries/fc/src/log/logger.cpp" bodystart="33" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1logger_1aa80401fe80edd1fea76dbea15d01ce76" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fc::logger::logger</definition>
        <argsstring>(std::nullptr_t)</argsstring>
        <name>logger</name>
        <param>
          <type>std::nullptr_t</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/log/logger.hpp" line="28" column="10" bodyfile="libraries/fc/src/log/logger.cpp" bodystart="31" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1logger_1a4d5cc2438ad7a1511d57608c64a8380e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fc::logger::logger</definition>
        <argsstring>(const logger &amp;c)</argsstring>
        <name>logger</name>
        <param>
          <type>const <ref refid="classfc_1_1logger" kindref="compound">logger</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/log/logger.hpp" line="29" column="10" bodyfile="libraries/fc/src/log/logger.cpp" bodystart="41" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1logger_1a27834158456a85aab96d55fe6fac34bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fc::logger::logger</definition>
        <argsstring>(logger &amp;&amp;c)</argsstring>
        <name>logger</name>
        <param>
          <type><ref refid="classfc_1_1logger" kindref="compound">logger</ref> &amp;&amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/log/logger.hpp" line="30" column="10" bodyfile="libraries/fc/src/log/logger.cpp" bodystart="44" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1logger_1afb7a34b2276c8b909cef0b372aa26661" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fc::logger::~logger</definition>
        <argsstring>()</argsstring>
        <name>~logger</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/log/logger.hpp" line="31" column="10" bodyfile="libraries/fc/src/log/logger.cpp" bodystart="47" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1logger_1a393c825c3bde5d27ff565e08ce2035de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classfc_1_1logger" kindref="compound">logger</ref> &amp;</type>
        <definition>logger &amp; fc::logger::operator=</definition>
        <argsstring>(const logger &amp;)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classfc_1_1logger" kindref="compound">logger</ref> &amp;</type>
          <defname>l</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/log/logger.hpp" line="32" column="17" bodyfile="libraries/fc/src/log/logger.cpp" bodystart="49" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1logger_1a471fac59f62723ddc452c63f940e5568" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classfc_1_1logger" kindref="compound">logger</ref> &amp;</type>
        <definition>logger &amp; fc::logger::operator=</definition>
        <argsstring>(logger &amp;&amp;)</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classfc_1_1logger" kindref="compound">logger</ref> &amp;&amp;</type>
          <defname>l</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/log/logger.hpp" line="33" column="17" bodyfile="libraries/fc/src/log/logger.cpp" bodystart="53" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1logger_1a4c22e498cec41efb806fda9733662650" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classfc_1_1logger" kindref="compound">logger</ref> &amp;</type>
        <definition>logger &amp; fc::logger::set_log_level</definition>
        <argsstring>(log_level e)</argsstring>
        <name>set_log_level</name>
        <param>
          <type><ref refid="classfc_1_1log__level" kindref="compound">log_level</ref></type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/log/logger.hpp" line="37" column="20" bodyfile="libraries/fc/src/log/logger.cpp" bodystart="97" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1logger_1ab4ee187ac7a43ba90d16c93da35e9954" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classfc_1_1log__level" kindref="compound">log_level</ref></type>
        <definition>log_level fc::logger::get_log_level</definition>
        <argsstring>() const</argsstring>
        <name>get_log_level</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/log/logger.hpp" line="38" column="21" bodyfile="libraries/fc/src/log/logger.cpp" bodystart="96" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1logger_1a8957908ed8f530c1b97a979552dd19e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classfc_1_1logger" kindref="compound">logger</ref> &amp;</type>
        <definition>logger &amp; fc::logger::set_parent</definition>
        <argsstring>(const logger &amp;l)</argsstring>
        <name>set_parent</name>
        <param>
          <type>const <ref refid="classfc_1_1logger" kindref="compound">logger</ref> &amp;</type>
          <declname>l</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/log/logger.hpp" line="39" column="20" bodyfile="libraries/fc/src/log/logger.cpp" bodystart="94" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1logger_1a2d94a15c5f6573dc2a30828d3bb5b756" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classfc_1_1logger" kindref="compound">logger</ref></type>
        <definition>logger fc::logger::get_parent</definition>
        <argsstring>() const</argsstring>
        <name>get_parent</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/log/logger.hpp" line="40" column="21" bodyfile="libraries/fc/src/log/logger.cpp" bodystart="93" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1logger_1ac7197831ce05aaa65fdfa5452b17d923" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void fc::logger::set_name</definition>
        <argsstring>(const std::string &amp;n)</argsstring>
        <name>set_name</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/log/logger.hpp" line="42" column="16" bodyfile="libraries/fc/src/log/logger.cpp" bodystart="74" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1logger_1accd917747ff35679f3127c93f02999d0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string &amp; fc::logger::name</definition>
        <argsstring>() const</argsstring>
        <name>name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/log/logger.hpp" line="43" column="28" bodyfile="libraries/fc/src/log/logger.cpp" bodystart="75" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1logger_1ac26bf8eba4c7f497a9a1ed65421cc473" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void fc::logger::add_appender</definition>
        <argsstring>(const appender::ptr &amp;a)</argsstring>
        <name>add_appender</name>
        <param>
          <type>const <ref refid="classfc_1_1appender_1a092aa67bbf9a6dd77ff5eb0c349152ee" kindref="member">appender::ptr</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/log/logger.hpp" line="45" column="15" bodyfile="libraries/fc/src/log/logger.cpp" bodystart="99" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1logger_1a2402e3aa0877ff4eccfebc075e156b75" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="classfc_1_1appender_1a092aa67bbf9a6dd77ff5eb0c349152ee" kindref="member">appender::ptr</ref> &gt;</type>
        <definition>std::vector&lt; appender::ptr &gt; fc::logger::get_appenders</definition>
        <argsstring>() const</argsstring>
        <name>get_appenders</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/log/logger.hpp" line="46" column="22" bodyfile="libraries/fc/src/log/logger.cpp" bodystart="109" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1logger_1a8b3d299efa33871eef3896a5c5d1756c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void fc::logger::remove_appender</definition>
        <argsstring>(const appender::ptr &amp;a)</argsstring>
        <name>remove_appender</name>
        <param>
          <type>const <ref refid="classfc_1_1appender_1a092aa67bbf9a6dd77ff5eb0c349152ee" kindref="member">appender::ptr</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/log/logger.hpp" line="47" column="15" bodyfile="libraries/fc/src/log/logger.cpp" bodystart="102" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1logger_1afbae9b6cd7f4f604f654a4c1914677ac" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool fc::logger::is_enabled</definition>
        <argsstring>(log_level e) const</argsstring>
        <name>is_enabled</name>
        <param>
          <type><ref refid="classfc_1_1log__level" kindref="compound">log_level</ref></type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/log/logger.hpp" line="49" column="15" bodyfile="libraries/fc/src/log/logger.cpp" bodystart="60" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1logger_1a8699bbd7c059f568f456b1446b97b0e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void fc::logger::log</definition>
        <argsstring>(log_message m)</argsstring>
        <name>log</name>
        <param>
          <type><ref refid="classfc_1_1log__message" kindref="compound">log_message</ref></type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/log/logger.hpp" line="50" column="15" bodyfile="libraries/fc/src/log/logger.cpp" bodystart="64" bodyend="73"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classfc_1_1logger_1ae72ebcd5df1295f3d8e4bf0c0f4bae05" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator==</definition>
        <argsstring>(const logger &amp;, std::nullptr_t)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classfc_1_1logger" kindref="compound">logger</ref> &amp;</type>
          <defname>l</defname>
        </param>
        <param>
          <type>std::nullptr_t</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/log/logger.hpp" line="34" column="22" bodyfile="libraries/fc/src/log/logger.cpp" bodystart="57" bodyend="57"/>
      </memberdef>
      <memberdef kind="friend" id="classfc_1_1logger_1a08afb64ed364ac14c92efb03181b08c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator!=</definition>
        <argsstring>(const logger &amp;, std::nullptr_t)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classfc_1_1logger" kindref="compound">logger</ref> &amp;</type>
          <defname>l</defname>
        </param>
        <param>
          <type>std::nullptr_t</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/log/logger.hpp" line="35" column="22" bodyfile="libraries/fc/src/log/logger.cpp" bodystart="58" bodyend="58"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><programlisting><codeline><highlight class="normal">void<sp/>my_class::func()</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>fc_dlog(<sp/>my_class_logger,<sp/>&quot;Format<sp/>four:<sp/>${arg}<sp/><sp/>five:<sp/>${five}&quot;,<sp/>(&quot;arg&quot;,4)(&quot;five&quot;,5)<sp/>);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
    </detaileddescription>
    <location file="libraries/fc/include/fc/log/logger.hpp" line="22" column="1" bodyfile="libraries/fc/include/fc/log/logger.hpp" bodystart="21" bodyend="55"/>
    <listofallmembers>
      <member refid="classfc_1_1logger_1ac26bf8eba4c7f497a9a1ed65421cc473" prot="public" virt="non-virtual"><scope>fc::logger</scope><name>add_appender</name></member>
      <member refid="classfc_1_1logger_1ae5dad804f9d6a06eb323d42f843ed65a" prot="public" virt="non-virtual"><scope>fc::logger</scope><name>get</name></member>
      <member refid="classfc_1_1logger_1a2402e3aa0877ff4eccfebc075e156b75" prot="public" virt="non-virtual"><scope>fc::logger</scope><name>get_appenders</name></member>
      <member refid="classfc_1_1logger_1ab4ee187ac7a43ba90d16c93da35e9954" prot="public" virt="non-virtual"><scope>fc::logger</scope><name>get_log_level</name></member>
      <member refid="classfc_1_1logger_1a2d94a15c5f6573dc2a30828d3bb5b756" prot="public" virt="non-virtual"><scope>fc::logger</scope><name>get_parent</name></member>
      <member refid="classfc_1_1logger_1afbae9b6cd7f4f604f654a4c1914677ac" prot="public" virt="non-virtual"><scope>fc::logger</scope><name>is_enabled</name></member>
      <member refid="classfc_1_1logger_1a8699bbd7c059f568f456b1446b97b0e4" prot="public" virt="non-virtual"><scope>fc::logger</scope><name>log</name></member>
      <member refid="classfc_1_1logger_1ac541c6ab75f50c5ed68967d857bcf61f" prot="public" virt="non-virtual"><scope>fc::logger</scope><name>logger</name></member>
      <member refid="classfc_1_1logger_1a4a01ac75a86de42b725708b5e63474f0" prot="public" virt="non-virtual"><scope>fc::logger</scope><name>logger</name></member>
      <member refid="classfc_1_1logger_1aa80401fe80edd1fea76dbea15d01ce76" prot="public" virt="non-virtual"><scope>fc::logger</scope><name>logger</name></member>
      <member refid="classfc_1_1logger_1a4d5cc2438ad7a1511d57608c64a8380e" prot="public" virt="non-virtual"><scope>fc::logger</scope><name>logger</name></member>
      <member refid="classfc_1_1logger_1a27834158456a85aab96d55fe6fac34bc" prot="public" virt="non-virtual"><scope>fc::logger</scope><name>logger</name></member>
      <member refid="classfc_1_1logger_1ab6f316d908974b043bd17f06cf91b810" prot="private" virt="non-virtual"><scope>fc::logger</scope><name>my</name></member>
      <member refid="classfc_1_1logger_1accd917747ff35679f3127c93f02999d0" prot="public" virt="non-virtual"><scope>fc::logger</scope><name>name</name></member>
      <member refid="classfc_1_1logger_1a08afb64ed364ac14c92efb03181b08c4" prot="public" virt="non-virtual"><scope>fc::logger</scope><name>operator!=</name></member>
      <member refid="classfc_1_1logger_1a393c825c3bde5d27ff565e08ce2035de" prot="public" virt="non-virtual"><scope>fc::logger</scope><name>operator=</name></member>
      <member refid="classfc_1_1logger_1a471fac59f62723ddc452c63f940e5568" prot="public" virt="non-virtual"><scope>fc::logger</scope><name>operator=</name></member>
      <member refid="classfc_1_1logger_1ae72ebcd5df1295f3d8e4bf0c0f4bae05" prot="public" virt="non-virtual"><scope>fc::logger</scope><name>operator==</name></member>
      <member refid="classfc_1_1logger_1a8b3d299efa33871eef3896a5c5d1756c" prot="public" virt="non-virtual"><scope>fc::logger</scope><name>remove_appender</name></member>
      <member refid="classfc_1_1logger_1a4c22e498cec41efb806fda9733662650" prot="public" virt="non-virtual"><scope>fc::logger</scope><name>set_log_level</name></member>
      <member refid="classfc_1_1logger_1ac7197831ce05aaa65fdfa5452b17d923" prot="public" virt="non-virtual"><scope>fc::logger</scope><name>set_name</name></member>
      <member refid="classfc_1_1logger_1a8957908ed8f530c1b97a979552dd19e6" prot="public" virt="non-virtual"><scope>fc::logger</scope><name>set_parent</name></member>
      <member refid="classfc_1_1logger_1afb7a34b2276c8b909cef0b372aa26661" prot="public" virt="non-virtual"><scope>fc::logger</scope><name>~logger</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
