<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="structgraphene_1_1protocol_1_1balance__claim__operation" kind="struct" language="C++" prot="public">
    <compoundname>graphene::protocol::balance_claim_operation</compoundname>
    <basecompoundref refid="structgraphene_1_1protocol_1_1base__operation" prot="public" virt="non-virtual">graphene::protocol::base_operation</basecompoundref>
    <includes refid="balance_8hpp" local="no">balance.hpp</includes>
    <innerclass refid="structgraphene_1_1protocol_1_1balance__claim__operation_1_1fee__params__t" prot="public">graphene::protocol::balance_claim_operation::fee_params_t</innerclass>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1balance__claim__operation_1a799e5f1ea5232c3d9d2bde3e2d8032ef" prot="public" static="no" mutable="no">
        <type><ref refid="structgraphene_1_1protocol_1_1asset" kindref="compound">asset</ref></type>
        <definition>asset graphene::protocol::balance_claim_operation::fee</definition>
        <argsstring></argsstring>
        <name>fee</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/balance.hpp" line="44" column="25" bodyfile="libraries/protocol/include/graphene/protocol/balance.hpp" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1balance__claim__operation_1a61b704eb128bf7635ef003f688d2694c" prot="public" static="no" mutable="no">
        <type>account_id_type</type>
        <definition>account_id_type graphene::protocol::balance_claim_operation::deposit_to_account</definition>
        <argsstring></argsstring>
        <name>deposit_to_account</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/balance.hpp" line="45" column="25" bodyfile="libraries/protocol/include/graphene/protocol/balance.hpp" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1balance__claim__operation_1ac0eab2b3a032d2ed1d730af5bb07b6d5" prot="public" static="no" mutable="no">
        <type>balance_id_type</type>
        <definition>balance_id_type graphene::protocol::balance_claim_operation::balance_to_claim</definition>
        <argsstring></argsstring>
        <name>balance_to_claim</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/balance.hpp" line="46" column="25" bodyfile="libraries/protocol/include/graphene/protocol/balance.hpp" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1balance__claim__operation_1af398acbf11d5d567e8db94c704c43fba" prot="public" static="no" mutable="no">
        <type><ref refid="structgraphene_1_1protocol_1_1public__key__type" kindref="compound">public_key_type</ref></type>
        <definition>public_key_type graphene::protocol::balance_claim_operation::balance_owner_key</definition>
        <argsstring></argsstring>
        <name>balance_owner_key</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/balance.hpp" line="47" column="25" bodyfile="libraries/protocol/include/graphene/protocol/balance.hpp" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1balance__claim__operation_1a9f167cb7da9385a5095ae6e60ed1aeb6" prot="public" static="no" mutable="no">
        <type><ref refid="structgraphene_1_1protocol_1_1asset" kindref="compound">asset</ref></type>
        <definition>asset graphene::protocol::balance_claim_operation::total_claimed</definition>
        <argsstring></argsstring>
        <name>total_claimed</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/balance.hpp" line="48" column="25" bodyfile="libraries/protocol/include/graphene/protocol/balance.hpp" bodystart="48" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structgraphene_1_1protocol_1_1balance__claim__operation_1a90cb7f9de6766dd03afb74b39d5c5c1a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>account_id_type</type>
        <definition>account_id_type graphene::protocol::balance_claim_operation::fee_payer</definition>
        <argsstring>() const</argsstring>
        <name>fee_payer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/balance.hpp" line="50" column="23" bodyfile="libraries/protocol/include/graphene/protocol/balance.hpp" bodystart="50" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1protocol_1_1balance__claim__operation_1a6ba1d9ca1288a905c2a4f90f289aa8af" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacegraphene_1_1protocol_1a69b2104c1c11eed2d17bd29b86713347" kindref="member">share_type</ref></type>
        <definition>share_type graphene::protocol::balance_claim_operation::calculate_fee</definition>
        <argsstring>(const fee_params_t &amp;) const</argsstring>
        <name>calculate_fee</name>
        <param>
          <type>const <ref refid="structgraphene_1_1protocol_1_1balance__claim__operation_1_1fee__params__t" kindref="compound">fee_params_t</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/balance.hpp" line="51" column="23" bodyfile="libraries/protocol/include/graphene/protocol/balance.hpp" bodystart="51" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1protocol_1_1balance__claim__operation_1a52afb70bc9ff786f890d41635127ab5a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void graphene::protocol::balance_claim_operation::validate</definition>
        <argsstring>() const</argsstring>
        <name>validate</name>
        <reimplements refid="structgraphene_1_1protocol_1_1base__operation_1a23d617a6fa0921d3f5b51dd5167e7a29">validate</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/balance.hpp" line="52" column="23" bodyfile="libraries/protocol/operations.cpp" bodystart="46" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1protocol_1_1balance__claim__operation_1a3e8aaed9890ff980a51403f560b3c80f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void graphene::protocol::balance_claim_operation::get_required_authorities</definition>
        <argsstring>(vector&lt; authority &gt; &amp;a) const</argsstring>
        <name>get_required_authorities</name>
        <reimplements refid="structgraphene_1_1protocol_1_1base__operation_1aabc48ce97877c67ff560b94284a7c0bb">get_required_authorities</reimplements>
        <param>
          <type>vector&lt; <ref refid="structgraphene_1_1protocol_1_1authority" kindref="compound">authority</ref> &gt; &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/balance.hpp" line="53" column="23" bodyfile="libraries/protocol/include/graphene/protocol/balance.hpp" bodystart="53" bodyend="56"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Claim a balance in a <ref refid="classgraphene_1_1chain_1_1balance__object" kindref="compound">graphene::chain::balance_object</ref>. </para>
    </briefdescription>
    <detaileddescription>
<para>This operation is used to claim the balance in a given <ref refid="classgraphene_1_1chain_1_1balance__object" kindref="compound">graphene::chain::balance_object</ref>. If the balance object contains a vesting balance, <ref refid="structgraphene_1_1protocol_1_1balance__claim__operation_1a9f167cb7da9385a5095ae6e60ed1aeb6" kindref="member">total_claimed</ref> must not exceed <ref refid="classgraphene_1_1chain_1_1balance__object_1abc9aa8646d5952a3cd75b07a3ebdcf57" kindref="member">graphene::chain::balance_object::available</ref> at the time of evaluation. If the object contains a non-vesting balance, <ref refid="structgraphene_1_1protocol_1_1balance__claim__operation_1a9f167cb7da9385a5095ae6e60ed1aeb6" kindref="member">total_claimed</ref> must be the full balance of the object. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>graphene::protocol::balance_claim_operation</label>
        <link refid="structgraphene_1_1protocol_1_1balance__claim__operation"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>graphene::protocol::base_operation</label>
        <link refid="structgraphene_1_1protocol_1_1base__operation"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>graphene::protocol::balance_claim_operation</label>
        <link refid="structgraphene_1_1protocol_1_1balance__claim__operation"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>total_claimed</edgelabel>
          <edgelabel>fee</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>deposit_to_account</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>balance_owner_key</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>fc::safe_base&lt; int64_t &gt;</label>
        <link refid="structfc_1_1safe__base"/>
      </node>
      <node id="6">
        <label>account_id_type</label>
      </node>
      <node id="4">
        <label>fc::safe&lt; int64_t &gt;</label>
        <link refid="structfc_1_1safe"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>fc::zero_initialized_array&lt; unsigned char, 33 &gt;</label>
        <link refid="classfc_1_1zero__initialized__array"/>
      </node>
      <node id="2">
        <label>graphene::protocol::base_operation</label>
        <link refid="structgraphene_1_1protocol_1_1base__operation"/>
      </node>
      <node id="3">
        <label>graphene::protocol::asset</label>
        <link refid="structgraphene_1_1protocol_1_1asset"/>
        <childnode refid="4" relation="usage">
          <edgelabel>amount</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>graphene::protocol::public_key_type</label>
        <link refid="structgraphene_1_1protocol_1_1public__key__type"/>
        <childnode refid="8" relation="usage">
          <edgelabel>key_data</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="libraries/protocol/include/graphene/protocol/balance.hpp" line="41" column="1" bodyfile="libraries/protocol/include/graphene/protocol/balance.hpp" bodystart="40" bodyend="57"/>
    <listofallmembers>
      <member refid="structgraphene_1_1protocol_1_1balance__claim__operation_1af398acbf11d5d567e8db94c704c43fba" prot="public" virt="non-virtual"><scope>graphene::protocol::balance_claim_operation</scope><name>balance_owner_key</name></member>
      <member refid="structgraphene_1_1protocol_1_1balance__claim__operation_1ac0eab2b3a032d2ed1d730af5bb07b6d5" prot="public" virt="non-virtual"><scope>graphene::protocol::balance_claim_operation</scope><name>balance_to_claim</name></member>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1aaccb0fa71ee529cf62324baaa99988fe" prot="public" virt="non-virtual"><scope>graphene::protocol::balance_claim_operation</scope><name>calculate_data_fee</name></member>
      <member refid="structgraphene_1_1protocol_1_1balance__claim__operation_1a6ba1d9ca1288a905c2a4f90f289aa8af" prot="public" virt="non-virtual"><scope>graphene::protocol::balance_claim_operation</scope><name>calculate_fee</name></member>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1a0be44badcee9a648413eb906dac1d3b3" prot="public" virt="non-virtual" ambiguityscope="graphene::protocol::base_operation::"><scope>graphene::protocol::balance_claim_operation</scope><name>calculate_fee</name></member>
      <member refid="structgraphene_1_1protocol_1_1balance__claim__operation_1a61b704eb128bf7635ef003f688d2694c" prot="public" virt="non-virtual"><scope>graphene::protocol::balance_claim_operation</scope><name>deposit_to_account</name></member>
      <member refid="structgraphene_1_1protocol_1_1balance__claim__operation_1a799e5f1ea5232c3d9d2bde3e2d8032ef" prot="public" virt="non-virtual"><scope>graphene::protocol::balance_claim_operation</scope><name>fee</name></member>
      <member refid="structgraphene_1_1protocol_1_1balance__claim__operation_1a90cb7f9de6766dd03afb74b39d5c5c1a" prot="public" virt="non-virtual"><scope>graphene::protocol::balance_claim_operation</scope><name>fee_payer</name></member>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1a89ed7c6e7da93cd99bb41bc8d7e2627b" prot="public" virt="virtual"><scope>graphene::protocol::balance_claim_operation</scope><name>get_required_active_authorities</name></member>
      <member refid="structgraphene_1_1protocol_1_1balance__claim__operation_1a3e8aaed9890ff980a51403f560b3c80f" prot="public" virt="virtual"><scope>graphene::protocol::balance_claim_operation</scope><name>get_required_authorities</name></member>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1a3251978e7bd0bb2f2fa23bcea5dee95c" prot="public" virt="virtual"><scope>graphene::protocol::balance_claim_operation</scope><name>get_required_owner_authorities</name></member>
      <member refid="structgraphene_1_1protocol_1_1balance__claim__operation_1a9f167cb7da9385a5095ae6e60ed1aeb6" prot="public" virt="non-virtual"><scope>graphene::protocol::balance_claim_operation</scope><name>total_claimed</name></member>
      <member refid="structgraphene_1_1protocol_1_1balance__claim__operation_1a52afb70bc9ff786f890d41635127ab5a" prot="public" virt="virtual"><scope>graphene::protocol::balance_claim_operation</scope><name>validate</name></member>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1a485f3d3b963ff4c081af85945cf27774" prot="public" virt="non-virtual"><scope>graphene::protocol::balance_claim_operation</scope><name>validate_parallel</name></member>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1a04ac6688e2df1d511514e4fc1983b828" prot="public" virt="virtual"><scope>graphene::protocol::balance_claim_operation</scope><name>~base_operation</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
