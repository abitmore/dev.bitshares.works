<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classfc_1_1http_1_1connection" kind="class" language="C++" prot="public">
    <compoundname>fc::http::connection</compoundname>
    <includes refid="connection_8hpp" local="no">connection.hpp</includes>
    <innerclass refid="classfc_1_1http_1_1connection_1_1impl" prot="public">fc::http::connection::impl</innerclass>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classfc_1_1http_1_1connection_1a616f5303c3888ebcda4306937fc2608e" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="classfc_1_1http_1_1connection_1_1impl" kindref="compound">impl</ref> &gt;</type>
        <definition>std::unique_ptr&lt;impl&gt; fc::http::connection::my</definition>
        <argsstring></argsstring>
        <name>my</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/network/http/connection.hpp" line="75" column="1" bodyfile="libraries/fc/include/fc/network/http/connection.hpp" bodystart="73" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classfc_1_1http_1_1connection_1a167b658d1eda2b1e42478a166d42b702" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fc::http::connection::connection</definition>
        <argsstring>()</argsstring>
        <name>connection</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/network/http/connection.hpp" line="62" column="1" bodyfile="libraries/fc/src/network/http/http_connection.cpp" bodystart="80" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1http_1_1connection_1a55810c9ab4857ed67f33636adb19d7ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fc::http::connection::~connection</definition>
        <argsstring>()</argsstring>
        <name>~connection</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/network/http/connection.hpp" line="63" column="1" bodyfile="libraries/fc/src/network/http/http_connection.cpp" bodystart="82" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1http_1_1connection_1a52047dc0256ab1a079ef5adcc82cde41" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void fc::http::connection::connect_to</definition>
        <argsstring>(const fc::ip::endpoint &amp;ep)</argsstring>
        <name>connect_to</name>
        <param>
          <type>const <ref refid="classfc_1_1ip_1_1endpoint" kindref="compound">fc::ip::endpoint</ref> &amp;</type>
          <declname>ep</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/network/http/connection.hpp" line="65" column="1" bodyfile="libraries/fc/src/network/http/http_connection.cpp" bodystart="86" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1http_1_1connection_1aa90ef3620a5efd35bd3ff44ac9ea2cb2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structfc_1_1http_1_1reply" kindref="compound">http::reply</ref></type>
        <definition>http::reply fc::http::connection::request</definition>
        <argsstring>(const std::string &amp;method, const std::string &amp;url, const std::string &amp;body=std::string(), const headers &amp;=headers())</argsstring>
        <name>request</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>method</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>url</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>body</declname>
          <defval>std::string()</defval>
        </param>
        <param>
          <type>const <ref refid="namespacefc_1_1http_1a4e65ca3195c247113e0bbda9063356a2" kindref="member">headers</ref> &amp;</type>
          <defname>he</defname>
          <defval><ref refid="namespacefc_1_1http_1a4e65ca3195c247113e0bbda9063356a2" kindref="member">headers</ref>()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/network/http/connection.hpp" line="66" column="1" bodyfile="libraries/fc/src/network/http/http_connection.cpp" bodystart="91" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1http_1_1connection_1a96a0cb8dbe5d462634e889d38001c657" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classfc_1_1tcp__socket" kindref="compound">fc::tcp_socket</ref> &amp;</type>
        <definition>fc::tcp_socket &amp; fc::http::connection::get_socket</definition>
        <argsstring>() const</argsstring>
        <name>get_socket</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/network/http/connection.hpp" line="69" column="1" bodyfile="libraries/fc/src/network/http/http_connection.cpp" bodystart="131" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1http_1_1connection_1a1255bab0c70a634a2ad947e03e1383e7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structfc_1_1http_1_1request" kindref="compound">http::request</ref></type>
        <definition>http::request fc::http::connection::read_request</definition>
        <argsstring>() const</argsstring>
        <name>read_request</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/network/http/connection.hpp" line="71" column="1" bodyfile="libraries/fc/src/network/http/http_connection.cpp" bodystart="135" bodyend="172"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Connections have reference semantics, all copies refer to the same underlying socket. </para>    </detaileddescription>
    <location file="libraries/fc/include/fc/network/http/connection.hpp" line="60" column="1" bodyfile="libraries/fc/include/fc/network/http/connection.hpp" bodystart="59" bodyend="76"/>
    <listofallmembers>
      <member refid="classfc_1_1http_1_1connection_1a52047dc0256ab1a079ef5adcc82cde41" prot="public" virt="non-virtual"><scope>fc::http::connection</scope><name>connect_to</name></member>
      <member refid="classfc_1_1http_1_1connection_1a167b658d1eda2b1e42478a166d42b702" prot="public" virt="non-virtual"><scope>fc::http::connection</scope><name>connection</name></member>
      <member refid="classfc_1_1http_1_1connection_1a96a0cb8dbe5d462634e889d38001c657" prot="public" virt="non-virtual"><scope>fc::http::connection</scope><name>get_socket</name></member>
      <member refid="classfc_1_1http_1_1connection_1a616f5303c3888ebcda4306937fc2608e" prot="private" virt="non-virtual"><scope>fc::http::connection</scope><name>my</name></member>
      <member refid="classfc_1_1http_1_1connection_1a1255bab0c70a634a2ad947e03e1383e7" prot="public" virt="non-virtual"><scope>fc::http::connection</scope><name>read_request</name></member>
      <member refid="classfc_1_1http_1_1connection_1aa90ef3620a5efd35bd3ff44ac9ea2cb2" prot="public" virt="non-virtual"><scope>fc::http::connection</scope><name>request</name></member>
      <member refid="classfc_1_1http_1_1connection_1a55810c9ab4857ed67f33636adb19d7ae" prot="public" virt="non-virtual"><scope>fc::http::connection</scope><name>~connection</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
