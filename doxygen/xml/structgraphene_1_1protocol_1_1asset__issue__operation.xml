<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="structgraphene_1_1protocol_1_1asset__issue__operation" kind="struct" language="C++" prot="public">
    <compoundname>graphene::protocol::asset_issue_operation</compoundname>
    <basecompoundref refid="structgraphene_1_1protocol_1_1base__operation" prot="public" virt="non-virtual">graphene::protocol::base_operation</basecompoundref>
    <includes refid="asset__ops_8hpp" local="no">asset_ops.hpp</includes>
    <innerclass refid="structgraphene_1_1protocol_1_1asset__issue__operation_1_1fee__parameters__type" prot="public">graphene::protocol::asset_issue_operation::fee_parameters_type</innerclass>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1asset__issue__operation_1ab1cfa5e4950108515d8e8946cd6c42d5" prot="public" static="no" mutable="no">
        <type><ref refid="structgraphene_1_1protocol_1_1asset" kindref="compound">asset</ref></type>
        <definition>asset graphene::protocol::asset_issue_operation::fee</definition>
        <argsstring></argsstring>
        <name>fee</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/asset_ops.hpp" line="446" column="1" bodyfile="libraries/protocol/include/graphene/protocol/asset_ops.hpp" bodystart="446" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1asset__issue__operation_1a533b0afad80d1239ec22210ca10cb546" prot="public" static="no" mutable="no">
        <type>account_id_type</type>
        <definition>account_id_type graphene::protocol::asset_issue_operation::issuer</definition>
        <argsstring></argsstring>
        <name>issuer</name>
        <briefdescription>
<para>Must be asset_to_issue-&gt;asset_id-&gt;issuer. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/asset_ops.hpp" line="447" column="1" bodyfile="libraries/protocol/include/graphene/protocol/asset_ops.hpp" bodystart="447" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1asset__issue__operation_1a13beca1054d01e9e6854de96928d1950" prot="public" static="no" mutable="no">
        <type><ref refid="structgraphene_1_1protocol_1_1asset" kindref="compound">asset</ref></type>
        <definition>asset graphene::protocol::asset_issue_operation::asset_to_issue</definition>
        <argsstring></argsstring>
        <name>asset_to_issue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/asset_ops.hpp" line="448" column="1" bodyfile="libraries/protocol/include/graphene/protocol/asset_ops.hpp" bodystart="448" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1asset__issue__operation_1a8b32f3348b0305bfea8bb3c9034cdd43" prot="public" static="no" mutable="no">
        <type>account_id_type</type>
        <definition>account_id_type graphene::protocol::asset_issue_operation::issue_to_account</definition>
        <argsstring></argsstring>
        <name>issue_to_account</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/asset_ops.hpp" line="449" column="1" bodyfile="libraries/protocol/include/graphene/protocol/asset_ops.hpp" bodystart="449" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1asset__issue__operation_1a0ca43c2c8ce13163670567221b441e0c" prot="public" static="no" mutable="no">
        <type><ref refid="classfc_1_1optional" kindref="compound">optional</ref>&lt; <ref refid="structgraphene_1_1protocol_1_1memo__data" kindref="compound">memo_data</ref> &gt;</type>
        <definition>optional&lt;memo_data&gt; graphene::protocol::asset_issue_operation::memo</definition>
        <argsstring></argsstring>
        <name>memo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>user provided data encrypted to the memo key of the &quot;to&quot; account </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/asset_ops.hpp" line="453" column="1" bodyfile="libraries/protocol/include/graphene/protocol/asset_ops.hpp" bodystart="453" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1asset__issue__operation_1ad7edf2dcc73a0e273bce11d38acf5d77" prot="public" static="no" mutable="no">
        <type><ref refid="group__operations_1gabaddcaf5bde76414891b4c29031d9288" kindref="member">extensions_type</ref></type>
        <definition>extensions_type graphene::protocol::asset_issue_operation::extensions</definition>
        <argsstring></argsstring>
        <name>extensions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/asset_ops.hpp" line="454" column="1" bodyfile="libraries/protocol/include/graphene/protocol/asset_ops.hpp" bodystart="454" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structgraphene_1_1protocol_1_1asset__issue__operation_1a2d63d86ef5718b191e1fc128a29742a3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>account_id_type</type>
        <definition>account_id_type graphene::protocol::asset_issue_operation::fee_payer</definition>
        <argsstring>() const </argsstring>
        <name>fee_payer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/asset_ops.hpp" line="456" column="1" bodyfile="libraries/protocol/include/graphene/protocol/asset_ops.hpp" bodystart="456" bodyend="456"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1protocol_1_1asset__issue__operation_1ac450f3d428436e5d706be1315334f546" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::protocol::asset_issue_operation::validate</definition>
        <argsstring>() const </argsstring>
        <name>validate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/asset_ops.hpp" line="457" column="1" bodyfile="libraries/protocol/asset_ops.cpp" bodystart="195" bodyend="201"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1protocol_1_1asset__issue__operation_1ab7118eac09180db52812a0774833b7bf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacegraphene_1_1protocol_1a69b2104c1c11eed2d17bd29b86713347" kindref="member">share_type</ref></type>
        <definition>share_type graphene::protocol::asset_issue_operation::calculate_fee</definition>
        <argsstring>(const fee_parameters_type &amp;k) const </argsstring>
        <name>calculate_fee</name>
        <param>
          <type>const <ref refid="structgraphene_1_1protocol_1_1asset__issue__operation_1_1fee__parameters__type" kindref="compound">fee_parameters_type</ref> &amp;</type>
          <declname>k</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/asset_ops.hpp" line="458" column="1" bodyfile="libraries/protocol/asset_ops.cpp" bodystart="77" bodyend="80"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1038">
        <label>graphene::protocol::asset_issue_operation</label>
        <link refid="structgraphene_1_1protocol_1_1asset__issue__operation"/>
        <childnode refid="1039" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1039">
        <label>graphene::protocol::base_operation</label>
        <link refid="structgraphene_1_1protocol_1_1base__operation"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1044">
        <label>account_id_type</label>
      </node>
      <node id="1045">
        <label>fc::optional&lt; graphene::protocol::memo_data &gt;</label>
        <link refid="classfc_1_1optional"/>
      </node>
      <node id="1043">
        <label>fc::safe&lt; int64_t &gt;</label>
        <link refid="structfc_1_1safe"/>
      </node>
      <node id="1040">
        <label>graphene::protocol::asset_issue_operation</label>
        <link refid="structgraphene_1_1protocol_1_1asset__issue__operation"/>
        <childnode refid="1041" relation="public-inheritance">
        </childnode>
        <childnode refid="1042" relation="usage">
          <edgelabel>fee</edgelabel>
          <edgelabel>asset_to_issue</edgelabel>
        </childnode>
        <childnode refid="1044" relation="usage">
          <edgelabel>issue_to_account</edgelabel>
          <edgelabel>issuer</edgelabel>
        </childnode>
        <childnode refid="1045" relation="usage">
          <edgelabel>memo</edgelabel>
        </childnode>
      </node>
      <node id="1041">
        <label>graphene::protocol::base_operation</label>
        <link refid="structgraphene_1_1protocol_1_1base__operation"/>
      </node>
      <node id="1042">
        <label>graphene::protocol::asset</label>
        <link refid="structgraphene_1_1protocol_1_1asset"/>
        <childnode refid="1043" relation="usage">
          <edgelabel>amount</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="libraries/protocol/include/graphene/protocol/asset_ops.hpp" line="440" column="1" bodyfile="libraries/protocol/include/graphene/protocol/asset_ops.hpp" bodystart="439" bodyend="459"/>
    <listofallmembers>
      <member refid="structgraphene_1_1protocol_1_1asset__issue__operation_1a13beca1054d01e9e6854de96928d1950" prot="public" virt="non-virtual"><scope>graphene::protocol::asset_issue_operation</scope><name>asset_to_issue</name></member>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1aaccb0fa71ee529cf62324baaa99988fe" prot="public" virt="non-virtual"><scope>graphene::protocol::asset_issue_operation</scope><name>calculate_data_fee</name></member>
      <member refid="structgraphene_1_1protocol_1_1asset__issue__operation_1ab7118eac09180db52812a0774833b7bf" prot="public" virt="non-virtual"><scope>graphene::protocol::asset_issue_operation</scope><name>calculate_fee</name></member>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1afd01efa3e06367c572512e381b1106fb" prot="public" virt="non-virtual" ambiguityscope="graphene::protocol::base_operation::"><scope>graphene::protocol::asset_issue_operation</scope><name>calculate_fee</name></member>
      <member refid="structgraphene_1_1protocol_1_1asset__issue__operation_1ad7edf2dcc73a0e273bce11d38acf5d77" prot="public" virt="non-virtual"><scope>graphene::protocol::asset_issue_operation</scope><name>extensions</name></member>
      <member refid="structgraphene_1_1protocol_1_1asset__issue__operation_1ab1cfa5e4950108515d8e8946cd6c42d5" prot="public" virt="non-virtual"><scope>graphene::protocol::asset_issue_operation</scope><name>fee</name></member>
      <member refid="structgraphene_1_1protocol_1_1asset__issue__operation_1a2d63d86ef5718b191e1fc128a29742a3" prot="public" virt="non-virtual"><scope>graphene::protocol::asset_issue_operation</scope><name>fee_payer</name></member>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1aded12887f115b2bfa54ecd59540fa242" prot="public" virt="non-virtual"><scope>graphene::protocol::asset_issue_operation</scope><name>get_required_active_authorities</name></member>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1a6ea245f980406ab52fdb90283e687d1c" prot="public" virt="non-virtual"><scope>graphene::protocol::asset_issue_operation</scope><name>get_required_authorities</name></member>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1a0742a4b91de875366ec466a5b67b2811" prot="public" virt="non-virtual"><scope>graphene::protocol::asset_issue_operation</scope><name>get_required_owner_authorities</name></member>
      <member refid="structgraphene_1_1protocol_1_1asset__issue__operation_1a8b32f3348b0305bfea8bb3c9034cdd43" prot="public" virt="non-virtual"><scope>graphene::protocol::asset_issue_operation</scope><name>issue_to_account</name></member>
      <member refid="structgraphene_1_1protocol_1_1asset__issue__operation_1a533b0afad80d1239ec22210ca10cb546" prot="public" virt="non-virtual"><scope>graphene::protocol::asset_issue_operation</scope><name>issuer</name></member>
      <member refid="structgraphene_1_1protocol_1_1asset__issue__operation_1a0ca43c2c8ce13163670567221b441e0c" prot="public" virt="non-virtual"><scope>graphene::protocol::asset_issue_operation</scope><name>memo</name></member>
      <member refid="structgraphene_1_1protocol_1_1asset__issue__operation_1ac450f3d428436e5d706be1315334f546" prot="public" virt="non-virtual"><scope>graphene::protocol::asset_issue_operation</scope><name>validate</name></member>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1a41d0a14a070ac634be11f30dbf559935" prot="public" virt="non-virtual"><scope>graphene::protocol::asset_issue_operation</scope><name>validate_parallel</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
