<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classfc_1_1ecc_1_1extended__public__key" kind="class" language="C++" prot="public">
    <compoundname>fc::ecc::extended_public_key</compoundname>
    <basecompoundref refid="classfc_1_1ecc_1_1public__key" prot="public" virt="non-virtual">fc::ecc::public_key</basecompoundref>
    <includes refid="elliptic_8hpp" local="no">elliptic.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classfc_1_1ecc_1_1extended__public__key_1a109b7862f3f0ac80243f6386f2553221" prot="private" static="no" mutable="no">
        <type><ref refid="classfc_1_1sha256" kindref="compound">sha256</ref></type>
        <definition>sha256 fc::ecc::extended_public_key::c</definition>
        <argsstring></argsstring>
        <name>c</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/crypto/elliptic.hpp" line="163" column="1" bodyfile="libraries/fc/include/fc/crypto/elliptic.hpp" bodystart="163" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classfc_1_1ecc_1_1extended__public__key_1a3fa5796d93858911be69e9bbb8e546a6" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int fc::ecc::extended_public_key::child_num</definition>
        <argsstring></argsstring>
        <name>child_num</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/crypto/elliptic.hpp" line="164" column="1" bodyfile="libraries/fc/include/fc/crypto/elliptic.hpp" bodystart="164" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classfc_1_1ecc_1_1extended__public__key_1ae502d9b1292621732e74d0b90dbab25f" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int fc::ecc::extended_public_key::parent_fp</definition>
        <argsstring></argsstring>
        <name>parent_fp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/crypto/elliptic.hpp" line="164" column="1" bodyfile="libraries/fc/include/fc/crypto/elliptic.hpp" bodystart="164" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classfc_1_1ecc_1_1extended__public__key_1a5f7c79ef747e80b24435ec816b12e3a8" prot="private" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t fc::ecc::extended_public_key::depth</definition>
        <argsstring></argsstring>
        <name>depth</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/crypto/elliptic.hpp" line="165" column="1" bodyfile="libraries/fc/include/fc/crypto/elliptic.hpp" bodystart="165" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classfc_1_1ecc_1_1extended__public__key_1a4b6c9cc2b0ce970eca49e6be023b8e30" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fc::ecc::extended_public_key::extended_public_key</definition>
        <argsstring>(const public_key &amp;k, const sha256 &amp;c, int child=0, int parent_fp=0, uint8_t depth=0)</argsstring>
        <name>extended_public_key</name>
        <param>
          <type>const <ref refid="classfc_1_1ecc_1_1public__key" kindref="compound">public_key</ref> &amp;</type>
          <declname>k</declname>
        </param>
        <param>
          <type>const <ref refid="classfc_1_1sha256" kindref="compound">sha256</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <param>
          <type>int</type>
          <declname>child</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>int</type>
          <declname>parent_fp</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>depth</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/crypto/elliptic.hpp" line="150" column="1" bodyfile="libraries/fc/src/crypto/elliptic_secp256k1.cpp" bodystart="174" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1ecc_1_1extended__public__key_1a6b58660eec8523b064762be2c3dfdcc6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classfc_1_1ecc_1_1extended__public__key" kindref="compound">extended_public_key</ref></type>
        <definition>extended_public_key fc::ecc::extended_public_key::derive_child</definition>
        <argsstring>(int i) const </argsstring>
        <name>derive_child</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/crypto/elliptic.hpp" line="153" column="1" bodyfile="libraries/fc/src/crypto/elliptic_common.cpp" bodystart="251" bodyend="255"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1ecc_1_1extended__public__key_1a9c842e8f4105d23f212d61a45172ff21" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classfc_1_1ecc_1_1extended__public__key" kindref="compound">extended_public_key</ref></type>
        <definition>extended_public_key fc::ecc::extended_public_key::derive_normal_child</definition>
        <argsstring>(int i) const </argsstring>
        <name>derive_normal_child</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/crypto/elliptic.hpp" line="154" column="1" bodyfile="libraries/fc/src/crypto/elliptic_secp256k1.cpp" bodystart="178" bodyend="191"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1ecc_1_1extended__public__key_1a2e4dd0a98ee150911d96ed2d2d060aac" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacefc_1_1ecc_1a0ade047116801918646abc8a1062a3cd" kindref="member">extended_key_data</ref></type>
        <definition>extended_key_data fc::ecc::extended_public_key::serialize_extended</definition>
        <argsstring>() const </argsstring>
        <name>serialize_extended</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/crypto/elliptic.hpp" line="156" column="1" bodyfile="libraries/fc/src/crypto/elliptic_common.cpp" bodystart="257" bodyend="269"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1ecc_1_1extended__public__key_1a3584a1718a51cdc2ce8697a10b0bb939" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string fc::ecc::extended_public_key::str</definition>
        <argsstring>() const </argsstring>
        <name>str</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/crypto/elliptic.hpp" line="158" column="1" bodyfile="libraries/fc/src/crypto/elliptic_common.cpp" bodystart="276" bodyend="279"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1ecc_1_1extended__public__key_1afcbb7d1990a14c0267f84cefbea3654b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string fc::ecc::extended_public_key::to_base58</definition>
        <argsstring>() const </argsstring>
        <name>to_base58</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/crypto/elliptic.hpp" line="159" column="1" bodyfile="libraries/fc/include/fc/crypto/elliptic.hpp" bodystart="159" bodyend="159"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classfc_1_1ecc_1_1extended__public__key_1a39bae28e6e8d7d15d30cff6eca76872e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classfc_1_1ecc_1_1extended__public__key" kindref="compound">extended_public_key</ref></type>
        <definition>extended_public_key fc::ecc::extended_public_key::deserialize</definition>
        <argsstring>(const extended_key_data &amp;data)</argsstring>
        <name>deserialize</name>
        <param>
          <type>const <ref refid="namespacefc_1_1ecc_1a0ade047116801918646abc8a1062a3cd" kindref="member">extended_key_data</ref> &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/crypto/elliptic.hpp" line="157" column="1" bodyfile="libraries/fc/src/crypto/elliptic_common.cpp" bodystart="271" bodyend="274"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1ecc_1_1extended__public__key_1a780efeebea635c0bfea131df90219c5e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classfc_1_1ecc_1_1extended__public__key" kindref="compound">extended_public_key</ref></type>
        <definition>extended_public_key fc::ecc::extended_public_key::from_base58</definition>
        <argsstring>(const std::string &amp;base58)</argsstring>
        <name>from_base58</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>base58</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/crypto/elliptic.hpp" line="160" column="1" bodyfile="libraries/fc/src/crypto/elliptic_common.cpp" bodystart="281" bodyend="295"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3149">
        <label>fc::ecc::extended_public_key</label>
        <link refid="classfc_1_1ecc_1_1extended__public__key"/>
        <childnode refid="3150" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3150">
        <label>fc::ecc::public_key</label>
        <link refid="classfc_1_1ecc_1_1public__key"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3151">
        <label>fc::ecc::extended_public_key</label>
        <link refid="classfc_1_1ecc_1_1extended__public__key"/>
        <childnode refid="3152" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3152">
        <label>fc::ecc::public_key</label>
        <link refid="classfc_1_1ecc_1_1public__key"/>
      </node>
    </collaborationgraph>
    <location file="libraries/fc/include/fc/crypto/elliptic.hpp" line="148" column="1" bodyfile="libraries/fc/include/fc/crypto/elliptic.hpp" bodystart="147" bodyend="166"/>
    <listofallmembers>
      <member refid="classfc_1_1ecc_1_1public__key_1a2d76b94e5e7c99f9a63b00384248db18" prot="public" virt="non-virtual"><scope>fc::ecc::extended_public_key</scope><name>add</name></member>
      <member refid="classfc_1_1ecc_1_1extended__public__key_1a109b7862f3f0ac80243f6386f2553221" prot="private" virt="non-virtual"><scope>fc::ecc::extended_public_key</scope><name>c</name></member>
      <member refid="classfc_1_1ecc_1_1public__key_1a1c2dcd70931ab54cc06058c22129de73" prot="public" virt="non-virtual"><scope>fc::ecc::extended_public_key</scope><name>child</name></member>
      <member refid="classfc_1_1ecc_1_1extended__public__key_1a3fa5796d93858911be69e9bbb8e546a6" prot="private" virt="non-virtual"><scope>fc::ecc::extended_public_key</scope><name>child_num</name></member>
      <member refid="classfc_1_1ecc_1_1extended__public__key_1a5f7c79ef747e80b24435ec816b12e3a8" prot="private" virt="non-virtual"><scope>fc::ecc::extended_public_key</scope><name>depth</name></member>
      <member refid="classfc_1_1ecc_1_1extended__public__key_1a6b58660eec8523b064762be2c3dfdcc6" prot="public" virt="non-virtual"><scope>fc::ecc::extended_public_key</scope><name>derive_child</name></member>
      <member refid="classfc_1_1ecc_1_1extended__public__key_1a9c842e8f4105d23f212d61a45172ff21" prot="public" virt="non-virtual"><scope>fc::ecc::extended_public_key</scope><name>derive_normal_child</name></member>
      <member refid="classfc_1_1ecc_1_1extended__public__key_1a39bae28e6e8d7d15d30cff6eca76872e" prot="public" virt="non-virtual"><scope>fc::ecc::extended_public_key</scope><name>deserialize</name></member>
      <member refid="classfc_1_1ecc_1_1extended__public__key_1a4b6c9cc2b0ce970eca49e6be023b8e30" prot="public" virt="non-virtual"><scope>fc::ecc::extended_public_key</scope><name>extended_public_key</name></member>
      <member refid="classfc_1_1ecc_1_1public__key_1a8993004913c14a820c559d962d1ba76c" prot="public" virt="non-virtual"><scope>fc::ecc::extended_public_key</scope><name>fingerprint</name></member>
      <member refid="classfc_1_1ecc_1_1extended__public__key_1a780efeebea635c0bfea131df90219c5e" prot="public" virt="non-virtual"><scope>fc::ecc::extended_public_key</scope><name>from_base58</name></member>
      <member refid="classfc_1_1ecc_1_1public__key_1ac97349da634f0b20e450b53c9ba35e7a" prot="public" virt="non-virtual"><scope>fc::ecc::extended_public_key</scope><name>operator public_key_data</name></member>
      <member refid="classfc_1_1ecc_1_1public__key_1a896c349b93b67c049c5f08c4cbb2b70f" prot="public" virt="non-virtual"><scope>fc::ecc::extended_public_key</scope><name>operator=</name></member>
      <member refid="classfc_1_1ecc_1_1public__key_1a22e892436cb6e8d7e56b5125e32b9e9d" prot="public" virt="non-virtual"><scope>fc::ecc::extended_public_key</scope><name>operator=</name></member>
      <member refid="classfc_1_1ecc_1_1extended__public__key_1ae502d9b1292621732e74d0b90dbab25f" prot="private" virt="non-virtual"><scope>fc::ecc::extended_public_key</scope><name>parent_fp</name></member>
      <member refid="classfc_1_1ecc_1_1public__key_1a36809db96f0dd7c702da3d80d512a24c" prot="public" virt="non-virtual"><scope>fc::ecc::extended_public_key</scope><name>public_key</name></member>
      <member refid="classfc_1_1ecc_1_1public__key_1ae8fa92fd81301f57adccdbfa307c05b6" prot="public" virt="non-virtual"><scope>fc::ecc::extended_public_key</scope><name>public_key</name></member>
      <member refid="classfc_1_1ecc_1_1public__key_1ab74d3843d36531fa314f18f4b833aa05" prot="public" virt="non-virtual"><scope>fc::ecc::extended_public_key</scope><name>public_key</name></member>
      <member refid="classfc_1_1ecc_1_1public__key_1ad2d07d406b637abe5d58767f501829a1" prot="public" virt="non-virtual"><scope>fc::ecc::extended_public_key</scope><name>public_key</name></member>
      <member refid="classfc_1_1ecc_1_1public__key_1a9bddb3f771958bbeefd71f3177640998" prot="public" virt="non-virtual"><scope>fc::ecc::extended_public_key</scope><name>public_key</name></member>
      <member refid="classfc_1_1ecc_1_1public__key_1ac5218540b5d2ef38d8b13fa1a00a54f3" prot="public" virt="non-virtual"><scope>fc::ecc::extended_public_key</scope><name>public_key</name></member>
      <member refid="classfc_1_1ecc_1_1public__key_1a941d14da0eb64e094baba140ce1b4c80" prot="public" virt="non-virtual"><scope>fc::ecc::extended_public_key</scope><name>serialize</name></member>
      <member refid="classfc_1_1ecc_1_1public__key_1aa9487887f97610f23eafc5dbca9fb866" prot="public" virt="non-virtual"><scope>fc::ecc::extended_public_key</scope><name>serialize_ecc_point</name></member>
      <member refid="classfc_1_1ecc_1_1extended__public__key_1a2e4dd0a98ee150911d96ed2d2d060aac" prot="public" virt="non-virtual"><scope>fc::ecc::extended_public_key</scope><name>serialize_extended</name></member>
      <member refid="classfc_1_1ecc_1_1extended__public__key_1a3584a1718a51cdc2ce8697a10b0bb939" prot="public" virt="non-virtual"><scope>fc::ecc::extended_public_key</scope><name>str</name></member>
      <member refid="classfc_1_1ecc_1_1extended__public__key_1afcbb7d1990a14c0267f84cefbea3654b" prot="public" virt="non-virtual"><scope>fc::ecc::extended_public_key</scope><name>to_base58</name></member>
      <member refid="classfc_1_1ecc_1_1public__key_1a83b654848353a7b8a76c1d8ffc99f72d" prot="public" virt="non-virtual" ambiguityscope="fc::ecc::public_key::"><scope>fc::ecc::extended_public_key</scope><name>to_base58</name></member>
      <member refid="classfc_1_1ecc_1_1public__key_1a121916d09ed33d698e3b59ce38693e85" prot="public" virt="non-virtual"><scope>fc::ecc::extended_public_key</scope><name>valid</name></member>
      <member refid="classfc_1_1ecc_1_1public__key_1a66dc1c404c6ff1d91d49eecf2e53a501" prot="public" virt="non-virtual"><scope>fc::ecc::extended_public_key</scope><name>~public_key</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
