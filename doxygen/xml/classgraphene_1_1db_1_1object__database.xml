<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classgraphene_1_1db_1_1object__database" kind="class" language="C++" prot="public">
    <compoundname>graphene::db::object_database</compoundname>
    <derivedcompoundref refid="classgraphene_1_1chain_1_1database" prot="public" virt="non-virtual">graphene::chain::database</derivedcompoundref>
    <includes refid="object__database_8hpp" local="no">object_database.hpp</includes>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="classgraphene_1_1db_1_1object__database_1ad8fc93c417524922d380dd3ee95fc2b0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename IndexType</type>
          </param>
        </templateparamlist>
        <type>const IndexType &amp;</type>
        <definition>const IndexType&amp; graphene::db::object_database::get_index_type</definition>
        <argsstring>() const</argsstring>
        <name>get_index_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>These methods are used to retrieve indexes on the <ref refid="classgraphene_1_1db_1_1object__database" kindref="compound">object_database</ref>. All public index accessors are const-access only. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/db/include/graphene/db/object_database.hpp" line="77" column="1" bodyfile="libraries/db/include/graphene/db/object_database.hpp" bodystart="77" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1db_1_1object__database_1ace1d662d6cb889e6363468702b8639b2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>const <ref refid="classgraphene_1_1db_1_1index" kindref="compound">index</ref> &amp;</type>
        <definition>const index&amp; graphene::db::object_database::get_index</definition>
        <argsstring>() const</argsstring>
        <name>get_index</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/db/include/graphene/db/object_database.hpp" line="83" column="1" bodyfile="libraries/db/include/graphene/db/object_database.hpp" bodystart="83" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1db_1_1object__database_1a622efe7a25196b0d226ad6b1e454b0ae" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classgraphene_1_1db_1_1index" kindref="compound">index</ref> &amp;</type>
        <definition>const index &amp; graphene::db::object_database::get_index</definition>
        <argsstring>(uint8_t space_id, uint8_t type_id) const</argsstring>
        <name>get_index</name>
        <param>
          <type>uint8_t</type>
          <declname>space_id</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>type_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/db/include/graphene/db/object_database.hpp" line="84" column="1" bodyfile="libraries/db/object_database.cpp" bodystart="52" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1db_1_1object__database_1a67378fdc73274eec7ef344b403c92525" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classgraphene_1_1db_1_1index" kindref="compound">index</ref> &amp;</type>
        <definition>const index&amp; graphene::db::object_database::get_index</definition>
        <argsstring>(const object_id_type &amp;id) const</argsstring>
        <name>get_index</name>
        <param>
          <type>const <ref refid="structgraphene_1_1db_1_1object__id__type" kindref="compound">object_id_type</ref> &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/db/include/graphene/db/object_database.hpp" line="85" column="1" bodyfile="libraries/db/include/graphene/db/object_database.hpp" bodystart="85" bodyend="85"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="classgraphene_1_1db_1_1object__database_1ab417fee5b66b97908a142864d582c671" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classgraphene_1_1db_1_1object" kindref="compound">object</ref> &amp;</type>
        <definition>const object&amp; graphene::db::object_database::insert</definition>
        <argsstring>(object &amp;&amp;obj)</argsstring>
        <name>insert</name>
        <param>
          <type><ref refid="classgraphene_1_1db_1_1object" kindref="compound">object</ref> &amp;&amp;</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>These methods are mutators of the <ref refid="classgraphene_1_1db_1_1object__database" kindref="compound">object_database</ref>. You must use these methods to make changes to the <ref refid="classgraphene_1_1db_1_1object__database" kindref="compound">object_database</ref>, in order to maintain proper undo history. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/db/include/graphene/db/object_database.hpp" line="96" column="1" bodyfile="libraries/db/include/graphene/db/object_database.hpp" bodystart="96" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1db_1_1object__database_1a991969449bef27210b5308f689871d25" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::db::object_database::remove</definition>
        <argsstring>(const object &amp;obj)</argsstring>
        <name>remove</name>
        <param>
          <type>const <ref refid="classgraphene_1_1db_1_1object" kindref="compound">object</ref> &amp;</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/db/include/graphene/db/object_database.hpp" line="97" column="1" bodyfile="libraries/db/include/graphene/db/object_database.hpp" bodystart="97" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1db_1_1object__database_1a88949a42022fae3668dabba8b1cccd40" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename Lambda</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void graphene::db::object_database::modify</definition>
        <argsstring>(const T &amp;obj, const Lambda &amp;m)</argsstring>
        <name>modify</name>
        <param>
          <type>const T &amp;</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>const Lambda &amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/db/include/graphene/db/object_database.hpp" line="99" column="1" bodyfile="libraries/db/include/graphene/db/object_database.hpp" bodystart="99" bodyend="101"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classgraphene_1_1db_1_1object__database_1ada13e68758cbba506f4eb4e6f803146d" prot="public" static="yes" mutable="no">
        <type>constexpr uint8_t</type>
        <definition>constexpr uint8_t graphene::db::object_database::_index_size</definition>
        <argsstring></argsstring>
        <name>_index_size</name>
        <initializer>= 255</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/db/include/graphene/db/object_database.hpp" line="45" column="1" bodyfile="libraries/db/include/graphene/db/object_database.hpp" bodystart="45" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classgraphene_1_1db_1_1object__database_1a4fc57af0f2725f5a33631c05a1b62b37" prot="public" static="no" mutable="no">
        <type><ref refid="classgraphene_1_1db_1_1undo__database" kindref="compound">undo_database</ref></type>
        <definition>undo_database graphene::db::object_database::_undo_db</definition>
        <argsstring></argsstring>
        <name>_undo_db</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>public for testing purposes only... should be private in practice. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/db/include/graphene/db/object_database.hpp" line="170" column="1" bodyfile="libraries/db/include/graphene/db/object_database.hpp" bodystart="170" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classgraphene_1_1db_1_1object__database_1aceb769661d19eb7299f5def854f55b58" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class base_primary_index</definition>
        <argsstring></argsstring>
        <name>base_primary_index</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/db/include/graphene/db/object_database.hpp" line="185" column="1" bodyfile="libraries/db/include/graphene/db/object_database.hpp" bodystart="185" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classgraphene_1_1db_1_1object__database_1a3f6737f0de3cb0bdeda1acf58d8b28e5" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class undo_database</definition>
        <argsstring></argsstring>
        <name>undo_database</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/db/include/graphene/db/object_database.hpp" line="186" column="1" bodyfile="libraries/db/include/graphene/db/object_database.hpp" bodystart="186" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classgraphene_1_1db_1_1object__database_1a3aebb5be3a1c263ac0d760abc042417c" prot="private" static="no" mutable="no">
        <type><ref refid="classfc_1_1path" kindref="compound">fc::path</ref></type>
        <definition>fc::path graphene::db::object_database::_data_dir</definition>
        <argsstring></argsstring>
        <name>_data_dir</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/db/include/graphene/db/object_database.hpp" line="191" column="1" bodyfile="libraries/db/include/graphene/db/object_database.hpp" bodystart="191" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgraphene_1_1db_1_1object__database_1ae1c15c1f27f7b4e086df05e56de3ab18" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::vector&lt; std::unique_ptr&lt; <ref refid="classgraphene_1_1db_1_1index" kindref="compound">index</ref> &gt; &gt; &gt;</type>
        <definition>std::vector&lt; std::vector&lt; std::unique_ptr&lt;index&gt; &gt; &gt; graphene::db::object_database::_index</definition>
        <argsstring></argsstring>
        <name>_index</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/db/include/graphene/db/object_database.hpp" line="192" column="1" bodyfile="libraries/db/include/graphene/db/object_database.hpp" bodystart="192" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classgraphene_1_1db_1_1object__database_1a63ad25dd455b179cafced627e8a43e88" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>graphene::db::object_database::object_database</definition>
        <argsstring>()</argsstring>
        <name>object_database</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/db/include/graphene/db/object_database.hpp" line="42" column="1" bodyfile="libraries/db/object_database.cpp" bodystart="32" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1db_1_1object__database_1a5e8b60949b1ec0c513414c13833fc172" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual graphene::db::object_database::~object_database</definition>
        <argsstring>()=default</argsstring>
        <name>~object_database</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/db/include/graphene/db/object_database.hpp" line="43" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1db_1_1object__database_1ac0aee0c82f1fe2380b56c7a13fb87a98" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::db::object_database::reset_indexes</definition>
        <argsstring>()</argsstring>
        <name>reset_indexes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/db/include/graphene/db/object_database.hpp" line="47" column="1" bodyfile="libraries/db/include/graphene/db/object_database.hpp" bodystart="47" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1db_1_1object__database_1a0e179b70876f837430d1b3a1af683a03" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::db::object_database::open</definition>
        <argsstring>(const fc::path &amp;data_dir)</argsstring>
        <name>open</name>
        <param>
          <type>const <ref refid="classfc_1_1path" kindref="compound">fc::path</ref> &amp;</type>
          <declname>data_dir</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/db/include/graphene/db/object_database.hpp" line="53" column="1" bodyfile="libraries/db/object_database.cpp" bodystart="130" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1db_1_1object__database_1a0732ee7acd14e92c44638d4601bbedde" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::db::object_database::flush</definition>
        <argsstring>()</argsstring>
        <name>flush</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Saves the complete state of the <ref refid="classgraphene_1_1db_1_1object__database" kindref="compound">object_database</ref> to disk, this could take a while </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/db/include/graphene/db/object_database.hpp" line="58" column="1" bodyfile="libraries/db/object_database.cpp" bodystart="81" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1db_1_1object__database_1a762ede07c458acb11142340ce71d1e27" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::db::object_database::wipe</definition>
        <argsstring>(const fc::path &amp;data_dir)</argsstring>
        <name>wipe</name>
        <param>
          <type>const <ref refid="classfc_1_1path" kindref="compound">fc::path</ref> &amp;</type>
          <declname>data_dir</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/db/include/graphene/db/object_database.hpp" line="59" column="1" bodyfile="libraries/db/object_database.cpp" bodystart="122" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1db_1_1object__database_1a076e75fbe95c3cbd0bf637c258973533" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::db::object_database::close</definition>
        <argsstring>()</argsstring>
        <name>close</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/db/include/graphene/db/object_database.hpp" line="60" column="1" bodyfile="libraries/db/object_database.cpp" bodystart="39" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1db_1_1object__database_1a8ab509742fb251702ee056ee234d94fa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename F</type>
          </param>
        </templateparamlist>
        <type>const T &amp;</type>
        <definition>const T&amp; graphene::db::object_database::create</definition>
        <argsstring>(F &amp;&amp;constructor)</argsstring>
        <name>create</name>
        <param>
          <type>F &amp;&amp;</type>
          <declname>constructor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/db/include/graphene/db/object_database.hpp" line="63" column="1" bodyfile="libraries/db/include/graphene/db/object_database.hpp" bodystart="63" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1db_1_1object__database_1aa61a3adba87f7f1731bc88ad1ea1ec5c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classgraphene_1_1db_1_1object" kindref="compound">object</ref> &amp;</type>
        <definition>const object &amp; graphene::db::object_database::get_object</definition>
        <argsstring>(const object_id_type &amp;id) const</argsstring>
        <name>get_object</name>
        <param>
          <type>const <ref refid="structgraphene_1_1db_1_1object__id__type" kindref="compound">object_id_type</ref> &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/db/include/graphene/db/object_database.hpp" line="88" column="1" bodyfile="libraries/db/object_database.cpp" bodystart="47" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1db_1_1object__database_1afc15a7ce74c805e1aebd3460e5e43035" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classgraphene_1_1db_1_1object" kindref="compound">object</ref> *</type>
        <definition>const object * graphene::db::object_database::find_object</definition>
        <argsstring>(const object_id_type &amp;id) const</argsstring>
        <name>find_object</name>
        <param>
          <type>const <ref refid="structgraphene_1_1db_1_1object__id__type" kindref="compound">object_id_type</ref> &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/db/include/graphene/db/object_database.hpp" line="89" column="1" bodyfile="libraries/db/object_database.cpp" bodystart="43" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1db_1_1object__database_1a14a8b6ed7a24c990999f1d6dc31a21df" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>const T &amp;</type>
        <definition>const T&amp; graphene::db::object_database::get</definition>
        <argsstring>(const object_id_type &amp;id) const</argsstring>
        <name>get</name>
        <param>
          <type>const <ref refid="structgraphene_1_1db_1_1object__id__type" kindref="compound">object_id_type</ref> &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/db/include/graphene/db/object_database.hpp" line="119" column="1" bodyfile="libraries/db/include/graphene/db/object_database.hpp" bodystart="119" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1db_1_1object__database_1a7f0c18925ec35bd7a35bd6a6a2a6a381" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>const T *</type>
        <definition>const T* graphene::db::object_database::find</definition>
        <argsstring>(const object_id_type &amp;id) const</argsstring>
        <name>find</name>
        <param>
          <type>const <ref refid="structgraphene_1_1db_1_1object__id__type" kindref="compound">object_id_type</ref> &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/db/include/graphene/db/object_database.hpp" line="126" column="1" bodyfile="libraries/db/include/graphene/db/object_database.hpp" bodystart="126" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1db_1_1object__database_1a259c718933fbbc4dd3145acf28f9832b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>uint8_t</type>
            <declname>SpaceID</declname>
            <defname>SpaceID</defname>
          </param>
          <param>
            <type>uint8_t</type>
            <declname>TypeID</declname>
            <defname>TypeID</defname>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto graphene::db::object_database::find</definition>
        <argsstring>(const object_id&lt; SpaceID, TypeID &gt; &amp;id) const -&gt; const object_downcast_t&lt; decltype(id)&gt; *</argsstring>
        <name>find</name>
        <param>
          <type>const <ref refid="structgraphene_1_1db_1_1object__id" kindref="compound">object_id</ref>&lt; SpaceID, TypeID &gt; &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/db/include/graphene/db/object_database.hpp" line="134" column="1" bodyfile="libraries/db/include/graphene/db/object_database.hpp" bodystart="134" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1db_1_1object__database_1a21e09042df1e66beb4fc28a5e640be2a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>uint8_t</type>
            <declname>SpaceID</declname>
            <defname>SpaceID</defname>
          </param>
          <param>
            <type>uint8_t</type>
            <declname>TypeID</declname>
            <defname>TypeID</defname>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto graphene::db::object_database::get</definition>
        <argsstring>(const object_id&lt; SpaceID, TypeID &gt; &amp;id) const -&gt; const object_downcast_t&lt; decltype(id)&gt; &amp;</argsstring>
        <name>get</name>
        <param>
          <type>const <ref refid="structgraphene_1_1db_1_1object__id" kindref="compound">object_id</ref>&lt; SpaceID, TypeID &gt; &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/db/include/graphene/db/object_database.hpp" line="139" column="1" bodyfile="libraries/db/include/graphene/db/object_database.hpp" bodystart="139" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1db_1_1object__database_1a82b09b4adc04d3468706cfb5b73a4798" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename IndexType</type>
          </param>
        </templateparamlist>
        <type>IndexType *</type>
        <definition>IndexType* graphene::db::object_database::add_index</definition>
        <argsstring>()</argsstring>
        <name>add_index</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/db/include/graphene/db/object_database.hpp" line="144" column="1" bodyfile="libraries/db/include/graphene/db/object_database.hpp" bodystart="144" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1db_1_1object__database_1a2fa6f4541c4595ead30e4fad08bce5e1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename IndexType</type>
          </param>
          <param>
            <type>typename SecondaryIndexType</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>SecondaryIndexType *</type>
        <definition>SecondaryIndexType* graphene::db::object_database::add_secondary_index</definition>
        <argsstring>(Args... args)</argsstring>
        <name>add_secondary_index</name>
        <param>
          <type>Args...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/db/include/graphene/db/object_database.hpp" line="159" column="1" bodyfile="libraries/db/include/graphene/db/object_database.hpp" bodystart="159" bodyend="163"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1db_1_1object__database_1a529568086dbb56423c6bc2f329f5fa8c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::db::object_database::pop_undo</definition>
        <argsstring>()</argsstring>
        <name>pop_undo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/db/include/graphene/db/object_database.hpp" line="165" column="1" bodyfile="libraries/db/object_database.cpp" bodystart="163" bodyend="166"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1db_1_1object__database_1a77bb98b3d49362133fff779b6587facf" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classfc_1_1path" kindref="compound">fc::path</ref></type>
        <definition>fc::path graphene::db::object_database::get_data_dir</definition>
        <argsstring>() const</argsstring>
        <name>get_data_dir</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/db/include/graphene/db/object_database.hpp" line="167" column="1" bodyfile="libraries/db/include/graphene/db/object_database.hpp" bodystart="167" bodyend="167"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classgraphene_1_1db_1_1object__database_1aa17265d1f5b4b8e8d669543a00b2d5a7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>const T &amp;</type>
        <definition>static const T&amp; graphene::db::object_database::cast</definition>
        <argsstring>(const object &amp;obj)</argsstring>
        <name>cast</name>
        <param>
          <type>const <ref refid="classgraphene_1_1db_1_1object" kindref="compound">object</ref> &amp;</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/db/include/graphene/db/object_database.hpp" line="106" column="1" bodyfile="libraries/db/include/graphene/db/object_database.hpp" bodystart="106" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1db_1_1object__database_1a690bd73898c375cc17a024af631a35b2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T &amp;</type>
        <definition>static T&amp; graphene::db::object_database::cast</definition>
        <argsstring>(object &amp;obj)</argsstring>
        <name>cast</name>
        <param>
          <type><ref refid="classgraphene_1_1db_1_1object" kindref="compound">object</ref> &amp;</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/db/include/graphene/db/object_database.hpp" line="112" column="1" bodyfile="libraries/db/include/graphene/db/object_database.hpp" bodystart="112" bodyend="116"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classgraphene_1_1db_1_1object__database_1a3ca684af9f341d319209b8c1163eb1d5" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename IndexType</type>
          </param>
        </templateparamlist>
        <type>IndexType &amp;</type>
        <definition>IndexType&amp; graphene::db::object_database::get_mutable_index_type</definition>
        <argsstring>()</argsstring>
        <name>get_mutable_index_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/db/include/graphene/db/object_database.hpp" line="173" column="1" bodyfile="libraries/db/include/graphene/db/object_database.hpp" bodystart="173" bodyend="177"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1db_1_1object__database_1ae74125300ed2da8d46e3c7436fbfc0d2" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="classgraphene_1_1db_1_1index" kindref="compound">index</ref> &amp;</type>
        <definition>index&amp; graphene::db::object_database::get_mutable_index</definition>
        <argsstring>()</argsstring>
        <name>get_mutable_index</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/db/include/graphene/db/object_database.hpp" line="179" column="1" bodyfile="libraries/db/include/graphene/db/object_database.hpp" bodystart="179" bodyend="179"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1db_1_1object__database_1a1cbd2af525743976c2587da1505676c2" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classgraphene_1_1db_1_1index" kindref="compound">index</ref> &amp;</type>
        <definition>index&amp; graphene::db::object_database::get_mutable_index</definition>
        <argsstring>(const object_id_type &amp;id)</argsstring>
        <name>get_mutable_index</name>
        <param>
          <type>const <ref refid="structgraphene_1_1db_1_1object__id__type" kindref="compound">object_id_type</ref> &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/db/include/graphene/db/object_database.hpp" line="180" column="1" bodyfile="libraries/db/include/graphene/db/object_database.hpp" bodystart="180" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1db_1_1object__database_1a6ec111d856befc5bcec11d0d76eefd7f" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classgraphene_1_1db_1_1index" kindref="compound">index</ref> &amp;</type>
        <definition>index &amp; graphene::db::object_database::get_mutable_index</definition>
        <argsstring>(uint8_t space_id, uint8_t type_id)</argsstring>
        <name>get_mutable_index</name>
        <param>
          <type>uint8_t</type>
          <declname>space_id</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>type_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/db/include/graphene/db/object_database.hpp" line="181" column="1" bodyfile="libraries/db/object_database.cpp" bodystart="66" bodyend="79"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classgraphene_1_1db_1_1object__database_1ad169ddf35dd7c733d680394fdca705b1" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::db::object_database::save_undo</definition>
        <argsstring>(const object &amp;obj)</argsstring>
        <name>save_undo</name>
        <param>
          <type>const <ref refid="classgraphene_1_1db_1_1object" kindref="compound">object</ref> &amp;</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/db/include/graphene/db/object_database.hpp" line="187" column="1" bodyfile="libraries/db/object_database.cpp" bodystart="168" bodyend="171"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1db_1_1object__database_1a6a25d8df365fed01d24a0dcb0285f3ac" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::db::object_database::save_undo_add</definition>
        <argsstring>(const object &amp;obj)</argsstring>
        <name>save_undo_add</name>
        <param>
          <type>const <ref refid="classgraphene_1_1db_1_1object" kindref="compound">object</ref> &amp;</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/db/include/graphene/db/object_database.hpp" line="188" column="1" bodyfile="libraries/db/object_database.cpp" bodystart="173" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1db_1_1object__database_1a41d844b22b62bbdf49df8d6f6d0b0dbf" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::db::object_database::save_undo_remove</definition>
        <argsstring>(const object &amp;obj)</argsstring>
        <name>save_undo_remove</name>
        <param>
          <type>const <ref refid="classgraphene_1_1db_1_1object" kindref="compound">object</ref> &amp;</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/db/include/graphene/db/object_database.hpp" line="189" column="1" bodyfile="libraries/db/object_database.cpp" bodystart="178" bodyend="181"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>maintains a set of indexed objects that can be modified with multi-level rollback support </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="5956">
        <label>graphene::db::object_database</label>
        <link refid="classgraphene_1_1db_1_1object__database"/>
      </node>
      <node id="5957">
        <label>graphene::chain::database</label>
        <link refid="classgraphene_1_1chain_1_1database"/>
        <childnode refid="5956" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="5958">
        <label>graphene::db::object_database</label>
        <link refid="classgraphene_1_1db_1_1object__database"/>
        <childnode refid="5959" relation="usage">
          <edgelabel>_undo_db</edgelabel>
        </childnode>
      </node>
      <node id="5959">
        <label>graphene::db::undo_database</label>
        <link refid="classgraphene_1_1db_1_1undo__database"/>
      </node>
    </collaborationgraph>
    <location file="libraries/db/include/graphene/db/object_database.hpp" line="40" column="1" bodyfile="libraries/db/include/graphene/db/object_database.hpp" bodystart="39" bodyend="193"/>
    <listofallmembers>
      <member refid="classgraphene_1_1db_1_1object__database_1a3aebb5be3a1c263ac0d760abc042417c" prot="private" virt="non-virtual"><scope>graphene::db::object_database</scope><name>_data_dir</name></member>
      <member refid="classgraphene_1_1db_1_1object__database_1ae1c15c1f27f7b4e086df05e56de3ab18" prot="private" virt="non-virtual"><scope>graphene::db::object_database</scope><name>_index</name></member>
      <member refid="classgraphene_1_1db_1_1object__database_1ada13e68758cbba506f4eb4e6f803146d" prot="public" virt="non-virtual"><scope>graphene::db::object_database</scope><name>_index_size</name></member>
      <member refid="classgraphene_1_1db_1_1object__database_1a4fc57af0f2725f5a33631c05a1b62b37" prot="public" virt="non-virtual"><scope>graphene::db::object_database</scope><name>_undo_db</name></member>
      <member refid="classgraphene_1_1db_1_1object__database_1a82b09b4adc04d3468706cfb5b73a4798" prot="public" virt="non-virtual"><scope>graphene::db::object_database</scope><name>add_index</name></member>
      <member refid="classgraphene_1_1db_1_1object__database_1a2fa6f4541c4595ead30e4fad08bce5e1" prot="public" virt="non-virtual"><scope>graphene::db::object_database</scope><name>add_secondary_index</name></member>
      <member refid="classgraphene_1_1db_1_1object__database_1aceb769661d19eb7299f5def854f55b58" prot="private" virt="non-virtual"><scope>graphene::db::object_database</scope><name>base_primary_index</name></member>
      <member refid="classgraphene_1_1db_1_1object__database_1aa17265d1f5b4b8e8d669543a00b2d5a7" prot="public" virt="non-virtual"><scope>graphene::db::object_database</scope><name>cast</name></member>
      <member refid="classgraphene_1_1db_1_1object__database_1a690bd73898c375cc17a024af631a35b2" prot="public" virt="non-virtual"><scope>graphene::db::object_database</scope><name>cast</name></member>
      <member refid="classgraphene_1_1db_1_1object__database_1a076e75fbe95c3cbd0bf637c258973533" prot="public" virt="non-virtual"><scope>graphene::db::object_database</scope><name>close</name></member>
      <member refid="classgraphene_1_1db_1_1object__database_1a8ab509742fb251702ee056ee234d94fa" prot="public" virt="non-virtual"><scope>graphene::db::object_database</scope><name>create</name></member>
      <member refid="classgraphene_1_1db_1_1object__database_1a7f0c18925ec35bd7a35bd6a6a2a6a381" prot="public" virt="non-virtual"><scope>graphene::db::object_database</scope><name>find</name></member>
      <member refid="classgraphene_1_1db_1_1object__database_1a259c718933fbbc4dd3145acf28f9832b" prot="public" virt="non-virtual"><scope>graphene::db::object_database</scope><name>find</name></member>
      <member refid="classgraphene_1_1db_1_1object__database_1afc15a7ce74c805e1aebd3460e5e43035" prot="public" virt="non-virtual"><scope>graphene::db::object_database</scope><name>find_object</name></member>
      <member refid="classgraphene_1_1db_1_1object__database_1a0732ee7acd14e92c44638d4601bbedde" prot="public" virt="non-virtual"><scope>graphene::db::object_database</scope><name>flush</name></member>
      <member refid="classgraphene_1_1db_1_1object__database_1a14a8b6ed7a24c990999f1d6dc31a21df" prot="public" virt="non-virtual"><scope>graphene::db::object_database</scope><name>get</name></member>
      <member refid="classgraphene_1_1db_1_1object__database_1a21e09042df1e66beb4fc28a5e640be2a" prot="public" virt="non-virtual"><scope>graphene::db::object_database</scope><name>get</name></member>
      <member refid="classgraphene_1_1db_1_1object__database_1a77bb98b3d49362133fff779b6587facf" prot="public" virt="non-virtual"><scope>graphene::db::object_database</scope><name>get_data_dir</name></member>
      <member refid="classgraphene_1_1db_1_1object__database_1ace1d662d6cb889e6363468702b8639b2" prot="public" virt="non-virtual"><scope>graphene::db::object_database</scope><name>get_index</name></member>
      <member refid="classgraphene_1_1db_1_1object__database_1a622efe7a25196b0d226ad6b1e454b0ae" prot="public" virt="non-virtual"><scope>graphene::db::object_database</scope><name>get_index</name></member>
      <member refid="classgraphene_1_1db_1_1object__database_1a67378fdc73274eec7ef344b403c92525" prot="public" virt="non-virtual"><scope>graphene::db::object_database</scope><name>get_index</name></member>
      <member refid="classgraphene_1_1db_1_1object__database_1ad8fc93c417524922d380dd3ee95fc2b0" prot="public" virt="non-virtual"><scope>graphene::db::object_database</scope><name>get_index_type</name></member>
      <member refid="classgraphene_1_1db_1_1object__database_1ae74125300ed2da8d46e3c7436fbfc0d2" prot="protected" virt="non-virtual"><scope>graphene::db::object_database</scope><name>get_mutable_index</name></member>
      <member refid="classgraphene_1_1db_1_1object__database_1a1cbd2af525743976c2587da1505676c2" prot="protected" virt="non-virtual"><scope>graphene::db::object_database</scope><name>get_mutable_index</name></member>
      <member refid="classgraphene_1_1db_1_1object__database_1a6ec111d856befc5bcec11d0d76eefd7f" prot="protected" virt="non-virtual"><scope>graphene::db::object_database</scope><name>get_mutable_index</name></member>
      <member refid="classgraphene_1_1db_1_1object__database_1a3ca684af9f341d319209b8c1163eb1d5" prot="protected" virt="non-virtual"><scope>graphene::db::object_database</scope><name>get_mutable_index_type</name></member>
      <member refid="classgraphene_1_1db_1_1object__database_1aa61a3adba87f7f1731bc88ad1ea1ec5c" prot="public" virt="non-virtual"><scope>graphene::db::object_database</scope><name>get_object</name></member>
      <member refid="classgraphene_1_1db_1_1object__database_1ab417fee5b66b97908a142864d582c671" prot="public" virt="non-virtual"><scope>graphene::db::object_database</scope><name>insert</name></member>
      <member refid="classgraphene_1_1db_1_1object__database_1a88949a42022fae3668dabba8b1cccd40" prot="public" virt="non-virtual"><scope>graphene::db::object_database</scope><name>modify</name></member>
      <member refid="classgraphene_1_1db_1_1object__database_1a63ad25dd455b179cafced627e8a43e88" prot="public" virt="non-virtual"><scope>graphene::db::object_database</scope><name>object_database</name></member>
      <member refid="classgraphene_1_1db_1_1object__database_1a0e179b70876f837430d1b3a1af683a03" prot="public" virt="non-virtual"><scope>graphene::db::object_database</scope><name>open</name></member>
      <member refid="classgraphene_1_1db_1_1object__database_1a529568086dbb56423c6bc2f329f5fa8c" prot="public" virt="non-virtual"><scope>graphene::db::object_database</scope><name>pop_undo</name></member>
      <member refid="classgraphene_1_1db_1_1object__database_1a991969449bef27210b5308f689871d25" prot="public" virt="non-virtual"><scope>graphene::db::object_database</scope><name>remove</name></member>
      <member refid="classgraphene_1_1db_1_1object__database_1ac0aee0c82f1fe2380b56c7a13fb87a98" prot="public" virt="non-virtual"><scope>graphene::db::object_database</scope><name>reset_indexes</name></member>
      <member refid="classgraphene_1_1db_1_1object__database_1ad169ddf35dd7c733d680394fdca705b1" prot="private" virt="non-virtual"><scope>graphene::db::object_database</scope><name>save_undo</name></member>
      <member refid="classgraphene_1_1db_1_1object__database_1a6a25d8df365fed01d24a0dcb0285f3ac" prot="private" virt="non-virtual"><scope>graphene::db::object_database</scope><name>save_undo_add</name></member>
      <member refid="classgraphene_1_1db_1_1object__database_1a41d844b22b62bbdf49df8d6f6d0b0dbf" prot="private" virt="non-virtual"><scope>graphene::db::object_database</scope><name>save_undo_remove</name></member>
      <member refid="classgraphene_1_1db_1_1object__database_1a3f6737f0de3cb0bdeda1acf58d8b28e5" prot="private" virt="non-virtual"><scope>graphene::db::object_database</scope><name>undo_database</name></member>
      <member refid="classgraphene_1_1db_1_1object__database_1a762ede07c458acb11142340ce71d1e27" prot="public" virt="non-virtual"><scope>graphene::db::object_database</scope><name>wipe</name></member>
      <member refid="classgraphene_1_1db_1_1object__database_1a5e8b60949b1ec0c513414c13833fc172" prot="public" virt="virtual"><scope>graphene::db::object_database</scope><name>~object_database</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
