<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classgraphene_1_1app_1_1login__api" kind="class" language="C++" prot="public">
    <compoundname>graphene::app::login_api</compoundname>
    <includes refid="app_2include_2graphene_2app_2api_8hpp" local="no">api.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classgraphene_1_1app_1_1login__api_1a5ce5ef10e0fd7b4929b084c45c7daaf9" prot="private" static="no" mutable="no">
        <type><ref refid="classgraphene_1_1app_1_1application" kindref="compound">application</ref> &amp;</type>
        <definition>application&amp; graphene::app::login_api::_app</definition>
        <argsstring></argsstring>
        <name>_app</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/include/graphene/app/api.hpp" line="787" column="22" bodyfile="libraries/app/include/graphene/app/api.hpp" bodystart="787" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgraphene_1_1app_1_1login__api_1a81e98dc008b1a2e044d8d73f6bda4766" prot="private" static="no" mutable="no">
        <type>flat_set&lt; string &gt;</type>
        <definition>flat_set&lt; string &gt; graphene::app::login_api::_allowed_apis</definition>
        <argsstring></argsstring>
        <name>_allowed_apis</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/include/graphene/app/api.hpp" line="789" column="19" bodyfile="libraries/app/include/graphene/app/api.hpp" bodystart="789" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgraphene_1_1app_1_1login__api_1acf7883304d5927ce8d3ed8c4f6d7c058" prot="private" static="no" mutable="no">
        <type>optional&lt; <ref refid="classfc_1_1api" kindref="compound">fc::api</ref>&lt; <ref refid="classgraphene_1_1app_1_1block__api" kindref="compound">block_api</ref> &gt; &gt;</type>
        <definition>optional&lt; fc::api&lt;block_api&gt; &gt; graphene::app::login_api::_block_api</definition>
        <argsstring></argsstring>
        <name>_block_api</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/include/graphene/app/api.hpp" line="791" column="44" bodyfile="libraries/app/include/graphene/app/api.hpp" bodystart="791" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgraphene_1_1app_1_1login__api_1ac2e707cdd0d60fc6bf5ee02f38e8bf26" prot="private" static="no" mutable="no">
        <type>optional&lt; <ref refid="classfc_1_1api" kindref="compound">fc::api</ref>&lt; <ref refid="classgraphene_1_1app_1_1database__api" kindref="compound">database_api</ref> &gt; &gt;</type>
        <definition>optional&lt; fc::api&lt;database_api&gt; &gt; graphene::app::login_api::_database_api</definition>
        <argsstring></argsstring>
        <name>_database_api</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/include/graphene/app/api.hpp" line="792" column="41" bodyfile="libraries/app/include/graphene/app/api.hpp" bodystart="792" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgraphene_1_1app_1_1login__api_1a7a552578b56755d8c4f0d0355a6c5c24" prot="private" static="no" mutable="no">
        <type>optional&lt; <ref refid="classfc_1_1api" kindref="compound">fc::api</ref>&lt; <ref refid="classgraphene_1_1app_1_1network__broadcast__api" kindref="compound">network_broadcast_api</ref> &gt; &gt;</type>
        <definition>optional&lt; fc::api&lt;network_broadcast_api&gt; &gt; graphene::app::login_api::_network_broadcast_api</definition>
        <argsstring></argsstring>
        <name>_network_broadcast_api</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/include/graphene/app/api.hpp" line="793" column="32" bodyfile="libraries/app/include/graphene/app/api.hpp" bodystart="793" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgraphene_1_1app_1_1login__api_1afdb76a3188c6951fd1ad01a8b04a1a26" prot="private" static="no" mutable="no">
        <type>optional&lt; <ref refid="classfc_1_1api" kindref="compound">fc::api</ref>&lt; <ref refid="classgraphene_1_1app_1_1network__node__api" kindref="compound">network_node_api</ref> &gt; &gt;</type>
        <definition>optional&lt; fc::api&lt;network_node_api&gt; &gt; graphene::app::login_api::_network_node_api</definition>
        <argsstring></argsstring>
        <name>_network_node_api</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/include/graphene/app/api.hpp" line="794" column="37" bodyfile="libraries/app/include/graphene/app/api.hpp" bodystart="794" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgraphene_1_1app_1_1login__api_1a48f7b099dcf7396ca383d03d7883a685" prot="private" static="no" mutable="no">
        <type>optional&lt; <ref refid="classfc_1_1api" kindref="compound">fc::api</ref>&lt; <ref refid="classgraphene_1_1app_1_1history__api" kindref="compound">history_api</ref> &gt; &gt;</type>
        <definition>optional&lt; fc::api&lt;history_api&gt; &gt; graphene::app::login_api::_history_api</definition>
        <argsstring></argsstring>
        <name>_history_api</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/include/graphene/app/api.hpp" line="795" column="42" bodyfile="libraries/app/include/graphene/app/api.hpp" bodystart="795" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgraphene_1_1app_1_1login__api_1ac4e58d1ac2c6d94f5e08eff60a65f8f9" prot="private" static="no" mutable="no">
        <type>optional&lt; <ref refid="classfc_1_1api" kindref="compound">fc::api</ref>&lt; <ref refid="classgraphene_1_1app_1_1crypto__api" kindref="compound">crypto_api</ref> &gt; &gt;</type>
        <definition>optional&lt; fc::api&lt;crypto_api&gt; &gt; graphene::app::login_api::_crypto_api</definition>
        <argsstring></argsstring>
        <name>_crypto_api</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/include/graphene/app/api.hpp" line="796" column="43" bodyfile="libraries/app/include/graphene/app/api.hpp" bodystart="796" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgraphene_1_1app_1_1login__api_1a308b14a9507b5a8f6ea70d4f1618d381" prot="private" static="no" mutable="no">
        <type>optional&lt; <ref refid="classfc_1_1api" kindref="compound">fc::api</ref>&lt; <ref refid="classgraphene_1_1app_1_1asset__api" kindref="compound">asset_api</ref> &gt; &gt;</type>
        <definition>optional&lt; fc::api&lt;asset_api&gt; &gt; graphene::app::login_api::_asset_api</definition>
        <argsstring></argsstring>
        <name>_asset_api</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/include/graphene/app/api.hpp" line="797" column="44" bodyfile="libraries/app/include/graphene/app/api.hpp" bodystart="797" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgraphene_1_1app_1_1login__api_1a7395b2371e56504eb2ccbe1762b07384" prot="private" static="no" mutable="no">
        <type>optional&lt; <ref refid="classfc_1_1api" kindref="compound">fc::api</ref>&lt; <ref refid="classgraphene_1_1app_1_1orders__api" kindref="compound">orders_api</ref> &gt; &gt;</type>
        <definition>optional&lt; fc::api&lt;orders_api&gt; &gt; graphene::app::login_api::_orders_api</definition>
        <argsstring></argsstring>
        <name>_orders_api</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/include/graphene/app/api.hpp" line="798" column="43" bodyfile="libraries/app/include/graphene/app/api.hpp" bodystart="798" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgraphene_1_1app_1_1login__api_1a90ff8fbefc1f6c8a181665bd88942b1e" prot="private" static="no" mutable="no">
        <type>optional&lt; <ref refid="classfc_1_1api" kindref="compound">fc::api</ref>&lt; <ref refid="classgraphene_1_1debug__witness_1_1debug__api" kindref="compound">graphene::debug_witness::debug_api</ref> &gt; &gt;</type>
        <definition>optional&lt; fc::api&lt;graphene::debug_witness::debug_api&gt; &gt; graphene::app::login_api::_debug_api</definition>
        <argsstring></argsstring>
        <name>_debug_api</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/include/graphene/app/api.hpp" line="799" column="19" bodyfile="libraries/app/include/graphene/app/api.hpp" bodystart="799" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgraphene_1_1app_1_1login__api_1a8d987612c15b1f56381516b686030220" prot="private" static="no" mutable="no">
        <type>optional&lt; <ref refid="classfc_1_1api" kindref="compound">fc::api</ref>&lt; <ref refid="classgraphene_1_1app_1_1custom__operations__api" kindref="compound">custom_operations_api</ref> &gt; &gt;</type>
        <definition>optional&lt; fc::api&lt;custom_operations_api&gt; &gt; graphene::app::login_api::_custom_operations_api</definition>
        <argsstring></argsstring>
        <name>_custom_operations_api</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/include/graphene/app/api.hpp" line="800" column="32" bodyfile="libraries/app/include/graphene/app/api.hpp" bodystart="800" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgraphene_1_1app_1_1login__api_1a03bddb8f8c5e4081aba61d1489e7447a" prot="private" static="no" mutable="no">
        <type>optional&lt; <ref refid="classfc_1_1api" kindref="compound">fc::api</ref>&lt; <ref refid="structgraphene_1_1app_1_1dummy__api" kindref="compound">dummy_api</ref> &gt; &gt;</type>
        <definition>optional&lt; fc::api&lt;dummy_api&gt; &gt; graphene::app::login_api::_dummy_api</definition>
        <argsstring></argsstring>
        <name>_dummy_api</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/include/graphene/app/api.hpp" line="801" column="44" bodyfile="libraries/app/include/graphene/app/api.hpp" bodystart="801" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classgraphene_1_1app_1_1login__api_1a62a89e34324402187d2569c0e898e728" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>graphene::app::login_api::login_api</definition>
        <argsstring>(application &amp;a)</argsstring>
        <name>login_api</name>
        <param>
          <type><ref refid="classgraphene_1_1app_1_1application" kindref="compound">application</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/include/graphene/app/api.hpp" line="723" column="19" bodyfile="libraries/app/api.cpp" bodystart="50" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1app_1_1login__api_1a8c090bf6c1fa367edfe4e19b77e88a75" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classfc_1_1variant" kindref="compound">variant</ref></type>
        <definition>variant graphene::app::login_api::login</definition>
        <argsstring>(const optional&lt; string &gt; &amp;user, const optional&lt; string &gt; &amp;password)</argsstring>
        <name>login</name>
        <param>
          <type>const <ref refid="classfc_1_1optional" kindref="compound">optional</ref>&lt; string &gt; &amp;</type>
          <declname>user</declname>
        </param>
        <param>
          <type>const <ref refid="classfc_1_1optional" kindref="compound">optional</ref>&lt; string &gt; &amp;</type>
          <declname>password</declname>
        </param>
        <briefdescription>
<para>Authenticate to the RPC server, or retrieve the API set ID of the <emphasis>login</emphasis> API set. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>user</parametername>
</parameternamelist>
<parameterdescription>
<para>Username to login with, optional </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>password</parametername>
</parameternamelist>
<parameterdescription>
<para>Password to login with, optional </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><emphasis>true</emphasis> if to authenticate and logged in successfully, <emphasis>false</emphasis> if to authenticate and failed to log in, or the API set ID if to retrieve it</para>
</simplesect>
<simplesect kind="note"><para>Provide both <computeroutput>user</computeroutput> and <computeroutput>password</computeroutput> to authenticate, or provide none of them (or <emphasis>null</emphasis> without quotes) to retrieve the API set ID of the <emphasis>login</emphasis> API set. </para>
</simplesect>
<simplesect kind="note"><para>This is called automatically for authentication when a HTTP or WebSocket connection is established, assuming credentials are provided with HTTP Basic authentication headers. </para>
</simplesect>
<simplesect kind="note"><para>When trying to authenticate again, even if failed to log in, already allocated API set IDs are still accessible. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/include/graphene/app/api.hpp" line="741" column="18" bodyfile="libraries/app/api.cpp" bodystart="56" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1app_1_1login__api_1a4fd2afde325a71e25db1b5b9b1968240" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool graphene::app::login_api::logout</definition>
        <argsstring>()</argsstring>
        <name>logout</name>
        <briefdescription>
<para>Log out. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><emphasis>false</emphasis> </para>
</simplesect>
<simplesect kind="note"><para>Already allocated API set IDs are still accessible after calling this. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/include/graphene/app/api.hpp" line="746" column="15" bodyfile="libraries/app/api.cpp" bodystart="87" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1app_1_1login__api_1adaaf68e1e6b48dc3ebd3177f690e8f4c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>string graphene::app::login_api::get_info</definition>
        <argsstring>() const</argsstring>
        <name>get_info</name>
        <briefdescription>
<para>Retrive the node info string configured by the node operator. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/include/graphene/app/api.hpp" line="749" column="17" bodyfile="libraries/app/api.cpp" bodystart="96" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1app_1_1login__api_1a9a646fa9ee902debe5d073d45a29b2f6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classgraphene_1_1app_1_1application__options" kindref="compound">application_options</ref></type>
        <definition>application_options graphene::app::login_api::get_config</definition>
        <argsstring>() const</argsstring>
        <name>get_config</name>
        <briefdescription>
<para>Retrieve configured application options. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>It requires the user to be logged in and have access to at least one API set other than <ref refid="classgraphene_1_1app_1_1login__api" kindref="compound">login_api</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/include/graphene/app/api.hpp" line="753" column="30" bodyfile="libraries/app/api.cpp" bodystart="101" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1app_1_1login__api_1aa37b4d4f1fe1f759a108bb7621fa5553" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>flat_set&lt; string &gt;</type>
        <definition>flat_set&lt; string &gt; graphene::app::login_api::get_available_api_sets</definition>
        <argsstring>() const</argsstring>
        <name>get_available_api_sets</name>
        <briefdescription>
<para>Retrieve a list of API sets that the user has access to. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/include/graphene/app/api.hpp" line="756" column="19" bodyfile="libraries/app/api.cpp" bodystart="108" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1app_1_1login__api_1aa4ff5c80261da4ae453236dc572c911d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classfc_1_1api" kindref="compound">fc::api</ref>&lt; <ref refid="classgraphene_1_1app_1_1block__api" kindref="compound">block_api</ref> &gt;</type>
        <definition>fc::api&lt; block_api &gt; graphene::app::login_api::block</definition>
        <argsstring>()</argsstring>
        <name>block</name>
        <briefdescription>
<para>Retrieve the network block API set. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/include/graphene/app/api.hpp" line="759" column="18" bodyfile="libraries/app/api.cpp" bodystart="254" bodyend="263"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1app_1_1login__api_1a195effb554329dcb548f178e5aea57f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classfc_1_1api" kindref="compound">fc::api</ref>&lt; <ref refid="classgraphene_1_1app_1_1network__broadcast__api" kindref="compound">network_broadcast_api</ref> &gt;</type>
        <definition>fc::api&lt; network_broadcast_api &gt; graphene::app::login_api::network_broadcast</definition>
        <argsstring>()</argsstring>
        <name>network_broadcast</name>
        <briefdescription>
<para>Retrieve the network broadcast API set. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/include/graphene/app/api.hpp" line="761" column="18" bodyfile="libraries/app/api.cpp" bodystart="243" bodyend="252"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1app_1_1login__api_1a80ec9b6b6147f8fac2bb13f7f9749562" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classfc_1_1api" kindref="compound">fc::api</ref>&lt; <ref refid="classgraphene_1_1app_1_1database__api" kindref="compound">database_api</ref> &gt;</type>
        <definition>fc::api&lt; database_api &gt; graphene::app::login_api::database</definition>
        <argsstring>()</argsstring>
        <name>database</name>
        <briefdescription>
<para>Retrieve the database API set. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/include/graphene/app/api.hpp" line="763" column="18" bodyfile="libraries/app/api.cpp" bodystart="276" bodyend="286"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1app_1_1login__api_1a8c9db087066466495eb0fd2efb86e92d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classfc_1_1api" kindref="compound">fc::api</ref>&lt; <ref refid="classgraphene_1_1app_1_1history__api" kindref="compound">history_api</ref> &gt;</type>
        <definition>fc::api&lt; history_api &gt; graphene::app::login_api::history</definition>
        <argsstring>()</argsstring>
        <name>history</name>
        <briefdescription>
<para>Retrieve the history API set. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/include/graphene/app/api.hpp" line="765" column="18" bodyfile="libraries/app/api.cpp" bodystart="288" bodyend="297"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1app_1_1login__api_1a720bd1d98f66e43de1427821fa6f0ebb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classfc_1_1api" kindref="compound">fc::api</ref>&lt; <ref refid="classgraphene_1_1app_1_1network__node__api" kindref="compound">network_node_api</ref> &gt;</type>
        <definition>fc::api&lt; network_node_api &gt; graphene::app::login_api::network_node</definition>
        <argsstring>()</argsstring>
        <name>network_node</name>
        <briefdescription>
<para>Retrieve the network node API set. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/include/graphene/app/api.hpp" line="767" column="18" bodyfile="libraries/app/api.cpp" bodystart="265" bodyend="274"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1app_1_1login__api_1a328720ccef391ade312d9cc369d74f87" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classfc_1_1api" kindref="compound">fc::api</ref>&lt; <ref refid="classgraphene_1_1app_1_1crypto__api" kindref="compound">crypto_api</ref> &gt;</type>
        <definition>fc::api&lt; crypto_api &gt; graphene::app::login_api::crypto</definition>
        <argsstring>()</argsstring>
        <name>crypto</name>
        <briefdescription>
<para>Retrieve the cryptography API set. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/include/graphene/app/api.hpp" line="769" column="18" bodyfile="libraries/app/api.cpp" bodystart="299" bodyend="308"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1app_1_1login__api_1a68ae15d86a840696315e972e2ab6ef1b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classfc_1_1api" kindref="compound">fc::api</ref>&lt; <ref refid="classgraphene_1_1app_1_1asset__api" kindref="compound">asset_api</ref> &gt;</type>
        <definition>fc::api&lt; asset_api &gt; graphene::app::login_api::asset</definition>
        <argsstring>()</argsstring>
        <name>asset</name>
        <briefdescription>
<para>Retrieve the asset API set. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/include/graphene/app/api.hpp" line="771" column="18" bodyfile="libraries/app/api.cpp" bodystart="310" bodyend="319"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1app_1_1login__api_1a74ede0334051229eeeb623dc72dbe097" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classfc_1_1api" kindref="compound">fc::api</ref>&lt; <ref refid="classgraphene_1_1app_1_1orders__api" kindref="compound">orders_api</ref> &gt;</type>
        <definition>fc::api&lt; orders_api &gt; graphene::app::login_api::orders</definition>
        <argsstring>()</argsstring>
        <name>orders</name>
        <briefdescription>
<para>Retrieve the orders API set. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/include/graphene/app/api.hpp" line="773" column="18" bodyfile="libraries/app/api.cpp" bodystart="321" bodyend="330"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1app_1_1login__api_1a41f1134655cf60a3213d18398513da48" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classfc_1_1api" kindref="compound">fc::api</ref>&lt; <ref refid="classgraphene_1_1debug__witness_1_1debug__api" kindref="compound">graphene::debug_witness::debug_api</ref> &gt;</type>
        <definition>fc::api&lt; graphene::debug_witness::debug_api &gt; graphene::app::login_api::debug</definition>
        <argsstring>()</argsstring>
        <name>debug</name>
        <briefdescription>
<para>Retrieve the debug API set. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/include/graphene/app/api.hpp" line="775" column="18" bodyfile="libraries/app/api.cpp" bodystart="332" bodyend="344"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1app_1_1login__api_1a2d18cf34f9378d64a93d8d24c1579125" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classfc_1_1api" kindref="compound">fc::api</ref>&lt; <ref refid="classgraphene_1_1app_1_1custom__operations__api" kindref="compound">custom_operations_api</ref> &gt;</type>
        <definition>fc::api&lt; custom_operations_api &gt; graphene::app::login_api::custom_operations</definition>
        <argsstring>()</argsstring>
        <name>custom_operations</name>
        <briefdescription>
<para>Retrieve the custom operations API set. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/include/graphene/app/api.hpp" line="777" column="18" bodyfile="libraries/app/api.cpp" bodystart="346" bodyend="358"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1app_1_1login__api_1ae376351b69fca58d54f4f7a35cd09082" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classfc_1_1api" kindref="compound">fc::api</ref>&lt; <ref refid="structgraphene_1_1app_1_1dummy__api" kindref="compound">dummy_api</ref> &gt;</type>
        <definition>fc::api&lt; dummy_api &gt; graphene::app::login_api::dummy</definition>
        <argsstring>()</argsstring>
        <name>dummy</name>
        <briefdescription>
<para>Retrieve a dummy API set, not reflected. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/include/graphene/app/api.hpp" line="780" column="18" bodyfile="libraries/app/api.cpp" bodystart="360" bodyend="367"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1app_1_1login__api_1afd288be86bec1922076f031c9aa1c11a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool graphene::app::login_api::is_database_api_allowed</definition>
        <argsstring>() const</argsstring>
        <name>is_database_api_allowed</name>
        <briefdescription>
<para>Check whether <ref refid="classgraphene_1_1app_1_1database__api" kindref="compound">database_api</ref> is allowed, not reflected. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><emphasis>true</emphasis> if <ref refid="classgraphene_1_1app_1_1database__api" kindref="compound">database_api</ref> is allowed, <emphasis>false</emphasis> otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/include/graphene/app/api.hpp" line="784" column="15" bodyfile="libraries/app/api.cpp" bodystart="113" bodyend="117"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The <ref refid="classgraphene_1_1app_1_1login__api" kindref="compound">login_api</ref> class implements the bottom layer of the RPC API. </para>
    </briefdescription>
    <detaileddescription>
<para>All other APIs must be requested from this API. </para>
    </detaileddescription>
    <location file="libraries/app/include/graphene/app/api.hpp" line="721" column="1" bodyfile="libraries/app/include/graphene/app/api.hpp" bodystart="720" bodyend="802"/>
    <listofallmembers>
      <member refid="classgraphene_1_1app_1_1login__api_1a81e98dc008b1a2e044d8d73f6bda4766" prot="private" virt="non-virtual"><scope>graphene::app::login_api</scope><name>_allowed_apis</name></member>
      <member refid="classgraphene_1_1app_1_1login__api_1a5ce5ef10e0fd7b4929b084c45c7daaf9" prot="private" virt="non-virtual"><scope>graphene::app::login_api</scope><name>_app</name></member>
      <member refid="classgraphene_1_1app_1_1login__api_1a308b14a9507b5a8f6ea70d4f1618d381" prot="private" virt="non-virtual"><scope>graphene::app::login_api</scope><name>_asset_api</name></member>
      <member refid="classgraphene_1_1app_1_1login__api_1acf7883304d5927ce8d3ed8c4f6d7c058" prot="private" virt="non-virtual"><scope>graphene::app::login_api</scope><name>_block_api</name></member>
      <member refid="classgraphene_1_1app_1_1login__api_1ac4e58d1ac2c6d94f5e08eff60a65f8f9" prot="private" virt="non-virtual"><scope>graphene::app::login_api</scope><name>_crypto_api</name></member>
      <member refid="classgraphene_1_1app_1_1login__api_1a8d987612c15b1f56381516b686030220" prot="private" virt="non-virtual"><scope>graphene::app::login_api</scope><name>_custom_operations_api</name></member>
      <member refid="classgraphene_1_1app_1_1login__api_1ac2e707cdd0d60fc6bf5ee02f38e8bf26" prot="private" virt="non-virtual"><scope>graphene::app::login_api</scope><name>_database_api</name></member>
      <member refid="classgraphene_1_1app_1_1login__api_1a90ff8fbefc1f6c8a181665bd88942b1e" prot="private" virt="non-virtual"><scope>graphene::app::login_api</scope><name>_debug_api</name></member>
      <member refid="classgraphene_1_1app_1_1login__api_1a03bddb8f8c5e4081aba61d1489e7447a" prot="private" virt="non-virtual"><scope>graphene::app::login_api</scope><name>_dummy_api</name></member>
      <member refid="classgraphene_1_1app_1_1login__api_1a48f7b099dcf7396ca383d03d7883a685" prot="private" virt="non-virtual"><scope>graphene::app::login_api</scope><name>_history_api</name></member>
      <member refid="classgraphene_1_1app_1_1login__api_1a7a552578b56755d8c4f0d0355a6c5c24" prot="private" virt="non-virtual"><scope>graphene::app::login_api</scope><name>_network_broadcast_api</name></member>
      <member refid="classgraphene_1_1app_1_1login__api_1afdb76a3188c6951fd1ad01a8b04a1a26" prot="private" virt="non-virtual"><scope>graphene::app::login_api</scope><name>_network_node_api</name></member>
      <member refid="classgraphene_1_1app_1_1login__api_1a7395b2371e56504eb2ccbe1762b07384" prot="private" virt="non-virtual"><scope>graphene::app::login_api</scope><name>_orders_api</name></member>
      <member refid="classgraphene_1_1app_1_1login__api_1a68ae15d86a840696315e972e2ab6ef1b" prot="public" virt="non-virtual"><scope>graphene::app::login_api</scope><name>asset</name></member>
      <member refid="classgraphene_1_1app_1_1login__api_1aa4ff5c80261da4ae453236dc572c911d" prot="public" virt="non-virtual"><scope>graphene::app::login_api</scope><name>block</name></member>
      <member refid="classgraphene_1_1app_1_1login__api_1a328720ccef391ade312d9cc369d74f87" prot="public" virt="non-virtual"><scope>graphene::app::login_api</scope><name>crypto</name></member>
      <member refid="classgraphene_1_1app_1_1login__api_1a2d18cf34f9378d64a93d8d24c1579125" prot="public" virt="non-virtual"><scope>graphene::app::login_api</scope><name>custom_operations</name></member>
      <member refid="classgraphene_1_1app_1_1login__api_1a80ec9b6b6147f8fac2bb13f7f9749562" prot="public" virt="non-virtual"><scope>graphene::app::login_api</scope><name>database</name></member>
      <member refid="classgraphene_1_1app_1_1login__api_1a41f1134655cf60a3213d18398513da48" prot="public" virt="non-virtual"><scope>graphene::app::login_api</scope><name>debug</name></member>
      <member refid="classgraphene_1_1app_1_1login__api_1ae376351b69fca58d54f4f7a35cd09082" prot="public" virt="non-virtual"><scope>graphene::app::login_api</scope><name>dummy</name></member>
      <member refid="classgraphene_1_1app_1_1login__api_1aa37b4d4f1fe1f759a108bb7621fa5553" prot="public" virt="non-virtual"><scope>graphene::app::login_api</scope><name>get_available_api_sets</name></member>
      <member refid="classgraphene_1_1app_1_1login__api_1a9a646fa9ee902debe5d073d45a29b2f6" prot="public" virt="non-virtual"><scope>graphene::app::login_api</scope><name>get_config</name></member>
      <member refid="classgraphene_1_1app_1_1login__api_1adaaf68e1e6b48dc3ebd3177f690e8f4c" prot="public" virt="non-virtual"><scope>graphene::app::login_api</scope><name>get_info</name></member>
      <member refid="classgraphene_1_1app_1_1login__api_1a8c9db087066466495eb0fd2efb86e92d" prot="public" virt="non-virtual"><scope>graphene::app::login_api</scope><name>history</name></member>
      <member refid="classgraphene_1_1app_1_1login__api_1afd288be86bec1922076f031c9aa1c11a" prot="public" virt="non-virtual"><scope>graphene::app::login_api</scope><name>is_database_api_allowed</name></member>
      <member refid="classgraphene_1_1app_1_1login__api_1a8c090bf6c1fa367edfe4e19b77e88a75" prot="public" virt="non-virtual"><scope>graphene::app::login_api</scope><name>login</name></member>
      <member refid="classgraphene_1_1app_1_1login__api_1a62a89e34324402187d2569c0e898e728" prot="public" virt="non-virtual"><scope>graphene::app::login_api</scope><name>login_api</name></member>
      <member refid="classgraphene_1_1app_1_1login__api_1a4fd2afde325a71e25db1b5b9b1968240" prot="public" virt="non-virtual"><scope>graphene::app::login_api</scope><name>logout</name></member>
      <member refid="classgraphene_1_1app_1_1login__api_1a195effb554329dcb548f178e5aea57f1" prot="public" virt="non-virtual"><scope>graphene::app::login_api</scope><name>network_broadcast</name></member>
      <member refid="classgraphene_1_1app_1_1login__api_1a720bd1d98f66e43de1427821fa6f0ebb" prot="public" virt="non-virtual"><scope>graphene::app::login_api</scope><name>network_node</name></member>
      <member refid="classgraphene_1_1app_1_1login__api_1a74ede0334051229eeeb623dc72dbe097" prot="public" virt="non-virtual"><scope>graphene::app::login_api</scope><name>orders</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
