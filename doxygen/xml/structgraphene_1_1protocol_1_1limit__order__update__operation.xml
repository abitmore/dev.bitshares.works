<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="structgraphene_1_1protocol_1_1limit__order__update__operation" kind="struct" language="C++" prot="public">
    <compoundname>graphene::protocol::limit_order_update_operation</compoundname>
    <basecompoundref refid="structgraphene_1_1protocol_1_1base__operation" prot="public" virt="non-virtual">graphene::protocol::base_operation</basecompoundref>
    <includes refid="market_8hpp" local="no">market.hpp</includes>
    <innerclass refid="structgraphene_1_1protocol_1_1limit__order__update__operation_1_1fee__params__t" prot="public">graphene::protocol::limit_order_update_operation::fee_params_t</innerclass>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1limit__order__update__operation_1a666422080ab1ec6810d949359c348500" prot="public" static="no" mutable="no">
        <type><ref refid="structgraphene_1_1protocol_1_1asset" kindref="compound">asset</ref></type>
        <definition>asset graphene::protocol::limit_order_update_operation::fee</definition>
        <argsstring></argsstring>
        <name>fee</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/market.hpp" line="123" column="14" bodyfile="libraries/protocol/include/graphene/protocol/market.hpp" bodystart="123" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1limit__order__update__operation_1a6ec9808d8bcdfd3396bcdb518d5e9b1b" prot="public" static="no" mutable="no">
        <type>account_id_type</type>
        <definition>account_id_type graphene::protocol::limit_order_update_operation::seller</definition>
        <argsstring></argsstring>
        <name>seller</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/market.hpp" line="124" column="24" bodyfile="libraries/protocol/include/graphene/protocol/market.hpp" bodystart="124" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1limit__order__update__operation_1a4f10a315f39c53e077674c08c121b975" prot="public" static="no" mutable="no">
        <type>limit_order_id_type</type>
        <definition>limit_order_id_type graphene::protocol::limit_order_update_operation::order</definition>
        <argsstring></argsstring>
        <name>order</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/market.hpp" line="125" column="28" bodyfile="libraries/protocol/include/graphene/protocol/market.hpp" bodystart="125" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1limit__order__update__operation_1a437240b2a1c54fbfb44b4b93fe7c5e41" prot="public" static="no" mutable="no">
        <type><ref refid="classfc_1_1optional" kindref="compound">optional</ref>&lt; <ref refid="structgraphene_1_1protocol_1_1price" kindref="compound">price</ref> &gt;</type>
        <definition>optional&lt;price&gt; graphene::protocol::limit_order_update_operation::new_price</definition>
        <argsstring></argsstring>
        <name>new_price</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/market.hpp" line="126" column="17" bodyfile="libraries/protocol/include/graphene/protocol/market.hpp" bodystart="126" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1limit__order__update__operation_1abb1723569312d5069083cca3d455e0aa" prot="public" static="no" mutable="no">
        <type><ref refid="classfc_1_1optional" kindref="compound">optional</ref>&lt; <ref refid="structgraphene_1_1protocol_1_1asset" kindref="compound">asset</ref> &gt;</type>
        <definition>optional&lt;asset&gt; graphene::protocol::limit_order_update_operation::delta_amount_to_sell</definition>
        <argsstring></argsstring>
        <name>delta_amount_to_sell</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/market.hpp" line="127" column="17" bodyfile="libraries/protocol/include/graphene/protocol/market.hpp" bodystart="127" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1limit__order__update__operation_1a12cd3bd996d3fcc57ff49cf043425d6f" prot="public" static="no" mutable="no">
        <type><ref refid="classfc_1_1optional" kindref="compound">optional</ref>&lt; <ref refid="classfc_1_1time__point__sec" kindref="compound">time_point_sec</ref> &gt;</type>
        <definition>optional&lt;time_point_sec&gt; graphene::protocol::limit_order_update_operation::new_expiration</definition>
        <argsstring></argsstring>
        <name>new_expiration</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/market.hpp" line="128" column="17" bodyfile="libraries/protocol/include/graphene/protocol/market.hpp" bodystart="128" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1limit__order__update__operation_1a4461a7005c9e3ec7240ab9169816664f" prot="public" static="no" mutable="no">
        <type><ref refid="classfc_1_1optional" kindref="compound">optional</ref>&lt; vector&lt; <ref refid="namespacegraphene_1_1protocol_1aa3fcffd4cf857807b327ef747be699a4" kindref="member">limit_order_auto_action</ref> &gt; &gt;</type>
        <definition>optional&lt; vector&lt; limit_order_auto_action &gt; &gt; graphene::protocol::limit_order_update_operation::on_fill</definition>
        <argsstring></argsstring>
        <name>on_fill</name>
        <briefdescription>
<para>Automatic actions when the limit order is filled or partially filled. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/market.hpp" line="130" column="17" bodyfile="libraries/protocol/include/graphene/protocol/market.hpp" bodystart="130" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1limit__order__update__operation_1a8dae29427531d97111c9b2d2c4f86e18" prot="public" static="no" mutable="no">
        <type><ref refid="group__operations_1gabaddcaf5bde76414891b4c29031d9288" kindref="member">extensions_type</ref></type>
        <definition>extensions_type graphene::protocol::limit_order_update_operation::extensions</definition>
        <argsstring></argsstring>
        <name>extensions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/market.hpp" line="132" column="24" bodyfile="libraries/protocol/include/graphene/protocol/market.hpp" bodystart="132" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structgraphene_1_1protocol_1_1limit__order__update__operation_1abeaeef69962c51246305132b82520af9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>account_id_type</type>
        <definition>account_id_type graphene::protocol::limit_order_update_operation::fee_payer</definition>
        <argsstring>() const</argsstring>
        <name>fee_payer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/market.hpp" line="134" column="24" bodyfile="libraries/protocol/include/graphene/protocol/market.hpp" bodystart="134" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1protocol_1_1limit__order__update__operation_1afbc046c467235aabe69af1d7403b378a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void graphene::protocol::limit_order_update_operation::validate</definition>
        <argsstring>() const override</argsstring>
        <name>validate</name>
        <reimplements refid="structgraphene_1_1protocol_1_1base__operation_1a23d617a6fa0921d3f5b51dd5167e7a29">validate</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/market.hpp" line="135" column="13" bodyfile="libraries/protocol/market.cpp" bodystart="65" bodyend="82"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Used to update an existing limit order. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>graphene::protocol::limit_order_update_operation</label>
        <link refid="structgraphene_1_1protocol_1_1limit__order__update__operation"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>graphene::protocol::base_operation</label>
        <link refid="structgraphene_1_1protocol_1_1base__operation"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="10">
        <label>fc::optional&lt; fc::time_point_sec &gt;</label>
        <link refid="classfc_1_1optional"/>
      </node>
      <node id="7">
        <label>fc::safe_base&lt; int64_t &gt;</label>
        <link refid="structfc_1_1safe__base"/>
      </node>
      <node id="3">
        <label>fc::optional&lt; vector&lt; fc::static_variant &gt; &gt;</label>
        <link refid="classfc_1_1optional"/>
      </node>
      <node id="1">
        <label>graphene::protocol::limit_order_update_operation</label>
        <link refid="structgraphene_1_1protocol_1_1limit__order__update__operation"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>on_fill</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>new_price</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>fee</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>seller</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>delta_amount_to_sell</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>new_expiration</edgelabel>
        </childnode>
      </node>
      <node id="9">
        <label>fc::optional&lt; graphene::protocol::asset &gt;</label>
        <link refid="classfc_1_1optional"/>
      </node>
      <node id="8">
        <label>account_id_type</label>
      </node>
      <node id="4">
        <label>fc::optional&lt; graphene::protocol::price &gt;</label>
        <link refid="classfc_1_1optional"/>
      </node>
      <node id="6">
        <label>fc::safe&lt; int64_t &gt;</label>
        <link refid="structfc_1_1safe"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>graphene::protocol::base_operation</label>
        <link refid="structgraphene_1_1protocol_1_1base__operation"/>
      </node>
      <node id="5">
        <label>graphene::protocol::asset</label>
        <link refid="structgraphene_1_1protocol_1_1asset"/>
        <childnode refid="6" relation="usage">
          <edgelabel>amount</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="libraries/protocol/include/graphene/protocol/market.hpp" line="118" column="1" bodyfile="libraries/protocol/include/graphene/protocol/market.hpp" bodystart="117" bodyend="136"/>
    <listofallmembers>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1aaccb0fa71ee529cf62324baaa99988fe" prot="public" virt="non-virtual"><scope>graphene::protocol::limit_order_update_operation</scope><name>calculate_data_fee</name></member>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1a0be44badcee9a648413eb906dac1d3b3" prot="public" virt="non-virtual"><scope>graphene::protocol::limit_order_update_operation</scope><name>calculate_fee</name></member>
      <member refid="structgraphene_1_1protocol_1_1limit__order__update__operation_1abb1723569312d5069083cca3d455e0aa" prot="public" virt="non-virtual"><scope>graphene::protocol::limit_order_update_operation</scope><name>delta_amount_to_sell</name></member>
      <member refid="structgraphene_1_1protocol_1_1limit__order__update__operation_1a8dae29427531d97111c9b2d2c4f86e18" prot="public" virt="non-virtual"><scope>graphene::protocol::limit_order_update_operation</scope><name>extensions</name></member>
      <member refid="structgraphene_1_1protocol_1_1limit__order__update__operation_1a666422080ab1ec6810d949359c348500" prot="public" virt="non-virtual"><scope>graphene::protocol::limit_order_update_operation</scope><name>fee</name></member>
      <member refid="structgraphene_1_1protocol_1_1limit__order__update__operation_1abeaeef69962c51246305132b82520af9" prot="public" virt="non-virtual"><scope>graphene::protocol::limit_order_update_operation</scope><name>fee_payer</name></member>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1a89ed7c6e7da93cd99bb41bc8d7e2627b" prot="public" virt="virtual"><scope>graphene::protocol::limit_order_update_operation</scope><name>get_required_active_authorities</name></member>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1aabc48ce97877c67ff560b94284a7c0bb" prot="public" virt="virtual"><scope>graphene::protocol::limit_order_update_operation</scope><name>get_required_authorities</name></member>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1a3251978e7bd0bb2f2fa23bcea5dee95c" prot="public" virt="virtual"><scope>graphene::protocol::limit_order_update_operation</scope><name>get_required_owner_authorities</name></member>
      <member refid="structgraphene_1_1protocol_1_1limit__order__update__operation_1a12cd3bd996d3fcc57ff49cf043425d6f" prot="public" virt="non-virtual"><scope>graphene::protocol::limit_order_update_operation</scope><name>new_expiration</name></member>
      <member refid="structgraphene_1_1protocol_1_1limit__order__update__operation_1a437240b2a1c54fbfb44b4b93fe7c5e41" prot="public" virt="non-virtual"><scope>graphene::protocol::limit_order_update_operation</scope><name>new_price</name></member>
      <member refid="structgraphene_1_1protocol_1_1limit__order__update__operation_1a4461a7005c9e3ec7240ab9169816664f" prot="public" virt="non-virtual"><scope>graphene::protocol::limit_order_update_operation</scope><name>on_fill</name></member>
      <member refid="structgraphene_1_1protocol_1_1limit__order__update__operation_1a4f10a315f39c53e077674c08c121b975" prot="public" virt="non-virtual"><scope>graphene::protocol::limit_order_update_operation</scope><name>order</name></member>
      <member refid="structgraphene_1_1protocol_1_1limit__order__update__operation_1a6ec9808d8bcdfd3396bcdb518d5e9b1b" prot="public" virt="non-virtual"><scope>graphene::protocol::limit_order_update_operation</scope><name>seller</name></member>
      <member refid="structgraphene_1_1protocol_1_1limit__order__update__operation_1afbc046c467235aabe69af1d7403b378a" prot="public" virt="virtual"><scope>graphene::protocol::limit_order_update_operation</scope><name>validate</name></member>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1a485f3d3b963ff4c081af85945cf27774" prot="public" virt="non-virtual"><scope>graphene::protocol::limit_order_update_operation</scope><name>validate_parallel</name></member>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1a04ac6688e2df1d511514e4fc1983b828" prot="public" virt="virtual"><scope>graphene::protocol::limit_order_update_operation</scope><name>~base_operation</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
