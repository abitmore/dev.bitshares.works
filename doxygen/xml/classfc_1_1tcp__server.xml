<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classfc_1_1tcp__server" kind="class" language="C++" prot="public">
    <compoundname>fc::tcp_server</compoundname>
    <includes refid="tcp__socket_8hpp" local="no">tcp_socket.hpp</includes>
    <innerclass refid="classfc_1_1tcp__server_1_1impl" prot="public">fc::tcp_server::impl</innerclass>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classfc_1_1tcp__server_1a815f8c205e4d6ae7a4d5313e12e95704" prot="private" static="no" mutable="no">
        <type><ref refid="classfc_1_1tcp__server_1_1impl" kindref="compound">impl</ref> *</type>
        <definition>impl* fc::tcp_server::my</definition>
        <argsstring></argsstring>
        <name>my</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/network/tcp_socket.hpp" line="89" column="1" bodyfile="libraries/fc/include/fc/network/tcp_socket.hpp" bodystart="88" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classfc_1_1tcp__server_1ad3dbe9fc23dc2f4d76e7ada1881849ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fc::tcp_server::tcp_server</definition>
        <argsstring>()</argsstring>
        <name>tcp_server</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/network/tcp_socket.hpp" line="73" column="1" bodyfile="libraries/fc/src/network/tcp_socket.cpp" bodystart="294" bodyend="296"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1tcp__server_1a1608f9d318ece1236a1494f62a767d54" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fc::tcp_server::~tcp_server</definition>
        <argsstring>()</argsstring>
        <name>~tcp_server</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/network/tcp_socket.hpp" line="74" column="1" bodyfile="libraries/fc/src/network/tcp_socket.cpp" bodystart="297" bodyend="299"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1tcp__server_1a9c1a25eb10687367381ebfb05d649df2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void fc::tcp_server::close</definition>
        <argsstring>()</argsstring>
        <name>close</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/network/tcp_socket.hpp" line="76" column="1" bodyfile="libraries/fc/src/network/tcp_socket.cpp" bodystart="288" bodyend="293"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1tcp__server_1ad3899f0eadb4d9b8aa239cffa604ad84" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void fc::tcp_server::accept</definition>
        <argsstring>(tcp_socket &amp;s)</argsstring>
        <name>accept</name>
        <param>
          <type><ref refid="classfc_1_1tcp__socket" kindref="compound">tcp_socket</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/network/tcp_socket.hpp" line="77" column="1" bodyfile="libraries/fc/src/network/tcp_socket.cpp" bodystart="302" bodyend="309"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1tcp__server_1acf68f118e7438afb598cac355937884d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void fc::tcp_server::set_reuse_address</definition>
        <argsstring>(bool enable=true)</argsstring>
        <name>set_reuse_address</name>
        <param>
          <type>bool</type>
          <declname>enable</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/network/tcp_socket.hpp" line="78" column="1" bodyfile="libraries/fc/src/network/tcp_socket.cpp" bodystart="310" bodyend="332"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1tcp__server_1a7e19a27f10d4fdb5d444fe63ad86744c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void fc::tcp_server::listen</definition>
        <argsstring>(uint16_t port)</argsstring>
        <name>listen</name>
        <param>
          <type>uint16_t</type>
          <declname>port</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/network/tcp_socket.hpp" line="79" column="1" bodyfile="libraries/fc/src/network/tcp_socket.cpp" bodystart="333" bodyend="343"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1tcp__server_1a04b10d7127960e8a0188f290a2aa7125" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void fc::tcp_server::listen</definition>
        <argsstring>(const fc::ip::endpoint &amp;ep)</argsstring>
        <name>listen</name>
        <param>
          <type>const <ref refid="classfc_1_1ip_1_1endpoint" kindref="compound">fc::ip::endpoint</ref> &amp;</type>
          <declname>ep</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/network/tcp_socket.hpp" line="80" column="1" bodyfile="libraries/fc/src/network/tcp_socket.cpp" bodystart="344" bodyend="354"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1tcp__server_1a226a15eea9bb72142522b082bb22a5a0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classfc_1_1ip_1_1endpoint" kindref="compound">fc::ip::endpoint</ref></type>
        <definition>fc::ip::endpoint fc::tcp_server::get_local_endpoint</definition>
        <argsstring>() const</argsstring>
        <name>get_local_endpoint</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/network/tcp_socket.hpp" line="81" column="1" bodyfile="libraries/fc/src/network/tcp_socket.cpp" bodystart="356" bodyend="361"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1tcp__server_1a04ecb43341c77233eea9677aab8a861d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>uint16_t</type>
        <definition>uint16_t fc::tcp_server::get_port</definition>
        <argsstring>() const</argsstring>
        <name>get_port</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/network/tcp_socket.hpp" line="82" column="1" bodyfile="libraries/fc/src/network/tcp_socket.cpp" bodystart="363" bodyend="367"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classfc_1_1tcp__server_1adeafdb659714cf8cbc047f9753dcdb28" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fc::tcp_server::tcp_server</definition>
        <argsstring>(const tcp_server &amp;)</argsstring>
        <name>tcp_server</name>
        <param>
          <type>const <ref refid="classfc_1_1tcp__server" kindref="compound">tcp_server</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/network/tcp_socket.hpp" line="85" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1tcp__server_1a3c417fdfb9efe84e5e15aa08a7162ead" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classfc_1_1tcp__server" kindref="compound">tcp_server</ref> &amp;</type>
        <definition>tcp_server&amp; fc::tcp_server::operator=</definition>
        <argsstring>(const tcp_server &amp;s)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classfc_1_1tcp__server" kindref="compound">tcp_server</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/network/tcp_socket.hpp" line="86" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="libraries/fc/include/fc/network/tcp_socket.hpp" line="71" column="1" bodyfile="libraries/fc/include/fc/network/tcp_socket.hpp" bodystart="70" bodyend="90"/>
    <listofallmembers>
      <member refid="classfc_1_1tcp__server_1ad3899f0eadb4d9b8aa239cffa604ad84" prot="public" virt="non-virtual"><scope>fc::tcp_server</scope><name>accept</name></member>
      <member refid="classfc_1_1tcp__server_1a9c1a25eb10687367381ebfb05d649df2" prot="public" virt="non-virtual"><scope>fc::tcp_server</scope><name>close</name></member>
      <member refid="classfc_1_1tcp__server_1a226a15eea9bb72142522b082bb22a5a0" prot="public" virt="non-virtual"><scope>fc::tcp_server</scope><name>get_local_endpoint</name></member>
      <member refid="classfc_1_1tcp__server_1a04ecb43341c77233eea9677aab8a861d" prot="public" virt="non-virtual"><scope>fc::tcp_server</scope><name>get_port</name></member>
      <member refid="classfc_1_1tcp__server_1a7e19a27f10d4fdb5d444fe63ad86744c" prot="public" virt="non-virtual"><scope>fc::tcp_server</scope><name>listen</name></member>
      <member refid="classfc_1_1tcp__server_1a04b10d7127960e8a0188f290a2aa7125" prot="public" virt="non-virtual"><scope>fc::tcp_server</scope><name>listen</name></member>
      <member refid="classfc_1_1tcp__server_1a815f8c205e4d6ae7a4d5313e12e95704" prot="private" virt="non-virtual"><scope>fc::tcp_server</scope><name>my</name></member>
      <member refid="classfc_1_1tcp__server_1a3c417fdfb9efe84e5e15aa08a7162ead" prot="private" virt="non-virtual"><scope>fc::tcp_server</scope><name>operator=</name></member>
      <member refid="classfc_1_1tcp__server_1acf68f118e7438afb598cac355937884d" prot="public" virt="non-virtual"><scope>fc::tcp_server</scope><name>set_reuse_address</name></member>
      <member refid="classfc_1_1tcp__server_1ad3dbe9fc23dc2f4d76e7ada1881849ab" prot="public" virt="non-virtual"><scope>fc::tcp_server</scope><name>tcp_server</name></member>
      <member refid="classfc_1_1tcp__server_1adeafdb659714cf8cbc047f9753dcdb28" prot="private" virt="non-virtual"><scope>fc::tcp_server</scope><name>tcp_server</name></member>
      <member refid="classfc_1_1tcp__server_1a1608f9d318ece1236a1494f62a767d54" prot="public" virt="non-virtual"><scope>fc::tcp_server</scope><name>~tcp_server</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
