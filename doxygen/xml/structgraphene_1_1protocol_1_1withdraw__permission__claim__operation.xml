<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structgraphene_1_1protocol_1_1withdraw__permission__claim__operation" kind="struct" language="C++" prot="public">
    <compoundname>graphene::protocol::withdraw_permission_claim_operation</compoundname>
    <basecompoundref refid="structgraphene_1_1protocol_1_1base__operation" prot="public" virt="non-virtual">graphene::protocol::base_operation</basecompoundref>
    <includes refid="withdraw__permission_8hpp" local="no">withdraw_permission.hpp</includes>
    <innerclass refid="structgraphene_1_1protocol_1_1withdraw__permission__claim__operation_1_1fee__parameters__type" prot="public">graphene::protocol::withdraw_permission_claim_operation::fee_parameters_type</innerclass>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1withdraw__permission__claim__operation_1a4782d6b3e6f4151c4dc0d1903d972abd" prot="public" static="no" mutable="no">
        <type><ref refid="structgraphene_1_1protocol_1_1asset" kindref="compound">asset</ref></type>
        <definition>asset graphene::protocol::withdraw_permission_claim_operation::fee</definition>
        <argsstring></argsstring>
        <name>fee</name>
        <briefdescription>
<para>Paid by withdraw_to_account. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/withdraw_permission.hpp" line="128" column="1" bodyfile="libraries/protocol/include/graphene/protocol/withdraw_permission.hpp" bodystart="128" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1withdraw__permission__claim__operation_1abd5f6548855e7c7b4998a06482cb5405" prot="public" static="no" mutable="no">
        <type>withdraw_permission_id_type</type>
        <definition>withdraw_permission_id_type graphene::protocol::withdraw_permission_claim_operation::withdraw_permission</definition>
        <argsstring></argsstring>
        <name>withdraw_permission</name>
        <briefdescription>
<para>ID of the permission authorizing this withdrawal. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/withdraw_permission.hpp" line="130" column="1" bodyfile="libraries/protocol/include/graphene/protocol/withdraw_permission.hpp" bodystart="130" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1withdraw__permission__claim__operation_1a2507d2593b57b35ee338770161143941" prot="public" static="no" mutable="no">
        <type>account_id_type</type>
        <definition>account_id_type graphene::protocol::withdraw_permission_claim_operation::withdraw_from_account</definition>
        <argsstring></argsstring>
        <name>withdraw_from_account</name>
        <briefdescription>
<para>Must match withdraw_permission-&gt;withdraw_from_account. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/withdraw_permission.hpp" line="132" column="1" bodyfile="libraries/protocol/include/graphene/protocol/withdraw_permission.hpp" bodystart="132" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1withdraw__permission__claim__operation_1a552b286d1a18331da7a852c0f5a34b3c" prot="public" static="no" mutable="no">
        <type>account_id_type</type>
        <definition>account_id_type graphene::protocol::withdraw_permission_claim_operation::withdraw_to_account</definition>
        <argsstring></argsstring>
        <name>withdraw_to_account</name>
        <briefdescription>
<para>Must match withdraw_permision-&gt;authorized_account. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/withdraw_permission.hpp" line="134" column="1" bodyfile="libraries/protocol/include/graphene/protocol/withdraw_permission.hpp" bodystart="134" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1withdraw__permission__claim__operation_1a4adf30fb0cc003e1bf88ef788f3dfa9f" prot="public" static="no" mutable="no">
        <type><ref refid="structgraphene_1_1protocol_1_1asset" kindref="compound">asset</ref></type>
        <definition>asset graphene::protocol::withdraw_permission_claim_operation::amount_to_withdraw</definition>
        <argsstring></argsstring>
        <name>amount_to_withdraw</name>
        <briefdescription>
<para>Amount to withdraw. Must not exceed withdraw_permission-&gt;withdrawal_limit. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/withdraw_permission.hpp" line="136" column="1" bodyfile="libraries/protocol/include/graphene/protocol/withdraw_permission.hpp" bodystart="136" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1withdraw__permission__claim__operation_1a35465da9b6d9f53164418118b69e4f66" prot="public" static="no" mutable="no">
        <type><ref refid="classfc_1_1optional" kindref="compound">optional</ref>&lt; <ref refid="structgraphene_1_1protocol_1_1memo__data" kindref="compound">memo_data</ref> &gt;</type>
        <definition>optional&lt;memo_data&gt; graphene::protocol::withdraw_permission_claim_operation::memo</definition>
        <argsstring></argsstring>
        <name>memo</name>
        <briefdescription>
<para>Memo for withdraw_from_account. Should generally be encrypted with withdraw_from_account-&gt;memo_key. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/withdraw_permission.hpp" line="138" column="1" bodyfile="libraries/protocol/include/graphene/protocol/withdraw_permission.hpp" bodystart="138" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structgraphene_1_1protocol_1_1withdraw__permission__claim__operation_1aa41e76a8aef918ad70b8aebaf368ab9f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>account_id_type</type>
        <definition>account_id_type graphene::protocol::withdraw_permission_claim_operation::fee_payer</definition>
        <argsstring>() const</argsstring>
        <name>fee_payer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/withdraw_permission.hpp" line="140" column="1" bodyfile="libraries/protocol/include/graphene/protocol/withdraw_permission.hpp" bodystart="140" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1protocol_1_1withdraw__permission__claim__operation_1a9928c8da36ee30e13a79da5d340d3982" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void graphene::protocol::withdraw_permission_claim_operation::validate</definition>
        <argsstring>() const</argsstring>
        <name>validate</name>
        <reimplements refid="structgraphene_1_1protocol_1_1base__operation_1a23d617a6fa0921d3f5b51dd5167e7a29">validate</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/withdraw_permission.hpp" line="141" column="1" bodyfile="libraries/protocol/withdraw_permission.cpp" bodystart="39" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1protocol_1_1withdraw__permission__claim__operation_1a11228903113fdca1364fe0c110cf6206" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacegraphene_1_1protocol_1a69b2104c1c11eed2d17bd29b86713347" kindref="member">share_type</ref></type>
        <definition>share_type graphene::protocol::withdraw_permission_claim_operation::calculate_fee</definition>
        <argsstring>(const fee_parameters_type &amp;k) const</argsstring>
        <name>calculate_fee</name>
        <param>
          <type>const <ref refid="structgraphene_1_1protocol_1_1withdraw__permission__claim__operation_1_1fee__parameters__type" kindref="compound">fee_parameters_type</ref> &amp;</type>
          <declname>k</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/withdraw_permission.hpp" line="142" column="1" bodyfile="libraries/protocol/withdraw_permission.cpp" bodystart="46" bodyend="52"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Withdraw from an account which has published a withdrawal permission</para><para>This operation is used to withdraw from an account which has authorized such a withdrawal. It may be executed at most once per withdrawal period for the given permission. On execution, amount_to_withdraw is transferred from withdraw_from_account to withdraw_to_account, assuming amount_to_withdraw is within the withdrawal limit. The withdrawal permission will be updated to note that the withdrawal for the current period has occurred, and further withdrawals will not be permitted until the next withdrawal period, assuming the permission has not expired. This operation may be executed at any time within the current withdrawal period. </para>    </briefdescription>
    <detaileddescription>
<para>Fee is paid by withdraw_to_account, which is required to authorize this operation </para>    </detaileddescription>
    <inheritancegraph>
      <node id="8452">
        <label>graphene::protocol::base_operation</label>
        <link refid="structgraphene_1_1protocol_1_1base__operation"/>
      </node>
      <node id="8451">
        <label>graphene::protocol::withdraw_permission_claim_operation</label>
        <link refid="structgraphene_1_1protocol_1_1withdraw__permission__claim__operation"/>
        <childnode refid="8452" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="8457">
        <label>account_id_type</label>
      </node>
      <node id="8458">
        <label>fc::optional&lt; graphene::protocol::memo_data &gt;</label>
        <link refid="classfc_1_1optional"/>
      </node>
      <node id="8456">
        <label>fc::safe&lt; int64_t &gt;</label>
        <link refid="structfc_1_1safe"/>
      </node>
      <node id="8454">
        <label>graphene::protocol::base_operation</label>
        <link refid="structgraphene_1_1protocol_1_1base__operation"/>
      </node>
      <node id="8455">
        <label>graphene::protocol::asset</label>
        <link refid="structgraphene_1_1protocol_1_1asset"/>
        <childnode refid="8456" relation="usage">
          <edgelabel>amount</edgelabel>
        </childnode>
      </node>
      <node id="8453">
        <label>graphene::protocol::withdraw_permission_claim_operation</label>
        <link refid="structgraphene_1_1protocol_1_1withdraw__permission__claim__operation"/>
        <childnode refid="8454" relation="public-inheritance">
        </childnode>
        <childnode refid="8455" relation="usage">
          <edgelabel>fee</edgelabel>
          <edgelabel>amount_to_withdraw</edgelabel>
        </childnode>
        <childnode refid="8457" relation="usage">
          <edgelabel>withdraw_to_account</edgelabel>
          <edgelabel>withdraw_from_account</edgelabel>
        </childnode>
        <childnode refid="8458" relation="usage">
          <edgelabel>memo</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="libraries/protocol/include/graphene/protocol/withdraw_permission.hpp" line="121" column="1" bodyfile="libraries/protocol/include/graphene/protocol/withdraw_permission.hpp" bodystart="120" bodyend="143"/>
    <listofallmembers>
      <member refid="structgraphene_1_1protocol_1_1withdraw__permission__claim__operation_1a4adf30fb0cc003e1bf88ef788f3dfa9f" prot="public" virt="non-virtual"><scope>graphene::protocol::withdraw_permission_claim_operation</scope><name>amount_to_withdraw</name></member>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1aaccb0fa71ee529cf62324baaa99988fe" prot="public" virt="non-virtual"><scope>graphene::protocol::withdraw_permission_claim_operation</scope><name>calculate_data_fee</name></member>
      <member refid="structgraphene_1_1protocol_1_1withdraw__permission__claim__operation_1a11228903113fdca1364fe0c110cf6206" prot="public" virt="non-virtual"><scope>graphene::protocol::withdraw_permission_claim_operation</scope><name>calculate_fee</name></member>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1a0be44badcee9a648413eb906dac1d3b3" prot="public" virt="non-virtual" ambiguityscope="graphene::protocol::base_operation::"><scope>graphene::protocol::withdraw_permission_claim_operation</scope><name>calculate_fee</name></member>
      <member refid="structgraphene_1_1protocol_1_1withdraw__permission__claim__operation_1a4782d6b3e6f4151c4dc0d1903d972abd" prot="public" virt="non-virtual"><scope>graphene::protocol::withdraw_permission_claim_operation</scope><name>fee</name></member>
      <member refid="structgraphene_1_1protocol_1_1withdraw__permission__claim__operation_1aa41e76a8aef918ad70b8aebaf368ab9f" prot="public" virt="non-virtual"><scope>graphene::protocol::withdraw_permission_claim_operation</scope><name>fee_payer</name></member>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1a89ed7c6e7da93cd99bb41bc8d7e2627b" prot="public" virt="virtual"><scope>graphene::protocol::withdraw_permission_claim_operation</scope><name>get_required_active_authorities</name></member>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1aabc48ce97877c67ff560b94284a7c0bb" prot="public" virt="virtual"><scope>graphene::protocol::withdraw_permission_claim_operation</scope><name>get_required_authorities</name></member>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1a3251978e7bd0bb2f2fa23bcea5dee95c" prot="public" virt="virtual"><scope>graphene::protocol::withdraw_permission_claim_operation</scope><name>get_required_owner_authorities</name></member>
      <member refid="structgraphene_1_1protocol_1_1withdraw__permission__claim__operation_1a35465da9b6d9f53164418118b69e4f66" prot="public" virt="non-virtual"><scope>graphene::protocol::withdraw_permission_claim_operation</scope><name>memo</name></member>
      <member refid="structgraphene_1_1protocol_1_1withdraw__permission__claim__operation_1a9928c8da36ee30e13a79da5d340d3982" prot="public" virt="virtual"><scope>graphene::protocol::withdraw_permission_claim_operation</scope><name>validate</name></member>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1a485f3d3b963ff4c081af85945cf27774" prot="public" virt="non-virtual"><scope>graphene::protocol::withdraw_permission_claim_operation</scope><name>validate_parallel</name></member>
      <member refid="structgraphene_1_1protocol_1_1withdraw__permission__claim__operation_1a2507d2593b57b35ee338770161143941" prot="public" virt="non-virtual"><scope>graphene::protocol::withdraw_permission_claim_operation</scope><name>withdraw_from_account</name></member>
      <member refid="structgraphene_1_1protocol_1_1withdraw__permission__claim__operation_1abd5f6548855e7c7b4998a06482cb5405" prot="public" virt="non-virtual"><scope>graphene::protocol::withdraw_permission_claim_operation</scope><name>withdraw_permission</name></member>
      <member refid="structgraphene_1_1protocol_1_1withdraw__permission__claim__operation_1a552b286d1a18331da7a852c0f5a34b3c" prot="public" virt="non-virtual"><scope>graphene::protocol::withdraw_permission_claim_operation</scope><name>withdraw_to_account</name></member>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1a04ac6688e2df1d511514e4fc1983b828" prot="public" virt="virtual"><scope>graphene::protocol::withdraw_permission_claim_operation</scope><name>~base_operation</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
