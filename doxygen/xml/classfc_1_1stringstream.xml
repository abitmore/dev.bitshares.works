<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classfc_1_1stringstream" kind="class" language="C++" prot="public">
    <compoundname>fc::stringstream</compoundname>
    <basecompoundref refid="classfc_1_1iostream" prot="public" virt="virtual">fc::iostream</basecompoundref>
    <includes refid="sstream_8hpp" local="no">sstream.hpp</includes>
    <innerclass refid="classfc_1_1stringstream_1_1impl" prot="public">fc::stringstream::impl</innerclass>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classfc_1_1stringstream_1afd0f581cb1cb4bb5c75be51911970ad0" prot="private" static="no" mutable="no">
        <type><ref refid="classfc_1_1fwd" kindref="compound">fwd</ref>&lt; <ref refid="classfc_1_1stringstream_1_1impl" kindref="compound">impl</ref>, 392 &gt;</type>
        <definition>fwd&lt;impl, 392&gt; fc::stringstream::my</definition>
        <argsstring></argsstring>
        <name>my</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/sstream.hpp" line="30" column="11" bodyfile="libraries/fc/include/fc/io/sstream.hpp" bodystart="29" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classfc_1_1stringstream_1a755ea31b673e173462ff6e4c631fc937" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fc::stringstream::stringstream</definition>
        <argsstring>()</argsstring>
        <name>stringstream</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/sstream.hpp" line="9" column="7" bodyfile="libraries/fc/src/io/sstream.cpp" bodystart="29" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1stringstream_1ac344726bf44c9c428cbe4421fc2269da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fc::stringstream::stringstream</definition>
        <argsstring>(std::string &amp;s)</argsstring>
        <name>stringstream</name>
        <param>
          <type>std::string &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/sstream.hpp" line="10" column="7" bodyfile="libraries/fc/src/io/sstream.cpp" bodystart="23" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1stringstream_1aa7a10578e9c1163bc45f96656a3fbdca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fc::stringstream::stringstream</definition>
        <argsstring>(const std::string &amp;s)</argsstring>
        <name>stringstream</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/sstream.hpp" line="11" column="7" bodyfile="libraries/fc/src/io/sstream.cpp" bodystart="26" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1stringstream_1ad9034aae067620fd02ed72bcc9ce9e50" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fc::stringstream::~stringstream</definition>
        <argsstring>()</argsstring>
        <name>~stringstream</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/sstream.hpp" line="12" column="7" bodyfile="libraries/fc/src/io/sstream.cpp" bodystart="30" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1stringstream_1ab3601da13d098c3d18ffffb6983d85b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string fc::stringstream::str</definition>
        <argsstring>()</argsstring>
        <name>str</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/sstream.hpp" line="14" column="19" bodyfile="libraries/fc/src/io/sstream.cpp" bodystart="33" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1stringstream_1a35ab64cff1c783bf3a886cc8d5f059aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void fc::stringstream::str</definition>
        <argsstring>(const std::string &amp;s)</argsstring>
        <name>str</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/sstream.hpp" line="15" column="12" bodyfile="libraries/fc/src/io/sstream.cpp" bodystart="37" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1stringstream_1a8723d4b7fe5111e7903224a713986860" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void fc::stringstream::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/sstream.hpp" line="17" column="12" bodyfile="libraries/fc/src/io/sstream.cpp" bodystart="41" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1stringstream_1af160b860b70e5e568002871b888b6a78" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool fc::stringstream::eof</definition>
        <argsstring>() const</argsstring>
        <name>eof</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/sstream.hpp" line="19" column="24" bodyfile="libraries/fc/src/io/sstream.cpp" bodystart="46" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1stringstream_1a9478eb8883b9ef322310cb86313c9f7b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>size_t</type>
        <definition>size_t fc::stringstream::writesome</definition>
        <argsstring>(const char *buf, size_t len)</argsstring>
        <name>writesome</name>
        <reimplements refid="classfc_1_1ostream_1aac50b472ffc544ec0b171c5df21f4505">writesome</reimplements>
        <param>
          <type>const char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/sstream.hpp" line="20" column="24" bodyfile="libraries/fc/src/io/sstream.cpp" bodystart="49" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1stringstream_1ad41eee13b43e4579d7a77e2de61d70db" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>size_t</type>
        <definition>size_t fc::stringstream::writesome</definition>
        <argsstring>(const std::shared_ptr&lt; const char &gt; &amp;buf, size_t len, size_t offset)</argsstring>
        <name>writesome</name>
        <reimplements refid="classfc_1_1ostream_1acb234eb77ec18eef2c2aeef8f645a862">writesome</reimplements>
        <param>
          <type>const std::shared_ptr&lt; const char &gt; &amp;</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/sstream.hpp" line="21" column="24" bodyfile="libraries/fc/src/io/sstream.cpp" bodystart="57" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1stringstream_1a246d53362cf8c29f22b5d57ec034e3d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>size_t</type>
        <definition>size_t fc::stringstream::readsome</definition>
        <argsstring>(char *buf, size_t len)</argsstring>
        <name>readsome</name>
        <reimplements refid="classfc_1_1istream_1a2d8500cfafdd8ee8134a6dbe30ffbc57">readsome</reimplements>
        <param>
          <type>char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>read at least 1 byte or throw, if no data is available this method should block cooperatively until data is available or fc::eof is thrown.</para>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>fc::eof</parametername>
</parameternamelist>
<parameterdescription>
<para>if at least 1 byte cannot be read </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/sstream.hpp" line="22" column="24" bodyfile="libraries/fc/src/io/sstream.cpp" bodystart="62" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1stringstream_1a1408f915bf6105391d1616a9a8c22418" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>size_t</type>
        <definition>size_t fc::stringstream::readsome</definition>
        <argsstring>(const std::shared_ptr&lt; char &gt; &amp;buf, size_t len, size_t offset)</argsstring>
        <name>readsome</name>
        <reimplements refid="classfc_1_1istream_1a1480e604a53bd3f92f44c217a472fed0">readsome</reimplements>
        <param>
          <type>const std::shared_ptr&lt; char &gt; &amp;</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/sstream.hpp" line="23" column="24" bodyfile="libraries/fc/src/io/sstream.cpp" bodystart="70" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1stringstream_1af3cc03210ddbd01a8da08f1d92dbe6a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void fc::stringstream::close</definition>
        <argsstring>()</argsstring>
        <name>close</name>
        <reimplements refid="classfc_1_1ostream_1ab0055550951d519b5cf95c2f4d07379c">close</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/sstream.hpp" line="24" column="24" bodyfile="libraries/fc/src/io/sstream.cpp" bodystart="76" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1stringstream_1a6b8a0e0e56209c3a8ef33f5e6bcf4e1a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void fc::stringstream::flush</definition>
        <argsstring>()</argsstring>
        <name>flush</name>
        <reimplements refid="classfc_1_1ostream_1af0a9d82410120b00b036462594f05549">flush</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/sstream.hpp" line="25" column="24" bodyfile="libraries/fc/src/io/sstream.cpp" bodystart="77" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1stringstream_1a43abee4c7107df3f654a2a5bd9d42235" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char</type>
        <definition>char fc::stringstream::peek</definition>
        <argsstring>()</argsstring>
        <name>peek</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/sstream.hpp" line="26" column="24" bodyfile="libraries/fc/src/io/sstream.cpp" bodystart="79" bodyend="87"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>fc::stringstream</label>
        <link refid="classfc_1_1stringstream"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>fc::istream</label>
        <link refid="classfc_1_1istream"/>
      </node>
      <node id="2">
        <label>fc::iostream</label>
        <link refid="classfc_1_1iostream"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>fc::ostream</label>
        <link refid="classfc_1_1ostream"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>fc::stringstream</label>
        <link refid="classfc_1_1stringstream"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>fc::istream</label>
        <link refid="classfc_1_1istream"/>
      </node>
      <node id="2">
        <label>fc::iostream</label>
        <link refid="classfc_1_1iostream"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>fc::ostream</label>
        <link refid="classfc_1_1ostream"/>
      </node>
    </collaborationgraph>
    <location file="libraries/fc/include/fc/io/sstream.hpp" line="7" column="45" bodyfile="libraries/fc/include/fc/io/sstream.hpp" bodystart="7" bodyend="31"/>
    <listofallmembers>
      <member refid="classfc_1_1stringstream_1a8723d4b7fe5111e7903224a713986860" prot="public" virt="non-virtual"><scope>fc::stringstream</scope><name>clear</name></member>
      <member refid="classfc_1_1stringstream_1af3cc03210ddbd01a8da08f1d92dbe6a1" prot="public" virt="virtual"><scope>fc::stringstream</scope><name>close</name></member>
      <member refid="classfc_1_1stringstream_1af160b860b70e5e568002871b888b6a78" prot="public" virt="virtual"><scope>fc::stringstream</scope><name>eof</name></member>
      <member refid="classfc_1_1stringstream_1a6b8a0e0e56209c3a8ef33f5e6bcf4e1a" prot="public" virt="virtual"><scope>fc::stringstream</scope><name>flush</name></member>
      <member refid="classfc_1_1istream_1ac217a213d8fe2554eaba25b7daf6c9b2" prot="public" virt="virtual"><scope>fc::stringstream</scope><name>get</name></member>
      <member refid="classfc_1_1istream_1af20469d279f38832b5a2e13c95185e95" prot="public" virt="non-virtual"><scope>fc::stringstream</scope><name>get</name></member>
      <member refid="classfc_1_1stringstream_1afd0f581cb1cb4bb5c75be51911970ad0" prot="private" virt="non-virtual"><scope>fc::stringstream</scope><name>my</name></member>
      <member refid="classfc_1_1stringstream_1a43abee4c7107df3f654a2a5bd9d42235" prot="public" virt="non-virtual"><scope>fc::stringstream</scope><name>peek</name></member>
      <member refid="classfc_1_1ostream_1a5eb546403297f3a0124af202d9544fc4" prot="public" virt="non-virtual"><scope>fc::stringstream</scope><name>put</name></member>
      <member refid="classfc_1_1istream_1ad7f71af193e4aa4c2efaab0ca22b1b86" prot="public" virt="non-virtual"><scope>fc::stringstream</scope><name>read</name></member>
      <member refid="classfc_1_1istream_1a94e767f126e952db54be791ee0cc6d1e" prot="public" virt="non-virtual"><scope>fc::stringstream</scope><name>read</name></member>
      <member refid="classfc_1_1stringstream_1a246d53362cf8c29f22b5d57ec034e3d6" prot="public" virt="virtual"><scope>fc::stringstream</scope><name>readsome</name></member>
      <member refid="classfc_1_1stringstream_1a1408f915bf6105391d1616a9a8c22418" prot="public" virt="virtual"><scope>fc::stringstream</scope><name>readsome</name></member>
      <member refid="classfc_1_1stringstream_1ab3601da13d098c3d18ffffb6983d85b6" prot="public" virt="non-virtual"><scope>fc::stringstream</scope><name>str</name></member>
      <member refid="classfc_1_1stringstream_1a35ab64cff1c783bf3a886cc8d5f059aa" prot="public" virt="non-virtual"><scope>fc::stringstream</scope><name>str</name></member>
      <member refid="classfc_1_1stringstream_1a755ea31b673e173462ff6e4c631fc937" prot="public" virt="non-virtual"><scope>fc::stringstream</scope><name>stringstream</name></member>
      <member refid="classfc_1_1stringstream_1ac344726bf44c9c428cbe4421fc2269da" prot="public" virt="non-virtual"><scope>fc::stringstream</scope><name>stringstream</name></member>
      <member refid="classfc_1_1stringstream_1aa7a10578e9c1163bc45f96656a3fbdca" prot="public" virt="non-virtual"><scope>fc::stringstream</scope><name>stringstream</name></member>
      <member refid="classfc_1_1ostream_1a8abbd25d7d136527d1bb36c1ca24427e" prot="public" virt="non-virtual"><scope>fc::stringstream</scope><name>write</name></member>
      <member refid="classfc_1_1ostream_1afa09d563e34c1e16aee4709d4a47483a" prot="public" virt="non-virtual"><scope>fc::stringstream</scope><name>write</name></member>
      <member refid="classfc_1_1stringstream_1a9478eb8883b9ef322310cb86313c9f7b" prot="public" virt="virtual"><scope>fc::stringstream</scope><name>writesome</name></member>
      <member refid="classfc_1_1stringstream_1ad41eee13b43e4579d7a77e2de61d70db" prot="public" virt="virtual"><scope>fc::stringstream</scope><name>writesome</name></member>
      <member refid="classfc_1_1istream_1a3d6f017f2fbcead4c7213618b5a21d36" prot="public" virt="virtual"><scope>fc::stringstream</scope><name>~istream</name></member>
      <member refid="classfc_1_1ostream_1aa2ed925328be7251755abfb9ca5f01d2" prot="public" virt="virtual"><scope>fc::stringstream</scope><name>~ostream</name></member>
      <member refid="classfc_1_1stringstream_1ad9034aae067620fd02ed72bcc9ce9e50" prot="public" virt="non-virtual"><scope>fc::stringstream</scope><name>~stringstream</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
