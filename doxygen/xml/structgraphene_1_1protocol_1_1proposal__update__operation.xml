<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="structgraphene_1_1protocol_1_1proposal__update__operation" kind="struct" language="C++" prot="public">
    <compoundname>graphene::protocol::proposal_update_operation</compoundname>
    <basecompoundref refid="structgraphene_1_1protocol_1_1base__operation" prot="public" virt="non-virtual">graphene::protocol::base_operation</basecompoundref>
    <includes refid="proposal_8hpp" local="no">proposal.hpp</includes>
    <innerclass refid="structgraphene_1_1protocol_1_1proposal__update__operation_1_1fee__parameters__type" prot="public">graphene::protocol::proposal_update_operation::fee_parameters_type</innerclass>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1proposal__update__operation_1a539fbd9b131d17dd9cc12480c3108846" prot="public" static="no" mutable="no">
        <type>account_id_type</type>
        <definition>account_id_type graphene::protocol::proposal_update_operation::fee_paying_account</definition>
        <argsstring></argsstring>
        <name>fee_paying_account</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/proposal.hpp" line="126" column="1" bodyfile="libraries/protocol/include/graphene/protocol/proposal.hpp" bodystart="126" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1proposal__update__operation_1a29c8d520cc83b8fec0f65831f06176ca" prot="public" static="no" mutable="no">
        <type><ref refid="structgraphene_1_1protocol_1_1asset" kindref="compound">asset</ref></type>
        <definition>asset graphene::protocol::proposal_update_operation::fee</definition>
        <argsstring></argsstring>
        <name>fee</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/proposal.hpp" line="127" column="1" bodyfile="libraries/protocol/include/graphene/protocol/proposal.hpp" bodystart="127" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1proposal__update__operation_1a898fe75d1bdbac5402b3b2629a9828a8" prot="public" static="no" mutable="no">
        <type>proposal_id_type</type>
        <definition>proposal_id_type graphene::protocol::proposal_update_operation::proposal</definition>
        <argsstring></argsstring>
        <name>proposal</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/proposal.hpp" line="128" column="1" bodyfile="libraries/protocol/include/graphene/protocol/proposal.hpp" bodystart="128" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1proposal__update__operation_1a167de15b722b5ac6db562d71493e8ed4" prot="public" static="no" mutable="no">
        <type>flat_set&lt; account_id_type &gt;</type>
        <definition>flat_set&lt;account_id_type&gt; graphene::protocol::proposal_update_operation::active_approvals_to_add</definition>
        <argsstring></argsstring>
        <name>active_approvals_to_add</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/proposal.hpp" line="129" column="1" bodyfile="libraries/protocol/include/graphene/protocol/proposal.hpp" bodystart="129" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1proposal__update__operation_1ae4fc08a41b13398be27528ca68112d1a" prot="public" static="no" mutable="no">
        <type>flat_set&lt; account_id_type &gt;</type>
        <definition>flat_set&lt;account_id_type&gt; graphene::protocol::proposal_update_operation::active_approvals_to_remove</definition>
        <argsstring></argsstring>
        <name>active_approvals_to_remove</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/proposal.hpp" line="130" column="1" bodyfile="libraries/protocol/include/graphene/protocol/proposal.hpp" bodystart="130" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1proposal__update__operation_1af00cff0c028171853af31f4059376046" prot="public" static="no" mutable="no">
        <type>flat_set&lt; account_id_type &gt;</type>
        <definition>flat_set&lt;account_id_type&gt; graphene::protocol::proposal_update_operation::owner_approvals_to_add</definition>
        <argsstring></argsstring>
        <name>owner_approvals_to_add</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/proposal.hpp" line="131" column="1" bodyfile="libraries/protocol/include/graphene/protocol/proposal.hpp" bodystart="131" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1proposal__update__operation_1a72be3fd16b7a824d4082288047a6ab4e" prot="public" static="no" mutable="no">
        <type>flat_set&lt; account_id_type &gt;</type>
        <definition>flat_set&lt;account_id_type&gt; graphene::protocol::proposal_update_operation::owner_approvals_to_remove</definition>
        <argsstring></argsstring>
        <name>owner_approvals_to_remove</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/proposal.hpp" line="132" column="1" bodyfile="libraries/protocol/include/graphene/protocol/proposal.hpp" bodystart="132" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1proposal__update__operation_1a4d4b5f32bc6ce3d3b26e5bf0bebb461b" prot="public" static="no" mutable="no">
        <type>flat_set&lt; <ref refid="structgraphene_1_1protocol_1_1public__key__type" kindref="compound">public_key_type</ref> &gt;</type>
        <definition>flat_set&lt;public_key_type&gt; graphene::protocol::proposal_update_operation::key_approvals_to_add</definition>
        <argsstring></argsstring>
        <name>key_approvals_to_add</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/proposal.hpp" line="133" column="1" bodyfile="libraries/protocol/include/graphene/protocol/proposal.hpp" bodystart="133" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1proposal__update__operation_1a4952726b393ddb007df713a634a60172" prot="public" static="no" mutable="no">
        <type>flat_set&lt; <ref refid="structgraphene_1_1protocol_1_1public__key__type" kindref="compound">public_key_type</ref> &gt;</type>
        <definition>flat_set&lt;public_key_type&gt; graphene::protocol::proposal_update_operation::key_approvals_to_remove</definition>
        <argsstring></argsstring>
        <name>key_approvals_to_remove</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/proposal.hpp" line="134" column="1" bodyfile="libraries/protocol/include/graphene/protocol/proposal.hpp" bodystart="134" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1proposal__update__operation_1a43e443ca20179bd00ede465b90de0cb1" prot="public" static="no" mutable="no">
        <type><ref refid="group__operations_1gabaddcaf5bde76414891b4c29031d9288" kindref="member">extensions_type</ref></type>
        <definition>extensions_type graphene::protocol::proposal_update_operation::extensions</definition>
        <argsstring></argsstring>
        <name>extensions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/proposal.hpp" line="135" column="1" bodyfile="libraries/protocol/include/graphene/protocol/proposal.hpp" bodystart="135" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structgraphene_1_1protocol_1_1proposal__update__operation_1ab63e7b26105f00845c27aec018bf71cb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>account_id_type</type>
        <definition>account_id_type graphene::protocol::proposal_update_operation::fee_payer</definition>
        <argsstring>() const </argsstring>
        <name>fee_payer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/proposal.hpp" line="137" column="1" bodyfile="libraries/protocol/include/graphene/protocol/proposal.hpp" bodystart="137" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1protocol_1_1proposal__update__operation_1a9c9819a3fdf552647404c968601f963c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::protocol::proposal_update_operation::validate</definition>
        <argsstring>() const </argsstring>
        <name>validate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/proposal.hpp" line="138" column="1" bodyfile="libraries/protocol/proposal.cpp" bodystart="51" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1protocol_1_1proposal__update__operation_1ab7307b9e8c4dab794cb95daa0d4c8f1e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacegraphene_1_1protocol_1a69b2104c1c11eed2d17bd29b86713347" kindref="member">share_type</ref></type>
        <definition>share_type graphene::protocol::proposal_update_operation::calculate_fee</definition>
        <argsstring>(const fee_parameters_type &amp;k) const </argsstring>
        <name>calculate_fee</name>
        <param>
          <type>const <ref refid="structgraphene_1_1protocol_1_1proposal__update__operation_1_1fee__parameters__type" kindref="compound">fee_parameters_type</ref> &amp;</type>
          <declname>k</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/proposal.hpp" line="139" column="1" bodyfile="libraries/protocol/proposal.cpp" bodystart="79" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1protocol_1_1proposal__update__operation_1ad70fff5acf61a0424a69e5b6a40aec0f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::protocol::proposal_update_operation::get_required_authorities</definition>
        <argsstring>(vector&lt; authority &gt; &amp;) const </argsstring>
        <name>get_required_authorities</name>
        <param>
          <type>vector&lt; <ref refid="structgraphene_1_1protocol_1_1authority" kindref="compound">authority</ref> &gt; &amp;</type>
          <defname>o</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/proposal.hpp" line="140" column="1" bodyfile="libraries/protocol/proposal.cpp" bodystart="84" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1protocol_1_1proposal__update__operation_1ac14a8153f1bcf5bbc1161f0f532a64a3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::protocol::proposal_update_operation::get_required_active_authorities</definition>
        <argsstring>(flat_set&lt; account_id_type &gt; &amp;) const </argsstring>
        <name>get_required_active_authorities</name>
        <param>
          <type>flat_set&lt; account_id_type &gt; &amp;</type>
          <defname>a</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/proposal.hpp" line="141" column="1" bodyfile="libraries/protocol/proposal.cpp" bodystart="97" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1protocol_1_1proposal__update__operation_1aba79101f619f9b27d7b9097006d2e167" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::protocol::proposal_update_operation::get_required_owner_authorities</definition>
        <argsstring>(flat_set&lt; account_id_type &gt; &amp;) const </argsstring>
        <name>get_required_owner_authorities</name>
        <param>
          <type>flat_set&lt; account_id_type &gt; &amp;</type>
          <defname>a</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/proposal.hpp" line="142" column="1" bodyfile="libraries/protocol/proposal.cpp" bodystart="103" bodyend="107"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The <ref refid="structgraphene_1_1protocol_1_1proposal__update__operation" kindref="compound">proposal_update_operation</ref> updates an existing transaction proposal</para><para>This operation allows accounts to add or revoke approval of a proposed transaction. Signatures sufficient to satisfy the authority of each account in approvals are required on the transaction containing this operation. </para>    </briefdescription>
    <detaileddescription>
<para>If an account with a multi-signature authority is listed in approvals_to_add or approvals_to_remove, either all required signatures to satisfy that account&apos;s authority must be provided in the transaction containing this operation, or a secondary proposal must be created which contains this operation.</para><para>NOTE: If the proposal requires only an account&apos;s active authority, the account must not update adding its owner authority&apos;s approval. This is considered an error. An owner approval may only be added if the proposal requires the owner&apos;s authority.</para><para>If an account&apos;s owner and active authority are both required, only the owner authority may approve. An attempt to add or remove active authority approval to such a proposal will fail. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="5951">
        <label>graphene::protocol::proposal_update_operation</label>
        <link refid="structgraphene_1_1protocol_1_1proposal__update__operation"/>
        <childnode refid="5952" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5952">
        <label>graphene::protocol::base_operation</label>
        <link refid="structgraphene_1_1protocol_1_1base__operation"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="5953">
        <label>graphene::protocol::proposal_update_operation</label>
        <link refid="structgraphene_1_1protocol_1_1proposal__update__operation"/>
        <childnode refid="5954" relation="public-inheritance">
        </childnode>
        <childnode refid="5955" relation="usage">
          <edgelabel>fee</edgelabel>
        </childnode>
        <childnode refid="5957" relation="usage">
          <edgelabel>fee_paying_account</edgelabel>
        </childnode>
        <childnode refid="5958" relation="usage">
          <edgelabel>key_approvals_to_remove</edgelabel>
          <edgelabel>key_approvals_to_add</edgelabel>
        </childnode>
        <childnode refid="5959" relation="usage">
          <edgelabel>owner_approvals_to_remove</edgelabel>
          <edgelabel>owner_approvals_to_add</edgelabel>
          <edgelabel>active_approvals_to_remove</edgelabel>
          <edgelabel>active_approvals_to_add</edgelabel>
        </childnode>
      </node>
      <node id="5957">
        <label>account_id_type</label>
      </node>
      <node id="5959">
        <label>flat_set&lt; account_id_type &gt;</label>
      </node>
      <node id="5956">
        <label>fc::safe&lt; int64_t &gt;</label>
        <link refid="structfc_1_1safe"/>
      </node>
      <node id="5958">
        <label>flat_set&lt; graphene::protocol::public_key_type &gt;</label>
      </node>
      <node id="5954">
        <label>graphene::protocol::base_operation</label>
        <link refid="structgraphene_1_1protocol_1_1base__operation"/>
      </node>
      <node id="5955">
        <label>graphene::protocol::asset</label>
        <link refid="structgraphene_1_1protocol_1_1asset"/>
        <childnode refid="5956" relation="usage">
          <edgelabel>amount</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="libraries/protocol/include/graphene/protocol/proposal.hpp" line="120" column="1" bodyfile="libraries/protocol/include/graphene/protocol/proposal.hpp" bodystart="119" bodyend="143"/>
    <listofallmembers>
      <member refid="structgraphene_1_1protocol_1_1proposal__update__operation_1a167de15b722b5ac6db562d71493e8ed4" prot="public" virt="non-virtual"><scope>graphene::protocol::proposal_update_operation</scope><name>active_approvals_to_add</name></member>
      <member refid="structgraphene_1_1protocol_1_1proposal__update__operation_1ae4fc08a41b13398be27528ca68112d1a" prot="public" virt="non-virtual"><scope>graphene::protocol::proposal_update_operation</scope><name>active_approvals_to_remove</name></member>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1aaccb0fa71ee529cf62324baaa99988fe" prot="public" virt="non-virtual"><scope>graphene::protocol::proposal_update_operation</scope><name>calculate_data_fee</name></member>
      <member refid="structgraphene_1_1protocol_1_1proposal__update__operation_1ab7307b9e8c4dab794cb95daa0d4c8f1e" prot="public" virt="non-virtual"><scope>graphene::protocol::proposal_update_operation</scope><name>calculate_fee</name></member>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1afd01efa3e06367c572512e381b1106fb" prot="public" virt="non-virtual" ambiguityscope="graphene::protocol::base_operation::"><scope>graphene::protocol::proposal_update_operation</scope><name>calculate_fee</name></member>
      <member refid="structgraphene_1_1protocol_1_1proposal__update__operation_1a43e443ca20179bd00ede465b90de0cb1" prot="public" virt="non-virtual"><scope>graphene::protocol::proposal_update_operation</scope><name>extensions</name></member>
      <member refid="structgraphene_1_1protocol_1_1proposal__update__operation_1a29c8d520cc83b8fec0f65831f06176ca" prot="public" virt="non-virtual"><scope>graphene::protocol::proposal_update_operation</scope><name>fee</name></member>
      <member refid="structgraphene_1_1protocol_1_1proposal__update__operation_1ab63e7b26105f00845c27aec018bf71cb" prot="public" virt="non-virtual"><scope>graphene::protocol::proposal_update_operation</scope><name>fee_payer</name></member>
      <member refid="structgraphene_1_1protocol_1_1proposal__update__operation_1a539fbd9b131d17dd9cc12480c3108846" prot="public" virt="non-virtual"><scope>graphene::protocol::proposal_update_operation</scope><name>fee_paying_account</name></member>
      <member refid="structgraphene_1_1protocol_1_1proposal__update__operation_1ac14a8153f1bcf5bbc1161f0f532a64a3" prot="public" virt="non-virtual"><scope>graphene::protocol::proposal_update_operation</scope><name>get_required_active_authorities</name></member>
      <member refid="structgraphene_1_1protocol_1_1proposal__update__operation_1ad70fff5acf61a0424a69e5b6a40aec0f" prot="public" virt="non-virtual"><scope>graphene::protocol::proposal_update_operation</scope><name>get_required_authorities</name></member>
      <member refid="structgraphene_1_1protocol_1_1proposal__update__operation_1aba79101f619f9b27d7b9097006d2e167" prot="public" virt="non-virtual"><scope>graphene::protocol::proposal_update_operation</scope><name>get_required_owner_authorities</name></member>
      <member refid="structgraphene_1_1protocol_1_1proposal__update__operation_1a4d4b5f32bc6ce3d3b26e5bf0bebb461b" prot="public" virt="non-virtual"><scope>graphene::protocol::proposal_update_operation</scope><name>key_approvals_to_add</name></member>
      <member refid="structgraphene_1_1protocol_1_1proposal__update__operation_1a4952726b393ddb007df713a634a60172" prot="public" virt="non-virtual"><scope>graphene::protocol::proposal_update_operation</scope><name>key_approvals_to_remove</name></member>
      <member refid="structgraphene_1_1protocol_1_1proposal__update__operation_1af00cff0c028171853af31f4059376046" prot="public" virt="non-virtual"><scope>graphene::protocol::proposal_update_operation</scope><name>owner_approvals_to_add</name></member>
      <member refid="structgraphene_1_1protocol_1_1proposal__update__operation_1a72be3fd16b7a824d4082288047a6ab4e" prot="public" virt="non-virtual"><scope>graphene::protocol::proposal_update_operation</scope><name>owner_approvals_to_remove</name></member>
      <member refid="structgraphene_1_1protocol_1_1proposal__update__operation_1a898fe75d1bdbac5402b3b2629a9828a8" prot="public" virt="non-virtual"><scope>graphene::protocol::proposal_update_operation</scope><name>proposal</name></member>
      <member refid="structgraphene_1_1protocol_1_1proposal__update__operation_1a9c9819a3fdf552647404c968601f963c" prot="public" virt="non-virtual"><scope>graphene::protocol::proposal_update_operation</scope><name>validate</name></member>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1a41d0a14a070ac634be11f30dbf559935" prot="public" virt="non-virtual"><scope>graphene::protocol::proposal_update_operation</scope><name>validate_parallel</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
