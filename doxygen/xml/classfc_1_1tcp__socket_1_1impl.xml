<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classfc_1_1tcp__socket_1_1impl" kind="class" language="C++" prot="public">
    <compoundname>fc::tcp_socket::impl</compoundname>
    <basecompoundref refid="classfc_1_1tcp__socket__io__hooks" prot="public" virt="non-virtual">fc::tcp_socket_io_hooks</basecompoundref>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classfc_1_1tcp__socket_1_1impl_1ae480e85abcf8662337325d2d69357ead" prot="public" static="no" mutable="no">
        <type><ref refid="classfc_1_1future" kindref="compound">fc::future</ref>&lt; size_t &gt;</type>
        <definition>fc::future&lt;size_t&gt; fc::tcp_socket::impl::_write_in_progress</definition>
        <argsstring></argsstring>
        <name>_write_in_progress</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/src/network/tcp_socket.cpp" line="65" column="1" bodyfile="libraries/fc/src/network/tcp_socket.cpp" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classfc_1_1tcp__socket_1_1impl_1a8200466b8052db79d2bd88f8fa9fec49" prot="public" static="no" mutable="no">
        <type><ref refid="classfc_1_1future" kindref="compound">fc::future</ref>&lt; size_t &gt;</type>
        <definition>fc::future&lt;size_t&gt; fc::tcp_socket::impl::_read_in_progress</definition>
        <argsstring></argsstring>
        <name>_read_in_progress</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/src/network/tcp_socket.cpp" line="66" column="1" bodyfile="libraries/fc/src/network/tcp_socket.cpp" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classfc_1_1tcp__socket_1_1impl_1ac4695f911178daec324a35c6ff0ac265" prot="public" static="no" mutable="no">
        <type>boost::asio::ip::tcp::socket</type>
        <definition>boost::asio::ip::tcp::socket fc::tcp_socket::impl::_sock</definition>
        <argsstring></argsstring>
        <name>_sock</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/src/network/tcp_socket.cpp" line="67" column="1" bodyfile="libraries/fc/src/network/tcp_socket.cpp" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classfc_1_1tcp__socket_1_1impl_1af5804ebfc87107a3e4a596d307a35158" prot="public" static="no" mutable="no">
        <type><ref refid="classfc_1_1tcp__socket__io__hooks" kindref="compound">tcp_socket_io_hooks</ref> *</type>
        <definition>tcp_socket_io_hooks* fc::tcp_socket::impl::_io_hooks</definition>
        <argsstring></argsstring>
        <name>_io_hooks</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/src/network/tcp_socket.cpp" line="68" column="1" bodyfile="libraries/fc/src/network/tcp_socket.cpp" bodystart="68" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classfc_1_1tcp__socket_1_1impl_1a58f9aa3ed7aa2159d17be5dccb47bca4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>fc::tcp_socket::impl::impl</definition>
        <argsstring>()</argsstring>
        <name>impl</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/src/network/tcp_socket.cpp" line="30" column="1" bodyfile="libraries/fc/src/network/tcp_socket.cpp" bodystart="30" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1tcp__socket_1_1impl_1afd552d51b85a29c5b7b4115a45bcc389" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>fc::tcp_socket::impl::~impl</definition>
        <argsstring>()</argsstring>
        <name>~impl</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/src/network/tcp_socket.cpp" line="34" column="1" bodyfile="libraries/fc/src/network/tcp_socket.cpp" bodystart="34" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1tcp__socket_1_1impl_1a227d73b46fe2857e60370ae8e6a8b281" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>size_t</type>
        <definition>size_t fc::tcp_socket::impl::readsome</definition>
        <argsstring>(boost::asio::ip::tcp::socket &amp;socket, char *buffer, size_t length) override</argsstring>
        <name>readsome</name>
        <reimplements refid="classfc_1_1tcp__socket__io__hooks_1a07cd41e5c1c99a482dfededde2cdc569">readsome</reimplements>
        <param>
          <type>boost::asio::ip::tcp::socket &amp;</type>
          <declname>socket</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/src/network/tcp_socket.cpp" line="60" column="1" bodyfile="libraries/fc/src/network/tcp_socket.cpp" bodystart="71" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1tcp__socket_1_1impl_1ab2755393e3ba9ee2de7db230d7f98e47" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>size_t</type>
        <definition>size_t fc::tcp_socket::impl::readsome</definition>
        <argsstring>(boost::asio::ip::tcp::socket &amp;socket, const std::shared_ptr&lt; char &gt; &amp;buffer, size_t length, size_t offset) override</argsstring>
        <name>readsome</name>
        <reimplements refid="classfc_1_1tcp__socket__io__hooks_1ab05e5d0d49b639f49636bb20ea3dfc78">readsome</reimplements>
        <param>
          <type>boost::asio::ip::tcp::socket &amp;</type>
          <declname>socket</declname>
        </param>
        <param>
          <type>const std::shared_ptr&lt; char &gt; &amp;</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>length</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/src/network/tcp_socket.cpp" line="61" column="1" bodyfile="libraries/fc/src/network/tcp_socket.cpp" bodystart="75" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1tcp__socket_1_1impl_1af400365fe77a5d4bcf65f2c3b469ad7a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>size_t</type>
        <definition>size_t fc::tcp_socket::impl::writesome</definition>
        <argsstring>(boost::asio::ip::tcp::socket &amp;socket, const char *buffer, size_t length) override</argsstring>
        <name>writesome</name>
        <reimplements refid="classfc_1_1tcp__socket__io__hooks_1a7ff9577650a793837c53983671644393">writesome</reimplements>
        <param>
          <type>boost::asio::ip::tcp::socket &amp;</type>
          <declname>socket</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/src/network/tcp_socket.cpp" line="62" column="1" bodyfile="libraries/fc/src/network/tcp_socket.cpp" bodystart="79" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1tcp__socket_1_1impl_1adf212edc6d5e21ffde8524b47f8566a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>size_t</type>
        <definition>size_t fc::tcp_socket::impl::writesome</definition>
        <argsstring>(boost::asio::ip::tcp::socket &amp;socket, const std::shared_ptr&lt; const char &gt; &amp;buffer, size_t length, size_t offset) override</argsstring>
        <name>writesome</name>
        <reimplements refid="classfc_1_1tcp__socket__io__hooks_1a81a99bd54d3619f76e14a4f20d68beca">writesome</reimplements>
        <param>
          <type>boost::asio::ip::tcp::socket &amp;</type>
          <declname>socket</declname>
        </param>
        <param>
          <type>const std::shared_ptr&lt; const char &gt; &amp;</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>length</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/src/network/tcp_socket.cpp" line="63" column="1" bodyfile="libraries/fc/src/network/tcp_socket.cpp" bodystart="83" bodyend="86"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="4838">
        <label>fc::tcp_socket::impl</label>
        <link refid="classfc_1_1tcp__socket_1_1impl"/>
        <childnode refid="4839" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4839">
        <label>fc::tcp_socket_io_hooks</label>
        <link refid="classfc_1_1tcp__socket__io__hooks"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4840">
        <label>fc::tcp_socket::impl</label>
        <link refid="classfc_1_1tcp__socket_1_1impl"/>
        <childnode refid="4841" relation="public-inheritance">
        </childnode>
        <childnode refid="4841" relation="usage">
          <edgelabel>_io_hooks</edgelabel>
        </childnode>
        <childnode refid="4842" relation="usage">
          <edgelabel>_read_in_progress</edgelabel>
          <edgelabel>_write_in_progress</edgelabel>
        </childnode>
      </node>
      <node id="4841">
        <label>fc::tcp_socket_io_hooks</label>
        <link refid="classfc_1_1tcp__socket__io__hooks"/>
      </node>
      <node id="4842">
        <label>fc::future&lt; size_t &gt;</label>
        <link refid="classfc_1_1future"/>
      </node>
    </collaborationgraph>
    <location file="libraries/fc/src/network/tcp_socket.cpp" line="28" column="1" bodyfile="libraries/fc/src/network/tcp_socket.cpp" bodystart="28" bodyend="69"/>
    <listofallmembers>
      <member refid="classfc_1_1tcp__socket_1_1impl_1af5804ebfc87107a3e4a596d307a35158" prot="public" virt="non-virtual"><scope>fc::tcp_socket::impl</scope><name>_io_hooks</name></member>
      <member refid="classfc_1_1tcp__socket_1_1impl_1a8200466b8052db79d2bd88f8fa9fec49" prot="public" virt="non-virtual"><scope>fc::tcp_socket::impl</scope><name>_read_in_progress</name></member>
      <member refid="classfc_1_1tcp__socket_1_1impl_1ac4695f911178daec324a35c6ff0ac265" prot="public" virt="non-virtual"><scope>fc::tcp_socket::impl</scope><name>_sock</name></member>
      <member refid="classfc_1_1tcp__socket_1_1impl_1ae480e85abcf8662337325d2d69357ead" prot="public" virt="non-virtual"><scope>fc::tcp_socket::impl</scope><name>_write_in_progress</name></member>
      <member refid="classfc_1_1tcp__socket_1_1impl_1a58f9aa3ed7aa2159d17be5dccb47bca4" prot="public" virt="non-virtual"><scope>fc::tcp_socket::impl</scope><name>impl</name></member>
      <member refid="classfc_1_1tcp__socket_1_1impl_1a227d73b46fe2857e60370ae8e6a8b281" prot="public" virt="virtual"><scope>fc::tcp_socket::impl</scope><name>readsome</name></member>
      <member refid="classfc_1_1tcp__socket_1_1impl_1ab2755393e3ba9ee2de7db230d7f98e47" prot="public" virt="virtual"><scope>fc::tcp_socket::impl</scope><name>readsome</name></member>
      <member refid="classfc_1_1tcp__socket_1_1impl_1af400365fe77a5d4bcf65f2c3b469ad7a" prot="public" virt="virtual"><scope>fc::tcp_socket::impl</scope><name>writesome</name></member>
      <member refid="classfc_1_1tcp__socket_1_1impl_1adf212edc6d5e21ffde8524b47f8566a8" prot="public" virt="virtual"><scope>fc::tcp_socket::impl</scope><name>writesome</name></member>
      <member refid="classfc_1_1tcp__socket_1_1impl_1afd552d51b85a29c5b7b4115a45bcc389" prot="public" virt="non-virtual"><scope>fc::tcp_socket::impl</scope><name>~impl</name></member>
      <member refid="classfc_1_1tcp__socket__io__hooks_1aff0001c8cbd21bed59f205b2cfb1deb6" prot="public" virt="virtual"><scope>fc::tcp_socket::impl</scope><name>~tcp_socket_io_hooks</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
