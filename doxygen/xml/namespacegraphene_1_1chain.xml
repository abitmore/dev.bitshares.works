<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="namespacegraphene_1_1chain" kind="namespace" language="C++">
    <compoundname>graphene::chain</compoundname>
    <innerclass refid="classgraphene_1_1chain_1_1account__balance__object" prot="public">graphene::chain::account_balance_object</innerclass>
    <innerclass refid="classgraphene_1_1chain_1_1account__create__evaluator" prot="public">graphene::chain::account_create_evaluator</innerclass>
    <innerclass refid="classgraphene_1_1chain_1_1account__history__object" prot="public">graphene::chain::account_history_object</innerclass>
    <innerclass refid="classgraphene_1_1chain_1_1account__member__index" prot="public">graphene::chain::account_member_index</innerclass>
    <innerclass refid="classgraphene_1_1chain_1_1account__object" prot="public">graphene::chain::account_object</innerclass>
    <innerclass refid="classgraphene_1_1chain_1_1account__statistics__object" prot="public">graphene::chain::account_statistics_object</innerclass>
    <innerclass refid="classgraphene_1_1chain_1_1account__update__evaluator" prot="public">graphene::chain::account_update_evaluator</innerclass>
    <innerclass refid="classgraphene_1_1chain_1_1account__upgrade__evaluator" prot="public">graphene::chain::account_upgrade_evaluator</innerclass>
    <innerclass refid="classgraphene_1_1chain_1_1account__whitelist__evaluator" prot="public">graphene::chain::account_whitelist_evaluator</innerclass>
    <innerclass refid="classgraphene_1_1chain_1_1assert__evaluator" prot="public">graphene::chain::assert_evaluator</innerclass>
    <innerclass refid="classgraphene_1_1chain_1_1asset__bitasset__data__object" prot="public">graphene::chain::asset_bitasset_data_object</innerclass>
    <innerclass refid="classgraphene_1_1chain_1_1asset__claim__fees__evaluator" prot="public">graphene::chain::asset_claim_fees_evaluator</innerclass>
    <innerclass refid="classgraphene_1_1chain_1_1asset__claim__pool__evaluator" prot="public">graphene::chain::asset_claim_pool_evaluator</innerclass>
    <innerclass refid="classgraphene_1_1chain_1_1asset__create__evaluator" prot="public">graphene::chain::asset_create_evaluator</innerclass>
    <innerclass refid="classgraphene_1_1chain_1_1asset__dynamic__data__object" prot="public">graphene::chain::asset_dynamic_data_object</innerclass>
    <innerclass refid="classgraphene_1_1chain_1_1asset__fund__fee__pool__evaluator" prot="public">graphene::chain::asset_fund_fee_pool_evaluator</innerclass>
    <innerclass refid="classgraphene_1_1chain_1_1asset__global__settle__evaluator" prot="public">graphene::chain::asset_global_settle_evaluator</innerclass>
    <innerclass refid="classgraphene_1_1chain_1_1asset__issue__evaluator" prot="public">graphene::chain::asset_issue_evaluator</innerclass>
    <innerclass refid="classgraphene_1_1chain_1_1asset__object" prot="public">graphene::chain::asset_object</innerclass>
    <innerclass refid="classgraphene_1_1chain_1_1asset__publish__feeds__evaluator" prot="public">graphene::chain::asset_publish_feeds_evaluator</innerclass>
    <innerclass refid="classgraphene_1_1chain_1_1asset__reserve__evaluator" prot="public">graphene::chain::asset_reserve_evaluator</innerclass>
    <innerclass refid="classgraphene_1_1chain_1_1asset__settle__evaluator" prot="public">graphene::chain::asset_settle_evaluator</innerclass>
    <innerclass refid="classgraphene_1_1chain_1_1asset__update__bitasset__evaluator" prot="public">graphene::chain::asset_update_bitasset_evaluator</innerclass>
    <innerclass refid="classgraphene_1_1chain_1_1asset__update__evaluator" prot="public">graphene::chain::asset_update_evaluator</innerclass>
    <innerclass refid="classgraphene_1_1chain_1_1asset__update__feed__producers__evaluator" prot="public">graphene::chain::asset_update_feed_producers_evaluator</innerclass>
    <innerclass refid="classgraphene_1_1chain_1_1asset__update__issuer__evaluator" prot="public">graphene::chain::asset_update_issuer_evaluator</innerclass>
    <innerclass refid="classgraphene_1_1chain_1_1balance__claim__evaluator" prot="public">graphene::chain::balance_claim_evaluator</innerclass>
    <innerclass refid="classgraphene_1_1chain_1_1balance__object" prot="public">graphene::chain::balance_object</innerclass>
    <innerclass refid="classgraphene_1_1chain_1_1balances__by__account__index" prot="public">graphene::chain::balances_by_account_index</innerclass>
    <innerclass refid="classgraphene_1_1chain_1_1bid__collateral__evaluator" prot="public">graphene::chain::bid_collateral_evaluator</innerclass>
    <innerclass refid="structgraphene_1_1chain_1_1bitasset__backing__asst__extractor" prot="public">graphene::chain::bitasset_backing_asst_extractor</innerclass>
    <innerclass refid="classgraphene_1_1chain_1_1blind__transfer__evaluator" prot="public">graphene::chain::blind_transfer_evaluator</innerclass>
    <innerclass refid="classgraphene_1_1chain_1_1blinded__balance__object" prot="public">graphene::chain::blinded_balance_object</innerclass>
    <innerclass refid="classgraphene_1_1chain_1_1block__database" prot="public">graphene::chain::block_database</innerclass>
    <innerclass refid="classgraphene_1_1chain_1_1block__summary__object" prot="public">graphene::chain::block_summary_object</innerclass>
    <innerclass refid="structgraphene_1_1chain_1_1budget__record" prot="public">graphene::chain::budget_record</innerclass>
    <innerclass refid="classgraphene_1_1chain_1_1budget__record__object" prot="public">graphene::chain::budget_record_object</innerclass>
    <innerclass refid="structgraphene_1_1chain_1_1burn__worker__type" prot="public">graphene::chain::burn_worker_type</innerclass>
    <innerclass refid="classgraphene_1_1chain_1_1buyback__object" prot="public">graphene::chain::buyback_object</innerclass>
    <innerclass refid="structgraphene_1_1chain_1_1by__expiration" prot="public">graphene::chain::by_expiration</innerclass>
    <innerclass refid="classgraphene_1_1chain_1_1call__order__object" prot="public">graphene::chain::call_order_object</innerclass>
    <innerclass refid="classgraphene_1_1chain_1_1call__order__update__evaluator" prot="public">graphene::chain::call_order_update_evaluator</innerclass>
    <innerclass refid="structgraphene_1_1chain_1_1cdd__vesting__policy" prot="public">graphene::chain::cdd_vesting_policy</innerclass>
    <innerclass refid="classgraphene_1_1chain_1_1chain__property__object" prot="public">graphene::chain::chain_property_object</innerclass>
    <innerclass refid="classgraphene_1_1chain_1_1collateral__bid__object" prot="public">graphene::chain::collateral_bid_object</innerclass>
    <innerclass refid="classgraphene_1_1chain_1_1committee__member__create__evaluator" prot="public">graphene::chain::committee_member_create_evaluator</innerclass>
    <innerclass refid="classgraphene_1_1chain_1_1committee__member__object" prot="public">graphene::chain::committee_member_object</innerclass>
    <innerclass refid="classgraphene_1_1chain_1_1committee__member__update__evaluator" prot="public">graphene::chain::committee_member_update_evaluator</innerclass>
    <innerclass refid="classgraphene_1_1chain_1_1committee__member__update__global__parameters__evaluator" prot="public">graphene::chain::committee_member_update_global_parameters_evaluator</innerclass>
    <innerclass refid="classgraphene_1_1chain_1_1credit__deal__object" prot="public">graphene::chain::credit_deal_object</innerclass>
    <innerclass refid="classgraphene_1_1chain_1_1credit__deal__repay__evaluator" prot="public">graphene::chain::credit_deal_repay_evaluator</innerclass>
    <innerclass refid="classgraphene_1_1chain_1_1credit__deal__summary__object" prot="public">graphene::chain::credit_deal_summary_object</innerclass>
    <innerclass refid="classgraphene_1_1chain_1_1credit__deal__update__evaluator" prot="public">graphene::chain::credit_deal_update_evaluator</innerclass>
    <innerclass refid="classgraphene_1_1chain_1_1credit__offer__accept__evaluator" prot="public">graphene::chain::credit_offer_accept_evaluator</innerclass>
    <innerclass refid="classgraphene_1_1chain_1_1credit__offer__create__evaluator" prot="public">graphene::chain::credit_offer_create_evaluator</innerclass>
    <innerclass refid="classgraphene_1_1chain_1_1credit__offer__delete__evaluator" prot="public">graphene::chain::credit_offer_delete_evaluator</innerclass>
    <innerclass refid="classgraphene_1_1chain_1_1credit__offer__object" prot="public">graphene::chain::credit_offer_object</innerclass>
    <innerclass refid="classgraphene_1_1chain_1_1credit__offer__update__evaluator" prot="public">graphene::chain::credit_offer_update_evaluator</innerclass>
    <innerclass refid="classgraphene_1_1chain_1_1custom__authority__create__evaluator" prot="public">graphene::chain::custom_authority_create_evaluator</innerclass>
    <innerclass refid="classgraphene_1_1chain_1_1custom__authority__delete__evaluator" prot="public">graphene::chain::custom_authority_delete_evaluator</innerclass>
    <innerclass refid="classgraphene_1_1chain_1_1custom__authority__object" prot="public">graphene::chain::custom_authority_object</innerclass>
    <innerclass refid="classgraphene_1_1chain_1_1custom__authority__update__evaluator" prot="public">graphene::chain::custom_authority_update_evaluator</innerclass>
    <innerclass refid="classgraphene_1_1chain_1_1custom__evaluator" prot="public">graphene::chain::custom_evaluator</innerclass>
    <innerclass refid="classgraphene_1_1chain_1_1database" prot="public">graphene::chain::database</innerclass>
    <innerclass refid="classgraphene_1_1chain_1_1dynamic__global__property__object" prot="public">graphene::chain::dynamic_global_property_object</innerclass>
    <innerclass refid="classgraphene_1_1chain_1_1evaluator" prot="public">graphene::chain::evaluator</innerclass>
    <innerclass refid="classgraphene_1_1chain_1_1fba__accumulator__object" prot="public">graphene::chain::fba_accumulator_object</innerclass>
    <innerclass refid="classgraphene_1_1chain_1_1force__settlement__object" prot="public">graphene::chain::force_settlement_object</innerclass>
    <innerclass refid="classgraphene_1_1chain_1_1fork__database" prot="public">graphene::chain::fork_database</innerclass>
    <innerclass refid="structgraphene_1_1chain_1_1fork__item" prot="public">graphene::chain::fork_item</innerclass>
    <innerclass refid="classgraphene_1_1chain_1_1generic__evaluator" prot="public">graphene::chain::generic_evaluator</innerclass>
    <innerclass refid="structgraphene_1_1chain_1_1genesis__state__type" prot="public">graphene::chain::genesis_state_type</innerclass>
    <innerclass refid="classgraphene_1_1chain_1_1global__property__object" prot="public">graphene::chain::global_property_object</innerclass>
    <innerclass refid="structgraphene_1_1chain_1_1hardfork__visitor" prot="public">graphene::chain::hardfork_visitor</innerclass>
    <innerclass refid="classgraphene_1_1chain_1_1hardfork__visitor__1479" prot="public">graphene::chain::hardfork_visitor_1479</innerclass>
    <innerclass refid="structgraphene_1_1chain_1_1hardfork__visitor__214" prot="public">graphene::chain::hardfork_visitor_214</innerclass>
    <innerclass refid="classgraphene_1_1chain_1_1htlc__create__evaluator" prot="public">graphene::chain::htlc_create_evaluator</innerclass>
    <innerclass refid="classgraphene_1_1chain_1_1htlc__extend__evaluator" prot="public">graphene::chain::htlc_extend_evaluator</innerclass>
    <innerclass refid="classgraphene_1_1chain_1_1htlc__object" prot="public">graphene::chain::htlc_object</innerclass>
    <innerclass refid="classgraphene_1_1chain_1_1htlc__redeem__evaluator" prot="public">graphene::chain::htlc_redeem_evaluator</innerclass>
    <innerclass refid="classgraphene_1_1chain_1_1htlc__redeem__visitor" prot="public">graphene::chain::htlc_redeem_visitor</innerclass>
    <innerclass refid="structgraphene_1_1chain_1_1immutable__chain__parameters" prot="public">graphene::chain::immutable_chain_parameters</innerclass>
    <innerclass refid="structgraphene_1_1chain_1_1index__entry" prot="public">graphene::chain::index_entry</innerclass>
    <innerclass refid="structgraphene_1_1chain_1_1init__policy__visitor" prot="public">graphene::chain::init_policy_visitor</innerclass>
    <innerclass refid="structgraphene_1_1chain_1_1instant__vesting__policy" prot="public">graphene::chain::instant_vesting_policy</innerclass>
    <innerclass refid="classgraphene_1_1chain_1_1limit__order__cancel__evaluator" prot="public">graphene::chain::limit_order_cancel_evaluator</innerclass>
    <innerclass refid="classgraphene_1_1chain_1_1limit__order__create__evaluator" prot="public">graphene::chain::limit_order_create_evaluator</innerclass>
    <innerclass refid="classgraphene_1_1chain_1_1limit__order__object" prot="public">graphene::chain::limit_order_object</innerclass>
    <innerclass refid="classgraphene_1_1chain_1_1limit__order__update__evaluator" prot="public">graphene::chain::limit_order_update_evaluator</innerclass>
    <innerclass refid="structgraphene_1_1chain_1_1linear__vesting__policy" prot="public">graphene::chain::linear_vesting_policy</innerclass>
    <innerclass refid="classgraphene_1_1chain_1_1liquidity__pool__create__evaluator" prot="public">graphene::chain::liquidity_pool_create_evaluator</innerclass>
    <innerclass refid="classgraphene_1_1chain_1_1liquidity__pool__delete__evaluator" prot="public">graphene::chain::liquidity_pool_delete_evaluator</innerclass>
    <innerclass refid="classgraphene_1_1chain_1_1liquidity__pool__deposit__evaluator" prot="public">graphene::chain::liquidity_pool_deposit_evaluator</innerclass>
    <innerclass refid="classgraphene_1_1chain_1_1liquidity__pool__exchange__evaluator" prot="public">graphene::chain::liquidity_pool_exchange_evaluator</innerclass>
    <innerclass refid="classgraphene_1_1chain_1_1liquidity__pool__object" prot="public">graphene::chain::liquidity_pool_object</innerclass>
    <innerclass refid="classgraphene_1_1chain_1_1liquidity__pool__update__evaluator" prot="public">graphene::chain::liquidity_pool_update_evaluator</innerclass>
    <innerclass refid="classgraphene_1_1chain_1_1liquidity__pool__withdraw__evaluator" prot="public">graphene::chain::liquidity_pool_withdraw_evaluator</innerclass>
    <innerclass refid="classgraphene_1_1chain_1_1node__property__object" prot="public">graphene::chain::node_property_object</innerclass>
    <innerclass refid="classgraphene_1_1chain_1_1op__evaluator" prot="public">graphene::chain::op_evaluator</innerclass>
    <innerclass refid="classgraphene_1_1chain_1_1op__evaluator__impl" prot="public">graphene::chain::op_evaluator_impl</innerclass>
    <innerclass refid="classgraphene_1_1chain_1_1operation__history__object" prot="public">graphene::chain::operation_history_object</innerclass>
    <innerclass refid="classgraphene_1_1chain_1_1override__transfer__evaluator" prot="public">graphene::chain::override_transfer_evaluator</innerclass>
    <innerclass refid="structgraphene_1_1chain_1_1predicate__evaluator" prot="public">graphene::chain::predicate_evaluator</innerclass>
    <innerclass refid="structgraphene_1_1chain_1_1price__feed__with__icr" prot="public">graphene::chain::price_feed_with_icr</innerclass>
    <innerclass refid="classgraphene_1_1chain_1_1proposal__create__evaluator" prot="public">graphene::chain::proposal_create_evaluator</innerclass>
    <innerclass refid="classgraphene_1_1chain_1_1proposal__delete__evaluator" prot="public">graphene::chain::proposal_delete_evaluator</innerclass>
    <innerclass refid="classgraphene_1_1chain_1_1proposal__object" prot="public">graphene::chain::proposal_object</innerclass>
    <innerclass refid="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor" prot="public">graphene::chain::proposal_operation_hardfork_visitor</innerclass>
    <innerclass refid="classgraphene_1_1chain_1_1proposal__update__evaluator" prot="public">graphene::chain::proposal_update_evaluator</innerclass>
    <innerclass refid="structgraphene_1_1chain_1_1refund__worker__type" prot="public">graphene::chain::refund_worker_type</innerclass>
    <innerclass refid="classgraphene_1_1chain_1_1required__approval__index" prot="public">graphene::chain::required_approval_index</innerclass>
    <innerclass refid="classgraphene_1_1chain_1_1samet__fund__borrow__evaluator" prot="public">graphene::chain::samet_fund_borrow_evaluator</innerclass>
    <innerclass refid="classgraphene_1_1chain_1_1samet__fund__create__evaluator" prot="public">graphene::chain::samet_fund_create_evaluator</innerclass>
    <innerclass refid="classgraphene_1_1chain_1_1samet__fund__delete__evaluator" prot="public">graphene::chain::samet_fund_delete_evaluator</innerclass>
    <innerclass refid="classgraphene_1_1chain_1_1samet__fund__object" prot="public">graphene::chain::samet_fund_object</innerclass>
    <innerclass refid="classgraphene_1_1chain_1_1samet__fund__repay__evaluator" prot="public">graphene::chain::samet_fund_repay_evaluator</innerclass>
    <innerclass refid="classgraphene_1_1chain_1_1samet__fund__update__evaluator" prot="public">graphene::chain::samet_fund_update_evaluator</innerclass>
    <innerclass refid="structgraphene_1_1chain_1_1special__authority__evaluate__visitor" prot="public">graphene::chain::special_authority_evaluate_visitor</innerclass>
    <innerclass refid="classgraphene_1_1chain_1_1special__authority__object" prot="public">graphene::chain::special_authority_object</innerclass>
    <innerclass refid="classgraphene_1_1chain_1_1ticket__create__evaluator" prot="public">graphene::chain::ticket_create_evaluator</innerclass>
    <innerclass refid="classgraphene_1_1chain_1_1ticket__object" prot="public">graphene::chain::ticket_object</innerclass>
    <innerclass refid="classgraphene_1_1chain_1_1ticket__update__evaluator" prot="public">graphene::chain::ticket_update_evaluator</innerclass>
    <innerclass refid="classgraphene_1_1chain_1_1transaction__evaluation__state" prot="public">graphene::chain::transaction_evaluation_state</innerclass>
    <innerclass refid="classgraphene_1_1chain_1_1transaction__history__object" prot="public">graphene::chain::transaction_history_object</innerclass>
    <innerclass refid="classgraphene_1_1chain_1_1transfer__evaluator" prot="public">graphene::chain::transfer_evaluator</innerclass>
    <innerclass refid="classgraphene_1_1chain_1_1transfer__from__blind__evaluator" prot="public">graphene::chain::transfer_from_blind_evaluator</innerclass>
    <innerclass refid="classgraphene_1_1chain_1_1transfer__to__blind__evaluator" prot="public">graphene::chain::transfer_to_blind_evaluator</innerclass>
    <innerclass refid="classgraphene_1_1chain_1_1undo__session__nesting__guard" prot="public">graphene::chain::undo_session_nesting_guard</innerclass>
    <innerclass refid="classgraphene_1_1chain_1_1vesting__balance__create__evaluator" prot="public">graphene::chain::vesting_balance_create_evaluator</innerclass>
    <innerclass refid="classgraphene_1_1chain_1_1vesting__balance__object" prot="public">graphene::chain::vesting_balance_object</innerclass>
    <innerclass refid="classgraphene_1_1chain_1_1vesting__balance__withdraw__evaluator" prot="public">graphene::chain::vesting_balance_withdraw_evaluator</innerclass>
    <innerclass refid="structgraphene_1_1chain_1_1vesting__balance__worker__type" prot="public">graphene::chain::vesting_balance_worker_type</innerclass>
    <innerclass refid="structgraphene_1_1chain_1_1vesting__policy__context" prot="public">graphene::chain::vesting_policy_context</innerclass>
    <innerclass refid="structgraphene_1_1chain_1_1vote__counter" prot="public">graphene::chain::vote_counter</innerclass>
    <innerclass refid="classgraphene_1_1chain_1_1withdraw__permission__claim__evaluator" prot="public">graphene::chain::withdraw_permission_claim_evaluator</innerclass>
    <innerclass refid="classgraphene_1_1chain_1_1withdraw__permission__create__evaluator" prot="public">graphene::chain::withdraw_permission_create_evaluator</innerclass>
    <innerclass refid="classgraphene_1_1chain_1_1withdraw__permission__delete__evaluator" prot="public">graphene::chain::withdraw_permission_delete_evaluator</innerclass>
    <innerclass refid="classgraphene_1_1chain_1_1withdraw__permission__object" prot="public">graphene::chain::withdraw_permission_object</innerclass>
    <innerclass refid="classgraphene_1_1chain_1_1withdraw__permission__update__evaluator" prot="public">graphene::chain::withdraw_permission_update_evaluator</innerclass>
    <innerclass refid="classgraphene_1_1chain_1_1witness__create__evaluator" prot="public">graphene::chain::witness_create_evaluator</innerclass>
    <innerclass refid="classgraphene_1_1chain_1_1witness__object" prot="public">graphene::chain::witness_object</innerclass>
    <innerclass refid="classgraphene_1_1chain_1_1witness__schedule__object" prot="public">graphene::chain::witness_schedule_object</innerclass>
    <innerclass refid="classgraphene_1_1chain_1_1witness__update__evaluator" prot="public">graphene::chain::witness_update_evaluator</innerclass>
    <innerclass refid="classgraphene_1_1chain_1_1worker__create__evaluator" prot="public">graphene::chain::worker_create_evaluator</innerclass>
    <innerclass refid="structgraphene_1_1chain_1_1worker__init__visitor" prot="public">graphene::chain::worker_init_visitor</innerclass>
    <innerclass refid="classgraphene_1_1chain_1_1worker__object" prot="public">graphene::chain::worker_object</innerclass>
    <innerclass refid="structgraphene_1_1chain_1_1worker__pay__visitor" prot="public">graphene::chain::worker_pay_visitor</innerclass>
    <innernamespace refid="namespacegraphene_1_1chain_1_1detail">graphene::chain::detail</innernamespace>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="namespacegraphene_1_1chain_1acdb82d2f8c178aa11ccb3df23ca32ccd" prot="public" static="no" strong="no">
        <type></type>
        <name>graphene_fba_accumulator_id_enum</name>
        <enumvalue id="namespacegraphene_1_1chain_1acdb82d2f8c178aa11ccb3df23ca32ccdae90b1c4cdb81c92695797f50d1243025" prot="public">
          <name>fba_accumulator_id_transfer_to_blind</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacegraphene_1_1chain_1acdb82d2f8c178aa11ccb3df23ca32ccdabf42751f9a6dda7ad64f46694ad4c249" prot="public">
          <name>fba_accumulator_id_blind_transfer</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacegraphene_1_1chain_1acdb82d2f8c178aa11ccb3df23ca32ccdaad142486291cf46325fed49a43dadeaa" prot="public">
          <name>fba_accumulator_id_transfer_from_blind</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacegraphene_1_1chain_1acdb82d2f8c178aa11ccb3df23ca32ccdaadd2b1128df626e02420beb23efe7aaa" prot="public">
          <name>fba_accumulator_id_count</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>An object will be created at genesis for each of these FBA accumulators. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/fba_accumulator_id.hpp" line="34" column="1" bodyfile="libraries/chain/include/graphene/chain/fba_accumulator_id.hpp" bodystart="33" bodyend="39"/>
      </memberdef>
      <memberdef kind="enum" id="namespacegraphene_1_1chain_1ae480e93033db8120c349376499139095" prot="public" static="no" strong="no">
        <type></type>
        <name>ticket_status</name>
        <enumvalue id="namespacegraphene_1_1chain_1ae480e93033db8120c349376499139095a5575656055a104584598422889d68c16" prot="public">
          <name>charging</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacegraphene_1_1chain_1ae480e93033db8120c349376499139095a6be0a1e1c016f0ee529e88ee4cbe7899" prot="public">
          <name>stable</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacegraphene_1_1chain_1ae480e93033db8120c349376499139095a895770045a281bba3ebb5b6ee075375c" prot="public">
          <name>withdrawing</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacegraphene_1_1chain_1ae480e93033db8120c349376499139095a486f3b577f99d5aae10f6d3792022b5a" prot="public">
          <name>TICKET_STATUS_COUNT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Status of a ticket. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/ticket_object.hpp" line="42" column="1" bodyfile="libraries/chain/include/graphene/chain/ticket_object.hpp" bodystart="41" bodyend="47"/>
      </memberdef>
      <memberdef kind="enum" id="namespacegraphene_1_1chain_1ac49190472e16bef0beceb9b63d326c96" prot="public" static="no" strong="no">
        <type></type>
        <name>ticket_version</name>
        <enumvalue id="namespacegraphene_1_1chain_1ac49190472e16bef0beceb9b63d326c96aef282041b006192ddeccf197d2a7e993" prot="public">
          <name>ticket_v1</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacegraphene_1_1chain_1ac49190472e16bef0beceb9b63d326c96a39c83d0f29382704b191430adfac9627" prot="public">
          <name>ticket_v2</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Version of a ticket. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/ticket_object.hpp" line="51" column="1" bodyfile="libraries/chain/include/graphene/chain/ticket_object.hpp" bodystart="50" bodyend="54"/>
      </memberdef>
      <memberdef kind="enum" id="namespacegraphene_1_1chain_1a4efc4a0f6c3e0ba09fc0091955ed8bc7" prot="public" static="no" strong="yes">
        <type></type>
        <name>vesting_balance_type</name>
        <enumvalue id="namespacegraphene_1_1chain_1a4efc4a0f6c3e0ba09fc0091955ed8bc7ad415f0e30c471dfdd9bc4f827329ef48" prot="public">
          <name>unspecified</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacegraphene_1_1chain_1a4efc4a0f6c3e0ba09fc0091955ed8bc7ad943641d1ed7d29e955f36d6327ead93" prot="public">
          <name>cashback</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacegraphene_1_1chain_1a4efc4a0f6c3e0ba09fc0091955ed8bc7ab61822e8357dcaff77eaaccf348d9134" prot="public">
          <name>worker</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacegraphene_1_1chain_1a4efc4a0f6c3e0ba09fc0091955ed8bc7a256f446b60e5cfbd429443fd756d01ef" prot="public">
          <name>witness</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacegraphene_1_1chain_1a4efc4a0f6c3e0ba09fc0091955ed8bc7a5c1138674024b3854b4da9c0972646a6" prot="public">
          <name>market_fee_sharing</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/vesting_balance_object.hpp" line="143" column="35" bodyfile="libraries/chain/include/graphene/chain/vesting_balance_object.hpp" bodystart="143" bodyend="147"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="namespacegraphene_1_1chain_1ae4b5486b79c95a308081e5b8f3cc309b" prot="public" static="no">
        <type>multi_index_container&lt; <ref refid="classgraphene_1_1chain_1_1account__balance__object" kindref="compound">account_balance_object</ref>, indexed_by&lt; ordered_unique&lt; tag&lt; by_id &gt;, member&lt; <ref refid="classgraphene_1_1db_1_1object" kindref="compound">object</ref>, <ref refid="structgraphene_1_1db_1_1object__id__type" kindref="compound">object_id_type</ref>, &amp;<ref refid="classgraphene_1_1db_1_1object_1a2ce812569d565a45dda1420cfbdf79ad" kindref="member">object::id</ref> &gt; &gt;, ordered_non_unique&lt; tag&lt; by_maintenance_flag &gt;, member&lt; <ref refid="classgraphene_1_1chain_1_1account__balance__object" kindref="compound">account_balance_object</ref>, bool, &amp;<ref refid="classgraphene_1_1chain_1_1account__balance__object_1a90e3eb098578572f0b888daeacb81f92" kindref="member">account_balance_object::maintenance_flag</ref> &gt; &gt;, ordered_unique&lt; tag&lt; by_asset_balance &gt;, composite_key&lt; <ref refid="classgraphene_1_1chain_1_1account__balance__object" kindref="compound">account_balance_object</ref>, member&lt; <ref refid="classgraphene_1_1chain_1_1account__balance__object" kindref="compound">account_balance_object</ref>, asset_id_type, &amp;<ref refid="classgraphene_1_1chain_1_1account__balance__object_1a088eddd05089d6e86ffdfbca30618ffa" kindref="member">account_balance_object::asset_type</ref> &gt;, member&lt; <ref refid="classgraphene_1_1chain_1_1account__balance__object" kindref="compound">account_balance_object</ref>, <ref refid="namespacegraphene_1_1protocol_1a69b2104c1c11eed2d17bd29b86713347" kindref="member">share_type</ref>, &amp;<ref refid="classgraphene_1_1chain_1_1account__balance__object_1aa3541b73c253bcd3d8c85a638846db8f" kindref="member">account_balance_object::balance</ref> &gt;, member&lt; <ref refid="classgraphene_1_1chain_1_1account__balance__object" kindref="compound">account_balance_object</ref>, account_id_type, &amp;<ref refid="classgraphene_1_1chain_1_1account__balance__object_1a924cc4b7671eaca7c3318284d3ea2fa0" kindref="member">account_balance_object::owner</ref> &gt; &gt;, composite_key_compare&lt; std::less&lt; asset_id_type &gt;, std::greater&lt; <ref refid="namespacegraphene_1_1protocol_1a69b2104c1c11eed2d17bd29b86713347" kindref="member">share_type</ref> &gt;, std::less&lt; account_id_type &gt; &gt; &gt; &gt; &gt;</type>
        <definition>typedef multi_index_container&lt; account_balance_object, indexed_by&lt; ordered_unique&lt; tag&lt;by_id&gt;, member&lt; object, object_id_type, &amp;object::id &gt; &gt;, ordered_non_unique&lt; tag&lt;by_maintenance_flag&gt;, member&lt; account_balance_object, bool, &amp;account_balance_object::maintenance_flag &gt; &gt;, ordered_unique&lt; tag&lt;by_asset_balance&gt;, composite_key&lt; account_balance_object, member&lt;account_balance_object, asset_id_type, &amp;account_balance_object::asset_type&gt;, member&lt;account_balance_object, share_type, &amp;account_balance_object::balance&gt;, member&lt;account_balance_object, account_id_type, &amp;account_balance_object::owner&gt; &gt;, composite_key_compare&lt; std::less&lt; asset_id_type &gt;, std::greater&lt; share_type &gt;, std::less&lt; account_id_type &gt; &gt; &gt; &gt; &gt; graphene::chain::account_balance_object_multi_index_type</definition>
        <argsstring></argsstring>
        <name>account_balance_object_multi_index_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/account_object.hpp" line="408" column="2" bodyfile="libraries/chain/include/graphene/chain/account_object.hpp" bodystart="384" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegraphene_1_1chain_1a4c78c201450b21a1df4539d4fc3165c7" prot="public" static="no">
        <type><ref refid="classgraphene_1_1db_1_1generic__index" kindref="compound">generic_index</ref>&lt; <ref refid="classgraphene_1_1chain_1_1account__balance__object" kindref="compound">account_balance_object</ref>, <ref refid="namespacegraphene_1_1chain_1ae4b5486b79c95a308081e5b8f3cc309b" kindref="member">account_balance_object_multi_index_type</ref> &gt;</type>
        <definition>typedef generic_index&lt;account_balance_object, account_balance_object_multi_index_type&gt; graphene::chain::account_balance_index</definition>
        <argsstring></argsstring>
        <name>account_balance_index</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/account_object.hpp" line="413" column="26" bodyfile="libraries/chain/include/graphene/chain/account_object.hpp" bodystart="413" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegraphene_1_1chain_1a2cb69664c48f3d41eb5ac8b6bc4847cc" prot="public" static="no">
        <type>multi_index_container&lt; <ref refid="classgraphene_1_1chain_1_1account__object" kindref="compound">account_object</ref>, indexed_by&lt; ordered_unique&lt; tag&lt; by_id &gt;, member&lt; <ref refid="classgraphene_1_1db_1_1object" kindref="compound">object</ref>, <ref refid="structgraphene_1_1db_1_1object__id__type" kindref="compound">object_id_type</ref>, &amp;<ref refid="classgraphene_1_1db_1_1object_1a2ce812569d565a45dda1420cfbdf79ad" kindref="member">object::id</ref> &gt; &gt;, ordered_unique&lt; tag&lt; by_name &gt;, member&lt; <ref refid="classgraphene_1_1chain_1_1account__object" kindref="compound">account_object</ref>, string, &amp;<ref refid="classgraphene_1_1chain_1_1account__object_1a9eeeba87995190284d93bd3d7fabc639" kindref="member">account_object::name</ref> &gt; &gt; &gt; &gt;</type>
        <definition>typedef multi_index_container&lt; account_object, indexed_by&lt; ordered_unique&lt; tag&lt;by_id&gt;, member&lt; object, object_id_type, &amp;object::id &gt; &gt;, ordered_unique&lt; tag&lt;by_name&gt;, member&lt;account_object, string, &amp;account_object::name&gt; &gt; &gt; &gt; graphene::chain::account_multi_index_type</definition>
        <argsstring></argsstring>
        <name>account_multi_index_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/account_object.hpp" line="426" column="2" bodyfile="libraries/chain/include/graphene/chain/account_object.hpp" bodystart="415" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegraphene_1_1chain_1ad4a4b0840d255da34979146e37fcc15c" prot="public" static="no">
        <type><ref refid="classgraphene_1_1db_1_1generic__index" kindref="compound">generic_index</ref>&lt; <ref refid="classgraphene_1_1chain_1_1account__object" kindref="compound">account_object</ref>, <ref refid="namespacegraphene_1_1chain_1a2cb69664c48f3d41eb5ac8b6bc4847cc" kindref="member">account_multi_index_type</ref> &gt;</type>
        <definition>typedef generic_index&lt;account_object, account_multi_index_type&gt; graphene::chain::account_index</definition>
        <argsstring></argsstring>
        <name>account_index</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/account_object.hpp" line="431" column="26" bodyfile="libraries/chain/include/graphene/chain/account_object.hpp" bodystart="431" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegraphene_1_1chain_1a83b2bcbf4c5d9008a9241168d4d16c7b" prot="public" static="no">
        <type>multi_index_container&lt; <ref refid="classgraphene_1_1chain_1_1account__statistics__object" kindref="compound">account_statistics_object</ref>, indexed_by&lt; ordered_unique&lt; tag&lt; by_id &gt;, member&lt; <ref refid="classgraphene_1_1db_1_1object" kindref="compound">object</ref>, <ref refid="structgraphene_1_1db_1_1object__id__type" kindref="compound">object_id_type</ref>, &amp;<ref refid="classgraphene_1_1db_1_1object_1a2ce812569d565a45dda1420cfbdf79ad" kindref="member">object::id</ref> &gt; &gt;, ordered_unique&lt; tag&lt; by_maintenance_seq &gt;, composite_key&lt; <ref refid="classgraphene_1_1chain_1_1account__statistics__object" kindref="compound">account_statistics_object</ref>, const_mem_fun&lt; <ref refid="classgraphene_1_1chain_1_1account__statistics__object" kindref="compound">account_statistics_object</ref>, bool, &amp;<ref refid="classgraphene_1_1chain_1_1account__statistics__object_1a35c6972742b9310c97e77836516d17b3" kindref="member">account_statistics_object::need_maintenance</ref> &gt;, member&lt; <ref refid="classgraphene_1_1chain_1_1account__statistics__object" kindref="compound">account_statistics_object</ref>, string, &amp;<ref refid="classgraphene_1_1chain_1_1account__statistics__object_1a8e180be3ea821af00a9da7729ed105dd" kindref="member">account_statistics_object::name</ref> &gt; &gt; &gt;, ordered_non_unique&lt; tag&lt; by_voting_power_active &gt;, composite_key&lt; <ref refid="classgraphene_1_1chain_1_1account__statistics__object" kindref="compound">account_statistics_object</ref>, member&lt; <ref refid="classgraphene_1_1chain_1_1account__statistics__object" kindref="compound">account_statistics_object</ref>, <ref refid="classfc_1_1time__point__sec" kindref="compound">time_point_sec</ref>, &amp;<ref refid="classgraphene_1_1chain_1_1account__statistics__object_1ac941c0ffc81ff687e18234b82b619c2c" kindref="member">account_statistics_object::vote_tally_time</ref> &gt;, member&lt; <ref refid="classgraphene_1_1chain_1_1account__statistics__object" kindref="compound">account_statistics_object</ref>, uint64_t, &amp;<ref refid="classgraphene_1_1chain_1_1account__statistics__object_1a74b95db3df9125060131fe4210c17108" kindref="member">account_statistics_object::vp_active</ref> &gt; &gt;, composite_key_compare&lt; std::greater&lt; <ref refid="classfc_1_1time__point__sec" kindref="compound">time_point_sec</ref> &gt;, std::greater&lt; uint64_t &gt; &gt; &gt; &gt; &gt;</type>
        <definition>typedef multi_index_container&lt; account_statistics_object, indexed_by&lt; ordered_unique&lt; tag&lt;by_id&gt;, member&lt; object, object_id_type, &amp;object::id &gt; &gt;, ordered_unique&lt; tag&lt;by_maintenance_seq&gt;, composite_key&lt; account_statistics_object, const_mem_fun&lt;account_statistics_object, bool, &amp;account_statistics_object::need_maintenance&gt;, member&lt;account_statistics_object, string, &amp;account_statistics_object::name&gt; &gt; &gt;, ordered_non_unique&lt; tag&lt;by_voting_power_active&gt;, composite_key&lt; account_statistics_object, member&lt;account_statistics_object, time_point_sec, &amp;account_statistics_object::vote_tally_time&gt;, member&lt;account_statistics_object, uint64_t, &amp;account_statistics_object::vp_active&gt; &gt;, composite_key_compare&lt; std::greater&lt; time_point_sec &gt;, std::greater&lt; uint64_t &gt; &gt; &gt; &gt; &gt; graphene::chain::account_stats_multi_index_type</definition>
        <argsstring></argsstring>
        <name>account_stats_multi_index_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/account_object.hpp" line="462" column="2" bodyfile="libraries/chain/include/graphene/chain/account_object.hpp" bodystart="434" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegraphene_1_1chain_1ae8cf3ea848fa664d785e848949646384" prot="public" static="no">
        <type><ref refid="classgraphene_1_1db_1_1generic__index" kindref="compound">generic_index</ref>&lt; <ref refid="classgraphene_1_1chain_1_1account__statistics__object" kindref="compound">account_statistics_object</ref>, <ref refid="namespacegraphene_1_1chain_1a83b2bcbf4c5d9008a9241168d4d16c7b" kindref="member">account_stats_multi_index_type</ref> &gt;</type>
        <definition>typedef generic_index&lt;account_statistics_object, account_stats_multi_index_type&gt; graphene::chain::account_stats_index</definition>
        <argsstring></argsstring>
        <name>account_stats_index</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/account_object.hpp" line="467" column="26" bodyfile="libraries/chain/include/graphene/chain/account_object.hpp" bodystart="467" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegraphene_1_1chain_1a2ecd740ea869e92cdb6aa880413a93f1" prot="public" static="no">
        <type>multi_index_container&lt; <ref refid="classgraphene_1_1chain_1_1asset__bitasset__data__object" kindref="compound">asset_bitasset_data_object</ref>, indexed_by&lt; ordered_unique&lt; tag&lt; by_id &gt;, member&lt; <ref refid="classgraphene_1_1db_1_1object" kindref="compound">object</ref>, <ref refid="structgraphene_1_1db_1_1object__id__type" kindref="compound">object_id_type</ref>, &amp;<ref refid="classgraphene_1_1db_1_1object_1a2ce812569d565a45dda1420cfbdf79ad" kindref="member">object::id</ref> &gt; &gt;, ordered_non_unique&lt; tag&lt; by_short_backing_asset &gt;, <ref refid="structgraphene_1_1chain_1_1bitasset__backing__asst__extractor" kindref="compound">bitasset_backing_asst_extractor</ref> &gt;, ordered_unique&lt; tag&lt; by_feed_expiration &gt;, composite_key&lt; <ref refid="classgraphene_1_1chain_1_1asset__bitasset__data__object" kindref="compound">asset_bitasset_data_object</ref>, const_mem_fun&lt; <ref refid="classgraphene_1_1chain_1_1asset__bitasset__data__object" kindref="compound">asset_bitasset_data_object</ref>, <ref refid="classfc_1_1time__point__sec" kindref="compound">time_point_sec</ref>, &amp;<ref refid="classgraphene_1_1chain_1_1asset__bitasset__data__object_1a376e0082aaf4e3fd5c5dff81b806bd10" kindref="member">asset_bitasset_data_object::feed_expiration_time</ref> &gt;, member&lt; <ref refid="classgraphene_1_1chain_1_1asset__bitasset__data__object" kindref="compound">asset_bitasset_data_object</ref>, asset_id_type, &amp;<ref refid="classgraphene_1_1chain_1_1asset__bitasset__data__object_1a566fab695c27973fb55b8eec34575709" kindref="member">asset_bitasset_data_object::asset_id</ref> &gt; &gt; &gt;, ordered_non_unique&lt; tag&lt; by_cer_update &gt;, const_mem_fun&lt; <ref refid="classgraphene_1_1chain_1_1asset__bitasset__data__object" kindref="compound">asset_bitasset_data_object</ref>, bool, &amp;<ref refid="classgraphene_1_1chain_1_1asset__bitasset__data__object_1ab94b9dad7f202a38716609dc3ce05bcc" kindref="member">asset_bitasset_data_object::need_to_update_cer</ref> &gt; &gt; &gt; &gt;</type>
        <definition>using graphene::chain::bitasset_data_multi_index_type = typedef multi_index_container&lt; asset_bitasset_data_object, indexed_by&lt; ordered_unique&lt; tag&lt;by_id&gt;, member&lt; object, object_id_type, &amp;object::id &gt; &gt;, ordered_non_unique&lt; tag&lt;by_short_backing_asset&gt;, bitasset_backing_asst_extractor &gt;, ordered_unique&lt; tag&lt;by_feed_expiration&gt;, composite_key&lt; asset_bitasset_data_object, const_mem_fun&lt; asset_bitasset_data_object, time_point_sec, &amp;asset_bitasset_data_object::feed_expiration_time &gt;, member&lt; asset_bitasset_data_object, asset_id_type, &amp;asset_bitasset_data_object::asset_id &gt; &gt; &gt;, ordered_non_unique&lt; tag&lt;by_cer_update&gt;, const_mem_fun&lt; asset_bitasset_data_object, bool, &amp;asset_bitasset_data_object::need_to_update_cer &gt; &gt; &gt; &gt;</definition>
        <argsstring></argsstring>
        <name>bitasset_data_multi_index_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/asset_object.hpp" line="436" column="4" bodyfile="libraries/chain/include/graphene/chain/asset_object.hpp" bodystart="453" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegraphene_1_1chain_1aeea366231bb2a529296028c98923562c" prot="public" static="no">
        <type><ref refid="classgraphene_1_1db_1_1generic__index" kindref="compound">generic_index</ref>&lt; <ref refid="classgraphene_1_1chain_1_1asset__bitasset__data__object" kindref="compound">asset_bitasset_data_object</ref>, <ref refid="namespacegraphene_1_1chain_1a2ecd740ea869e92cdb6aa880413a93f1" kindref="member">bitasset_data_multi_index_type</ref> &gt;</type>
        <definition>using graphene::chain::asset_bitasset_data_index = typedef generic_index&lt; asset_bitasset_data_object, bitasset_data_multi_index_type &gt;</definition>
        <argsstring></argsstring>
        <name>asset_bitasset_data_index</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/asset_object.hpp" line="454" column="4" bodyfile="libraries/chain/include/graphene/chain/asset_object.hpp" bodystart="454" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegraphene_1_1chain_1a1bc16919ace804436a00aeac6060f9a2" prot="public" static="no">
        <type>multi_index_container&lt; <ref refid="classgraphene_1_1chain_1_1asset__object" kindref="compound">asset_object</ref>, indexed_by&lt; ordered_unique&lt; tag&lt; by_id &gt;, member&lt; <ref refid="classgraphene_1_1db_1_1object" kindref="compound">object</ref>, <ref refid="structgraphene_1_1db_1_1object__id__type" kindref="compound">object_id_type</ref>, &amp;<ref refid="classgraphene_1_1db_1_1object_1a2ce812569d565a45dda1420cfbdf79ad" kindref="member">object::id</ref> &gt; &gt;, ordered_unique&lt; tag&lt; by_symbol &gt;, member&lt; <ref refid="classgraphene_1_1chain_1_1asset__object" kindref="compound">asset_object</ref>, string, &amp;<ref refid="classgraphene_1_1chain_1_1asset__object_1a089165870abab6b77345acea240937b6" kindref="member">asset_object::symbol</ref> &gt; &gt;, ordered_unique&lt; tag&lt; by_type &gt;, composite_key&lt; <ref refid="classgraphene_1_1chain_1_1asset__object" kindref="compound">asset_object</ref>, const_mem_fun&lt; <ref refid="classgraphene_1_1chain_1_1asset__object" kindref="compound">asset_object</ref>, bool, &amp;<ref refid="classgraphene_1_1chain_1_1asset__object_1a5cd681e6cc216f87d99f60c1de63eba8" kindref="member">asset_object::is_market_issued</ref> &gt;, member&lt; <ref refid="classgraphene_1_1db_1_1object" kindref="compound">object</ref>, <ref refid="structgraphene_1_1db_1_1object__id__type" kindref="compound">object_id_type</ref>, &amp;<ref refid="classgraphene_1_1db_1_1object_1a2ce812569d565a45dda1420cfbdf79ad" kindref="member">object::id</ref> &gt; &gt; &gt;, ordered_unique&lt; tag&lt; by_issuer &gt;, composite_key&lt; <ref refid="classgraphene_1_1chain_1_1asset__object" kindref="compound">asset_object</ref>, member&lt; <ref refid="classgraphene_1_1chain_1_1asset__object" kindref="compound">asset_object</ref>, account_id_type, &amp;<ref refid="classgraphene_1_1chain_1_1asset__object_1ad5274b71ad420b57da53c3ef80b95577" kindref="member">asset_object::issuer</ref> &gt;, member&lt; <ref refid="classgraphene_1_1db_1_1object" kindref="compound">object</ref>, <ref refid="structgraphene_1_1db_1_1object__id__type" kindref="compound">object_id_type</ref>, &amp;<ref refid="classgraphene_1_1db_1_1object_1a2ce812569d565a45dda1420cfbdf79ad" kindref="member">object::id</ref> &gt; &gt; &gt; &gt; &gt;</type>
        <definition>using graphene::chain::asset_object_multi_index_type = typedef multi_index_container&lt; asset_object, indexed_by&lt; ordered_unique&lt; tag&lt;by_id&gt;, member&lt; object, object_id_type, &amp;object::id &gt; &gt;, ordered_unique&lt; tag&lt;by_symbol&gt;, member&lt;asset_object, string, &amp;asset_object::symbol&gt; &gt;, ordered_unique&lt; tag&lt;by_type&gt;, composite_key&lt; asset_object, const_mem_fun&lt;asset_object, bool, &amp;asset_object::is_market_issued&gt;, member&lt; object, object_id_type, &amp;object::id &gt; &gt; &gt;, ordered_unique&lt; tag&lt;by_issuer&gt;, composite_key&lt; asset_object, member&lt; asset_object, account_id_type, &amp;asset_object::issuer &gt;, member&lt; object, object_id_type, &amp;object::id &gt; &gt; &gt; &gt; &gt;</definition>
        <argsstring></argsstring>
        <name>asset_object_multi_index_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/asset_object.hpp" line="459" column="4" bodyfile="libraries/chain/include/graphene/chain/asset_object.hpp" bodystart="477" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegraphene_1_1chain_1a1d60265b3c5c0435642d12f485967fc7" prot="public" static="no">
        <type><ref refid="classgraphene_1_1db_1_1generic__index" kindref="compound">generic_index</ref>&lt; <ref refid="classgraphene_1_1chain_1_1asset__object" kindref="compound">asset_object</ref>, <ref refid="namespacegraphene_1_1chain_1a1bc16919ace804436a00aeac6060f9a2" kindref="member">asset_object_multi_index_type</ref> &gt;</type>
        <definition>using graphene::chain::asset_index = typedef generic_index&lt; asset_object, asset_object_multi_index_type &gt;</definition>
        <argsstring></argsstring>
        <name>asset_index</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/asset_object.hpp" line="478" column="4" bodyfile="libraries/chain/include/graphene/chain/asset_object.hpp" bodystart="478" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegraphene_1_1chain_1a895071149391d0c169b33ae686f0ab3b" prot="public" static="no">
        <type>multi_index_container&lt; <ref refid="classgraphene_1_1chain_1_1balance__object" kindref="compound">balance_object</ref>, indexed_by&lt; ordered_unique&lt; tag&lt; by_id &gt;, member&lt; <ref refid="classgraphene_1_1db_1_1object" kindref="compound">object</ref>, <ref refid="structgraphene_1_1db_1_1object__id__type" kindref="compound">object_id_type</ref>, &amp;<ref refid="classgraphene_1_1db_1_1object_1a2ce812569d565a45dda1420cfbdf79ad" kindref="member">object::id</ref> &gt; &gt;, ordered_non_unique&lt; tag&lt; by_owner &gt;, composite_key&lt; <ref refid="classgraphene_1_1chain_1_1balance__object" kindref="compound">balance_object</ref>, member&lt; <ref refid="classgraphene_1_1chain_1_1balance__object" kindref="compound">balance_object</ref>, <ref refid="classgraphene_1_1protocol_1_1address" kindref="compound">address</ref>, &amp;<ref refid="classgraphene_1_1chain_1_1balance__object_1ab59c8def92ab5290ebfcfcbe2e1e763f" kindref="member">balance_object::owner</ref> &gt;, const_mem_fun&lt; <ref refid="classgraphene_1_1chain_1_1balance__object" kindref="compound">balance_object</ref>, asset_id_type, &amp;<ref refid="classgraphene_1_1chain_1_1balance__object_1acf4f4e7977c8d4176fb02b108d4af9ac" kindref="member">balance_object::asset_type</ref> &gt; &gt; &gt; &gt; &gt;</type>
        <definition>using graphene::chain::balance_multi_index_type = typedef multi_index_container&lt; balance_object, indexed_by&lt; ordered_unique&lt; tag&lt;by_id&gt;, member&lt; object, object_id_type, &amp;object::id &gt; &gt;, ordered_non_unique&lt; tag&lt;by_owner&gt;, composite_key&lt; balance_object, member&lt;balance_object, address, &amp;balance_object::owner&gt;, const_mem_fun&lt;balance_object, asset_id_type, &amp;balance_object::asset_type&gt; &gt; &gt; &gt; &gt;</definition>
        <argsstring></argsstring>
        <name>balance_multi_index_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/balance_object.hpp" line="53" column="4" bodyfile="libraries/chain/include/graphene/chain/balance_object.hpp" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegraphene_1_1chain_1a6c51205bf5f46c94f5f3f4dd689001a0" prot="public" static="no">
        <type><ref refid="classgraphene_1_1db_1_1generic__index" kindref="compound">generic_index</ref>&lt; <ref refid="classgraphene_1_1chain_1_1balance__object" kindref="compound">balance_object</ref>, <ref refid="namespacegraphene_1_1chain_1a895071149391d0c169b33ae686f0ab3b" kindref="member">balance_multi_index_type</ref> &gt;</type>
        <definition>using graphene::chain::balance_index = typedef generic_index&lt;balance_object, balance_multi_index_type&gt;</definition>
        <argsstring></argsstring>
        <name>balance_index</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/balance_object.hpp" line="68" column="4" bodyfile="libraries/chain/include/graphene/chain/balance_object.hpp" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegraphene_1_1chain_1a932a9aa2b03888d94ef585a1d2104367" prot="public" static="no">
        <type>multi_index_container&lt; <ref refid="classgraphene_1_1chain_1_1buyback__object" kindref="compound">buyback_object</ref>, indexed_by&lt; ordered_unique&lt; tag&lt; by_id &gt;, member&lt; <ref refid="classgraphene_1_1db_1_1object" kindref="compound">object</ref>, <ref refid="structgraphene_1_1db_1_1object__id__type" kindref="compound">object_id_type</ref>, &amp;<ref refid="classgraphene_1_1db_1_1object_1a2ce812569d565a45dda1420cfbdf79ad" kindref="member">object::id</ref> &gt; &gt;, ordered_unique&lt; tag&lt; by_asset &gt;, member&lt; <ref refid="classgraphene_1_1chain_1_1buyback__object" kindref="compound">buyback_object</ref>, asset_id_type, &amp;<ref refid="classgraphene_1_1chain_1_1buyback__object_1a972380515965598a66e2e479a7249aa6" kindref="member">buyback_object::asset_to_buy</ref> &gt; &gt; &gt;&gt;</type>
        <definition>typedef multi_index_container&lt; buyback_object, indexed_by&lt; ordered_unique&lt; tag&lt;by_id&gt;, member&lt; object, object_id_type, &amp;object::id &gt; &gt;, ordered_unique&lt; tag&lt;by_asset&gt;, member&lt; buyback_object, asset_id_type, &amp;buyback_object::asset_to_buy&gt; &gt; &gt;&gt; graphene::chain::buyback_multi_index_type</definition>
        <argsstring></argsstring>
        <name>buyback_multi_index_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/buyback_object.hpp" line="58" column="2" bodyfile="libraries/chain/include/graphene/chain/buyback_object.hpp" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegraphene_1_1chain_1a7b63693dcd3b636ec4eee6e5c3578437" prot="public" static="no">
        <type><ref refid="classgraphene_1_1db_1_1generic__index" kindref="compound">generic_index</ref>&lt; <ref refid="classgraphene_1_1chain_1_1buyback__object" kindref="compound">buyback_object</ref>, <ref refid="namespacegraphene_1_1chain_1a932a9aa2b03888d94ef585a1d2104367" kindref="member">buyback_multi_index_type</ref> &gt;</type>
        <definition>typedef generic_index&lt; buyback_object, buyback_multi_index_type &gt; graphene::chain::buyback_index</definition>
        <argsstring></argsstring>
        <name>buyback_index</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/buyback_object.hpp" line="60" column="23" bodyfile="libraries/chain/include/graphene/chain/buyback_object.hpp" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegraphene_1_1chain_1aeff1c4b0789e9b25b942d2e22525d14b" prot="public" static="no">
        <type>multi_index_container&lt; <ref refid="classgraphene_1_1chain_1_1committee__member__object" kindref="compound">committee_member_object</ref>, indexed_by&lt; ordered_unique&lt; tag&lt; by_id &gt;, member&lt; <ref refid="classgraphene_1_1db_1_1object" kindref="compound">object</ref>, <ref refid="structgraphene_1_1db_1_1object__id__type" kindref="compound">object_id_type</ref>, &amp;<ref refid="classgraphene_1_1db_1_1object_1a2ce812569d565a45dda1420cfbdf79ad" kindref="member">object::id</ref> &gt; &gt;, ordered_unique&lt; tag&lt; by_account &gt;, member&lt; <ref refid="classgraphene_1_1chain_1_1committee__member__object" kindref="compound">committee_member_object</ref>, account_id_type, &amp;<ref refid="classgraphene_1_1chain_1_1committee__member__object_1a002acc4bcf8032c69c2e064fc29b4427" kindref="member">committee_member_object::committee_member_account</ref> &gt; &gt;, ordered_unique&lt; tag&lt; by_vote_id &gt;, member&lt; <ref refid="classgraphene_1_1chain_1_1committee__member__object" kindref="compound">committee_member_object</ref>, <ref refid="structgraphene_1_1protocol_1_1vote__id__type" kindref="compound">vote_id_type</ref>, &amp;<ref refid="classgraphene_1_1chain_1_1committee__member__object_1a7628533b7d5fd6eacc2a95e1ad77d15c" kindref="member">committee_member_object::vote_id</ref> &gt; &gt; &gt; &gt;</type>
        <definition>using graphene::chain::committee_member_multi_index_type = typedef multi_index_container&lt; committee_member_object, indexed_by&lt; ordered_unique&lt; tag&lt;by_id&gt;, member&lt;object, object_id_type, &amp;object::id&gt; &gt;, ordered_unique&lt; tag&lt;by_account&gt;, member&lt;committee_member_object, account_id_type, &amp;committee_member_object::committee_member_account&gt; &gt;, ordered_unique&lt; tag&lt;by_vote_id&gt;, member&lt;committee_member_object, vote_id_type, &amp;committee_member_object::vote_id&gt; &gt; &gt; &gt;</definition>
        <argsstring></argsstring>
        <name>committee_member_multi_index_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/committee_member_object.hpp" line="55" column="4" bodyfile="libraries/chain/include/graphene/chain/committee_member_object.hpp" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegraphene_1_1chain_1a981fd6f22492a40a81b1732b1aec531a" prot="public" static="no">
        <type><ref refid="classgraphene_1_1db_1_1generic__index" kindref="compound">generic_index</ref>&lt; <ref refid="classgraphene_1_1chain_1_1committee__member__object" kindref="compound">committee_member_object</ref>, <ref refid="namespacegraphene_1_1chain_1aeff1c4b0789e9b25b942d2e22525d14b" kindref="member">committee_member_multi_index_type</ref> &gt;</type>
        <definition>using graphene::chain::committee_member_index = typedef generic_index&lt;committee_member_object, committee_member_multi_index_type&gt;</definition>
        <argsstring></argsstring>
        <name>committee_member_index</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/committee_member_object.hpp" line="69" column="4" bodyfile="libraries/chain/include/graphene/chain/committee_member_object.hpp" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegraphene_1_1chain_1a7b4d824109428b011459275ae98ffd03" prot="public" static="no">
        <type>multi_index_container&lt; <ref refid="classgraphene_1_1chain_1_1blinded__balance__object" kindref="compound">blinded_balance_object</ref>, indexed_by&lt; ordered_unique&lt; tag&lt; by_id &gt;, member&lt; <ref refid="classgraphene_1_1db_1_1object" kindref="compound">object</ref>, <ref refid="structgraphene_1_1db_1_1object__id__type" kindref="compound">object_id_type</ref>, &amp;<ref refid="classgraphene_1_1db_1_1object_1a2ce812569d565a45dda1420cfbdf79ad" kindref="member">object::id</ref> &gt; &gt;, ordered_unique&lt; tag&lt; by_commitment &gt;, member&lt; <ref refid="classgraphene_1_1chain_1_1blinded__balance__object" kindref="compound">blinded_balance_object</ref>, commitment_type, &amp;<ref refid="classgraphene_1_1chain_1_1blinded__balance__object_1a000a2dcb5f41d96a919333be5bef02cb" kindref="member">blinded_balance_object::commitment</ref> &gt; &gt; &gt; &gt;</type>
        <definition>using graphene::chain::blinded_balance_obj_multi_idx = typedef multi_index_container&lt; blinded_balance_object, indexed_by&lt; ordered_unique&lt; tag&lt;by_id&gt;, member&lt; object, object_id_type, &amp;object::id &gt; &gt;, ordered_unique&lt; tag&lt;by_commitment&gt;, member&lt;blinded_balance_object, commitment_type, &amp;blinded_balance_object::commitment&gt; &gt; &gt; &gt;</definition>
        <argsstring></argsstring>
        <name>blinded_balance_obj_multi_idx</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/confidential_object.hpp" line="55" column="1" bodyfile="libraries/chain/include/graphene/chain/confidential_object.hpp" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegraphene_1_1chain_1acf1e9247d1b2161775a7b94d943bc4d1" prot="public" static="no">
        <type><ref refid="classgraphene_1_1db_1_1generic__index" kindref="compound">generic_index</ref>&lt; <ref refid="classgraphene_1_1chain_1_1blinded__balance__object" kindref="compound">blinded_balance_object</ref>, <ref refid="namespacegraphene_1_1chain_1a7b4d824109428b011459275ae98ffd03" kindref="member">blinded_balance_obj_multi_idx</ref> &gt;</type>
        <definition>using graphene::chain::blinded_balance_index = typedef generic_index&lt;blinded_balance_object, blinded_balance_obj_multi_idx&gt;</definition>
        <argsstring></argsstring>
        <name>blinded_balance_index</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/confidential_object.hpp" line="63" column="1" bodyfile="libraries/chain/include/graphene/chain/confidential_object.hpp" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegraphene_1_1chain_1af289411029e271b820bd95f5ea7888bc" prot="public" static="no">
        <type>multi_index_container&lt; <ref refid="classgraphene_1_1chain_1_1credit__offer__object" kindref="compound">credit_offer_object</ref>, indexed_by&lt; ordered_unique&lt; tag&lt; by_id &gt;, member&lt; <ref refid="classgraphene_1_1db_1_1object" kindref="compound">object</ref>, <ref refid="structgraphene_1_1db_1_1object__id__type" kindref="compound">object_id_type</ref>, &amp;<ref refid="classgraphene_1_1db_1_1object_1a2ce812569d565a45dda1420cfbdf79ad" kindref="member">object::id</ref> &gt; &gt;, ordered_unique&lt; tag&lt; by_auto_disable_time &gt;, composite_key&lt; <ref refid="classgraphene_1_1chain_1_1credit__offer__object" kindref="compound">credit_offer_object</ref>, member&lt; <ref refid="classgraphene_1_1chain_1_1credit__offer__object" kindref="compound">credit_offer_object</ref>, bool, &amp;<ref refid="classgraphene_1_1chain_1_1credit__offer__object_1ab57a924e4943d834a8191de39b3a4292" kindref="member">credit_offer_object::enabled</ref> &gt;, member&lt; <ref refid="classgraphene_1_1chain_1_1credit__offer__object" kindref="compound">credit_offer_object</ref>, <ref refid="classfc_1_1time__point__sec" kindref="compound">time_point_sec</ref>, &amp;<ref refid="classgraphene_1_1chain_1_1credit__offer__object_1a953aeba66cb8517b6fdb9a08a7b793c3" kindref="member">credit_offer_object::auto_disable_time</ref> &gt;, member&lt; <ref refid="classgraphene_1_1db_1_1object" kindref="compound">object</ref>, <ref refid="structgraphene_1_1db_1_1object__id__type" kindref="compound">object_id_type</ref>, &amp;<ref refid="classgraphene_1_1db_1_1object_1a2ce812569d565a45dda1420cfbdf79ad" kindref="member">object::id</ref> &gt; &gt; &gt;, ordered_unique&lt; tag&lt; by_owner &gt;, composite_key&lt; <ref refid="classgraphene_1_1chain_1_1credit__offer__object" kindref="compound">credit_offer_object</ref>, member&lt; <ref refid="classgraphene_1_1chain_1_1credit__offer__object" kindref="compound">credit_offer_object</ref>, account_id_type, &amp;<ref refid="classgraphene_1_1chain_1_1credit__offer__object_1a7e060cd39c5d07301414610859d434c2" kindref="member">credit_offer_object::owner_account</ref> &gt;, member&lt; <ref refid="classgraphene_1_1db_1_1object" kindref="compound">object</ref>, <ref refid="structgraphene_1_1db_1_1object__id__type" kindref="compound">object_id_type</ref>, &amp;<ref refid="classgraphene_1_1db_1_1object_1a2ce812569d565a45dda1420cfbdf79ad" kindref="member">object::id</ref> &gt; &gt; &gt;, ordered_unique&lt; tag&lt; by_asset_type &gt;, composite_key&lt; <ref refid="classgraphene_1_1chain_1_1credit__offer__object" kindref="compound">credit_offer_object</ref>, member&lt; <ref refid="classgraphene_1_1chain_1_1credit__offer__object" kindref="compound">credit_offer_object</ref>, asset_id_type, &amp;<ref refid="classgraphene_1_1chain_1_1credit__offer__object_1a4525ff6435d1fa9e0ef1db6c0b7d8dc7" kindref="member">credit_offer_object::asset_type</ref> &gt;, member&lt; <ref refid="classgraphene_1_1db_1_1object" kindref="compound">object</ref>, <ref refid="structgraphene_1_1db_1_1object__id__type" kindref="compound">object_id_type</ref>, &amp;<ref refid="classgraphene_1_1db_1_1object_1a2ce812569d565a45dda1420cfbdf79ad" kindref="member">object::id</ref> &gt; &gt; &gt; &gt; &gt;</type>
        <definition>using graphene::chain::credit_offer_multi_index_type = typedef multi_index_container&lt; credit_offer_object, indexed_by&lt; ordered_unique&lt; tag&lt;by_id&gt;, member&lt; object, object_id_type, &amp;object::id &gt; &gt;, ordered_unique&lt; tag&lt;by_auto_disable_time&gt;, composite_key&lt; credit_offer_object, member&lt; credit_offer_object, bool, &amp;credit_offer_object::enabled &gt;, member&lt; credit_offer_object, time_point_sec, &amp;credit_offer_object::auto_disable_time &gt;, member&lt; object, object_id_type, &amp;object::id&gt; &gt; &gt;, ordered_unique&lt; tag&lt;by_owner&gt;, composite_key&lt; credit_offer_object, member&lt; credit_offer_object, account_id_type, &amp;credit_offer_object::owner_account &gt;, member&lt; object, object_id_type, &amp;object::id&gt; &gt; &gt;, ordered_unique&lt; tag&lt;by_asset_type&gt;, composite_key&lt; credit_offer_object, member&lt; credit_offer_object, asset_id_type, &amp;credit_offer_object::asset_type &gt;, member&lt; object, object_id_type, &amp;object::id&gt; &gt; &gt; &gt; &gt;</definition>
        <argsstring></argsstring>
        <name>credit_offer_multi_index_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/credit_offer_object.hpp" line="66" column="1" bodyfile="libraries/chain/include/graphene/chain/credit_offer_object.hpp" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegraphene_1_1chain_1a32daa791a05d58a466b4570bab79473b" prot="public" static="no">
        <type><ref refid="classgraphene_1_1db_1_1generic__index" kindref="compound">generic_index</ref>&lt; <ref refid="classgraphene_1_1chain_1_1credit__offer__object" kindref="compound">credit_offer_object</ref>, <ref refid="namespacegraphene_1_1chain_1af289411029e271b820bd95f5ea7888bc" kindref="member">credit_offer_multi_index_type</ref> &gt;</type>
        <definition>using graphene::chain::credit_offer_index = typedef generic_index&lt;credit_offer_object, credit_offer_multi_index_type&gt;</definition>
        <argsstring></argsstring>
        <name>credit_offer_index</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/credit_offer_object.hpp" line="95" column="1" bodyfile="libraries/chain/include/graphene/chain/credit_offer_object.hpp" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegraphene_1_1chain_1ae00246e91e9a3a499ba5d4a902f45722" prot="public" static="no">
        <type>multi_index_container&lt; <ref refid="classgraphene_1_1chain_1_1credit__deal__object" kindref="compound">credit_deal_object</ref>, indexed_by&lt; ordered_unique&lt; tag&lt; by_id &gt;, member&lt; <ref refid="classgraphene_1_1db_1_1object" kindref="compound">object</ref>, <ref refid="structgraphene_1_1db_1_1object__id__type" kindref="compound">object_id_type</ref>, &amp;<ref refid="classgraphene_1_1db_1_1object_1a2ce812569d565a45dda1420cfbdf79ad" kindref="member">object::id</ref> &gt; &gt;, ordered_unique&lt; tag&lt; by_latest_repay_time &gt;, composite_key&lt; <ref refid="classgraphene_1_1chain_1_1credit__deal__object" kindref="compound">credit_deal_object</ref>, member&lt; <ref refid="classgraphene_1_1chain_1_1credit__deal__object" kindref="compound">credit_deal_object</ref>, <ref refid="classfc_1_1time__point__sec" kindref="compound">time_point_sec</ref>, &amp;<ref refid="classgraphene_1_1chain_1_1credit__deal__object_1ad4a8733b44f475e7a082b9f0d9d76b11" kindref="member">credit_deal_object::latest_repay_time</ref> &gt;, member&lt; <ref refid="classgraphene_1_1db_1_1object" kindref="compound">object</ref>, <ref refid="structgraphene_1_1db_1_1object__id__type" kindref="compound">object_id_type</ref>, &amp;<ref refid="classgraphene_1_1db_1_1object_1a2ce812569d565a45dda1420cfbdf79ad" kindref="member">object::id</ref> &gt; &gt; &gt;, ordered_unique&lt; tag&lt; by_offer_id &gt;, composite_key&lt; <ref refid="classgraphene_1_1chain_1_1credit__deal__object" kindref="compound">credit_deal_object</ref>, member&lt; <ref refid="classgraphene_1_1chain_1_1credit__deal__object" kindref="compound">credit_deal_object</ref>, credit_offer_id_type, &amp;<ref refid="classgraphene_1_1chain_1_1credit__deal__object_1a82210b214809b4349142f75afc1dca94" kindref="member">credit_deal_object::offer_id</ref> &gt;, member&lt; <ref refid="classgraphene_1_1db_1_1object" kindref="compound">object</ref>, <ref refid="structgraphene_1_1db_1_1object__id__type" kindref="compound">object_id_type</ref>, &amp;<ref refid="classgraphene_1_1db_1_1object_1a2ce812569d565a45dda1420cfbdf79ad" kindref="member">object::id</ref> &gt; &gt; &gt;, ordered_unique&lt; tag&lt; by_offer_owner &gt;, composite_key&lt; <ref refid="classgraphene_1_1chain_1_1credit__deal__object" kindref="compound">credit_deal_object</ref>, member&lt; <ref refid="classgraphene_1_1chain_1_1credit__deal__object" kindref="compound">credit_deal_object</ref>, account_id_type, &amp;<ref refid="classgraphene_1_1chain_1_1credit__deal__object_1a0babc6df68675d167b998a33aad549b5" kindref="member">credit_deal_object::offer_owner</ref> &gt;, member&lt; <ref refid="classgraphene_1_1db_1_1object" kindref="compound">object</ref>, <ref refid="structgraphene_1_1db_1_1object__id__type" kindref="compound">object_id_type</ref>, &amp;<ref refid="classgraphene_1_1db_1_1object_1a2ce812569d565a45dda1420cfbdf79ad" kindref="member">object::id</ref> &gt; &gt; &gt;, ordered_unique&lt; tag&lt; by_borrower &gt;, composite_key&lt; <ref refid="classgraphene_1_1chain_1_1credit__deal__object" kindref="compound">credit_deal_object</ref>, member&lt; <ref refid="classgraphene_1_1chain_1_1credit__deal__object" kindref="compound">credit_deal_object</ref>, account_id_type, &amp;<ref refid="classgraphene_1_1chain_1_1credit__deal__object_1a4d4e52d1914b45f0f8973499200d03c9" kindref="member">credit_deal_object::borrower</ref> &gt;, member&lt; <ref refid="classgraphene_1_1db_1_1object" kindref="compound">object</ref>, <ref refid="structgraphene_1_1db_1_1object__id__type" kindref="compound">object_id_type</ref>, &amp;<ref refid="classgraphene_1_1db_1_1object_1a2ce812569d565a45dda1420cfbdf79ad" kindref="member">object::id</ref> &gt; &gt; &gt;, ordered_unique&lt; tag&lt; by_debt_asset &gt;, composite_key&lt; <ref refid="classgraphene_1_1chain_1_1credit__deal__object" kindref="compound">credit_deal_object</ref>, member&lt; <ref refid="classgraphene_1_1chain_1_1credit__deal__object" kindref="compound">credit_deal_object</ref>, asset_id_type, &amp;<ref refid="classgraphene_1_1chain_1_1credit__deal__object_1a33ae4c09354c0962b33f87360d917c3f" kindref="member">credit_deal_object::debt_asset</ref> &gt;, member&lt; <ref refid="classgraphene_1_1db_1_1object" kindref="compound">object</ref>, <ref refid="structgraphene_1_1db_1_1object__id__type" kindref="compound">object_id_type</ref>, &amp;<ref refid="classgraphene_1_1db_1_1object_1a2ce812569d565a45dda1420cfbdf79ad" kindref="member">object::id</ref> &gt; &gt; &gt;, ordered_unique&lt; tag&lt; by_collateral_asset &gt;, composite_key&lt; <ref refid="classgraphene_1_1chain_1_1credit__deal__object" kindref="compound">credit_deal_object</ref>, member&lt; <ref refid="classgraphene_1_1chain_1_1credit__deal__object" kindref="compound">credit_deal_object</ref>, asset_id_type, &amp;<ref refid="classgraphene_1_1chain_1_1credit__deal__object_1a40e68da7bf68eff0e9ac44103c516613" kindref="member">credit_deal_object::collateral_asset</ref> &gt;, member&lt; <ref refid="classgraphene_1_1db_1_1object" kindref="compound">object</ref>, <ref refid="structgraphene_1_1db_1_1object__id__type" kindref="compound">object_id_type</ref>, &amp;<ref refid="classgraphene_1_1db_1_1object_1a2ce812569d565a45dda1420cfbdf79ad" kindref="member">object::id</ref> &gt; &gt; &gt; &gt; &gt;</type>
        <definition>using graphene::chain::credit_deal_multi_index_type = typedef multi_index_container&lt; credit_deal_object, indexed_by&lt; ordered_unique&lt; tag&lt;by_id&gt;, member&lt; object, object_id_type, &amp;object::id &gt; &gt;, ordered_unique&lt; tag&lt;by_latest_repay_time&gt;, composite_key&lt; credit_deal_object, member&lt; credit_deal_object, time_point_sec, &amp;credit_deal_object::latest_repay_time &gt;, member&lt; object, object_id_type, &amp;object::id&gt; &gt; &gt;, ordered_unique&lt; tag&lt;by_offer_id&gt;, composite_key&lt; credit_deal_object, member&lt; credit_deal_object, credit_offer_id_type, &amp;credit_deal_object::offer_id &gt;, member&lt; object, object_id_type, &amp;object::id&gt; &gt; &gt;, ordered_unique&lt; tag&lt;by_offer_owner&gt;, composite_key&lt; credit_deal_object, member&lt; credit_deal_object, account_id_type, &amp;credit_deal_object::offer_owner &gt;, member&lt; object, object_id_type, &amp;object::id&gt; &gt; &gt;, ordered_unique&lt; tag&lt;by_borrower&gt;, composite_key&lt; credit_deal_object, member&lt; credit_deal_object, account_id_type, &amp;credit_deal_object::borrower &gt;, member&lt; object, object_id_type, &amp;object::id&gt; &gt; &gt;, ordered_unique&lt; tag&lt;by_debt_asset&gt;, composite_key&lt; credit_deal_object, member&lt; credit_deal_object, asset_id_type, &amp;credit_deal_object::debt_asset &gt;, member&lt; object, object_id_type, &amp;object::id&gt; &gt; &gt;, ordered_unique&lt; tag&lt;by_collateral_asset&gt;, composite_key&lt; credit_deal_object, member&lt; credit_deal_object, asset_id_type, &amp;credit_deal_object::collateral_asset &gt;, member&lt; object, object_id_type, &amp;object::id&gt; &gt; &gt; &gt; &gt;</definition>
        <argsstring></argsstring>
        <name>credit_deal_multi_index_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/credit_offer_object.hpp" line="129" column="1" bodyfile="libraries/chain/include/graphene/chain/credit_offer_object.hpp" bodystart="170" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegraphene_1_1chain_1a70316171030f0f785c20cb205ab9dee3" prot="public" static="no">
        <type><ref refid="classgraphene_1_1db_1_1generic__index" kindref="compound">generic_index</ref>&lt; <ref refid="classgraphene_1_1chain_1_1credit__deal__object" kindref="compound">credit_deal_object</ref>, <ref refid="namespacegraphene_1_1chain_1ae00246e91e9a3a499ba5d4a902f45722" kindref="member">credit_deal_multi_index_type</ref> &gt;</type>
        <definition>using graphene::chain::credit_deal_index = typedef generic_index&lt;credit_deal_object, credit_deal_multi_index_type&gt;</definition>
        <argsstring></argsstring>
        <name>credit_deal_index</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/credit_offer_object.hpp" line="175" column="1" bodyfile="libraries/chain/include/graphene/chain/credit_offer_object.hpp" bodystart="175" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegraphene_1_1chain_1aee8dafc53202f10777a262d4c0af452a" prot="public" static="no">
        <type>multi_index_container&lt; <ref refid="classgraphene_1_1chain_1_1credit__deal__summary__object" kindref="compound">credit_deal_summary_object</ref>, indexed_by&lt; ordered_unique&lt; tag&lt; by_id &gt;, member&lt; <ref refid="classgraphene_1_1db_1_1object" kindref="compound">object</ref>, <ref refid="structgraphene_1_1db_1_1object__id__type" kindref="compound">object_id_type</ref>, &amp;<ref refid="classgraphene_1_1db_1_1object_1a2ce812569d565a45dda1420cfbdf79ad" kindref="member">object::id</ref> &gt; &gt;, ordered_unique&lt; tag&lt; by_offer_borrower &gt;, composite_key&lt; <ref refid="classgraphene_1_1chain_1_1credit__deal__summary__object" kindref="compound">credit_deal_summary_object</ref>, member&lt; <ref refid="classgraphene_1_1chain_1_1credit__deal__summary__object" kindref="compound">credit_deal_summary_object</ref>, credit_offer_id_type, &amp;<ref refid="classgraphene_1_1chain_1_1credit__deal__summary__object_1ae3d5331cc6c9330e9ec30f15496fbac3" kindref="member">credit_deal_summary_object::offer_id</ref> &gt;, member&lt; <ref refid="classgraphene_1_1chain_1_1credit__deal__summary__object" kindref="compound">credit_deal_summary_object</ref>, account_id_type, &amp;<ref refid="classgraphene_1_1chain_1_1credit__deal__summary__object_1a68a532d919edf0baf76f2255b99c56f6" kindref="member">credit_deal_summary_object::borrower</ref> &gt; &gt; &gt; &gt; &gt;</type>
        <definition>using graphene::chain::credit_deal_summary_index_type = typedef multi_index_container&lt; credit_deal_summary_object, indexed_by&lt; ordered_unique&lt; tag&lt;by_id&gt;, member&lt; object, object_id_type, &amp;object::id &gt; &gt;, ordered_unique&lt; tag&lt;by_offer_borrower&gt;, composite_key&lt; credit_deal_summary_object, member&lt; credit_deal_summary_object, credit_offer_id_type, &amp;credit_deal_summary_object::offer_id &gt;, member&lt; credit_deal_summary_object, account_id_type, &amp;credit_deal_summary_object::borrower &gt; &gt; &gt; &gt; &gt;</definition>
        <argsstring></argsstring>
        <name>credit_deal_summary_index_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/credit_offer_object.hpp" line="200" column="1" bodyfile="libraries/chain/include/graphene/chain/credit_offer_object.hpp" bodystart="211" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegraphene_1_1chain_1a39a3a8b60b1cc1aa5adaab0d4d2d19cf" prot="public" static="no">
        <type><ref refid="classgraphene_1_1db_1_1generic__index" kindref="compound">generic_index</ref>&lt; <ref refid="classgraphene_1_1chain_1_1credit__deal__summary__object" kindref="compound">credit_deal_summary_object</ref>, <ref refid="namespacegraphene_1_1chain_1aee8dafc53202f10777a262d4c0af452a" kindref="member">credit_deal_summary_index_type</ref> &gt;</type>
        <definition>using graphene::chain::credit_deal_summary_index = typedef generic_index&lt;credit_deal_summary_object, credit_deal_summary_index_type&gt;</definition>
        <argsstring></argsstring>
        <name>credit_deal_summary_index</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/credit_offer_object.hpp" line="216" column="1" bodyfile="libraries/chain/include/graphene/chain/credit_offer_object.hpp" bodystart="216" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegraphene_1_1chain_1af60a2c51b8afca5091af98025a9cf772" prot="public" static="no">
        <type>multi_index_container&lt; <ref refid="classgraphene_1_1chain_1_1custom__authority__object" kindref="compound">custom_authority_object</ref>, indexed_by&lt; ordered_unique&lt; tag&lt; by_id &gt;, member&lt; <ref refid="classgraphene_1_1db_1_1object" kindref="compound">object</ref>, <ref refid="structgraphene_1_1db_1_1object__id__type" kindref="compound">object_id_type</ref>, &amp;<ref refid="classgraphene_1_1db_1_1object_1a2ce812569d565a45dda1420cfbdf79ad" kindref="member">object::id</ref> &gt; &gt;, ordered_unique&lt; tag&lt; by_account_custom &gt;, composite_key&lt; <ref refid="classgraphene_1_1chain_1_1custom__authority__object" kindref="compound">custom_authority_object</ref>, member&lt; <ref refid="classgraphene_1_1chain_1_1custom__authority__object" kindref="compound">custom_authority_object</ref>, account_id_type, &amp;<ref refid="classgraphene_1_1chain_1_1custom__authority__object_1a85956aecc4624c679513c7b8b393304e" kindref="member">custom_authority_object::account</ref> &gt;, member&lt; <ref refid="classgraphene_1_1chain_1_1custom__authority__object" kindref="compound">custom_authority_object</ref>, <ref refid="structfc_1_1unsigned__int" kindref="compound">unsigned_int</ref>, &amp;<ref refid="classgraphene_1_1chain_1_1custom__authority__object_1acceebca97d4afbfc253904420ffff78f" kindref="member">custom_authority_object::operation_type</ref> &gt;, member&lt; <ref refid="classgraphene_1_1chain_1_1custom__authority__object" kindref="compound">custom_authority_object</ref>, bool, &amp;<ref refid="classgraphene_1_1chain_1_1custom__authority__object_1a7a21d1c75f9eb4298178278cd26ca349" kindref="member">custom_authority_object::enabled</ref> &gt;, member&lt; <ref refid="classgraphene_1_1db_1_1object" kindref="compound">object</ref>, <ref refid="structgraphene_1_1db_1_1object__id__type" kindref="compound">object_id_type</ref>, &amp;<ref refid="classgraphene_1_1db_1_1object_1a2ce812569d565a45dda1420cfbdf79ad" kindref="member">object::id</ref> &gt; &gt; &gt;, ordered_unique&lt; tag&lt; <ref refid="structgraphene_1_1chain_1_1by__expiration" kindref="compound">by_expiration</ref> &gt;, composite_key&lt; <ref refid="classgraphene_1_1chain_1_1custom__authority__object" kindref="compound">custom_authority_object</ref>, member&lt; <ref refid="classgraphene_1_1chain_1_1custom__authority__object" kindref="compound">custom_authority_object</ref>, <ref refid="classfc_1_1time__point__sec" kindref="compound">time_point_sec</ref>, &amp;<ref refid="classgraphene_1_1chain_1_1custom__authority__object_1a647262d49e3c9b324713b22a3c1331fb" kindref="member">custom_authority_object::valid_to</ref> &gt;, member&lt; <ref refid="classgraphene_1_1db_1_1object" kindref="compound">object</ref>, <ref refid="structgraphene_1_1db_1_1object__id__type" kindref="compound">object_id_type</ref>, &amp;<ref refid="classgraphene_1_1db_1_1object_1a2ce812569d565a45dda1420cfbdf79ad" kindref="member">object::id</ref> &gt; &gt; &gt; &gt; &gt;</type>
        <definition>typedef multi_index_container&lt; custom_authority_object, indexed_by&lt; ordered_unique&lt;tag&lt;by_id&gt;, member&lt;object, object_id_type, &amp;object::id&gt; &gt;, ordered_unique&lt;tag&lt;by_account_custom&gt;, composite_key&lt;custom_authority_object, member&lt;custom_authority_object, account_id_type, &amp;custom_authority_object::account&gt;, member&lt;custom_authority_object, unsigned_int, &amp;custom_authority_object::operation_type&gt;, member&lt;custom_authority_object, bool, &amp;custom_authority_object::enabled&gt;, member&lt;object, object_id_type, &amp;object::id&gt; &gt; &gt;, ordered_unique&lt;tag&lt;by_expiration&gt;, composite_key&lt;custom_authority_object, member&lt;custom_authority_object, time_point_sec, &amp;custom_authority_object::valid_to&gt;, member&lt;object, object_id_type, &amp;object::id&gt; &gt; &gt; &gt; &gt; graphene::chain::custom_authority_multi_index_type</definition>
        <argsstring></argsstring>
        <name>custom_authority_multi_index_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/custom_authority_object.hpp" line="105" column="2" bodyfile="libraries/chain/include/graphene/chain/custom_authority_object.hpp" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegraphene_1_1chain_1abce6d1fcc5eed0ef14a3a19d61b7880e" prot="public" static="no">
        <type><ref refid="classgraphene_1_1db_1_1generic__index" kindref="compound">generic_index</ref>&lt; <ref refid="classgraphene_1_1chain_1_1custom__authority__object" kindref="compound">custom_authority_object</ref>, <ref refid="namespacegraphene_1_1chain_1af60a2c51b8afca5091af98025a9cf772" kindref="member">custom_authority_multi_index_type</ref> &gt;</type>
        <definition>using graphene::chain::custom_authority_index = typedef generic_index&lt;custom_authority_object, custom_authority_multi_index_type&gt;</definition>
        <argsstring></argsstring>
        <name>custom_authority_index</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/custom_authority_object.hpp" line="110" column="4" bodyfile="libraries/chain/include/graphene/chain/custom_authority_object.hpp" bodystart="110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegraphene_1_1chain_1a455f7a42385453236a3252fa8ba97654" prot="public" static="no">
        <type>shared_ptr&lt; <ref refid="structgraphene_1_1chain_1_1fork__item" kindref="compound">fork_item</ref> &gt;</type>
        <definition>typedef shared_ptr&lt;fork_item&gt; graphene::chain::item_ptr</definition>
        <argsstring></argsstring>
        <name>item_ptr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/fork_database.hpp" line="57" column="23" bodyfile="libraries/chain/include/graphene/chain/fork_database.hpp" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegraphene_1_1chain_1a144dd83e7972166d74a41b74363f8925" prot="public" static="no">
        <type>multi_index_container&lt; <ref refid="classgraphene_1_1chain_1_1htlc__object" kindref="compound">htlc_object</ref>, indexed_by&lt; ordered_unique&lt; tag&lt; by_id &gt;, member&lt; <ref refid="classgraphene_1_1db_1_1object" kindref="compound">object</ref>, <ref refid="structgraphene_1_1db_1_1object__id__type" kindref="compound">object_id_type</ref>, &amp;<ref refid="classgraphene_1_1db_1_1object_1a2ce812569d565a45dda1420cfbdf79ad" kindref="member">object::id</ref> &gt; &gt;, ordered_unique&lt; tag&lt; <ref refid="structgraphene_1_1chain_1_1by__expiration" kindref="compound">by_expiration</ref> &gt;, composite_key&lt; <ref refid="classgraphene_1_1chain_1_1htlc__object" kindref="compound">htlc_object</ref>, <ref refid="structgraphene_1_1chain_1_1htlc__object_1_1timelock__extractor" kindref="compound">htlc_object::timelock_extractor</ref>, member&lt; <ref refid="classgraphene_1_1db_1_1object" kindref="compound">object</ref>, <ref refid="structgraphene_1_1db_1_1object__id__type" kindref="compound">object_id_type</ref>, &amp;<ref refid="classgraphene_1_1db_1_1object_1a2ce812569d565a45dda1420cfbdf79ad" kindref="member">object::id</ref> &gt; &gt; &gt;, ordered_unique&lt; tag&lt; by_from_id &gt;, composite_key&lt; <ref refid="classgraphene_1_1chain_1_1htlc__object" kindref="compound">htlc_object</ref>, <ref refid="structgraphene_1_1chain_1_1htlc__object_1_1from__extractor" kindref="compound">htlc_object::from_extractor</ref>, member&lt; <ref refid="classgraphene_1_1db_1_1object" kindref="compound">object</ref>, <ref refid="structgraphene_1_1db_1_1object__id__type" kindref="compound">object_id_type</ref>, &amp;<ref refid="classgraphene_1_1db_1_1object_1a2ce812569d565a45dda1420cfbdf79ad" kindref="member">object::id</ref> &gt; &gt; &gt;, ordered_unique&lt; tag&lt; by_to_id &gt;, composite_key&lt; <ref refid="classgraphene_1_1chain_1_1htlc__object" kindref="compound">htlc_object</ref>, <ref refid="structgraphene_1_1chain_1_1htlc__object_1_1to__extractor" kindref="compound">htlc_object::to_extractor</ref>, member&lt; <ref refid="classgraphene_1_1db_1_1object" kindref="compound">object</ref>, <ref refid="structgraphene_1_1db_1_1object__id__type" kindref="compound">object_id_type</ref>, &amp;<ref refid="classgraphene_1_1db_1_1object_1a2ce812569d565a45dda1420cfbdf79ad" kindref="member">object::id</ref> &gt; &gt; &gt; &gt; &gt;</type>
        <definition>using graphene::chain::htlc_object_multi_index_type = typedef multi_index_container&lt; htlc_object, indexed_by&lt; ordered_unique&lt; tag&lt; by_id &gt;, member&lt; object, object_id_type, &amp;object::id &gt; &gt;, ordered_unique&lt; tag&lt; by_expiration &gt;, composite_key&lt; htlc_object, htlc_object::timelock_extractor, member&lt; object, object_id_type, &amp;object::id &gt; &gt; &gt;, ordered_unique&lt; tag&lt; by_from_id &gt;, composite_key&lt; htlc_object, htlc_object::from_extractor, member&lt; object, object_id_type, &amp;object::id &gt; &gt; &gt;, ordered_unique&lt; tag&lt; by_to_id &gt;, composite_key&lt; htlc_object, htlc_object::to_extractor, member&lt; object, object_id_type, &amp;object::id &gt; &gt; &gt; &gt; &gt;</definition>
        <argsstring></argsstring>
        <name>htlc_object_multi_index_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/htlc_object.hpp" line="97" column="4" bodyfile="libraries/chain/include/graphene/chain/htlc_object.hpp" bodystart="114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegraphene_1_1chain_1a52f95bf7f1d5ba9b3a3a36e7b98bda57" prot="public" static="no">
        <type><ref refid="classgraphene_1_1db_1_1generic__index" kindref="compound">generic_index</ref>&lt; <ref refid="classgraphene_1_1chain_1_1htlc__object" kindref="compound">htlc_object</ref>, <ref refid="namespacegraphene_1_1chain_1a144dd83e7972166d74a41b74363f8925" kindref="member">htlc_object_multi_index_type</ref> &gt;</type>
        <definition>using graphene::chain::htlc_index = typedef generic_index&lt; htlc_object, htlc_object_multi_index_type &gt;</definition>
        <argsstring></argsstring>
        <name>htlc_index</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/htlc_object.hpp" line="116" column="4" bodyfile="libraries/chain/include/graphene/chain/htlc_object.hpp" bodystart="116" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegraphene_1_1chain_1a2afe5dd8e137dee2c346b5b9f64e4cb2" prot="public" static="no">
        <type>multi_index_container&lt; <ref refid="classgraphene_1_1chain_1_1liquidity__pool__object" kindref="compound">liquidity_pool_object</ref>, indexed_by&lt; ordered_unique&lt; tag&lt; by_id &gt;, member&lt; <ref refid="classgraphene_1_1db_1_1object" kindref="compound">object</ref>, <ref refid="structgraphene_1_1db_1_1object__id__type" kindref="compound">object_id_type</ref>, &amp;<ref refid="classgraphene_1_1db_1_1object_1a2ce812569d565a45dda1420cfbdf79ad" kindref="member">object::id</ref> &gt; &gt;, ordered_unique&lt; tag&lt; by_share_asset &gt;, member&lt; <ref refid="classgraphene_1_1chain_1_1liquidity__pool__object" kindref="compound">liquidity_pool_object</ref>, asset_id_type, &amp;<ref refid="classgraphene_1_1chain_1_1liquidity__pool__object_1a26db66f167d22c1614e1d2c99f7ac4d7" kindref="member">liquidity_pool_object::share_asset</ref> &gt; &gt;, ordered_unique&lt; tag&lt; by_asset_a &gt;, composite_key&lt; <ref refid="classgraphene_1_1chain_1_1liquidity__pool__object" kindref="compound">liquidity_pool_object</ref>, member&lt; <ref refid="classgraphene_1_1chain_1_1liquidity__pool__object" kindref="compound">liquidity_pool_object</ref>, asset_id_type, &amp;<ref refid="classgraphene_1_1chain_1_1liquidity__pool__object_1a69d7ba539a04cd7af4beef00a5745b0d" kindref="member">liquidity_pool_object::asset_a</ref> &gt;, member&lt; <ref refid="classgraphene_1_1db_1_1object" kindref="compound">object</ref>, <ref refid="structgraphene_1_1db_1_1object__id__type" kindref="compound">object_id_type</ref>, &amp;<ref refid="classgraphene_1_1db_1_1object_1a2ce812569d565a45dda1420cfbdf79ad" kindref="member">object::id</ref> &gt; &gt; &gt;, ordered_unique&lt; tag&lt; by_asset_b &gt;, composite_key&lt; <ref refid="classgraphene_1_1chain_1_1liquidity__pool__object" kindref="compound">liquidity_pool_object</ref>, member&lt; <ref refid="classgraphene_1_1chain_1_1liquidity__pool__object" kindref="compound">liquidity_pool_object</ref>, asset_id_type, &amp;<ref refid="classgraphene_1_1chain_1_1liquidity__pool__object_1a4d4fc058999c71f0d7b61caf6e396474" kindref="member">liquidity_pool_object::asset_b</ref> &gt;, member&lt; <ref refid="classgraphene_1_1db_1_1object" kindref="compound">object</ref>, <ref refid="structgraphene_1_1db_1_1object__id__type" kindref="compound">object_id_type</ref>, &amp;<ref refid="classgraphene_1_1db_1_1object_1a2ce812569d565a45dda1420cfbdf79ad" kindref="member">object::id</ref> &gt; &gt; &gt;, ordered_unique&lt; tag&lt; by_asset_ab &gt;, composite_key&lt; <ref refid="classgraphene_1_1chain_1_1liquidity__pool__object" kindref="compound">liquidity_pool_object</ref>, member&lt; <ref refid="classgraphene_1_1chain_1_1liquidity__pool__object" kindref="compound">liquidity_pool_object</ref>, asset_id_type, &amp;<ref refid="classgraphene_1_1chain_1_1liquidity__pool__object_1a69d7ba539a04cd7af4beef00a5745b0d" kindref="member">liquidity_pool_object::asset_a</ref> &gt;, member&lt; <ref refid="classgraphene_1_1chain_1_1liquidity__pool__object" kindref="compound">liquidity_pool_object</ref>, asset_id_type, &amp;<ref refid="classgraphene_1_1chain_1_1liquidity__pool__object_1a4d4fc058999c71f0d7b61caf6e396474" kindref="member">liquidity_pool_object::asset_b</ref> &gt;, member&lt; <ref refid="classgraphene_1_1db_1_1object" kindref="compound">object</ref>, <ref refid="structgraphene_1_1db_1_1object__id__type" kindref="compound">object_id_type</ref>, &amp;<ref refid="classgraphene_1_1db_1_1object_1a2ce812569d565a45dda1420cfbdf79ad" kindref="member">object::id</ref> &gt; &gt; &gt; &gt;&gt;</type>
        <definition>typedef multi_index_container&lt; liquidity_pool_object, indexed_by&lt; ordered_unique&lt; tag&lt;by_id&gt;, member&lt; object, object_id_type, &amp;object::id &gt; &gt;, ordered_unique&lt; tag&lt;by_share_asset&gt;, member&lt; liquidity_pool_object, asset_id_type, &amp;liquidity_pool_object::share_asset &gt; &gt;, ordered_unique&lt; tag&lt;by_asset_a&gt;, composite_key&lt; liquidity_pool_object, member&lt; liquidity_pool_object, asset_id_type, &amp;liquidity_pool_object::asset_a &gt;, member&lt; object, object_id_type, &amp;object::id&gt; &gt; &gt;, ordered_unique&lt; tag&lt;by_asset_b&gt;, composite_key&lt; liquidity_pool_object, member&lt; liquidity_pool_object, asset_id_type, &amp;liquidity_pool_object::asset_b &gt;, member&lt; object, object_id_type, &amp;object::id&gt; &gt; &gt;, ordered_unique&lt; tag&lt;by_asset_ab&gt;, composite_key&lt; liquidity_pool_object, member&lt; liquidity_pool_object, asset_id_type, &amp;liquidity_pool_object::asset_a &gt;, member&lt; liquidity_pool_object, asset_id_type, &amp;liquidity_pool_object::asset_b &gt;, member&lt; object, object_id_type, &amp;object::id&gt; &gt; &gt; &gt;&gt; graphene::chain::liquidity_pool_multi_index_type</definition>
        <argsstring></argsstring>
        <name>liquidity_pool_multi_index_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/liquidity_pool_object.hpp" line="96" column="2" bodyfile="libraries/chain/include/graphene/chain/liquidity_pool_object.hpp" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegraphene_1_1chain_1a25fbcb70706f265f5109cc12895f033b" prot="public" static="no">
        <type><ref refid="classgraphene_1_1db_1_1generic__index" kindref="compound">generic_index</ref>&lt; <ref refid="classgraphene_1_1chain_1_1liquidity__pool__object" kindref="compound">liquidity_pool_object</ref>, <ref refid="namespacegraphene_1_1chain_1a2afe5dd8e137dee2c346b5b9f64e4cb2" kindref="member">liquidity_pool_multi_index_type</ref> &gt;</type>
        <definition>typedef generic_index&lt;liquidity_pool_object, liquidity_pool_multi_index_type&gt; graphene::chain::liquidity_pool_index</definition>
        <argsstring></argsstring>
        <name>liquidity_pool_index</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/liquidity_pool_object.hpp" line="101" column="23" bodyfile="libraries/chain/include/graphene/chain/liquidity_pool_object.hpp" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegraphene_1_1chain_1a43515cee19a2b4d8e7f3ba941d735b4a" prot="public" static="no">
        <type>multi_index_container&lt; <ref refid="classgraphene_1_1chain_1_1limit__order__object" kindref="compound">limit_order_object</ref>, indexed_by&lt; ordered_unique&lt; tag&lt; by_id &gt;, member&lt; <ref refid="classgraphene_1_1db_1_1object" kindref="compound">object</ref>, <ref refid="structgraphene_1_1db_1_1object__id__type" kindref="compound">object_id_type</ref>, &amp;<ref refid="classgraphene_1_1db_1_1object_1a2ce812569d565a45dda1420cfbdf79ad" kindref="member">object::id</ref> &gt; &gt;, ordered_unique&lt; tag&lt; <ref refid="structgraphene_1_1chain_1_1by__expiration" kindref="compound">by_expiration</ref> &gt;, composite_key&lt; <ref refid="classgraphene_1_1chain_1_1limit__order__object" kindref="compound">limit_order_object</ref>, member&lt; <ref refid="classgraphene_1_1chain_1_1limit__order__object" kindref="compound">limit_order_object</ref>, <ref refid="classfc_1_1time__point__sec" kindref="compound">time_point_sec</ref>, &amp;<ref refid="classgraphene_1_1chain_1_1limit__order__object_1a5ba529f677c8917605db7f28dac8a05d" kindref="member">limit_order_object::expiration</ref> &gt;, member&lt; <ref refid="classgraphene_1_1db_1_1object" kindref="compound">object</ref>, <ref refid="structgraphene_1_1db_1_1object__id__type" kindref="compound">object_id_type</ref>, &amp;<ref refid="classgraphene_1_1db_1_1object_1a2ce812569d565a45dda1420cfbdf79ad" kindref="member">object::id</ref> &gt; &gt; &gt;, ordered_unique&lt; tag&lt; by_price &gt;, composite_key&lt; <ref refid="classgraphene_1_1chain_1_1limit__order__object" kindref="compound">limit_order_object</ref>, member&lt; <ref refid="classgraphene_1_1chain_1_1limit__order__object" kindref="compound">limit_order_object</ref>, <ref refid="structgraphene_1_1protocol_1_1price" kindref="compound">price</ref>, &amp;<ref refid="classgraphene_1_1chain_1_1limit__order__object_1ae0546fce0941e19f3128cbb31fb49199" kindref="member">limit_order_object::sell_price</ref> &gt;, member&lt; <ref refid="classgraphene_1_1db_1_1object" kindref="compound">object</ref>, <ref refid="structgraphene_1_1db_1_1object__id__type" kindref="compound">object_id_type</ref>, &amp;<ref refid="classgraphene_1_1db_1_1object_1a2ce812569d565a45dda1420cfbdf79ad" kindref="member">object::id</ref> &gt; &gt;, composite_key_compare&lt; std::greater&lt; <ref refid="structgraphene_1_1protocol_1_1price" kindref="compound">price</ref> &gt;, std::less&lt; <ref refid="structgraphene_1_1db_1_1object__id__type" kindref="compound">object_id_type</ref> &gt; &gt; &gt;, ordered_unique&lt; tag&lt; by_is_settled_debt &gt;, composite_key&lt; <ref refid="classgraphene_1_1chain_1_1limit__order__object" kindref="compound">limit_order_object</ref>, member&lt; <ref refid="classgraphene_1_1chain_1_1limit__order__object" kindref="compound">limit_order_object</ref>, bool, &amp;<ref refid="classgraphene_1_1chain_1_1limit__order__object_1aab7cfc8acccbf37683ce4966555d6ed4" kindref="member">limit_order_object::is_settled_debt</ref> &gt;, const_mem_fun&lt; <ref refid="classgraphene_1_1chain_1_1limit__order__object" kindref="compound">limit_order_object</ref>, asset_id_type, &amp;<ref refid="classgraphene_1_1chain_1_1limit__order__object_1abcb64bac3120e0006686f8aa6367f0c8" kindref="member">limit_order_object::receive_asset_id</ref> &gt;, member&lt; <ref refid="classgraphene_1_1db_1_1object" kindref="compound">object</ref>, <ref refid="structgraphene_1_1db_1_1object__id__type" kindref="compound">object_id_type</ref>, &amp;<ref refid="classgraphene_1_1db_1_1object_1a2ce812569d565a45dda1420cfbdf79ad" kindref="member">object::id</ref> &gt; &gt; &gt;, ordered_unique&lt; tag&lt; by_account &gt;, composite_key&lt; <ref refid="classgraphene_1_1chain_1_1limit__order__object" kindref="compound">limit_order_object</ref>, member&lt; <ref refid="classgraphene_1_1chain_1_1limit__order__object" kindref="compound">limit_order_object</ref>, account_id_type, &amp;<ref refid="classgraphene_1_1chain_1_1limit__order__object_1a409d8c97cfaef8aaa60286afd0ae9c26" kindref="member">limit_order_object::seller</ref> &gt;, member&lt; <ref refid="classgraphene_1_1db_1_1object" kindref="compound">object</ref>, <ref refid="structgraphene_1_1db_1_1object__id__type" kindref="compound">object_id_type</ref>, &amp;<ref refid="classgraphene_1_1db_1_1object_1a2ce812569d565a45dda1420cfbdf79ad" kindref="member">object::id</ref> &gt; &gt; &gt;, ordered_unique&lt; tag&lt; by_account_price &gt;, composite_key&lt; <ref refid="classgraphene_1_1chain_1_1limit__order__object" kindref="compound">limit_order_object</ref>, member&lt; <ref refid="classgraphene_1_1chain_1_1limit__order__object" kindref="compound">limit_order_object</ref>, account_id_type, &amp;<ref refid="classgraphene_1_1chain_1_1limit__order__object_1a409d8c97cfaef8aaa60286afd0ae9c26" kindref="member">limit_order_object::seller</ref> &gt;, member&lt; <ref refid="classgraphene_1_1chain_1_1limit__order__object" kindref="compound">limit_order_object</ref>, <ref refid="structgraphene_1_1protocol_1_1price" kindref="compound">price</ref>, &amp;<ref refid="classgraphene_1_1chain_1_1limit__order__object_1ae0546fce0941e19f3128cbb31fb49199" kindref="member">limit_order_object::sell_price</ref> &gt;, member&lt; <ref refid="classgraphene_1_1db_1_1object" kindref="compound">object</ref>, <ref refid="structgraphene_1_1db_1_1object__id__type" kindref="compound">object_id_type</ref>, &amp;<ref refid="classgraphene_1_1db_1_1object_1a2ce812569d565a45dda1420cfbdf79ad" kindref="member">object::id</ref> &gt; &gt;, composite_key_compare&lt; std::less&lt; account_id_type &gt;, std::greater&lt; <ref refid="structgraphene_1_1protocol_1_1price" kindref="compound">price</ref> &gt;, std::less&lt; <ref refid="structgraphene_1_1db_1_1object__id__type" kindref="compound">object_id_type</ref> &gt; &gt; &gt; &gt;&gt;</type>
        <definition>typedef multi_index_container&lt; limit_order_object, indexed_by&lt; ordered_unique&lt; tag&lt;by_id&gt;, member&lt; object, object_id_type, &amp;object::id &gt; &gt;, ordered_unique&lt; tag&lt;by_expiration&gt;, composite_key&lt; limit_order_object, member&lt; limit_order_object, time_point_sec, &amp;limit_order_object::expiration&gt;, member&lt; object, object_id_type, &amp;object::id&gt; &gt; &gt;, ordered_unique&lt; tag&lt;by_price&gt;, composite_key&lt; limit_order_object, member&lt; limit_order_object, price, &amp;limit_order_object::sell_price&gt;, member&lt; object, object_id_type, &amp;object::id&gt; &gt;, composite_key_compare&lt; std::greater&lt;price&gt;, std::less&lt;object_id_type&gt; &gt; &gt;, ordered_unique&lt; tag&lt;by_is_settled_debt&gt;, composite_key&lt; limit_order_object, member&lt; limit_order_object, bool, &amp;limit_order_object::is_settled_debt &gt;, const_mem_fun&lt; limit_order_object, asset_id_type, &amp;limit_order_object::receive_asset_id &gt;, member&lt; object, object_id_type, &amp;object::id&gt; &gt; &gt;, ordered_unique&lt; tag&lt;by_account&gt;, composite_key&lt; limit_order_object, member&lt;limit_order_object, account_id_type, &amp;limit_order_object::seller&gt;, member&lt;object, object_id_type, &amp;object::id&gt; &gt; &gt;, ordered_unique&lt; tag&lt;by_account_price&gt;, composite_key&lt; limit_order_object, member&lt;limit_order_object, account_id_type, &amp;limit_order_object::seller&gt;, member&lt;limit_order_object, price, &amp;limit_order_object::sell_price&gt;, member&lt;object, object_id_type, &amp;object::id&gt; &gt;, composite_key_compare&lt;std::less&lt;account_id_type&gt;, std::greater&lt;price&gt;, std::less&lt;object_id_type&gt; &gt; &gt; &gt;&gt; graphene::chain::limit_order_multi_index_type</definition>
        <argsstring></argsstring>
        <name>limit_order_multi_index_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/market_object.hpp" line="129" column="2" bodyfile="libraries/chain/include/graphene/chain/market_object.hpp" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegraphene_1_1chain_1aaf4dd0d1046a013faacd7915c57a2576" prot="public" static="no">
        <type><ref refid="classgraphene_1_1db_1_1generic__index" kindref="compound">generic_index</ref>&lt; <ref refid="classgraphene_1_1chain_1_1limit__order__object" kindref="compound">limit_order_object</ref>, <ref refid="namespacegraphene_1_1chain_1a43515cee19a2b4d8e7f3ba941d735b4a" kindref="member">limit_order_multi_index_type</ref> &gt;</type>
        <definition>typedef generic_index&lt;limit_order_object, limit_order_multi_index_type&gt; graphene::chain::limit_order_index</definition>
        <argsstring></argsstring>
        <name>limit_order_index</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/market_object.hpp" line="131" column="23" bodyfile="libraries/chain/include/graphene/chain/market_object.hpp" bodystart="131" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegraphene_1_1chain_1a2e1685c221ee0974adf63bdb92ee0dd6" prot="public" static="no">
        <type>multi_index_container&lt; <ref refid="classgraphene_1_1chain_1_1call__order__object" kindref="compound">call_order_object</ref>, indexed_by&lt; ordered_unique&lt; tag&lt; by_id &gt;, member&lt; <ref refid="classgraphene_1_1db_1_1object" kindref="compound">object</ref>, <ref refid="structgraphene_1_1db_1_1object__id__type" kindref="compound">object_id_type</ref>, &amp;<ref refid="classgraphene_1_1db_1_1object_1a2ce812569d565a45dda1420cfbdf79ad" kindref="member">object::id</ref> &gt; &gt;, ordered_unique&lt; tag&lt; by_price &gt;, composite_key&lt; <ref refid="classgraphene_1_1chain_1_1call__order__object" kindref="compound">call_order_object</ref>, member&lt; <ref refid="classgraphene_1_1chain_1_1call__order__object" kindref="compound">call_order_object</ref>, <ref refid="structgraphene_1_1protocol_1_1price" kindref="compound">price</ref>, &amp;<ref refid="classgraphene_1_1chain_1_1call__order__object_1adfd7a641c2761e4a3366db5862d95fcc" kindref="member">call_order_object::call_price</ref> &gt;, member&lt; <ref refid="classgraphene_1_1db_1_1object" kindref="compound">object</ref>, <ref refid="structgraphene_1_1db_1_1object__id__type" kindref="compound">object_id_type</ref>, &amp;<ref refid="classgraphene_1_1db_1_1object_1a2ce812569d565a45dda1420cfbdf79ad" kindref="member">object::id</ref> &gt; &gt;, composite_key_compare&lt; std::less&lt; <ref refid="structgraphene_1_1protocol_1_1price" kindref="compound">price</ref> &gt;, std::less&lt; <ref refid="structgraphene_1_1db_1_1object__id__type" kindref="compound">object_id_type</ref> &gt; &gt; &gt;, ordered_unique&lt; tag&lt; by_account &gt;, composite_key&lt; <ref refid="classgraphene_1_1chain_1_1call__order__object" kindref="compound">call_order_object</ref>, member&lt; <ref refid="classgraphene_1_1chain_1_1call__order__object" kindref="compound">call_order_object</ref>, account_id_type, &amp;<ref refid="classgraphene_1_1chain_1_1call__order__object_1ac4996a67c8cf9be42bb9275240d6bcd0" kindref="member">call_order_object::borrower</ref> &gt;, const_mem_fun&lt; <ref refid="classgraphene_1_1chain_1_1call__order__object" kindref="compound">call_order_object</ref>, asset_id_type, &amp;<ref refid="classgraphene_1_1chain_1_1call__order__object_1a9813f0b057877885697c133c67fa29a7" kindref="member">call_order_object::debt_type</ref> &gt; &gt; &gt;, ordered_unique&lt; tag&lt; by_collateral &gt;, composite_key&lt; <ref refid="classgraphene_1_1chain_1_1call__order__object" kindref="compound">call_order_object</ref>, const_mem_fun&lt; <ref refid="classgraphene_1_1chain_1_1call__order__object" kindref="compound">call_order_object</ref>, <ref refid="structgraphene_1_1protocol_1_1price" kindref="compound">price</ref>, &amp;<ref refid="classgraphene_1_1chain_1_1call__order__object_1ae002873c5f4431e4c44a4ab05593f2d0" kindref="member">call_order_object::collateralization</ref> &gt;, member&lt; <ref refid="classgraphene_1_1db_1_1object" kindref="compound">object</ref>, <ref refid="structgraphene_1_1db_1_1object__id__type" kindref="compound">object_id_type</ref>, &amp;<ref refid="classgraphene_1_1db_1_1object_1a2ce812569d565a45dda1420cfbdf79ad" kindref="member">object::id</ref> &gt; &gt; &gt; &gt;&gt;</type>
        <definition>typedef multi_index_container&lt; call_order_object, indexed_by&lt; ordered_unique&lt; tag&lt;by_id&gt;, member&lt; object, object_id_type, &amp;object::id &gt; &gt;, ordered_unique&lt; tag&lt;by_price&gt;, composite_key&lt; call_order_object, member&lt; call_order_object, price, &amp;call_order_object::call_price&gt;, member&lt; object, object_id_type, &amp;object::id&gt; &gt;, composite_key_compare&lt; std::less&lt;price&gt;, std::less&lt;object_id_type&gt; &gt; &gt;, ordered_unique&lt; tag&lt;by_account&gt;, composite_key&lt; call_order_object, member&lt; call_order_object, account_id_type, &amp;call_order_object::borrower &gt;, const_mem_fun&lt; call_order_object, asset_id_type, &amp;call_order_object::debt_type&gt; &gt; &gt;, ordered_unique&lt; tag&lt;by_collateral&gt;, composite_key&lt; call_order_object, const_mem_fun&lt; call_order_object, price, &amp;call_order_object::collateralization &gt;, member&lt; object, object_id_type, &amp;object::id &gt; &gt; &gt; &gt;&gt; graphene::chain::call_order_multi_index_type</definition>
        <argsstring></argsstring>
        <name>call_order_multi_index_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/market_object.hpp" line="246" column="2" bodyfile="libraries/chain/include/graphene/chain/market_object.hpp" bodystart="220" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegraphene_1_1chain_1ab8e407c0dd1b68c111f9c852e0b90a7d" prot="public" static="no">
        <type>multi_index_container&lt; <ref refid="classgraphene_1_1chain_1_1force__settlement__object" kindref="compound">force_settlement_object</ref>, indexed_by&lt; ordered_unique&lt; tag&lt; by_id &gt;, member&lt; <ref refid="classgraphene_1_1db_1_1object" kindref="compound">object</ref>, <ref refid="structgraphene_1_1db_1_1object__id__type" kindref="compound">object_id_type</ref>, &amp;<ref refid="classgraphene_1_1db_1_1object_1a2ce812569d565a45dda1420cfbdf79ad" kindref="member">object::id</ref> &gt; &gt;, ordered_unique&lt; tag&lt; by_account &gt;, composite_key&lt; <ref refid="classgraphene_1_1chain_1_1force__settlement__object" kindref="compound">force_settlement_object</ref>, member&lt; <ref refid="classgraphene_1_1chain_1_1force__settlement__object" kindref="compound">force_settlement_object</ref>, account_id_type, &amp;<ref refid="classgraphene_1_1chain_1_1force__settlement__object_1ac8de2416504f8e2f3425bb5ff459805f" kindref="member">force_settlement_object::owner</ref> &gt;, member&lt; <ref refid="classgraphene_1_1db_1_1object" kindref="compound">object</ref>, <ref refid="structgraphene_1_1db_1_1object__id__type" kindref="compound">object_id_type</ref>, &amp;<ref refid="classgraphene_1_1db_1_1object_1a2ce812569d565a45dda1420cfbdf79ad" kindref="member">object::id</ref> &gt; &gt; &gt;, ordered_unique&lt; tag&lt; <ref refid="structgraphene_1_1chain_1_1by__expiration" kindref="compound">by_expiration</ref> &gt;, composite_key&lt; <ref refid="classgraphene_1_1chain_1_1force__settlement__object" kindref="compound">force_settlement_object</ref>, const_mem_fun&lt; <ref refid="classgraphene_1_1chain_1_1force__settlement__object" kindref="compound">force_settlement_object</ref>, asset_id_type, &amp;<ref refid="classgraphene_1_1chain_1_1force__settlement__object_1a28b1ef9dc3f94196d579e093d7e569dd" kindref="member">force_settlement_object::settlement_asset_id</ref> &gt;, member&lt; <ref refid="classgraphene_1_1chain_1_1force__settlement__object" kindref="compound">force_settlement_object</ref>, <ref refid="classfc_1_1time__point__sec" kindref="compound">time_point_sec</ref>, &amp;<ref refid="classgraphene_1_1chain_1_1force__settlement__object_1a0103c99d7da425720324c3173a24c27c" kindref="member">force_settlement_object::settlement_date</ref> &gt;, member&lt; <ref refid="classgraphene_1_1db_1_1object" kindref="compound">object</ref>, <ref refid="structgraphene_1_1db_1_1object__id__type" kindref="compound">object_id_type</ref>, &amp;<ref refid="classgraphene_1_1db_1_1object_1a2ce812569d565a45dda1420cfbdf79ad" kindref="member">object::id</ref> &gt; &gt; &gt; &gt;&gt;</type>
        <definition>typedef multi_index_container&lt; force_settlement_object, indexed_by&lt; ordered_unique&lt; tag&lt;by_id&gt;, member&lt; object, object_id_type, &amp;object::id &gt; &gt;, ordered_unique&lt; tag&lt;by_account&gt;, composite_key&lt; force_settlement_object, member&lt;force_settlement_object, account_id_type, &amp;force_settlement_object::owner&gt;, member&lt; object, object_id_type, &amp;object::id &gt; &gt; &gt;, ordered_unique&lt; tag&lt;by_expiration&gt;, composite_key&lt; force_settlement_object, const_mem_fun&lt;force_settlement_object, asset_id_type, &amp;force_settlement_object::settlement_asset_id&gt;, member&lt;force_settlement_object, time_point_sec, &amp;force_settlement_object::settlement_date&gt;, member&lt; object, object_id_type, &amp;object::id &gt; &gt; &gt; &gt;&gt; graphene::chain::force_settlement_object_multi_index_type</definition>
        <argsstring></argsstring>
        <name>force_settlement_object_multi_index_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/market_object.hpp" line="267" column="2" bodyfile="libraries/chain/include/graphene/chain/market_object.hpp" bodystart="248" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegraphene_1_1chain_1a0e8391790f2e14737f178707d17c3317" prot="public" static="no">
        <type>multi_index_container&lt; <ref refid="classgraphene_1_1chain_1_1collateral__bid__object" kindref="compound">collateral_bid_object</ref>, indexed_by&lt; ordered_unique&lt; tag&lt; by_id &gt;, member&lt; <ref refid="classgraphene_1_1db_1_1object" kindref="compound">object</ref>, <ref refid="structgraphene_1_1db_1_1object__id__type" kindref="compound">object_id_type</ref>, &amp;<ref refid="classgraphene_1_1db_1_1object_1a2ce812569d565a45dda1420cfbdf79ad" kindref="member">object::id</ref> &gt; &gt;, ordered_unique&lt; tag&lt; by_account &gt;, composite_key&lt; <ref refid="classgraphene_1_1chain_1_1collateral__bid__object" kindref="compound">collateral_bid_object</ref>, const_mem_fun&lt; <ref refid="classgraphene_1_1chain_1_1collateral__bid__object" kindref="compound">collateral_bid_object</ref>, asset_id_type, &amp;<ref refid="classgraphene_1_1chain_1_1collateral__bid__object_1a9a81dbffc55704cc9e41a81986d14fa9" kindref="member">collateral_bid_object::debt_type</ref> &gt;, member&lt; <ref refid="classgraphene_1_1chain_1_1collateral__bid__object" kindref="compound">collateral_bid_object</ref>, account_id_type, &amp;<ref refid="classgraphene_1_1chain_1_1collateral__bid__object_1ae942b411820989fac2636a5873d7485c" kindref="member">collateral_bid_object::bidder</ref> &gt; &gt; &gt;, ordered_unique&lt; tag&lt; by_price &gt;, composite_key&lt; <ref refid="classgraphene_1_1chain_1_1collateral__bid__object" kindref="compound">collateral_bid_object</ref>, const_mem_fun&lt; <ref refid="classgraphene_1_1chain_1_1collateral__bid__object" kindref="compound">collateral_bid_object</ref>, asset_id_type, &amp;<ref refid="classgraphene_1_1chain_1_1collateral__bid__object_1a9a81dbffc55704cc9e41a81986d14fa9" kindref="member">collateral_bid_object::debt_type</ref> &gt;, member&lt; <ref refid="classgraphene_1_1chain_1_1collateral__bid__object" kindref="compound">collateral_bid_object</ref>, <ref refid="structgraphene_1_1protocol_1_1price" kindref="compound">price</ref>, &amp;<ref refid="classgraphene_1_1chain_1_1collateral__bid__object_1a918e9c9fd9d7dadcd9144ff79dc5fb1f" kindref="member">collateral_bid_object::inv_swan_price</ref> &gt;, member&lt; <ref refid="classgraphene_1_1db_1_1object" kindref="compound">object</ref>, <ref refid="structgraphene_1_1db_1_1object__id__type" kindref="compound">object_id_type</ref>, &amp;<ref refid="classgraphene_1_1db_1_1object_1a2ce812569d565a45dda1420cfbdf79ad" kindref="member">object::id</ref> &gt; &gt;, composite_key_compare&lt; std::less&lt; asset_id_type &gt;, std::greater&lt; <ref refid="structgraphene_1_1protocol_1_1price" kindref="compound">price</ref> &gt;, std::less&lt; <ref refid="structgraphene_1_1db_1_1object__id__type" kindref="compound">object_id_type</ref> &gt; &gt; &gt; &gt;&gt;</type>
        <definition>typedef multi_index_container&lt; collateral_bid_object, indexed_by&lt; ordered_unique&lt; tag&lt;by_id&gt;, member&lt; object, object_id_type, &amp;object::id &gt; &gt;, ordered_unique&lt; tag&lt;by_account&gt;, composite_key&lt; collateral_bid_object, const_mem_fun&lt; collateral_bid_object, asset_id_type, &amp;collateral_bid_object::debt_type&gt;, member&lt; collateral_bid_object, account_id_type, &amp;collateral_bid_object::bidder&gt; &gt; &gt;, ordered_unique&lt; tag&lt;by_price&gt;, composite_key&lt; collateral_bid_object, const_mem_fun&lt; collateral_bid_object, asset_id_type, &amp;collateral_bid_object::debt_type&gt;, member&lt; collateral_bid_object, price, &amp;collateral_bid_object::inv_swan_price &gt;, member&lt; object, object_id_type, &amp;object::id &gt; &gt;, composite_key_compare&lt; std::less&lt;asset_id_type&gt;, std::greater&lt;price&gt;, std::less&lt;object_id_type&gt; &gt; &gt; &gt;&gt; graphene::chain::collateral_bid_object_multi_index_type</definition>
        <argsstring></argsstring>
        <name>collateral_bid_object_multi_index_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/market_object.hpp" line="289" column="2" bodyfile="libraries/chain/include/graphene/chain/market_object.hpp" bodystart="289" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegraphene_1_1chain_1a683f30af8f65dbb48389c656b53bca15" prot="public" static="no">
        <type><ref refid="classgraphene_1_1db_1_1generic__index" kindref="compound">generic_index</ref>&lt; <ref refid="classgraphene_1_1chain_1_1call__order__object" kindref="compound">call_order_object</ref>, <ref refid="namespacegraphene_1_1chain_1a2e1685c221ee0974adf63bdb92ee0dd6" kindref="member">call_order_multi_index_type</ref> &gt;</type>
        <definition>typedef generic_index&lt;call_order_object, call_order_multi_index_type&gt; graphene::chain::call_order_index</definition>
        <argsstring></argsstring>
        <name>call_order_index</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/market_object.hpp" line="291" column="44" bodyfile="libraries/chain/include/graphene/chain/market_object.hpp" bodystart="291" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegraphene_1_1chain_1a84985695f51d85932ea082806c7c11f3" prot="public" static="no">
        <type><ref refid="classgraphene_1_1db_1_1generic__index" kindref="compound">generic_index</ref>&lt; <ref refid="classgraphene_1_1chain_1_1force__settlement__object" kindref="compound">force_settlement_object</ref>, <ref refid="namespacegraphene_1_1chain_1ab8e407c0dd1b68c111f9c852e0b90a7d" kindref="member">force_settlement_object_multi_index_type</ref> &gt;</type>
        <definition>typedef generic_index&lt;force_settlement_object, force_settlement_object_multi_index_type&gt; graphene::chain::force_settlement_index</definition>
        <argsstring></argsstring>
        <name>force_settlement_index</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/market_object.hpp" line="292" column="25" bodyfile="libraries/chain/include/graphene/chain/market_object.hpp" bodystart="292" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegraphene_1_1chain_1af9f0e8f37ca9030fa5baaed63053a30d" prot="public" static="no">
        <type><ref refid="classgraphene_1_1db_1_1generic__index" kindref="compound">generic_index</ref>&lt; <ref refid="classgraphene_1_1chain_1_1collateral__bid__object" kindref="compound">collateral_bid_object</ref>, <ref refid="namespacegraphene_1_1chain_1a0e8391790f2e14737f178707d17c3317" kindref="member">collateral_bid_object_multi_index_type</ref> &gt;</type>
        <definition>typedef generic_index&lt;collateral_bid_object, collateral_bid_object_multi_index_type&gt; graphene::chain::collateral_bid_index</definition>
        <argsstring></argsstring>
        <name>collateral_bid_index</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/market_object.hpp" line="293" column="29" bodyfile="libraries/chain/include/graphene/chain/market_object.hpp" bodystart="293" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegraphene_1_1chain_1a65f93dc2f4dc634d6dc4a7fac8a896a6" prot="public" static="no">
        <type>multi_index_container&lt; <ref refid="classgraphene_1_1chain_1_1operation__history__object" kindref="compound">operation_history_object</ref>, indexed_by&lt; ordered_unique&lt; tag&lt; by_id &gt;, member&lt; <ref refid="classgraphene_1_1db_1_1object" kindref="compound">object</ref>, <ref refid="structgraphene_1_1db_1_1object__id__type" kindref="compound">object_id_type</ref>, &amp;<ref refid="classgraphene_1_1db_1_1object_1a2ce812569d565a45dda1420cfbdf79ad" kindref="member">object::id</ref> &gt; &gt;, ordered_unique&lt; tag&lt; by_block &gt;, composite_key&lt; <ref refid="classgraphene_1_1chain_1_1operation__history__object" kindref="compound">operation_history_object</ref>, member&lt; <ref refid="classgraphene_1_1chain_1_1operation__history__object" kindref="compound">operation_history_object</ref>, uint32_t, &amp;<ref refid="classgraphene_1_1chain_1_1operation__history__object_1a61d9cdd758c7d1a44d4584d4f9b00cf9" kindref="member">operation_history_object::block_num</ref> &gt;, member&lt; <ref refid="classgraphene_1_1chain_1_1operation__history__object" kindref="compound">operation_history_object</ref>, uint16_t, &amp;<ref refid="classgraphene_1_1chain_1_1operation__history__object_1a2e9f9bf1331fa109858f11aaf4800be4" kindref="member">operation_history_object::trx_in_block</ref> &gt;, member&lt; <ref refid="classgraphene_1_1chain_1_1operation__history__object" kindref="compound">operation_history_object</ref>, uint16_t, &amp;<ref refid="classgraphene_1_1chain_1_1operation__history__object_1adb82d1da05d0e4ae1f769e0c542798b7" kindref="member">operation_history_object::op_in_trx</ref> &gt;, member&lt; <ref refid="classgraphene_1_1chain_1_1operation__history__object" kindref="compound">operation_history_object</ref>, uint32_t, &amp;<ref refid="classgraphene_1_1chain_1_1operation__history__object_1a04cc2ed8c2b67ef3b13df9f46cf5e492" kindref="member">operation_history_object::virtual_op</ref> &gt; &gt; &gt;, ordered_unique&lt; tag&lt; by_time &gt;, composite_key&lt; <ref refid="classgraphene_1_1chain_1_1operation__history__object" kindref="compound">operation_history_object</ref>, member&lt; <ref refid="classgraphene_1_1chain_1_1operation__history__object" kindref="compound">operation_history_object</ref>, <ref refid="classfc_1_1time__point__sec" kindref="compound">time_point_sec</ref>, &amp;<ref refid="classgraphene_1_1chain_1_1operation__history__object_1a856ca4842d0a71fe1266cf819ec47b84" kindref="member">operation_history_object::block_time</ref> &gt;, member&lt; <ref refid="classgraphene_1_1db_1_1object" kindref="compound">object</ref>, <ref refid="structgraphene_1_1db_1_1object__id__type" kindref="compound">object_id_type</ref>, &amp;<ref refid="classgraphene_1_1db_1_1object_1a2ce812569d565a45dda1420cfbdf79ad" kindref="member">object::id</ref> &gt; &gt;, composite_key_compare&lt; std::greater&lt; <ref refid="classfc_1_1time__point__sec" kindref="compound">time_point_sec</ref> &gt;, std::greater&lt; <ref refid="structgraphene_1_1db_1_1object__id__type" kindref="compound">object_id_type</ref> &gt; &gt; &gt; &gt; &gt;</type>
        <definition>using graphene::chain::operation_history_mlti_idx_type = typedef multi_index_container&lt; operation_history_object, indexed_by&lt; ordered_unique&lt; tag&lt;by_id&gt;, member&lt; object, object_id_type, &amp;object::id &gt; &gt;, ordered_unique&lt; tag&lt;by_block&gt;, composite_key&lt; operation_history_object, member&lt; operation_history_object, uint32_t, &amp;operation_history_object::block_num&gt;, member&lt; operation_history_object, uint16_t, &amp;operation_history_object::trx_in_block&gt;, member&lt; operation_history_object, uint16_t, &amp;operation_history_object::op_in_trx&gt;, member&lt; operation_history_object, uint32_t, &amp;operation_history_object::virtual_op&gt; &gt; &gt;, ordered_unique&lt; tag&lt;by_time&gt;, composite_key&lt; operation_history_object, member&lt; operation_history_object, time_point_sec, &amp;operation_history_object::block_time&gt;, member&lt; object, object_id_type, &amp;object::id &gt; &gt;, composite_key_compare&lt; std::greater&lt; time_point_sec &gt;, std::greater&lt; object_id_type &gt; &gt; &gt; &gt; &gt;</definition>
        <argsstring></argsstring>
        <name>operation_history_mlti_idx_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/operation_history_object.hpp" line="108" column="4" bodyfile="libraries/chain/include/graphene/chain/operation_history_object.hpp" bodystart="131" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegraphene_1_1chain_1a2217009c15b14f3b15f3a708cbedf3ca" prot="public" static="no">
        <type><ref refid="classgraphene_1_1db_1_1generic__index" kindref="compound">generic_index</ref>&lt; <ref refid="classgraphene_1_1chain_1_1operation__history__object" kindref="compound">operation_history_object</ref>, <ref refid="namespacegraphene_1_1chain_1a65f93dc2f4dc634d6dc4a7fac8a896a6" kindref="member">operation_history_mlti_idx_type</ref> &gt;</type>
        <definition>using graphene::chain::operation_history_index = typedef generic_index&lt; operation_history_object, operation_history_mlti_idx_type &gt;</definition>
        <argsstring></argsstring>
        <name>operation_history_index</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/operation_history_object.hpp" line="133" column="4" bodyfile="libraries/chain/include/graphene/chain/operation_history_object.hpp" bodystart="133" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegraphene_1_1chain_1aaad51654b5ca32a829c1ead9f61614b0" prot="public" static="no">
        <type>multi_index_container&lt; <ref refid="classgraphene_1_1chain_1_1account__history__object" kindref="compound">account_history_object</ref>, indexed_by&lt; ordered_unique&lt; tag&lt; by_id &gt;, member&lt; <ref refid="classgraphene_1_1db_1_1object" kindref="compound">object</ref>, <ref refid="structgraphene_1_1db_1_1object__id__type" kindref="compound">object_id_type</ref>, &amp;<ref refid="classgraphene_1_1db_1_1object_1a2ce812569d565a45dda1420cfbdf79ad" kindref="member">object::id</ref> &gt; &gt;, ordered_unique&lt; tag&lt; by_seq &gt;, composite_key&lt; <ref refid="classgraphene_1_1chain_1_1account__history__object" kindref="compound">account_history_object</ref>, member&lt; <ref refid="classgraphene_1_1chain_1_1account__history__object" kindref="compound">account_history_object</ref>, account_id_type, &amp;<ref refid="classgraphene_1_1chain_1_1account__history__object_1a73304c193d2e9f3e62d831a2211eb9e7" kindref="member">account_history_object::account</ref> &gt;, member&lt; <ref refid="classgraphene_1_1chain_1_1account__history__object" kindref="compound">account_history_object</ref>, uint64_t, &amp;<ref refid="classgraphene_1_1chain_1_1account__history__object_1ad417dd94e761feec3d5865456a6f9b7e" kindref="member">account_history_object::sequence</ref> &gt; &gt; &gt;, ordered_unique&lt; tag&lt; by_op &gt;, composite_key&lt; <ref refid="classgraphene_1_1chain_1_1account__history__object" kindref="compound">account_history_object</ref>, member&lt; <ref refid="classgraphene_1_1chain_1_1account__history__object" kindref="compound">account_history_object</ref>, account_id_type, &amp;<ref refid="classgraphene_1_1chain_1_1account__history__object_1a73304c193d2e9f3e62d831a2211eb9e7" kindref="member">account_history_object::account</ref> &gt;, member&lt; <ref refid="classgraphene_1_1chain_1_1account__history__object" kindref="compound">account_history_object</ref>, operation_history_id_type, &amp;<ref refid="classgraphene_1_1chain_1_1account__history__object_1a96dfedb2bec32a59f27683698bf2bb1e" kindref="member">account_history_object::operation_id</ref> &gt; &gt;, composite_key_compare&lt; std::less&lt; account_id_type &gt;, std::greater&lt; operation_history_id_type &gt; &gt; &gt;, ordered_non_unique&lt; tag&lt; by_opid &gt;, member&lt; <ref refid="classgraphene_1_1chain_1_1account__history__object" kindref="compound">account_history_object</ref>, operation_history_id_type, &amp;<ref refid="classgraphene_1_1chain_1_1account__history__object_1a96dfedb2bec32a59f27683698bf2bb1e" kindref="member">account_history_object::operation_id</ref> &gt; &gt; &gt; &gt;</type>
        <definition>using graphene::chain::account_history_multi_idx_type = typedef multi_index_container&lt; account_history_object, indexed_by&lt; ordered_unique&lt; tag&lt;by_id&gt;, member&lt; object, object_id_type, &amp;object::id &gt; &gt;, ordered_unique&lt; tag&lt;by_seq&gt;, composite_key&lt; account_history_object, member&lt; account_history_object, account_id_type, &amp;account_history_object::account&gt;, member&lt; account_history_object, uint64_t, &amp;account_history_object::sequence&gt; &gt; &gt;, ordered_unique&lt; tag&lt;by_op&gt;, composite_key&lt; account_history_object, member&lt; account_history_object, account_id_type, &amp;account_history_object::account&gt;, member&lt; account_history_object, operation_history_id_type, &amp;account_history_object::operation_id&gt; &gt;, composite_key_compare&lt; std::less&lt; account_id_type &gt;, std::greater&lt; operation_history_id_type &gt; &gt; &gt;, ordered_non_unique&lt; tag&lt;by_opid&gt;, member&lt; account_history_object, operation_history_id_type, &amp;account_history_object::operation_id&gt; &gt; &gt; &gt;</definition>
        <argsstring></argsstring>
        <name>account_history_multi_idx_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/operation_history_object.hpp" line="139" column="4" bodyfile="libraries/chain/include/graphene/chain/operation_history_object.hpp" bodystart="163" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegraphene_1_1chain_1adf4d411c16a0e8263ed04e9ab711c029" prot="public" static="no">
        <type><ref refid="classgraphene_1_1db_1_1generic__index" kindref="compound">generic_index</ref>&lt; <ref refid="classgraphene_1_1chain_1_1account__history__object" kindref="compound">account_history_object</ref>, <ref refid="namespacegraphene_1_1chain_1aaad51654b5ca32a829c1ead9f61614b0" kindref="member">account_history_multi_idx_type</ref> &gt;</type>
        <definition>using graphene::chain::account_history_index = typedef generic_index&lt; account_history_object, account_history_multi_idx_type &gt;</definition>
        <argsstring></argsstring>
        <name>account_history_index</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/operation_history_object.hpp" line="165" column="4" bodyfile="libraries/chain/include/graphene/chain/operation_history_object.hpp" bodystart="165" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegraphene_1_1chain_1ad418e49a7cc240ebe3ee84adcc58cfc9" prot="public" static="no">
        <type>boost::multi_index_container&lt; <ref refid="classgraphene_1_1chain_1_1proposal__object" kindref="compound">proposal_object</ref>, indexed_by&lt; ordered_unique&lt; tag&lt; by_id &gt;, member&lt; <ref refid="classgraphene_1_1db_1_1object" kindref="compound">object</ref>, <ref refid="structgraphene_1_1db_1_1object__id__type" kindref="compound">object_id_type</ref>, &amp;<ref refid="classgraphene_1_1db_1_1object_1a2ce812569d565a45dda1420cfbdf79ad" kindref="member">object::id</ref> &gt; &gt;, ordered_unique&lt; tag&lt; <ref refid="structgraphene_1_1chain_1_1by__expiration" kindref="compound">by_expiration</ref> &gt;, composite_key&lt; <ref refid="classgraphene_1_1chain_1_1proposal__object" kindref="compound">proposal_object</ref>, member&lt; <ref refid="classgraphene_1_1chain_1_1proposal__object" kindref="compound">proposal_object</ref>, <ref refid="classfc_1_1time__point__sec" kindref="compound">time_point_sec</ref>, &amp;<ref refid="classgraphene_1_1chain_1_1proposal__object_1aaa68f7f84d178e7141e6a66b2217bc7d" kindref="member">proposal_object::expiration_time</ref> &gt;, member&lt; <ref refid="classgraphene_1_1db_1_1object" kindref="compound">object</ref>, <ref refid="structgraphene_1_1db_1_1object__id__type" kindref="compound">object_id_type</ref>, &amp;<ref refid="classgraphene_1_1db_1_1object_1a2ce812569d565a45dda1420cfbdf79ad" kindref="member">object::id</ref> &gt; &gt; &gt; &gt;&gt;</type>
        <definition>typedef boost::multi_index_container&lt; proposal_object, indexed_by&lt; ordered_unique&lt; tag&lt; by_id &gt;, member&lt; object, object_id_type, &amp;object::id &gt; &gt;, ordered_unique&lt;tag&lt;by_expiration&gt;, composite_key&lt;proposal_object, member&lt;proposal_object, time_point_sec, &amp;proposal_object::expiration_time&gt;, member&lt; object, object_id_type, &amp;object::id &gt; &gt; &gt; &gt;&gt; graphene::chain::proposal_multi_index_container</definition>
        <argsstring></argsstring>
        <name>proposal_multi_index_container</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/proposal_object.hpp" line="98" column="2" bodyfile="libraries/chain/include/graphene/chain/proposal_object.hpp" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegraphene_1_1chain_1a250f3b5333d70e37f1c421e87dfbaa3b" prot="public" static="no">
        <type><ref refid="classgraphene_1_1db_1_1generic__index" kindref="compound">generic_index</ref>&lt; <ref refid="classgraphene_1_1chain_1_1proposal__object" kindref="compound">proposal_object</ref>, <ref refid="namespacegraphene_1_1chain_1ad418e49a7cc240ebe3ee84adcc58cfc9" kindref="member">proposal_multi_index_container</ref> &gt;</type>
        <definition>typedef generic_index&lt;proposal_object, proposal_multi_index_container&gt; graphene::chain::proposal_index</definition>
        <argsstring></argsstring>
        <name>proposal_index</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/proposal_object.hpp" line="99" column="23" bodyfile="libraries/chain/include/graphene/chain/proposal_object.hpp" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegraphene_1_1chain_1a8bc92ce794ed12c7de85b785fa413fde" prot="public" static="no">
        <type>multi_index_container&lt; <ref refid="classgraphene_1_1chain_1_1samet__fund__object" kindref="compound">samet_fund_object</ref>, indexed_by&lt; ordered_unique&lt; tag&lt; by_id &gt;, member&lt; <ref refid="classgraphene_1_1db_1_1object" kindref="compound">object</ref>, <ref refid="structgraphene_1_1db_1_1object__id__type" kindref="compound">object_id_type</ref>, &amp;<ref refid="classgraphene_1_1db_1_1object_1a2ce812569d565a45dda1420cfbdf79ad" kindref="member">object::id</ref> &gt; &gt;, ordered_unique&lt; tag&lt; by_unpaid &gt;, composite_key&lt; <ref refid="classgraphene_1_1chain_1_1samet__fund__object" kindref="compound">samet_fund_object</ref>, member&lt; <ref refid="classgraphene_1_1chain_1_1samet__fund__object" kindref="compound">samet_fund_object</ref>, <ref refid="namespacegraphene_1_1protocol_1a69b2104c1c11eed2d17bd29b86713347" kindref="member">share_type</ref>, &amp;<ref refid="classgraphene_1_1chain_1_1samet__fund__object_1a5b0147614c04d14b421683d53ac82ab4" kindref="member">samet_fund_object::unpaid_amount</ref> &gt;, member&lt; <ref refid="classgraphene_1_1db_1_1object" kindref="compound">object</ref>, <ref refid="structgraphene_1_1db_1_1object__id__type" kindref="compound">object_id_type</ref>, &amp;<ref refid="classgraphene_1_1db_1_1object_1a2ce812569d565a45dda1420cfbdf79ad" kindref="member">object::id</ref> &gt; &gt;, composite_key_compare&lt; std::greater&lt; <ref refid="namespacegraphene_1_1protocol_1a69b2104c1c11eed2d17bd29b86713347" kindref="member">share_type</ref> &gt;, std::less&lt; <ref refid="structgraphene_1_1db_1_1object__id__type" kindref="compound">object_id_type</ref> &gt; &gt; &gt;, ordered_unique&lt; tag&lt; by_owner &gt;, composite_key&lt; <ref refid="classgraphene_1_1chain_1_1samet__fund__object" kindref="compound">samet_fund_object</ref>, member&lt; <ref refid="classgraphene_1_1chain_1_1samet__fund__object" kindref="compound">samet_fund_object</ref>, account_id_type, &amp;<ref refid="classgraphene_1_1chain_1_1samet__fund__object_1a28282c6649a8faea5f29be311bdfd7c8" kindref="member">samet_fund_object::owner_account</ref> &gt;, member&lt; <ref refid="classgraphene_1_1db_1_1object" kindref="compound">object</ref>, <ref refid="structgraphene_1_1db_1_1object__id__type" kindref="compound">object_id_type</ref>, &amp;<ref refid="classgraphene_1_1db_1_1object_1a2ce812569d565a45dda1420cfbdf79ad" kindref="member">object::id</ref> &gt; &gt; &gt;, ordered_unique&lt; tag&lt; by_asset_type &gt;, composite_key&lt; <ref refid="classgraphene_1_1chain_1_1samet__fund__object" kindref="compound">samet_fund_object</ref>, member&lt; <ref refid="classgraphene_1_1chain_1_1samet__fund__object" kindref="compound">samet_fund_object</ref>, asset_id_type, &amp;<ref refid="classgraphene_1_1chain_1_1samet__fund__object_1afe0b1b1117e2fe2794691b767bc2a9d9" kindref="member">samet_fund_object::asset_type</ref> &gt;, member&lt; <ref refid="classgraphene_1_1db_1_1object" kindref="compound">object</ref>, <ref refid="structgraphene_1_1db_1_1object__id__type" kindref="compound">object_id_type</ref>, &amp;<ref refid="classgraphene_1_1db_1_1object_1a2ce812569d565a45dda1420cfbdf79ad" kindref="member">object::id</ref> &gt; &gt; &gt; &gt; &gt;</type>
        <definition>using graphene::chain::samet_fund_multi_index_type = typedef multi_index_container&lt; samet_fund_object, indexed_by&lt; ordered_unique&lt; tag&lt;by_id&gt;, member&lt; object, object_id_type, &amp;object::id &gt; &gt;, ordered_unique&lt; tag&lt;by_unpaid&gt;, composite_key&lt; samet_fund_object, member&lt; samet_fund_object, share_type, &amp;samet_fund_object::unpaid_amount &gt;, member&lt; object, object_id_type, &amp;object::id&gt; &gt;, composite_key_compare&lt; std::greater&lt;share_type&gt;, std::less&lt;object_id_type&gt; &gt; &gt;, ordered_unique&lt; tag&lt;by_owner&gt;, composite_key&lt; samet_fund_object, member&lt; samet_fund_object, account_id_type, &amp;samet_fund_object::owner_account &gt;, member&lt; object, object_id_type, &amp;object::id&gt; &gt; &gt;, ordered_unique&lt; tag&lt;by_asset_type&gt;, composite_key&lt; samet_fund_object, member&lt; samet_fund_object, asset_id_type, &amp;samet_fund_object::asset_type &gt;, member&lt; object, object_id_type, &amp;object::id&gt; &gt; &gt; &gt; &gt;</definition>
        <argsstring></argsstring>
        <name>samet_fund_multi_index_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/samet_fund_object.hpp" line="56" column="1" bodyfile="libraries/chain/include/graphene/chain/samet_fund_object.hpp" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegraphene_1_1chain_1a133ef420b638d2fd1cdd0c2ff1361be8" prot="public" static="no">
        <type><ref refid="classgraphene_1_1db_1_1generic__index" kindref="compound">generic_index</ref>&lt; <ref refid="classgraphene_1_1chain_1_1samet__fund__object" kindref="compound">samet_fund_object</ref>, <ref refid="namespacegraphene_1_1chain_1a8bc92ce794ed12c7de85b785fa413fde" kindref="member">samet_fund_multi_index_type</ref> &gt;</type>
        <definition>using graphene::chain::samet_fund_index = typedef generic_index&lt;samet_fund_object, samet_fund_multi_index_type&gt;</definition>
        <argsstring></argsstring>
        <name>samet_fund_index</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/samet_fund_object.hpp" line="85" column="1" bodyfile="libraries/chain/include/graphene/chain/samet_fund_object.hpp" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegraphene_1_1chain_1a1195bc11543698d496df3b334023f229" prot="public" static="no">
        <type>multi_index_container&lt; <ref refid="classgraphene_1_1chain_1_1special__authority__object" kindref="compound">special_authority_object</ref>, indexed_by&lt; ordered_unique&lt; tag&lt; by_id &gt;, member&lt; <ref refid="classgraphene_1_1db_1_1object" kindref="compound">object</ref>, <ref refid="structgraphene_1_1db_1_1object__id__type" kindref="compound">object_id_type</ref>, &amp;<ref refid="classgraphene_1_1db_1_1object_1a2ce812569d565a45dda1420cfbdf79ad" kindref="member">object::id</ref> &gt; &gt;, ordered_unique&lt; tag&lt; by_account &gt;, member&lt; <ref refid="classgraphene_1_1chain_1_1special__authority__object" kindref="compound">special_authority_object</ref>, account_id_type, &amp;<ref refid="classgraphene_1_1chain_1_1special__authority__object_1a4a81ab5af2a9da10b8093c1aea58d83c" kindref="member">special_authority_object::account</ref> &gt; &gt; &gt; &gt;</type>
        <definition>using graphene::chain::special_authority_multi_idx_typ = typedef multi_index_container&lt; special_authority_object, indexed_by&lt; ordered_unique&lt; tag&lt;by_id&gt;, member&lt; object, object_id_type, &amp;object::id &gt; &gt;, ordered_unique&lt; tag&lt;by_account&gt;, member&lt; special_authority_object, account_id_type, &amp;special_authority_object::account&gt; &gt; &gt; &gt;</definition>
        <argsstring></argsstring>
        <name>special_authority_multi_idx_typ</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/special_authority_object.hpp" line="51" column="1" bodyfile="libraries/chain/include/graphene/chain/special_authority_object.hpp" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegraphene_1_1chain_1ab958854c4f1a791fb56d6989c8e2adf0" prot="public" static="no">
        <type><ref refid="classgraphene_1_1db_1_1generic__index" kindref="compound">generic_index</ref>&lt; <ref refid="classgraphene_1_1chain_1_1special__authority__object" kindref="compound">special_authority_object</ref>, <ref refid="namespacegraphene_1_1chain_1a1195bc11543698d496df3b334023f229" kindref="member">special_authority_multi_idx_typ</ref> &gt;</type>
        <definition>using graphene::chain::special_authority_index = typedef generic_index&lt; special_authority_object, special_authority_multi_idx_typ &gt;</definition>
        <argsstring></argsstring>
        <name>special_authority_index</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/special_authority_object.hpp" line="60" column="1" bodyfile="libraries/chain/include/graphene/chain/special_authority_object.hpp" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegraphene_1_1chain_1a1e97d81997833870f822d3a16212d9c1" prot="public" static="no">
        <type>multi_index_container&lt; <ref refid="classgraphene_1_1chain_1_1ticket__object" kindref="compound">ticket_object</ref>, indexed_by&lt; ordered_unique&lt; tag&lt; by_id &gt;, member&lt; <ref refid="classgraphene_1_1db_1_1object" kindref="compound">object</ref>, <ref refid="structgraphene_1_1db_1_1object__id__type" kindref="compound">object_id_type</ref>, &amp;<ref refid="classgraphene_1_1db_1_1object_1a2ce812569d565a45dda1420cfbdf79ad" kindref="member">object::id</ref> &gt; &gt;, ordered_unique&lt; tag&lt; by_next_update &gt;, composite_key&lt; <ref refid="classgraphene_1_1chain_1_1ticket__object" kindref="compound">ticket_object</ref>, member&lt; <ref refid="classgraphene_1_1chain_1_1ticket__object" kindref="compound">ticket_object</ref>, <ref refid="classfc_1_1time__point__sec" kindref="compound">time_point_sec</ref>, &amp;<ref refid="classgraphene_1_1chain_1_1ticket__object_1a2f5e76a3a11a8524c6974d4f9c93c3a5" kindref="member">ticket_object::next_auto_update_time</ref> &gt;, member&lt; <ref refid="classgraphene_1_1db_1_1object" kindref="compound">object</ref>, <ref refid="structgraphene_1_1db_1_1object__id__type" kindref="compound">object_id_type</ref>, &amp;<ref refid="classgraphene_1_1db_1_1object_1a2ce812569d565a45dda1420cfbdf79ad" kindref="member">object::id</ref> &gt; &gt; &gt;, ordered_unique&lt; tag&lt; by_account &gt;, composite_key&lt; <ref refid="classgraphene_1_1chain_1_1ticket__object" kindref="compound">ticket_object</ref>, member&lt; <ref refid="classgraphene_1_1chain_1_1ticket__object" kindref="compound">ticket_object</ref>, account_id_type, &amp;<ref refid="classgraphene_1_1chain_1_1ticket__object_1afd8ce168e046126173ff6cbb9389bad5" kindref="member">ticket_object::account</ref> &gt;, member&lt; <ref refid="classgraphene_1_1db_1_1object" kindref="compound">object</ref>, <ref refid="structgraphene_1_1db_1_1object__id__type" kindref="compound">object_id_type</ref>, &amp;<ref refid="classgraphene_1_1db_1_1object_1a2ce812569d565a45dda1420cfbdf79ad" kindref="member">object::id</ref> &gt; &gt; &gt; &gt;&gt;</type>
        <definition>typedef multi_index_container&lt; ticket_object, indexed_by&lt; ordered_unique&lt; tag&lt;by_id&gt;, member&lt; object, object_id_type, &amp;object::id &gt; &gt;, ordered_unique&lt; tag&lt;by_next_update&gt;, composite_key&lt; ticket_object, member&lt; ticket_object, time_point_sec, &amp;ticket_object::next_auto_update_time&gt;, member&lt; object, object_id_type, &amp;object::id&gt; &gt; &gt;, ordered_unique&lt; tag&lt;by_account&gt;, composite_key&lt; ticket_object, member&lt; ticket_object, account_id_type, &amp;ticket_object::account&gt;, member&lt; object, object_id_type, &amp;object::id&gt; &gt; &gt; &gt;&gt; graphene::chain::ticket_multi_index_type</definition>
        <argsstring></argsstring>
        <name>ticket_multi_index_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/ticket_object.hpp" line="139" column="2" bodyfile="libraries/chain/include/graphene/chain/ticket_object.hpp" bodystart="117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegraphene_1_1chain_1a2bcc2b76618541b11260aed7dd1a92ff" prot="public" static="no">
        <type><ref refid="classgraphene_1_1db_1_1generic__index" kindref="compound">generic_index</ref>&lt; <ref refid="classgraphene_1_1chain_1_1ticket__object" kindref="compound">ticket_object</ref>, <ref refid="namespacegraphene_1_1chain_1a1e97d81997833870f822d3a16212d9c1" kindref="member">ticket_multi_index_type</ref> &gt;</type>
        <definition>typedef generic_index&lt;ticket_object, ticket_multi_index_type&gt; graphene::chain::ticket_index</definition>
        <argsstring></argsstring>
        <name>ticket_index</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/ticket_object.hpp" line="144" column="23" bodyfile="libraries/chain/include/graphene/chain/ticket_object.hpp" bodystart="144" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegraphene_1_1chain_1a3b4961928bcc772143d60f32b4a87b35" prot="public" static="no">
        <type>multi_index_container&lt; <ref refid="classgraphene_1_1chain_1_1transaction__history__object" kindref="compound">transaction_history_object</ref>, indexed_by&lt; ordered_unique&lt; tag&lt; by_id &gt;, member&lt; <ref refid="classgraphene_1_1db_1_1object" kindref="compound">object</ref>, <ref refid="structgraphene_1_1db_1_1object__id__type" kindref="compound">object_id_type</ref>, &amp;<ref refid="classgraphene_1_1db_1_1object_1a2ce812569d565a45dda1420cfbdf79ad" kindref="member">object::id</ref> &gt; &gt;, hashed_unique&lt; tag&lt; by_trx_id &gt;, BOOST_MULTI_INDEX_MEMBER(<ref refid="classgraphene_1_1chain_1_1transaction__history__object" kindref="compound">transaction_history_object</ref>, <ref refid="namespacegraphene_1_1protocol_1a040f9f71bff896e89dc9ee3ff92bb076" kindref="member">transaction_id_type</ref>, trx_id), std::hash&lt; <ref refid="namespacegraphene_1_1protocol_1a040f9f71bff896e89dc9ee3ff92bb076" kindref="member">transaction_id_type</ref> &gt; &gt;, ordered_non_unique&lt; tag&lt; <ref refid="structgraphene_1_1chain_1_1by__expiration" kindref="compound">by_expiration</ref> &gt;, const_mem_fun&lt; <ref refid="classgraphene_1_1chain_1_1transaction__history__object" kindref="compound">transaction_history_object</ref>, <ref refid="classfc_1_1time__point__sec" kindref="compound">time_point_sec</ref>, &amp;<ref refid="classgraphene_1_1chain_1_1transaction__history__object_1ac4ba965321b8c3e040cbd0de17a85b74" kindref="member">transaction_history_object::get_expiration</ref> &gt; &gt; &gt; &gt;</type>
        <definition>typedef multi_index_container&lt; transaction_history_object, indexed_by&lt; ordered_unique&lt; tag&lt;by_id&gt;, member&lt; object, object_id_type, &amp;object::id &gt; &gt;, hashed_unique&lt; tag&lt;by_trx_id&gt;, BOOST_MULTI_INDEX_MEMBER(transaction_history_object, transaction_id_type, trx_id), std::hash&lt;transaction_id_type&gt; &gt;, ordered_non_unique&lt; tag&lt;by_expiration&gt;, const_mem_fun&lt; transaction_history_object, time_point_sec, &amp;transaction_history_object::get_expiration &gt; &gt; &gt; &gt; graphene::chain::transaction_multi_index_type</definition>
        <argsstring></argsstring>
        <name>transaction_multi_index_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/transaction_history_object.hpp" line="65" column="2" bodyfile="libraries/chain/include/graphene/chain/transaction_history_object.hpp" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegraphene_1_1chain_1a6735d1474fb46c8be23bffb0ea544f52" prot="public" static="no">
        <type><ref refid="classgraphene_1_1db_1_1generic__index" kindref="compound">generic_index</ref>&lt; <ref refid="classgraphene_1_1chain_1_1transaction__history__object" kindref="compound">transaction_history_object</ref>, <ref refid="namespacegraphene_1_1chain_1a3b4961928bcc772143d60f32b4a87b35" kindref="member">transaction_multi_index_type</ref> &gt;</type>
        <definition>typedef generic_index&lt;transaction_history_object, transaction_multi_index_type&gt; graphene::chain::transaction_index</definition>
        <argsstring></argsstring>
        <name>transaction_index</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/transaction_history_object.hpp" line="67" column="26" bodyfile="libraries/chain/include/graphene/chain/transaction_history_object.hpp" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegraphene_1_1chain_1ada5fee9165e8f378bf91976a523747c2" prot="public" static="no">
        <type><ref refid="classfc_1_1static__variant" kindref="compound">fc::static_variant</ref>&lt; <ref refid="structgraphene_1_1chain_1_1linear__vesting__policy" kindref="compound">linear_vesting_policy</ref>, <ref refid="structgraphene_1_1chain_1_1cdd__vesting__policy" kindref="compound">cdd_vesting_policy</ref>, <ref refid="structgraphene_1_1chain_1_1instant__vesting__policy" kindref="compound">instant_vesting_policy</ref> &gt;</type>
        <definition>typedef fc::static_variant&lt; linear_vesting_policy, cdd_vesting_policy, instant_vesting_policy &gt; graphene::chain::vesting_policy</definition>
        <argsstring></argsstring>
        <name>vesting_policy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/vesting_balance_object.hpp" line="141" column="2" bodyfile="libraries/chain/include/graphene/chain/vesting_balance_object.hpp" bodystart="141" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegraphene_1_1chain_1a5df2b2b04b2faf511e46a478fca8df91" prot="public" static="no">
        <type>multi_index_container&lt; <ref refid="classgraphene_1_1chain_1_1vesting__balance__object" kindref="compound">vesting_balance_object</ref>, indexed_by&lt; ordered_unique&lt; tag&lt; by_id &gt;, member&lt; <ref refid="classgraphene_1_1db_1_1object" kindref="compound">object</ref>, <ref refid="structgraphene_1_1db_1_1object__id__type" kindref="compound">object_id_type</ref>, &amp;<ref refid="classgraphene_1_1db_1_1object_1a2ce812569d565a45dda1420cfbdf79ad" kindref="member">object::id</ref> &gt; &gt;, ordered_non_unique&lt; tag&lt; by_account &gt;, member&lt; <ref refid="classgraphene_1_1chain_1_1vesting__balance__object" kindref="compound">vesting_balance_object</ref>, account_id_type, &amp;<ref refid="classgraphene_1_1chain_1_1vesting__balance__object_1a67fcfc288de5c0094d1d97ccf4c67108" kindref="member">vesting_balance_object::owner</ref> &gt; &gt;, hashed_unique&lt; tag&lt; by_vesting_type &gt;, identity&lt; <ref refid="classgraphene_1_1chain_1_1vesting__balance__object" kindref="compound">vesting_balance_object</ref> &gt;, <ref refid="structgraphene_1_1chain_1_1detail_1_1vesting__balance__object__hash" kindref="compound">detail::vesting_balance_object_hash</ref>, <ref refid="structgraphene_1_1chain_1_1detail_1_1vesting__balance__object__equal" kindref="compound">detail::vesting_balance_object_equal</ref> &gt; &gt; &gt;</type>
        <definition>typedef multi_index_container&lt; vesting_balance_object, indexed_by&lt; ordered_unique&lt; tag&lt;by_id&gt;, member&lt; object, object_id_type, &amp;object::id &gt; &gt;, ordered_non_unique&lt; tag&lt;by_account&gt;, member&lt;vesting_balance_object, account_id_type, &amp;vesting_balance_object::owner&gt; &gt;, hashed_unique&lt; tag&lt;by_vesting_type&gt;, identity&lt;vesting_balance_object&gt;, detail::vesting_balance_object_hash, detail::vesting_balance_object_equal &gt; &gt; &gt; graphene::chain::vesting_balance_multi_index_type</definition>
        <argsstring></argsstring>
        <name>vesting_balance_multi_index_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/vesting_balance_object.hpp" line="266" column="2" bodyfile="libraries/chain/include/graphene/chain/vesting_balance_object.hpp" bodystart="266" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegraphene_1_1chain_1ab04613b07ed5a248119544dce7824ea4" prot="public" static="no">
        <type><ref refid="classgraphene_1_1db_1_1generic__index" kindref="compound">generic_index</ref>&lt; <ref refid="classgraphene_1_1chain_1_1vesting__balance__object" kindref="compound">vesting_balance_object</ref>, <ref refid="namespacegraphene_1_1chain_1a5df2b2b04b2faf511e46a478fca8df91" kindref="member">vesting_balance_multi_index_type</ref> &gt;</type>
        <definition>typedef generic_index&lt;vesting_balance_object, vesting_balance_multi_index_type&gt; graphene::chain::vesting_balance_index</definition>
        <argsstring></argsstring>
        <name>vesting_balance_index</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/vesting_balance_object.hpp" line="270" column="26" bodyfile="libraries/chain/include/graphene/chain/vesting_balance_object.hpp" bodystart="270" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegraphene_1_1chain_1ac053f95a577ba7d63eb5aa30355108d9" prot="public" static="no">
        <type>multi_index_container&lt; <ref refid="classgraphene_1_1chain_1_1withdraw__permission__object" kindref="compound">withdraw_permission_object</ref>, indexed_by&lt; ordered_unique&lt; tag&lt; by_id &gt;, member&lt; <ref refid="classgraphene_1_1db_1_1object" kindref="compound">object</ref>, <ref refid="structgraphene_1_1db_1_1object__id__type" kindref="compound">object_id_type</ref>, &amp;<ref refid="classgraphene_1_1db_1_1object_1a2ce812569d565a45dda1420cfbdf79ad" kindref="member">object::id</ref> &gt; &gt;, ordered_unique&lt; tag&lt; by_from &gt;, composite_key&lt; <ref refid="classgraphene_1_1chain_1_1withdraw__permission__object" kindref="compound">withdraw_permission_object</ref>, member&lt; <ref refid="classgraphene_1_1chain_1_1withdraw__permission__object" kindref="compound">withdraw_permission_object</ref>, account_id_type, &amp;<ref refid="classgraphene_1_1chain_1_1withdraw__permission__object_1ad0625fbe1d350edecf66799080675dc6" kindref="member">withdraw_permission_object::withdraw_from_account</ref> &gt;, member&lt; <ref refid="classgraphene_1_1db_1_1object" kindref="compound">object</ref>, <ref refid="structgraphene_1_1db_1_1object__id__type" kindref="compound">object_id_type</ref>, &amp;<ref refid="classgraphene_1_1db_1_1object_1a2ce812569d565a45dda1420cfbdf79ad" kindref="member">object::id</ref> &gt; &gt; &gt;, ordered_unique&lt; tag&lt; by_authorized &gt;, composite_key&lt; <ref refid="classgraphene_1_1chain_1_1withdraw__permission__object" kindref="compound">withdraw_permission_object</ref>, member&lt; <ref refid="classgraphene_1_1chain_1_1withdraw__permission__object" kindref="compound">withdraw_permission_object</ref>, account_id_type, &amp;<ref refid="classgraphene_1_1chain_1_1withdraw__permission__object_1a08e2473a992ea8090180c8a9705abd95" kindref="member">withdraw_permission_object::authorized_account</ref> &gt;, member&lt; <ref refid="classgraphene_1_1db_1_1object" kindref="compound">object</ref>, <ref refid="structgraphene_1_1db_1_1object__id__type" kindref="compound">object_id_type</ref>, &amp;<ref refid="classgraphene_1_1db_1_1object_1a2ce812569d565a45dda1420cfbdf79ad" kindref="member">object::id</ref> &gt; &gt; &gt;, ordered_unique&lt; tag&lt; <ref refid="structgraphene_1_1chain_1_1by__expiration" kindref="compound">by_expiration</ref> &gt;, composite_key&lt; <ref refid="classgraphene_1_1chain_1_1withdraw__permission__object" kindref="compound">withdraw_permission_object</ref>, member&lt; <ref refid="classgraphene_1_1chain_1_1withdraw__permission__object" kindref="compound">withdraw_permission_object</ref>, <ref refid="classfc_1_1time__point__sec" kindref="compound">time_point_sec</ref>, &amp;<ref refid="classgraphene_1_1chain_1_1withdraw__permission__object_1aee496512e5274d67e09bb0071c001a82" kindref="member">withdraw_permission_object::expiration</ref> &gt;, member&lt; <ref refid="classgraphene_1_1db_1_1object" kindref="compound">object</ref>, <ref refid="structgraphene_1_1db_1_1object__id__type" kindref="compound">object_id_type</ref>, &amp;<ref refid="classgraphene_1_1db_1_1object_1a2ce812569d565a45dda1420cfbdf79ad" kindref="member">object::id</ref> &gt; &gt; &gt; &gt; &gt;</type>
        <definition>using graphene::chain::withdraw_permission_obj_mlt_idx = typedef multi_index_container&lt; withdraw_permission_object, indexed_by&lt; ordered_unique&lt; tag&lt;by_id&gt;, member&lt; object, object_id_type, &amp;object::id &gt; &gt;, ordered_unique&lt; tag&lt;by_from&gt;, composite_key&lt; withdraw_permission_object, member&lt; withdraw_permission_object, account_id_type, &amp;withdraw_permission_object::withdraw_from_account &gt;, member&lt; object, object_id_type, &amp;object::id &gt; &gt; &gt;, ordered_unique&lt; tag&lt;by_authorized&gt;, composite_key&lt; withdraw_permission_object, member&lt; withdraw_permission_object, account_id_type, &amp;withdraw_permission_object::authorized_account &gt;, member&lt; object, object_id_type, &amp;object::id &gt; &gt; &gt;, ordered_unique&lt; tag&lt;by_expiration&gt;, composite_key&lt; withdraw_permission_object, member&lt; withdraw_permission_object, time_point_sec, &amp;withdraw_permission_object::expiration &gt;, member&lt; object, object_id_type, &amp;object::id &gt; &gt; &gt; &gt; &gt;</definition>
        <argsstring></argsstring>
        <name>withdraw_permission_obj_mlt_idx</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/withdraw_permission_object.hpp" line="95" column="4" bodyfile="libraries/chain/include/graphene/chain/withdraw_permission_object.hpp" bodystart="119" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegraphene_1_1chain_1aeb708aa2b253d5a6185f76d0b8919090" prot="public" static="no">
        <type><ref refid="classgraphene_1_1db_1_1generic__index" kindref="compound">generic_index</ref>&lt; <ref refid="classgraphene_1_1chain_1_1withdraw__permission__object" kindref="compound">withdraw_permission_object</ref>, <ref refid="namespacegraphene_1_1chain_1ac053f95a577ba7d63eb5aa30355108d9" kindref="member">withdraw_permission_obj_mlt_idx</ref> &gt;</type>
        <definition>using graphene::chain::withdraw_permission_index = typedef generic_index&lt;withdraw_permission_object, withdraw_permission_obj_mlt_idx&gt;</definition>
        <argsstring></argsstring>
        <name>withdraw_permission_index</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/withdraw_permission_object.hpp" line="121" column="4" bodyfile="libraries/chain/include/graphene/chain/withdraw_permission_object.hpp" bodystart="121" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegraphene_1_1chain_1aa0f051c3b803688473930d49a98ec8e2" prot="public" static="no">
        <type>multi_index_container&lt; <ref refid="classgraphene_1_1chain_1_1witness__object" kindref="compound">witness_object</ref>, indexed_by&lt; ordered_unique&lt; tag&lt; by_id &gt;, member&lt; <ref refid="classgraphene_1_1db_1_1object" kindref="compound">object</ref>, <ref refid="structgraphene_1_1db_1_1object__id__type" kindref="compound">object_id_type</ref>, &amp;<ref refid="classgraphene_1_1db_1_1object_1a2ce812569d565a45dda1420cfbdf79ad" kindref="member">object::id</ref> &gt; &gt;, ordered_unique&lt; tag&lt; by_account &gt;, member&lt; <ref refid="classgraphene_1_1chain_1_1witness__object" kindref="compound">witness_object</ref>, account_id_type, &amp;<ref refid="classgraphene_1_1chain_1_1witness__object_1a64388167dad5135a79764204baaffe6e" kindref="member">witness_object::witness_account</ref> &gt; &gt;, ordered_unique&lt; tag&lt; by_vote_id &gt;, member&lt; <ref refid="classgraphene_1_1chain_1_1witness__object" kindref="compound">witness_object</ref>, <ref refid="structgraphene_1_1protocol_1_1vote__id__type" kindref="compound">vote_id_type</ref>, &amp;<ref refid="classgraphene_1_1chain_1_1witness__object_1aa9ae30d474319543424c6156b11e3a1e" kindref="member">witness_object::vote_id</ref> &gt; &gt; &gt; &gt;</type>
        <definition>using graphene::chain::witness_multi_index_type = typedef multi_index_container&lt; witness_object, indexed_by&lt; ordered_unique&lt; tag&lt;by_id&gt;, member&lt;object, object_id_type, &amp;object::id&gt; &gt;, ordered_unique&lt; tag&lt;by_account&gt;, member&lt;witness_object, account_id_type, &amp;witness_object::witness_account&gt; &gt;, ordered_unique&lt; tag&lt;by_vote_id&gt;, member&lt;witness_object, vote_id_type, &amp;witness_object::vote_id&gt; &gt; &gt; &gt;</definition>
        <argsstring></argsstring>
        <name>witness_multi_index_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/witness_object.hpp" line="49" column="4" bodyfile="libraries/chain/include/graphene/chain/witness_object.hpp" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegraphene_1_1chain_1a98ada320d7732377d0913aa7efafd4ba" prot="public" static="no">
        <type><ref refid="classgraphene_1_1db_1_1generic__index" kindref="compound">generic_index</ref>&lt; <ref refid="classgraphene_1_1chain_1_1witness__object" kindref="compound">witness_object</ref>, <ref refid="namespacegraphene_1_1chain_1aa0f051c3b803688473930d49a98ec8e2" kindref="member">witness_multi_index_type</ref> &gt;</type>
        <definition>using graphene::chain::witness_index = typedef generic_index&lt;witness_object, witness_multi_index_type&gt;</definition>
        <argsstring></argsstring>
        <name>witness_index</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/witness_object.hpp" line="63" column="4" bodyfile="libraries/chain/include/graphene/chain/witness_object.hpp" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegraphene_1_1chain_1aff2faab1253f21209aaad5771fdda38c" prot="public" static="no">
        <type><ref refid="classfc_1_1static__variant" kindref="compound">static_variant</ref>&lt; <ref refid="structgraphene_1_1chain_1_1refund__worker__type" kindref="compound">refund_worker_type</ref>, <ref refid="structgraphene_1_1chain_1_1vesting__balance__worker__type" kindref="compound">vesting_balance_worker_type</ref>, <ref refid="structgraphene_1_1chain_1_1burn__worker__type" kindref="compound">burn_worker_type</ref> &gt;</type>
        <definition>typedef static_variant&lt; refund_worker_type, vesting_balance_worker_type, burn_worker_type&gt; graphene::chain::worker_type</definition>
        <argsstring></argsstring>
        <name>worker_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/worker_object.hpp" line="101" column="2" bodyfile="libraries/chain/include/graphene/chain/worker_object.hpp" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegraphene_1_1chain_1ae36014b154bdde599b81ee6af8b52633" prot="public" static="no">
        <type>multi_index_container&lt; <ref refid="classgraphene_1_1chain_1_1worker__object" kindref="compound">worker_object</ref>, indexed_by&lt; ordered_unique&lt; tag&lt; by_id &gt;, member&lt; <ref refid="classgraphene_1_1db_1_1object" kindref="compound">object</ref>, <ref refid="structgraphene_1_1db_1_1object__id__type" kindref="compound">object_id_type</ref>, &amp;<ref refid="classgraphene_1_1db_1_1object_1a2ce812569d565a45dda1420cfbdf79ad" kindref="member">object::id</ref> &gt; &gt;, ordered_non_unique&lt; tag&lt; by_account &gt;, member&lt; <ref refid="classgraphene_1_1chain_1_1worker__object" kindref="compound">worker_object</ref>, account_id_type, &amp;<ref refid="classgraphene_1_1chain_1_1worker__object_1a8f85a7277840f8966a8f93b634b7d08d" kindref="member">worker_object::worker_account</ref> &gt; &gt;, ordered_unique&lt; tag&lt; by_vote_for &gt;, member&lt; <ref refid="classgraphene_1_1chain_1_1worker__object" kindref="compound">worker_object</ref>, <ref refid="structgraphene_1_1protocol_1_1vote__id__type" kindref="compound">vote_id_type</ref>, &amp;<ref refid="classgraphene_1_1chain_1_1worker__object_1a59fe30f86eb264a837de20f7060139fe" kindref="member">worker_object::vote_for</ref> &gt; &gt;, ordered_unique&lt; tag&lt; by_vote_against &gt;, member&lt; <ref refid="classgraphene_1_1chain_1_1worker__object" kindref="compound">worker_object</ref>, <ref refid="structgraphene_1_1protocol_1_1vote__id__type" kindref="compound">vote_id_type</ref>, &amp;<ref refid="classgraphene_1_1chain_1_1worker__object_1a04502ac21107ce051c9d4eac2417061a" kindref="member">worker_object::vote_against</ref> &gt; &gt;, ordered_non_unique&lt; tag&lt; by_end_date &gt;, member&lt; <ref refid="classgraphene_1_1chain_1_1worker__object" kindref="compound">worker_object</ref>, <ref refid="classfc_1_1time__point__sec" kindref="compound">time_point_sec</ref>, &amp;<ref refid="classgraphene_1_1chain_1_1worker__object_1a7adef03c9c161025de19148e1a1c2938" kindref="member">worker_object::work_end_date</ref> &gt; &gt; &gt;&gt;</type>
        <definition>typedef multi_index_container&lt; worker_object, indexed_by&lt; ordered_unique&lt; tag&lt;by_id&gt;, member&lt; object, object_id_type, &amp;object::id &gt; &gt;, ordered_non_unique&lt; tag&lt;by_account&gt;, member&lt; worker_object, account_id_type, &amp;worker_object::worker_account &gt; &gt;, ordered_unique&lt; tag&lt;by_vote_for&gt;, member&lt; worker_object, vote_id_type, &amp;worker_object::vote_for &gt; &gt;, ordered_unique&lt; tag&lt;by_vote_against&gt;, member&lt; worker_object, vote_id_type, &amp;worker_object::vote_against &gt; &gt;, ordered_non_unique&lt; tag&lt;by_end_date&gt;, member&lt; worker_object, time_point_sec, &amp;worker_object::work_end_date&gt; &gt; &gt;&gt; graphene::chain::worker_object_multi_index_type</definition>
        <argsstring></argsstring>
        <name>worker_object_multi_index_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/worker_object.hpp" line="155" column="2" bodyfile="libraries/chain/include/graphene/chain/worker_object.hpp" bodystart="145" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacegraphene_1_1chain_1ad0445f69e4dc63af75eb5a699a04ec8b" prot="public" static="no">
        <type><ref refid="classgraphene_1_1db_1_1generic__index" kindref="compound">generic_index</ref>&lt; <ref refid="classgraphene_1_1chain_1_1worker__object" kindref="compound">worker_object</ref>, <ref refid="namespacegraphene_1_1chain_1ae36014b154bdde599b81ee6af8b52633" kindref="member">worker_object_multi_index_type</ref> &gt;</type>
        <definition>using graphene::chain::worker_index = typedef generic_index&lt;worker_object, worker_object_multi_index_type&gt;</definition>
        <argsstring></argsstring>
        <name>worker_index</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/worker_object.hpp" line="157" column="1" bodyfile="libraries/chain/include/graphene/chain/worker_object.hpp" bodystart="157" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="namespacegraphene_1_1chain_1adad2d2e1b4020dd6880eac7fbf4a7821" prot="public" static="yes" mutable="no">
        <type>const uint32_t</type>
        <definition>const uint32_t graphene::chain::skip_expensive</definition>
        <argsstring></argsstring>
        <name>skip_expensive</name>
        <initializer>= <ref refid="classgraphene_1_1chain_1_1database_1a6de6add85d012876641f2a50ad707726ada088aa976bc3f5a1813dc7645b591ad" kindref="member">database::skip_transaction_signatures</ref> | <ref refid="classgraphene_1_1chain_1_1database_1a6de6add85d012876641f2a50ad707726a7cd765f84f450cfdd68e3adcf87c02d2" kindref="member">database::skip_witness_signature</ref>
                                       | <ref refid="classgraphene_1_1chain_1_1database_1a6de6add85d012876641f2a50ad707726a67c110807cc8ac1b8096a8d7888804c4" kindref="member">database::skip_merkle_check</ref> | <ref refid="classgraphene_1_1chain_1_1database_1a6de6add85d012876641f2a50ad707726aa4b454d723548a14369e9d54ebff309c" kindref="member">database::skip_transaction_dupe_check</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/db_block.cpp" line="870" column="23" bodyfile="libraries/chain/db_block.cpp" bodystart="870" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacegraphene_1_1chain_1a1b4e367cb7b681e2b32309c6125443f4" prot="public" static="no" mutable="no">
        <type></type>
        <definition>block validation exception operation validation exception graphene::chain::chain_exception</definition>
        <argsstring></argsstring>
        <name>chain_exception</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/exceptions.cpp" line="44" column="10" bodyfile="libraries/chain/exceptions.cpp" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacegraphene_1_1chain_1a13ec502fb08134be3346f5d4db5ccfb5" prot="public" static="no" mutable="no">
        <type>block validation exception <ref refid="group__operations_1gad4674c1a800a9c624a13e1243dcbe967" kindref="member">operation</ref> validation exception utility method exception</type>
        <definition>block validation exception operation validation exception utility method exception graphene::chain::transaction_process_exception</definition>
        <argsstring></argsstring>
        <name>transaction_process_exception</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/exceptions.cpp" line="62" column="13" bodyfile="libraries/chain/exceptions.cpp" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacegraphene_1_1chain_1a9afb1ca44de49a48683f8881302f832d" prot="public" static="no" mutable="no">
        <type></type>
        <definition>The market has not been whitelisted by the selling asset The account is not allowed to transact the selling asset graphene::chain::limit_order_create</definition>
        <argsstring></argsstring>
        <name>limit_order_create</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/exceptions.cpp" line="76" column="6" bodyfile="libraries/chain/exceptions.cpp" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacegraphene_1_1chain_1a0e18b6623557196b5a6a4f8984845905" prot="public" static="no" mutable="no">
        <type></type>
        <definition>graphene::chain::account_create</definition>
        <argsstring></argsstring>
        <name>account_create</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/exceptions.cpp" line="104" column="6" bodyfile="libraries/chain/exceptions.cpp" bodystart="104" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespacegraphene_1_1chain_1a23da19530067c8f079d293b5b5f948ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::chain::verify_authority_accounts</definition>
        <argsstring>(const database &amp;db, const authority &amp;a)</argsstring>
        <name>verify_authority_accounts</name>
        <param>
          <type>const <ref refid="classgraphene_1_1chain_1_1database" kindref="compound">database</ref> &amp;</type>
          <declname>db</declname>
        </param>
        <param>
          <type>const <ref refid="structgraphene_1_1protocol_1_1authority" kindref="compound">authority</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/account_evaluator.cpp" line="42" column="6" bodyfile="libraries/chain/account_evaluator.cpp" bodystart="42" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="namespacegraphene_1_1chain_1a0da8afb851e982b71efa49ae3f0371f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::chain::verify_account_votes</definition>
        <argsstring>(const database &amp;db, const account_options &amp;options)</argsstring>
        <name>verify_account_votes</name>
        <param>
          <type>const <ref refid="classgraphene_1_1chain_1_1database" kindref="compound">database</ref> &amp;</type>
          <declname>db</declname>
        </param>
        <param>
          <type>const <ref refid="structgraphene_1_1protocol_1_1account__options" kindref="compound">account_options</ref> &amp;</type>
          <declname>options</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/account_evaluator.cpp" line="58" column="6" bodyfile="libraries/chain/account_evaluator.cpp" bodystart="58" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="namespacegraphene_1_1chain_1a8239dba8aaa25b29bb29aa103223ec17" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacegraphene_1_1protocol_1a69b2104c1c11eed2d17bd29b86713347" kindref="member">share_type</ref></type>
        <definition>share_type graphene::chain::cut_fee</definition>
        <argsstring>(share_type a, uint16_t p)</argsstring>
        <name>cut_fee</name>
        <param>
          <type><ref refid="namespacegraphene_1_1protocol_1a69b2104c1c11eed2d17bd29b86713347" kindref="member">share_type</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/account_object.cpp" line="32" column="12" bodyfile="libraries/chain/account_object.cpp" bodystart="32" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="namespacegraphene_1_1chain_1a1f737751944776e67c799c3ecdaf71c8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void graphene::chain::validate_new_issuer</definition>
        <argsstring>(const database &amp;d, const asset_object &amp;a, account_id_type new_issuer)</argsstring>
        <name>validate_new_issuer</name>
        <param>
          <type>const <ref refid="classgraphene_1_1chain_1_1database" kindref="compound">database</ref> &amp;</type>
          <declname>d</declname>
        </param>
        <param>
          <type>const <ref refid="classgraphene_1_1chain_1_1asset__object" kindref="compound">asset_object</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>account_id_type</type>
          <declname>new_issuer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/asset_evaluator.cpp" line="429" column="13" bodyfile="libraries/chain/asset_evaluator.cpp" bodystart="429" bodyend="444"/>
      </memberdef>
      <memberdef kind="function" id="namespacegraphene_1_1chain_1a73f36aeffcde30d95155f6c6565f65a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::chain::check_children_of_bitasset</definition>
        <argsstring>(const database &amp;d, const asset_update_bitasset_operation &amp;op, const asset_object &amp;new_backing_asset)</argsstring>
        <name>check_children_of_bitasset</name>
        <param>
          <type>const <ref refid="classgraphene_1_1chain_1_1database" kindref="compound">database</ref> &amp;</type>
          <declname>d</declname>
        </param>
        <param>
          <type>const <ref refid="structgraphene_1_1protocol_1_1asset__update__bitasset__operation" kindref="compound">asset_update_bitasset_operation</ref> &amp;</type>
          <declname>op</declname>
        </param>
        <param>
          <type>const <ref refid="classgraphene_1_1chain_1_1asset__object" kindref="compound">asset_object</ref> &amp;</type>
          <declname>new_backing_asset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/asset_evaluator.cpp" line="696" column="6" bodyfile="libraries/chain/asset_evaluator.cpp" bodystart="696" bodyend="722"/>
      </memberdef>
      <memberdef kind="function" id="namespacegraphene_1_1chain_1a95566582af421d87fa3a90a61e683bb7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool graphene::chain::update_bitasset_object_options</definition>
        <argsstring>(const asset_update_bitasset_operation &amp;op, database &amp;db, asset_bitasset_data_object &amp;bdo, const asset_object &amp;asset_to_update, bool update_feeds_due_to_bsrm_change)</argsstring>
        <name>update_bitasset_object_options</name>
        <param>
          <type>const <ref refid="structgraphene_1_1protocol_1_1asset__update__bitasset__operation" kindref="compound">asset_update_bitasset_operation</ref> &amp;</type>
          <declname>op</declname>
        </param>
        <param>
          <type><ref refid="classgraphene_1_1chain_1_1database" kindref="compound">database</ref> &amp;</type>
          <declname>db</declname>
        </param>
        <param>
          <type><ref refid="classgraphene_1_1chain_1_1asset__bitasset__data__object" kindref="compound">asset_bitasset_data_object</ref> &amp;</type>
          <declname>bdo</declname>
        </param>
        <param>
          <type>const <ref refid="classgraphene_1_1chain_1_1asset__object" kindref="compound">asset_object</ref> &amp;</type>
          <declname>asset_to_update</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>update_feeds_due_to_bsrm_change</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/asset_evaluator.cpp" line="908" column="13" bodyfile="libraries/chain/asset_evaluator.cpp" bodystart="908" bodyend="1023"/>
      </memberdef>
      <memberdef kind="function" id="namespacegraphene_1_1chain_1a2c8809a3150ab4f5208a7936abd3c72a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classfc_1_1optional" kindref="compound">optional</ref>&lt; <ref refid="structgraphene_1_1protocol_1_1asset" kindref="compound">asset</ref> &gt;</type>
        <definition>static optional&lt;asset&gt; graphene::chain::pay_collateral_fees</definition>
        <argsstring>(database &amp;d, const asset &amp;pays, const asset &amp;settled_amount, const asset_object &amp;asset_to_settle, const asset_bitasset_data_object &amp;bitasset)</argsstring>
        <name>pay_collateral_fees</name>
        <param>
          <type><ref refid="classgraphene_1_1chain_1_1database" kindref="compound">database</ref> &amp;</type>
          <declname>d</declname>
        </param>
        <param>
          <type>const <ref refid="structgraphene_1_1protocol_1_1asset" kindref="compound">asset</ref> &amp;</type>
          <declname>pays</declname>
        </param>
        <param>
          <type>const <ref refid="structgraphene_1_1protocol_1_1asset" kindref="compound">asset</ref> &amp;</type>
          <declname>settled_amount</declname>
        </param>
        <param>
          <type>const <ref refid="classgraphene_1_1chain_1_1asset__object" kindref="compound">asset_object</ref> &amp;</type>
          <declname>asset_to_settle</declname>
        </param>
        <param>
          <type>const <ref refid="classgraphene_1_1chain_1_1asset__bitasset__data__object" kindref="compound">asset_bitasset_data_object</ref> &amp;</type>
          <declname>bitasset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/asset_evaluator.cpp" line="1196" column="17" bodyfile="libraries/chain/asset_evaluator.cpp" bodystart="1196" bodyend="1220"/>
      </memberdef>
      <memberdef kind="function" id="namespacegraphene_1_1chain_1ad02657497503730ac369e9366db3b426" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__operations_1ga8d0cc3fd7fdc83761fcf4420cc828631" kindref="member">extendable_operation_result</ref></type>
        <definition>static extendable_operation_result graphene::chain::pay_settle_from_gs_fund</definition>
        <argsstring>(database &amp;d, const asset_settle_evaluator::operation_type &amp;op, const account_object *fee_paying_account, const asset_object &amp;asset_to_settle, const asset_bitasset_data_object &amp;bitasset)</argsstring>
        <name>pay_settle_from_gs_fund</name>
        <param>
          <type><ref refid="classgraphene_1_1chain_1_1database" kindref="compound">database</ref> &amp;</type>
          <declname>d</declname>
        </param>
        <param>
          <type>const <ref refid="classgraphene_1_1chain_1_1asset__settle__evaluator_1af96f59953d860b56391382f524cd514b" kindref="member">asset_settle_evaluator::operation_type</ref> &amp;</type>
          <declname>op</declname>
        </param>
        <param>
          <type>const <ref refid="classgraphene_1_1chain_1_1account__object" kindref="compound">account_object</ref> *</type>
          <declname>fee_paying_account</declname>
        </param>
        <param>
          <type>const <ref refid="classgraphene_1_1chain_1_1asset__object" kindref="compound">asset_object</ref> &amp;</type>
          <declname>asset_to_settle</declname>
        </param>
        <param>
          <type>const <ref refid="classgraphene_1_1chain_1_1asset__bitasset__data__object" kindref="compound">asset_bitasset_data_object</ref> &amp;</type>
          <declname>bitasset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/asset_evaluator.cpp" line="1222" column="36" bodyfile="libraries/chain/asset_evaluator.cpp" bodystart="1222" bodyend="1299"/>
      </memberdef>
      <memberdef kind="function" id="namespacegraphene_1_1chain_1a2d821888d38e0249a04490aec462dd67" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__operations_1ga8d0cc3fd7fdc83761fcf4420cc828631" kindref="member">extendable_operation_result</ref></type>
        <definition>static extendable_operation_result graphene::chain::pay_settle_from_individual_pool</definition>
        <argsstring>(database &amp;d, const asset_settle_evaluator::operation_type &amp;op, const account_object *fee_paying_account, const asset_object &amp;asset_to_settle, const asset_bitasset_data_object &amp;bitasset)</argsstring>
        <name>pay_settle_from_individual_pool</name>
        <param>
          <type><ref refid="classgraphene_1_1chain_1_1database" kindref="compound">database</ref> &amp;</type>
          <declname>d</declname>
        </param>
        <param>
          <type>const <ref refid="classgraphene_1_1chain_1_1asset__settle__evaluator_1af96f59953d860b56391382f524cd514b" kindref="member">asset_settle_evaluator::operation_type</ref> &amp;</type>
          <declname>op</declname>
        </param>
        <param>
          <type>const <ref refid="classgraphene_1_1chain_1_1account__object" kindref="compound">account_object</ref> *</type>
          <declname>fee_paying_account</declname>
        </param>
        <param>
          <type>const <ref refid="classgraphene_1_1chain_1_1asset__object" kindref="compound">asset_object</ref> &amp;</type>
          <declname>asset_to_settle</declname>
        </param>
        <param>
          <type>const <ref refid="classgraphene_1_1chain_1_1asset__bitasset__data__object" kindref="compound">asset_bitasset_data_object</ref> &amp;</type>
          <declname>bitasset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/asset_evaluator.cpp" line="1301" column="36" bodyfile="libraries/chain/asset_evaluator.cpp" bodystart="1301" bodyend="1357"/>
      </memberdef>
      <memberdef kind="function" id="namespacegraphene_1_1chain_1af58d983afb0efae1eb384b67512499ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::chain::evaluate_buyback_account_options</definition>
        <argsstring>(const database &amp;db, const buyback_account_options &amp;bbo)</argsstring>
        <name>evaluate_buyback_account_options</name>
        <param>
          <type>const <ref refid="classgraphene_1_1chain_1_1database" kindref="compound">database</ref> &amp;</type>
          <declname>db</declname>
        </param>
        <param>
          <type>const <ref refid="structgraphene_1_1protocol_1_1buyback__account__options" kindref="compound">buyback_account_options</ref> &amp;</type>
          <declname>bbo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/buyback.cpp" line="32" column="6" bodyfile="libraries/chain/buyback.cpp" bodystart="32" bodyend="42" declfile="libraries/chain/include/graphene/chain/buyback.hpp" declline="32" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacegraphene_1_1chain_1a181f5eec24db1e1c680de88752cf9c12" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::chain::debug_apply_update</definition>
        <argsstring>(database &amp;db, const fc::variant_object &amp;vo)</argsstring>
        <name>debug_apply_update</name>
        <param>
          <type><ref refid="classgraphene_1_1chain_1_1database" kindref="compound">database</ref> &amp;</type>
          <declname>db</declname>
        </param>
        <param>
          <type>const <ref refid="classfc_1_1variant__object" kindref="compound">fc::variant_object</ref> &amp;</type>
          <declname>vo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/db_debug.cpp" line="117" column="6" bodyfile="libraries/chain/db_debug.cpp" bodystart="117" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="namespacegraphene_1_1chain_1a212ef9abe452c27e2b26f4d521c298f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Visitor</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void graphene::chain::visit_special_authorities</definition>
        <argsstring>(const database &amp;db, Visitor visit)</argsstring>
        <name>visit_special_authorities</name>
        <param>
          <type>const <ref refid="classgraphene_1_1chain_1_1database" kindref="compound">database</ref> &amp;</type>
          <declname>db</declname>
        </param>
        <param>
          <type>Visitor</type>
          <declname>visit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/db_maint.cpp" line="571" column="6" bodyfile="libraries/chain/db_maint.cpp" bodystart="571" bodyend="587"/>
      </memberdef>
      <memberdef kind="function" id="namespacegraphene_1_1chain_1aafe078504bd9675a005078b468843223" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::chain::update_top_n_authorities</definition>
        <argsstring>(database &amp;db)</argsstring>
        <name>update_top_n_authorities</name>
        <param>
          <type><ref refid="classgraphene_1_1chain_1_1database" kindref="compound">database</ref> &amp;</type>
          <declname>db</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/db_maint.cpp" line="589" column="6" bodyfile="libraries/chain/db_maint.cpp" bodystart="589" bodyend="626"/>
      </memberdef>
      <memberdef kind="function" id="namespacegraphene_1_1chain_1a1c463857736685f0a10fd056d2b4b85a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::chain::split_fba_balance</definition>
        <argsstring>(database &amp;db, uint64_t fba_id, uint16_t network_pct, uint16_t designated_asset_buyback_pct, uint16_t designated_asset_issuer_pct)</argsstring>
        <name>split_fba_balance</name>
        <param>
          <type><ref refid="classgraphene_1_1chain_1_1database" kindref="compound">database</ref> &amp;</type>
          <declname>db</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>fba_id</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>network_pct</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>designated_asset_buyback_pct</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>designated_asset_issuer_pct</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/db_maint.cpp" line="628" column="6" bodyfile="libraries/chain/db_maint.cpp" bodystart="628" bodyend="707"/>
      </memberdef>
      <memberdef kind="function" id="namespacegraphene_1_1chain_1a86127c6c883fd8cee0b6c9bc9911da82" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::chain::distribute_fba_balances</definition>
        <argsstring>(database &amp;db)</argsstring>
        <name>distribute_fba_balances</name>
        <param>
          <type><ref refid="classgraphene_1_1chain_1_1database" kindref="compound">database</ref> &amp;</type>
          <declname>db</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/db_maint.cpp" line="709" column="6" bodyfile="libraries/chain/db_maint.cpp" bodystart="709" bodyend="718"/>
      </memberdef>
      <memberdef kind="function" id="namespacegraphene_1_1chain_1a8708850467d84b28bded18bba06d2bca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::chain::create_buyback_orders</definition>
        <argsstring>(database &amp;db)</argsstring>
        <name>create_buyback_orders</name>
        <param>
          <type><ref refid="classgraphene_1_1chain_1_1database" kindref="compound">database</ref> &amp;</type>
          <declname>db</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/db_maint.cpp" line="720" column="6" bodyfile="libraries/chain/db_maint.cpp" bodystart="720" bodyend="794"/>
      </memberdef>
      <memberdef kind="function" id="namespacegraphene_1_1chain_1a519e1c11323acf5f5e2feb9b6b5f85eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::chain::deprecate_annual_members</definition>
        <argsstring>(database &amp;db)</argsstring>
        <name>deprecate_annual_members</name>
        <param>
          <type><ref refid="classgraphene_1_1chain_1_1database" kindref="compound">database</ref> &amp;</type>
          <declname>db</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/db_maint.cpp" line="796" column="6" bodyfile="libraries/chain/db_maint.cpp" bodystart="796" bodyend="825"/>
      </memberdef>
      <memberdef kind="function" id="namespacegraphene_1_1chain_1a81d9a77c7e843ae267732844937d5cfb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::chain::update_call_orders_hf_343</definition>
        <argsstring>(database &amp;db)</argsstring>
        <name>update_call_orders_hf_343</name>
        <param>
          <type><ref refid="classgraphene_1_1chain_1_1database" kindref="compound">database</ref> &amp;</type>
          <declname>db</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reset call_price of all call orders according to their remaining collateral and debt. Do not update orders of prediction markets because we&apos;re sure they&apos;re up to date. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/db_maint.cpp" line="897" column="6" bodyfile="libraries/chain/db_maint.cpp" bodystart="897" bodyend="919"/>
      </memberdef>
      <memberdef kind="function" id="namespacegraphene_1_1chain_1ac6f80d49d04cbec788eeb3c55bed5d1f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::chain::update_call_orders_hf_1270</definition>
        <argsstring>(database &amp;db)</argsstring>
        <name>update_call_orders_hf_1270</name>
        <param>
          <type><ref refid="classgraphene_1_1chain_1_1database" kindref="compound">database</ref> &amp;</type>
          <declname>db</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reset call_price of all call orders to (1,1) since it won&apos;t be used in the future. Update PMs as well. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/db_maint.cpp" line="923" column="6" bodyfile="libraries/chain/db_maint.cpp" bodystart="923" bodyend="933"/>
      </memberdef>
      <memberdef kind="function" id="namespacegraphene_1_1chain_1adc23be0df6f5961c6f3699a5e13345f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::chain::match_call_orders</definition>
        <argsstring>(database &amp;db)</argsstring>
        <name>match_call_orders</name>
        <param>
          <type><ref refid="classgraphene_1_1chain_1_1database" kindref="compound">database</ref> &amp;</type>
          <declname>db</declname>
        </param>
        <briefdescription>
<para>Match call orders for all bitAssets, including PMs. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>market issued</para>
        </inbodydescription>
        <location file="libraries/chain/db_maint.cpp" line="936" column="6" bodyfile="libraries/chain/db_maint.cpp" bodystart="936" bodyend="951"/>
      </memberdef>
      <memberdef kind="function" id="namespacegraphene_1_1chain_1ac6b6bc83d0d75a636ca349bd6cf910d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::chain::process_hf_1465</definition>
        <argsstring>(database &amp;db)</argsstring>
        <name>process_hf_1465</name>
        <param>
          <type><ref refid="classgraphene_1_1chain_1_1database" kindref="compound">database</ref> &amp;</type>
          <declname>db</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/db_maint.cpp" line="998" column="6" bodyfile="libraries/chain/db_maint.cpp" bodystart="998" bodyend="1020"/>
      </memberdef>
      <memberdef kind="function" id="namespacegraphene_1_1chain_1a585abb536697dd411b21d9e3b7fcf638" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::chain::process_hf_2103</definition>
        <argsstring>(database &amp;db)</argsstring>
        <name>process_hf_2103</name>
        <param>
          <type><ref refid="classgraphene_1_1chain_1_1database" kindref="compound">database</ref> &amp;</type>
          <declname>db</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/db_maint.cpp" line="1025" column="6" bodyfile="libraries/chain/db_maint.cpp" bodystart="1025" bodyend="1036"/>
      </memberdef>
      <memberdef kind="function" id="namespacegraphene_1_1chain_1afefdf2d2f8ce39e69d51f54e46e2498f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void graphene::chain::update_bitasset_current_feeds</definition>
        <argsstring>(database &amp;db)</argsstring>
        <name>update_bitasset_current_feeds</name>
        <param>
          <type><ref refid="classgraphene_1_1chain_1_1database" kindref="compound">database</ref> &amp;</type>
          <declname>db</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/db_maint.cpp" line="1038" column="13" bodyfile="libraries/chain/db_maint.cpp" bodystart="1038" bodyend="1044"/>
      </memberdef>
      <memberdef kind="function" id="namespacegraphene_1_1chain_1a66458ced8555be2be1c1208051e9dddc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::chain::process_hf_868_890</definition>
        <argsstring>(database &amp;db)</argsstring>
        <name>process_hf_868_890</name>
        <param>
          <type><ref refid="classgraphene_1_1chain_1_1database" kindref="compound">database</ref> &amp;</type>
          <declname>db</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/db_maint.cpp" line="1063" column="6" bodyfile="libraries/chain/db_maint.cpp" bodystart="1063" bodyend="1116"/>
      </memberdef>
      <memberdef kind="function" id="namespacegraphene_1_1chain_1a22e27ce56031046f89be2a16ab67491f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::chain::delete_expired_custom_auths</definition>
        <argsstring>(database &amp;db)</argsstring>
        <name>delete_expired_custom_auths</name>
        <param>
          <type><ref refid="classgraphene_1_1chain_1_1database" kindref="compound">database</ref> &amp;</type>
          <declname>db</declname>
        </param>
        <briefdescription>
<para>Remove any custom active authorities whose expiration dates are in the past. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>db</parametername>
</parameternamelist>
<parameterdescription>
<para>A mutable database reference </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/db_maint.cpp" line="1123" column="6" bodyfile="libraries/chain/db_maint.cpp" bodystart="1123" bodyend="1128"/>
      </memberdef>
      <memberdef kind="function" id="namespacegraphene_1_1chain_1af851b1b86654e2b28e2bc1c606fa16d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::chain::process_hf_2262</definition>
        <argsstring>(database &amp;db)</argsstring>
        <name>process_hf_2262</name>
        <param>
          <type><ref refid="classgraphene_1_1chain_1_1database" kindref="compound">database</ref> &amp;</type>
          <declname>db</declname>
        </param>
        <briefdescription>
<para>A one-time data process to set values of existing liquid tickets to zero. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/db_maint.cpp" line="1131" column="6" bodyfile="libraries/chain/db_maint.cpp" bodystart="1131" bodyend="1144"/>
      </memberdef>
      <memberdef kind="function" id="namespacegraphene_1_1chain_1a87ed659b3a0cfe9b320351e5fe0fd476" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::chain::process_hf_2281</definition>
        <argsstring>(database &amp;db)</argsstring>
        <name>process_hf_2281</name>
        <param>
          <type><ref refid="classgraphene_1_1chain_1_1database" kindref="compound">database</ref> &amp;</type>
          <declname>db</declname>
        </param>
        <briefdescription>
<para>A one-time data process to cancel all collateral bids for assets that disabled collateral bidding already. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/db_maint.cpp" line="1147" column="6" bodyfile="libraries/chain/db_maint.cpp" bodystart="1147" bodyend="1169"/>
      </memberdef>
      <memberdef kind="function" id="namespacegraphene_1_1chain_1a908cd1fa664baa7cdbf681f694342223" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool graphene::chain::maybe_cull_small_order</definition>
        <argsstring>(database &amp;db, const limit_order_object &amp;order)</argsstring>
        <name>maybe_cull_small_order</name>
        <param>
          <type><ref refid="classgraphene_1_1chain_1_1database" kindref="compound">database</ref> &amp;</type>
          <declname>db</declname>
        </param>
        <param>
          <type>const <ref refid="classgraphene_1_1chain_1_1limit__order__object" kindref="compound">limit_order_object</ref> &amp;</type>
          <declname>order</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>There are times when the AMOUNT_FOR_SALE * SALE_PRICE == 0 which means that we have hit the limit where the seller is asking for nothing in return. When this happens we must refund any balance back to the seller, it is too small to be sold at the sale price.</para>
<para>If the order is a taker order (as opposed to a maker order), so the price is set by the counterparty, this check is deferred until the order becomes unmatched (see #555) <ndash/> however, detecting this condition is the responsibility of the caller.</para>
        </inbodydescription>
        <location file="libraries/chain/db_market.cpp" line="646" column="6" bodyfile="libraries/chain/db_market.cpp" bodystart="646" bodyend="669"/>
      </memberdef>
      <memberdef kind="function" id="namespacegraphene_1_1chain_1ae54af573bf12f5cf7f25cef1e770cc14" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classgraphene_1_1chain_1_1database_1aaa234ff3fda171f0cf673fe338632599" kindref="member">database::match_result_type</ref></type>
        <definition>static database::match_result_type graphene::chain::get_match_result</definition>
        <argsstring>(bool taker_filled, bool maker_filled)</argsstring>
        <name>get_match_result</name>
        <param>
          <type>bool</type>
          <declname>taker_filled</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>maker_filled</declname>
        </param>
        <briefdescription>
<para>Helper function. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/db_market.cpp" line="1024" column="36" bodyfile="libraries/chain/db_market.cpp" bodystart="1024" bodyend="1032"/>
      </memberdef>
      <memberdef kind="function" id="namespacegraphene_1_1chain_1a577792c617d5592f8a6a9067a52155c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::chain::operation_get_impacted_accounts</definition>
        <argsstring>(const operation &amp;op, flat_set&lt; account_id_type &gt; &amp;result, bool ignore_custom_op_required_auths)</argsstring>
        <name>operation_get_impacted_accounts</name>
        <param>
          <type>const <ref refid="group__operations_1gad4674c1a800a9c624a13e1243dcbe967" kindref="member">operation</ref> &amp;</type>
          <declname>op</declname>
        </param>
        <param>
          <type>flat_set&lt; account_id_type &gt; &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>ignore_custom_op_required_auths</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/db_notify.cpp" line="403" column="6" bodyfile="libraries/chain/db_notify.cpp" bodystart="403" bodyend="408"/>
      </memberdef>
      <memberdef kind="function" id="namespacegraphene_1_1chain_1a28f3fe102eac11e8fed8d8f14100fc74" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::chain::transaction_get_impacted_accs</definition>
        <argsstring>(const transaction &amp;tx, flat_set&lt; account_id_type &gt; &amp;result, bool ignore_custom_op_required_auths)</argsstring>
        <name>transaction_get_impacted_accs</name>
        <param>
          <type>const <ref refid="classgraphene_1_1protocol_1_1transaction" kindref="compound">transaction</ref> &amp;</type>
          <declname>tx</declname>
        </param>
        <param>
          <type>flat_set&lt; account_id_type &gt; &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>ignore_custom_op_required_auths</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/db_notify.cpp" line="411" column="6" bodyfile="libraries/chain/db_notify.cpp" bodystart="411" bodyend="416"/>
      </memberdef>
      <memberdef kind="function" id="namespacegraphene_1_1chain_1ac922c53ae800c95f6198a9034aea3026" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void graphene::chain::get_relevant_accounts</definition>
        <argsstring>(const object *obj, flat_set&lt; account_id_type &gt; &amp;accounts, bool ignore_custom_op_required_auths)</argsstring>
        <name>get_relevant_accounts</name>
        <param>
          <type>const <ref refid="classgraphene_1_1db_1_1object" kindref="compound">object</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>flat_set&lt; account_id_type &gt; &amp;</type>
          <declname>accounts</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>ignore_custom_op_required_auths</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>these are free from any accounts</para>
        </inbodydescription>
        <location file="libraries/chain/db_notify.cpp" line="418" column="13" bodyfile="libraries/chain/db_notify.cpp" bodystart="418" bodyend="580"/>
      </memberdef>
      <memberdef kind="function" id="namespacegraphene_1_1chain_1aeb3f44c5ef6dcfbaeeb85262aae133b4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classfc_1_1optional" kindref="compound">optional</ref>&lt; <ref refid="structgraphene_1_1protocol_1_1price" kindref="compound">price</ref> &gt;</type>
        <definition>static optional&lt;price&gt; graphene::chain::get_derived_current_feed_price</definition>
        <argsstring>(const database &amp;db, const asset_bitasset_data_object &amp;bitasset)</argsstring>
        <name>get_derived_current_feed_price</name>
        <param>
          <type>const <ref refid="classgraphene_1_1chain_1_1database" kindref="compound">database</ref> &amp;</type>
          <declname>db</declname>
        </param>
        <param>
          <type>const <ref refid="classgraphene_1_1chain_1_1asset__bitasset__data__object" kindref="compound">asset_bitasset_data_object</ref> &amp;</type>
          <declname>bitasset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/db_update.cpp" line="178" column="17" bodyfile="libraries/chain/db_update.cpp" bodystart="178" bodyend="223"/>
      </memberdef>
      <memberdef kind="function" id="namespacegraphene_1_1chain_1a41b147f6055a91b29034bbc97cf3d0b2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void graphene::chain::update_settled_debt_order</definition>
        <argsstring>(database &amp;db, const asset_bitasset_data_object &amp;bitasset)</argsstring>
        <name>update_settled_debt_order</name>
        <param>
          <type><ref refid="classgraphene_1_1chain_1_1database" kindref="compound">database</ref> &amp;</type>
          <declname>db</declname>
        </param>
        <param>
          <type>const <ref refid="classgraphene_1_1chain_1_1asset__bitasset__data__object" kindref="compound">asset_bitasset_data_object</ref> &amp;</type>
          <declname>bitasset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/db_update.cpp" line="226" column="13" bodyfile="libraries/chain/db_update.cpp" bodystart="226" bodyend="268"/>
      </memberdef>
      <memberdef kind="function" id="namespacegraphene_1_1chain_1a6363ae4f350e54d76a60993d343bbc7e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>graphene::chain::FC_IMPLEMENT_DERIVED_EXCEPTION</definition>
        <argsstring>(database_query_exception, chain_exception, 3010000, &quot;database query exception&quot;) FC_IMPLEMENT_DERIVED_EXCEPTION(block_validate_exception</argsstring>
        <name>FC_IMPLEMENT_DERIVED_EXCEPTION</name>
        <param>
          <type>database_query_exception</type>
        </param>
        <param>
          <type><ref refid="namespacegraphene_1_1chain_1a1b4e367cb7b681e2b32309c6125443f4" kindref="member">chain_exception</ref></type>
        </param>
        <param>
          <type>3010000</type>
        </param>
        <param>
          <type>&quot;database query exception&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/exceptions.cpp" line="42" column="4"/>
      </memberdef>
      <memberdef kind="function" id="namespacegraphene_1_1chain_1aed871a2caed16a1f50246473ec9c1fec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>block validation exception</type>
        <definition>block validation exception graphene::chain::FC_IMPLEMENT_DERIVED_EXCEPTION</definition>
        <argsstring>(transaction_process_exception, chain_exception, 3030000, &quot;transaction processing exception&quot;) FC_IMPLEMENT_DERIVED_EXCEPTION(operation_validate_exception</argsstring>
        <name>FC_IMPLEMENT_DERIVED_EXCEPTION</name>
        <param>
          <type><ref refid="namespacegraphene_1_1chain_1a13ec502fb08134be3346f5d4db5ccfb5" kindref="member">transaction_process_exception</ref></type>
        </param>
        <param>
          <type><ref refid="namespacegraphene_1_1chain_1a1b4e367cb7b681e2b32309c6125443f4" kindref="member">chain_exception</ref></type>
        </param>
        <param>
          <type>3030000</type>
        </param>
        <param>
          <type>&quot;transaction processing exception&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/exceptions.cpp" line="46" column="4"/>
      </memberdef>
      <memberdef kind="function" id="namespacegraphene_1_1chain_1accde3db4180b08afb5d12007db2ad3bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>block validation exception <ref refid="group__operations_1gad4674c1a800a9c624a13e1243dcbe967" kindref="member">operation</ref> validation exception</type>
        <definition>block validation exception operation validation exception graphene::chain::FC_IMPLEMENT_DERIVED_EXCEPTION</definition>
        <argsstring>(operation_evaluate_exception, chain_exception, 3050000, &quot;operation evaluation exception&quot;) FC_IMPLEMENT_DERIVED_EXCEPTION(utility_exception</argsstring>
        <name>FC_IMPLEMENT_DERIVED_EXCEPTION</name>
        <param>
          <type>operation_evaluate_exception</type>
        </param>
        <param>
          <type><ref refid="namespacegraphene_1_1chain_1a1b4e367cb7b681e2b32309c6125443f4" kindref="member">chain_exception</ref></type>
        </param>
        <param>
          <type>3050000</type>
        </param>
        <param>
          <type>&quot;operation evaluation exception&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/exceptions.cpp" line="50" column="4"/>
      </memberdef>
      <memberdef kind="function" id="namespacegraphene_1_1chain_1a85639666238301f52d7d2d4a803bdba8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>block validation exception <ref refid="group__operations_1gad4674c1a800a9c624a13e1243dcbe967" kindref="member">operation</ref> validation exception utility method exception</type>
        <definition>block validation exception operation validation exception utility method exception graphene::chain::FC_IMPLEMENT_DERIVED_EXCEPTION</definition>
        <argsstring>(undo_database_exception, chain_exception, 3070000, &quot;undo database exception&quot;) FC_IMPLEMENT_DERIVED_EXCEPTION(duplicate_transaction</argsstring>
        <name>FC_IMPLEMENT_DERIVED_EXCEPTION</name>
        <param>
          <type>undo_database_exception</type>
        </param>
        <param>
          <type><ref refid="namespacegraphene_1_1chain_1a1b4e367cb7b681e2b32309c6125443f4" kindref="member">chain_exception</ref></type>
        </param>
        <param>
          <type>3070000</type>
        </param>
        <param>
          <type>&quot;undo <ref refid="classgraphene_1_1chain_1_1database" kindref="compound">database</ref> exception&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/exceptions.cpp" line="54" column="4"/>
      </memberdef>
      <memberdef kind="function" id="namespacegraphene_1_1chain_1aba41d8c715d024d44c687255442b78a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>block validation exception <ref refid="group__operations_1gad4674c1a800a9c624a13e1243dcbe967" kindref="member">operation</ref> validation exception utility method exception duplicate <ref refid="classgraphene_1_1protocol_1_1transaction" kindref="compound">transaction</ref></type>
        <definition>block validation exception operation validation exception utility method exception duplicate transaction graphene::chain::FC_IMPLEMENT_DERIVED_EXCEPTION</definition>
        <argsstring>(pop_empty_chain, undo_database_exception, 3070001, &quot;there are no blocks to pop&quot;) GRAPHENE_IMPLEMENT_OP_BASE_EXCEPTIONS(transfer)</argsstring>
        <name>FC_IMPLEMENT_DERIVED_EXCEPTION</name>
        <param>
          <type>pop_empty_chain</type>
        </param>
        <param>
          <type>undo_database_exception</type>
        </param>
        <param>
          <type>3070001</type>
        </param>
        <param>
          <type>&quot;there are no blocks to pop&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/exceptions.cpp" line="65" column="4" declfile="libraries/chain/exceptions.cpp" declline="65" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="namespacegraphene_1_1chain_1ad7cd4b6dbd145cad4faca608194d8034" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>graphene::chain::GRAPHENE_IMPLEMENT_OP_BASE_EXCEPTIONS</definition>
        <argsstring>(limit_order_create)</argsstring>
        <name>GRAPHENE_IMPLEMENT_OP_BASE_EXCEPTIONS</name>
        <param>
          <type><ref refid="namespacegraphene_1_1chain_1a9afb1ca44de49a48683f8881302f832d" kindref="member">limit_order_create</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/exceptions.cpp" line="73" column="4" declfile="libraries/chain/exceptions.cpp" declline="73" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="namespacegraphene_1_1chain_1a7f0469e9e20875687b10818b09a3f5f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>graphene::chain::GRAPHENE_IMPLEMENT_OP_EVALUATE_EXCEPTION</definition>
        <argsstring>(kill_unfilled, limit_order_create, 1, &quot;Killing limit order due to unable to fill&quot;) GRAPHENE_IMPLEMENT_OP_EVALUATE_EXCEPTION(market_not_whitelisted</argsstring>
        <name>GRAPHENE_IMPLEMENT_OP_EVALUATE_EXCEPTION</name>
        <param>
          <type>kill_unfilled</type>
        </param>
        <param>
          <type><ref refid="namespacegraphene_1_1chain_1a9afb1ca44de49a48683f8881302f832d" kindref="member">limit_order_create</ref></type>
        </param>
        <param>
          <type>1</type>
        </param>
        <param>
          <type>&quot;Killing limit order due to unable to fill&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/exceptions.cpp" line="74" column="4"/>
      </memberdef>
      <memberdef kind="function" id="namespacegraphene_1_1chain_1a91a598ff38d6e2116a08f81746f722c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>The market has not been whitelisted by the selling <ref refid="structgraphene_1_1protocol_1_1asset" kindref="compound">asset</ref></type>
        <definition>The market has not been whitelisted by the selling asset graphene::chain::GRAPHENE_IMPLEMENT_OP_EVALUATE_EXCEPTION</definition>
        <argsstring>(market_blacklisted, limit_order_create, 3, &quot;The market has been blacklisted by the selling asset&quot;) GRAPHENE_IMPLEMENT_OP_EVALUATE_EXCEPTION(selling_asset_unauthorized</argsstring>
        <name>GRAPHENE_IMPLEMENT_OP_EVALUATE_EXCEPTION</name>
        <param>
          <type>market_blacklisted</type>
        </param>
        <param>
          <type><ref refid="namespacegraphene_1_1chain_1a9afb1ca44de49a48683f8881302f832d" kindref="member">limit_order_create</ref></type>
        </param>
        <param>
          <type>3</type>
        </param>
        <param>
          <type>&quot;The market has been blacklisted by the selling <ref refid="structgraphene_1_1protocol_1_1asset" kindref="compound">asset</ref>&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/exceptions.cpp" line="78" column="4"/>
      </memberdef>
      <memberdef kind="function" id="namespacegraphene_1_1chain_1a9372fea39ffd0762f8951be6cd07e1b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>The market has not been whitelisted by the selling <ref refid="structgraphene_1_1protocol_1_1asset" kindref="compound">asset</ref> The account is not allowed to transact the selling <ref refid="structgraphene_1_1protocol_1_1asset" kindref="compound">asset</ref></type>
        <definition>The market has not been whitelisted by the selling asset The account is not allowed to transact the selling asset graphene::chain::GRAPHENE_IMPLEMENT_OP_EVALUATE_EXCEPTION</definition>
        <argsstring>(receiving_asset_unauthorized, limit_order_create, 5, &quot;The account is not allowed to transact the receiving asset&quot;) GRAPHENE_IMPLEMENT_OP_EVALUATE_EXCEPTION(insufficient_balance</argsstring>
        <name>GRAPHENE_IMPLEMENT_OP_EVALUATE_EXCEPTION</name>
        <param>
          <type>receiving_asset_unauthorized</type>
        </param>
        <param>
          <type><ref refid="namespacegraphene_1_1chain_1a9afb1ca44de49a48683f8881302f832d" kindref="member">limit_order_create</ref></type>
        </param>
        <param>
          <type>5</type>
        </param>
        <param>
          <type>&quot;The account is not allowed to transact the receiving <ref refid="structgraphene_1_1protocol_1_1asset" kindref="compound">asset</ref>&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/exceptions.cpp" line="82" column="4"/>
      </memberdef>
      <memberdef kind="function" id="namespacegraphene_1_1chain_1ad90eb5f0fd9a646ae28d41cfe76792f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>The market has not been whitelisted by the selling <ref refid="structgraphene_1_1protocol_1_1asset" kindref="compound">asset</ref> The account is not allowed to transact the selling <ref refid="structgraphene_1_1protocol_1_1asset" kindref="compound">asset</ref> Insufficient balance</type>
        <definition>The market has not been whitelisted by the selling asset The account is not allowed to transact the selling asset Insufficient balance graphene::chain::GRAPHENE_IMPLEMENT_OP_BASE_EXCEPTIONS</definition>
        <argsstring>(limit_order_update)</argsstring>
        <name>GRAPHENE_IMPLEMENT_OP_BASE_EXCEPTIONS</name>
        <param>
          <type>limit_order_update</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/exceptions.cpp" line="87" column="4" declfile="libraries/chain/exceptions.cpp" declline="87" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="namespacegraphene_1_1chain_1a765bec50f42042c9fab44c524a159256" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>graphene::chain::GRAPHENE_IMPLEMENT_OP_BASE_EXCEPTIONS</definition>
        <argsstring>(limit_order_cancel)</argsstring>
        <name>GRAPHENE_IMPLEMENT_OP_BASE_EXCEPTIONS</name>
        <param>
          <type>limit_order_cancel</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/exceptions.cpp" line="91" column="4" declfile="libraries/chain/exceptions.cpp" declline="91" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="namespacegraphene_1_1chain_1a65615c7903f7af7a63da1605eb54aeeb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>graphene::chain::GRAPHENE_IMPLEMENT_OP_BASE_EXCEPTIONS</definition>
        <argsstring>(call_order_update)</argsstring>
        <name>GRAPHENE_IMPLEMENT_OP_BASE_EXCEPTIONS</name>
        <param>
          <type>call_order_update</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/exceptions.cpp" line="95" column="4" declfile="libraries/chain/exceptions.cpp" declline="95" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="namespacegraphene_1_1chain_1a148aa994f583bf09250f3808c7ad0d95" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>graphene::chain::GRAPHENE_IMPLEMENT_OP_EVALUATE_EXCEPTION</definition>
        <argsstring>(unfilled_margin_call, call_order_update, 1, &quot;Updating call order would trigger a margin call that cannot be fully filled&quot;) GRAPHENE_IMPLEMENT_OP_BASE_EXCEPTIONS(account_create)</argsstring>
        <name>GRAPHENE_IMPLEMENT_OP_EVALUATE_EXCEPTION</name>
        <param>
          <type>unfilled_margin_call</type>
        </param>
        <param>
          <type>call_order_update</type>
        </param>
        <param>
          <type>1</type>
        </param>
        <param>
          <type>&quot;Updating call order would trigger a margin call that cannot be fully filled&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/exceptions.cpp" line="96" column="4" declfile="libraries/chain/exceptions.cpp" declline="96" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="namespacegraphene_1_1chain_1ad44427868096f4ac03ec7b5819a49b92" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>graphene::chain::GRAPHENE_IMPLEMENT_OP_EVALUATE_EXCEPTION</definition>
        <argsstring>(buyback_incorrect_issuer, account_create, 3, &quot;Incorrect issuer specified for account&quot;) GRAPHENE_IMPLEMENT_OP_EVALUATE_EXCEPTION(buyback_already_exists</argsstring>
        <name>GRAPHENE_IMPLEMENT_OP_EVALUATE_EXCEPTION</name>
        <param>
          <type>buyback_incorrect_issuer</type>
        </param>
        <param>
          <type><ref refid="namespacegraphene_1_1chain_1a0e18b6623557196b5a6a4f8984845905" kindref="member">account_create</ref></type>
        </param>
        <param>
          <type>3</type>
        </param>
        <param>
          <type>&quot;Incorrect issuer specified for account&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/exceptions.cpp" line="102" column="4"/>
      </memberdef>
      <memberdef kind="function" id="namespacegraphene_1_1chain_1a1766a2ee167c41685d9b1b2edc653375" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Cannot create buyback for <ref refid="structgraphene_1_1protocol_1_1asset" kindref="compound">asset</ref> which already has buyback</type>
        <definition>Cannot create buyback for asset which already has buyback graphene::chain::GRAPHENE_IMPLEMENT_OP_BASE_EXCEPTIONS</definition>
        <argsstring>(account_update)</argsstring>
        <name>GRAPHENE_IMPLEMENT_OP_BASE_EXCEPTIONS</name>
        <param>
          <type>account_update</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/exceptions.cpp" line="108" column="4" declfile="libraries/chain/exceptions.cpp" declline="108" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="namespacegraphene_1_1chain_1a14324a119af19d60c96207d7d6ff6b98" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>graphene::chain::GRAPHENE_IMPLEMENT_OP_BASE_EXCEPTIONS</definition>
        <argsstring>(asset_reserve)</argsstring>
        <name>GRAPHENE_IMPLEMENT_OP_BASE_EXCEPTIONS</name>
        <param>
          <type>asset_reserve</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/exceptions.cpp" line="121" column="4" declfile="libraries/chain/exceptions.cpp" declline="121" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="namespacegraphene_1_1chain_1a32b04c614b466ca4603e68d0650b2cbd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>graphene::chain::GRAPHENE_IMPLEMENT_OP_BASE_EXCEPTIONS</definition>
        <argsstring>(proposal_create)</argsstring>
        <name>GRAPHENE_IMPLEMENT_OP_BASE_EXCEPTIONS</name>
        <param>
          <type>proposal_create</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/exceptions.cpp" line="131" column="4" declfile="libraries/chain/exceptions.cpp" declline="131" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="namespacegraphene_1_1chain_1a0189080884b3d4f082bb2b7ba3330cab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>graphene::chain::GRAPHENE_IMPLEMENT_OP_EVALUATE_EXCEPTION</definition>
        <argsstring>(review_period_insufficient, proposal_create, 2, &quot;review_period insufficient&quot;) GRAPHENE_IMPLEMENT_OP_BASE_EXCEPTIONS(balance_claim)</argsstring>
        <name>GRAPHENE_IMPLEMENT_OP_EVALUATE_EXCEPTION</name>
        <param>
          <type>review_period_insufficient</type>
        </param>
        <param>
          <type>proposal_create</type>
        </param>
        <param>
          <type>2</type>
        </param>
        <param>
          <type>&quot;review_period insufficient&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/exceptions.cpp" line="133" column="4" declfile="libraries/chain/exceptions.cpp" declline="133" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="namespacegraphene_1_1chain_1ac09d92ac6ee74dc48df3a7313dd6f878" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>graphene::chain::GRAPHENE_IMPLEMENT_OP_BASE_EXCEPTIONS</definition>
        <argsstring>(override_transfer)</argsstring>
        <name>GRAPHENE_IMPLEMENT_OP_BASE_EXCEPTIONS</name>
        <param>
          <type>override_transfer</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/exceptions.cpp" line="155" column="4" declfile="libraries/chain/exceptions.cpp" declline="155" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="namespacegraphene_1_1chain_1a13d31324ea25a1e916c8ed625ccb27ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>graphene::chain::GRAPHENE_IMPLEMENT_OP_BASE_EXCEPTIONS</definition>
        <argsstring>(blind_transfer)</argsstring>
        <name>GRAPHENE_IMPLEMENT_OP_BASE_EXCEPTIONS</name>
        <param>
          <type>blind_transfer</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/exceptions.cpp" line="158" column="4" declfile="libraries/chain/exceptions.cpp" declline="158" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="namespacegraphene_1_1chain_1a33d89420203abd7b9520c8154e09b15e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>graphene::chain::GRAPHENE_IMPLEMENT_OP_EVALUATE_EXCEPTION</definition>
        <argsstring>(unknown_commitment, blind_transfer, 1, &quot;Attempting to claim an unknown prior commitment&quot;)</argsstring>
        <name>GRAPHENE_IMPLEMENT_OP_EVALUATE_EXCEPTION</name>
        <param>
          <type>unknown_commitment</type>
        </param>
        <param>
          <type>blind_transfer</type>
        </param>
        <param>
          <type>1</type>
        </param>
        <param>
          <type>&quot;Attempting to claim an unknown prior commitment&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/exceptions.cpp" line="159" column="4" declfile="libraries/chain/exceptions.cpp" declline="159" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="namespacegraphene_1_1chain_1ac0eac39ec18fcd22e3834e7600c17e23" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>graphene::chain::GRAPHENE_IMPLEMENT_OP_BASE_EXCEPTIONS</definition>
        <argsstring>(liquidity_pool_exchange)</argsstring>
        <name>GRAPHENE_IMPLEMENT_OP_BASE_EXCEPTIONS</name>
        <param>
          <type>liquidity_pool_exchange</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/exceptions.cpp" line="171" column="4" declfile="libraries/chain/exceptions.cpp" declline="171" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="namespacegraphene_1_1chain_1abd8cfd58e47b0eefc422a7545b1f7cfc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>graphene::chain::GRAPHENE_IMPLEMENT_OP_EVALUATE_EXCEPTION</definition>
        <argsstring>(unfillable_price, liquidity_pool_exchange, 1, &quot;Unable to exchange at expected price&quot;)</argsstring>
        <name>GRAPHENE_IMPLEMENT_OP_EVALUATE_EXCEPTION</name>
        <param>
          <type>unfillable_price</type>
        </param>
        <param>
          <type>liquidity_pool_exchange</type>
        </param>
        <param>
          <type>1</type>
        </param>
        <param>
          <type>&quot;Unable to exchange at expected <ref refid="structgraphene_1_1protocol_1_1price" kindref="compound">price</ref>&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/exceptions.cpp" line="172" column="4" declfile="libraries/chain/exceptions.cpp" declline="172" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="namespacegraphene_1_1chain_1a1b635dbebd45f6902738662562f2234c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classfc_1_1variant__object" kindref="compound">fc::variant_object</ref></type>
        <definition>fc::variant_object graphene::chain::get_config</definition>
        <argsstring>()</argsstring>
        <name>get_config</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/get_config.cpp" line="31" column="20" bodyfile="libraries/chain/get_config.cpp" bodystart="31" bodyend="99" declfile="libraries/chain/include/graphene/chain/get_config.hpp" declline="30" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="namespacegraphene_1_1chain_1abb754183239aed2e49df04a3480b8e29" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classfc_1_1optional" kindref="compound">optional</ref>&lt; <ref refid="structgraphene_1_1protocol_1_1htlc__options" kindref="compound">htlc_options</ref> &gt;</type>
        <definition>optional&lt;htlc_options&gt; graphene::chain::get_committee_htlc_options</definition>
        <argsstring>(graphene::chain::database &amp;db)</argsstring>
        <name>get_committee_htlc_options</name>
        <param>
          <type><ref refid="classgraphene_1_1chain_1_1database" kindref="compound">graphene::chain::database</ref> &amp;</type>
          <declname>db</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/htlc_evaluator.cpp" line="69" column="16" bodyfile="libraries/chain/htlc_evaluator.cpp" bodystart="69" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="namespacegraphene_1_1chain_1a5250c99fc9c4267d7d903e1631cdf8b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>graphene::chain::GRAPHENE_DECLARE_OP_BASE_EXCEPTIONS</definition>
        <argsstring>(transfer)</argsstring>
        <name>GRAPHENE_DECLARE_OP_BASE_EXCEPTIONS</name>
        <param>
          <type>transfer</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/exceptions.hpp" line="128" column="4" declfile="libraries/chain/include/graphene/chain/exceptions.hpp" declline="128" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="namespacegraphene_1_1chain_1a8f7359226cec8207be83f417bfbf3e31" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>graphene::chain::GRAPHENE_DECLARE_OP_BASE_EXCEPTIONS</definition>
        <argsstring>(limit_order_create)</argsstring>
        <name>GRAPHENE_DECLARE_OP_BASE_EXCEPTIONS</name>
        <param>
          <type><ref refid="namespacegraphene_1_1chain_1a9afb1ca44de49a48683f8881302f832d" kindref="member">limit_order_create</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/exceptions.hpp" line="133" column="4" declfile="libraries/chain/include/graphene/chain/exceptions.hpp" declline="133" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="namespacegraphene_1_1chain_1a22d40f7cdabe2039d7e4f155874f643c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>graphene::chain::GRAPHENE_DECLARE_OP_BASE_EXCEPTIONS</definition>
        <argsstring>(limit_order_update)</argsstring>
        <name>GRAPHENE_DECLARE_OP_BASE_EXCEPTIONS</name>
        <param>
          <type>limit_order_update</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/exceptions.hpp" line="141" column="4" declfile="libraries/chain/include/graphene/chain/exceptions.hpp" declline="141" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="namespacegraphene_1_1chain_1ac6241c92f1350bde68baa662d8d8eaca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>graphene::chain::GRAPHENE_DECLARE_OP_BASE_EXCEPTIONS</definition>
        <argsstring>(limit_order_cancel)</argsstring>
        <name>GRAPHENE_DECLARE_OP_BASE_EXCEPTIONS</name>
        <param>
          <type>limit_order_cancel</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/exceptions.hpp" line="145" column="4" declfile="libraries/chain/include/graphene/chain/exceptions.hpp" declline="145" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="namespacegraphene_1_1chain_1aac9dc11785503e07c8602f5c5f40b83a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>graphene::chain::GRAPHENE_DECLARE_OP_BASE_EXCEPTIONS</definition>
        <argsstring>(call_order_update)</argsstring>
        <name>GRAPHENE_DECLARE_OP_BASE_EXCEPTIONS</name>
        <param>
          <type>call_order_update</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/exceptions.hpp" line="149" column="4" declfile="libraries/chain/include/graphene/chain/exceptions.hpp" declline="149" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="namespacegraphene_1_1chain_1ad2e2fa17c571395c69c6fe2b879cff77" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>graphene::chain::GRAPHENE_DECLARE_OP_BASE_EXCEPTIONS</definition>
        <argsstring>(account_create)</argsstring>
        <name>GRAPHENE_DECLARE_OP_BASE_EXCEPTIONS</name>
        <param>
          <type><ref refid="namespacegraphene_1_1chain_1a0e18b6623557196b5a6a4f8984845905" kindref="member">account_create</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/exceptions.hpp" line="152" column="4" declfile="libraries/chain/include/graphene/chain/exceptions.hpp" declline="152" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="namespacegraphene_1_1chain_1ab8b45cfff2f8bc9813478a1730d5d0ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>graphene::chain::GRAPHENE_DECLARE_OP_BASE_EXCEPTIONS</definition>
        <argsstring>(account_update)</argsstring>
        <name>GRAPHENE_DECLARE_OP_BASE_EXCEPTIONS</name>
        <param>
          <type>account_update</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/exceptions.hpp" line="159" column="4" declfile="libraries/chain/include/graphene/chain/exceptions.hpp" declline="159" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="namespacegraphene_1_1chain_1af1c2ed3b392841a0849f3dd15f387714" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>graphene::chain::GRAPHENE_DECLARE_OP_BASE_EXCEPTIONS</definition>
        <argsstring>(asset_reserve)</argsstring>
        <name>GRAPHENE_DECLARE_OP_BASE_EXCEPTIONS</name>
        <param>
          <type>asset_reserve</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/exceptions.hpp" line="172" column="4" declfile="libraries/chain/include/graphene/chain/exceptions.hpp" declline="172" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="namespacegraphene_1_1chain_1ad04adc166d3af3cdd436b52fe9338f1a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>graphene::chain::GRAPHENE_DECLARE_OP_BASE_EXCEPTIONS</definition>
        <argsstring>(proposal_create)</argsstring>
        <name>GRAPHENE_DECLARE_OP_BASE_EXCEPTIONS</name>
        <param>
          <type>proposal_create</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/exceptions.hpp" line="182" column="4" declfile="libraries/chain/include/graphene/chain/exceptions.hpp" declline="182" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="namespacegraphene_1_1chain_1abda6bfd7c09f51b6fca96aa4725412cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>graphene::chain::GRAPHENE_DECLARE_OP_BASE_EXCEPTIONS</definition>
        <argsstring>(balance_claim)</argsstring>
        <name>GRAPHENE_DECLARE_OP_BASE_EXCEPTIONS</name>
        <param>
          <type>balance_claim</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/exceptions.hpp" line="200" column="4" declfile="libraries/chain/include/graphene/chain/exceptions.hpp" declline="200" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="namespacegraphene_1_1chain_1add97030edf263ad043d9b27efeb9b9e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>graphene::chain::GRAPHENE_DECLARE_OP_BASE_EXCEPTIONS</definition>
        <argsstring>(override_transfer)</argsstring>
        <name>GRAPHENE_DECLARE_OP_BASE_EXCEPTIONS</name>
        <param>
          <type>override_transfer</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/exceptions.hpp" line="205" column="4" declfile="libraries/chain/include/graphene/chain/exceptions.hpp" declline="205" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="namespacegraphene_1_1chain_1ae806792c1426bb377e0e3e5a7824da06" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>graphene::chain::GRAPHENE_DECLARE_OP_BASE_EXCEPTIONS</definition>
        <argsstring>(blind_transfer)</argsstring>
        <name>GRAPHENE_DECLARE_OP_BASE_EXCEPTIONS</name>
        <param>
          <type>blind_transfer</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/exceptions.hpp" line="208" column="4" declfile="libraries/chain/include/graphene/chain/exceptions.hpp" declline="208" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="namespacegraphene_1_1chain_1acf16eedfc0eb986800ff6797cdc3e02c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>graphene::chain::GRAPHENE_DECLARE_OP_BASE_EXCEPTIONS</definition>
        <argsstring>(liquidity_pool_exchange)</argsstring>
        <name>GRAPHENE_DECLARE_OP_BASE_EXCEPTIONS</name>
        <param>
          <type>liquidity_pool_exchange</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/exceptions.hpp" line="220" column="4" declfile="libraries/chain/include/graphene/chain/exceptions.hpp" declline="220" declcolumn="4"/>
      </memberdef>
      <memberdef kind="function" id="namespacegraphene_1_1chain_1af5b0d28cc3203565a507fb237083bb5f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::chain::operation_get_impacted_accounts</definition>
        <argsstring>(const graphene::chain::operation &amp;op, fc::flat_set&lt; graphene::chain::account_id_type &gt; &amp;result, bool ignore_custom_operation_required_auths)</argsstring>
        <name>operation_get_impacted_accounts</name>
        <param>
          <type>const <ref refid="group__operations_1gad4674c1a800a9c624a13e1243dcbe967" kindref="member">graphene::chain::operation</ref> &amp;</type>
          <declname>op</declname>
        </param>
        <param>
          <type>fc::flat_set&lt; graphene::chain::account_id_type &gt; &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>ignore_custom_operation_required_auths</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/impacted.hpp" line="33" column="6" declfile="libraries/chain/include/graphene/chain/impacted.hpp" declline="33" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacegraphene_1_1chain_1a51c81dd6ef582ada666d6cb8e633312d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::chain::transaction_get_impacted_accounts</definition>
        <argsstring>(const graphene::chain::transaction &amp;tx, fc::flat_set&lt; graphene::chain::account_id_type &gt; &amp;result, bool ignore_custom_operation_required_auths)</argsstring>
        <name>transaction_get_impacted_accounts</name>
        <param>
          <type>const <ref refid="classgraphene_1_1protocol_1_1transaction" kindref="compound">graphene::chain::transaction</ref> &amp;</type>
          <declname>tx</declname>
        </param>
        <param>
          <type>fc::flat_set&lt; graphene::chain::account_id_type &gt; &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>ignore_custom_operation_required_auths</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/impacted.hpp" line="37" column="6" declfile="libraries/chain/include/graphene/chain/impacted.hpp" declline="37" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacegraphene_1_1chain_1a5329db165e64c97305196002b5030bb3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool graphene::chain::is_authorized_asset</definition>
        <argsstring>(const database &amp;d, const account_object &amp;acct, const asset_object &amp;asset_obj)</argsstring>
        <name>is_authorized_asset</name>
        <param>
          <type>const <ref refid="classgraphene_1_1chain_1_1database" kindref="compound">database</ref> &amp;</type>
          <declname>d</declname>
        </param>
        <param>
          <type>const <ref refid="classgraphene_1_1chain_1_1account__object" kindref="compound">account_object</ref> &amp;</type>
          <declname>acct</declname>
        </param>
        <param>
          <type>const <ref refid="classgraphene_1_1chain_1_1asset__object" kindref="compound">asset_object</ref> &amp;</type>
          <declname>asset_obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true if the account is whitelisted and not blacklisted to transact in the provided asset; false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/is_authorized_asset.hpp" line="43" column="13" bodyfile="libraries/chain/include/graphene/chain/is_authorized_asset.hpp" bodystart="43" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="namespacegraphene_1_1chain_1ae4dddd10998604add389d854f6f1a31a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::chain::evaluate_special_authority</definition>
        <argsstring>(const database &amp;db, const special_authority &amp;auth)</argsstring>
        <name>evaluate_special_authority</name>
        <param>
          <type>const <ref refid="classgraphene_1_1chain_1_1database" kindref="compound">database</ref> &amp;</type>
          <declname>db</declname>
        </param>
        <param>
          <type>const <ref refid="namespacegraphene_1_1protocol_1a0e74afece7dbfa1a51f7b183624850d4" kindref="member">special_authority</ref> &amp;</type>
          <declname>auth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/special_authority_evaluation.cpp" line="46" column="6" bodyfile="libraries/chain/special_authority_evaluation.cpp" bodystart="46" bodyend="50" declfile="libraries/chain/include/graphene/chain/special_authority_evaluation.hpp" declline="33" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespacegraphene_1_1chain_1ac7e90d391ca2604c1c2451823a02f226" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool graphene::chain::sum_below_max_shares</definition>
        <argsstring>(const asset &amp;a, const asset &amp;b)</argsstring>
        <name>sum_below_max_shares</name>
        <param>
          <type>const <ref refid="structgraphene_1_1protocol_1_1asset" kindref="compound">asset</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="structgraphene_1_1protocol_1_1asset" kindref="compound">asset</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/vesting_balance_object.cpp" line="31" column="13" bodyfile="libraries/chain/vesting_balance_object.cpp" bodystart="31" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="namespacegraphene_1_1chain_1ad56e183c6c9ed1d460f01234978a93d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>graphene::chain::VESTING_VISITOR</definition>
        <argsstring>(on_deposit,)</argsstring>
        <name>VESTING_VISITOR</name>
        <param>
          <type>on_deposit</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/vesting_balance_object.cpp" line="218" column="1" declfile="libraries/chain/vesting_balance_object.cpp" declline="218" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacegraphene_1_1chain_1a4d7940492779addd5c7bb392d0f73a09" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>graphene::chain::VESTING_VISITOR</definition>
        <argsstring>(on_deposit_vested,)</argsstring>
        <name>VESTING_VISITOR</name>
        <param>
          <type>on_deposit_vested</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/vesting_balance_object.cpp" line="219" column="1" declfile="libraries/chain/vesting_balance_object.cpp" declline="219" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacegraphene_1_1chain_1a2d9b9acaf45585a518fdd27e5497537c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>graphene::chain::VESTING_VISITOR</definition>
        <argsstring>(on_withdraw,)</argsstring>
        <name>VESTING_VISITOR</name>
        <param>
          <type>on_withdraw</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/vesting_balance_object.cpp" line="220" column="1" declfile="libraries/chain/vesting_balance_object.cpp" declline="220" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacegraphene_1_1chain_1acee4274034b892102e2eef23bc0a683c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>graphene::chain::VESTING_VISITOR</definition>
        <argsstring>(is_deposit_allowed, const)</argsstring>
        <name>VESTING_VISITOR</name>
        <param>
          <type>is_deposit_allowed</type>
        </param>
        <param>
          <type>const</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/vesting_balance_object.cpp" line="221" column="1" declfile="libraries/chain/vesting_balance_object.cpp" declline="221" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacegraphene_1_1chain_1a8da1dc86ef3a821a6a1ea9726a07f6ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>graphene::chain::VESTING_VISITOR</definition>
        <argsstring>(is_deposit_vested_allowed, const)</argsstring>
        <name>VESTING_VISITOR</name>
        <param>
          <type>is_deposit_vested_allowed</type>
        </param>
        <param>
          <type>const</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/vesting_balance_object.cpp" line="222" column="1" declfile="libraries/chain/vesting_balance_object.cpp" declline="222" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacegraphene_1_1chain_1aa848546812def5efdc7028f4d0799a9e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>graphene::chain::VESTING_VISITOR</definition>
        <argsstring>(is_withdraw_allowed, const)</argsstring>
        <name>VESTING_VISITOR</name>
        <param>
          <type>is_withdraw_allowed</type>
        </param>
        <param>
          <type>const</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/vesting_balance_object.cpp" line="223" column="1" declfile="libraries/chain/vesting_balance_object.cpp" declline="223" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacegraphene_1_1chain_1ae871cc54243b70e72b47f1c7db4781ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>graphene::chain::VESTING_VISITOR</definition>
        <argsstring>(get_allowed_withdraw, const)</argsstring>
        <name>VESTING_VISITOR</name>
        <param>
          <type>get_allowed_withdraw</type>
        </param>
        <param>
          <type>const</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/vesting_balance_object.cpp" line="224" column="1" declfile="libraries/chain/vesting_balance_object.cpp" declline="224" declcolumn="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="libraries/app/include/graphene/app/util.hpp" line="32" column="15"/>
  </compounddef>
</doxygen>
