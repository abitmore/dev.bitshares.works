<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structgraphene_1_1protocol_1_1htlc__create__operation" kind="struct" language="C++" prot="public">
    <compoundname>graphene::protocol::htlc_create_operation</compoundname>
    <basecompoundref refid="structgraphene_1_1protocol_1_1base__operation" prot="public" virt="non-virtual">graphene::protocol::base_operation</basecompoundref>
    <includes refid="htlc_8hpp" local="no">htlc.hpp</includes>
    <innerclass refid="structgraphene_1_1protocol_1_1htlc__create__operation_1_1additional__options__type" prot="public">graphene::protocol::htlc_create_operation::additional_options_type</innerclass>
    <innerclass refid="structgraphene_1_1protocol_1_1htlc__create__operation_1_1fee__parameters__type" prot="public">graphene::protocol::htlc_create_operation::fee_parameters_type</innerclass>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1htlc__create__operation_1a439b678775c0a217a53dce946de8e579" prot="public" static="no" mutable="no">
        <type><ref refid="structgraphene_1_1protocol_1_1asset" kindref="compound">asset</ref></type>
        <definition>asset graphene::protocol::htlc_create_operation::fee</definition>
        <argsstring></argsstring>
        <name>fee</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/htlc.hpp" line="53" column="1" bodyfile="libraries/protocol/include/graphene/protocol/htlc.hpp" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1htlc__create__operation_1af3e7cd2004b128a52671bcea85631ad7" prot="public" static="no" mutable="no">
        <type>account_id_type</type>
        <definition>account_id_type graphene::protocol::htlc_create_operation::from</definition>
        <argsstring></argsstring>
        <name>from</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/htlc.hpp" line="55" column="1" bodyfile="libraries/protocol/include/graphene/protocol/htlc.hpp" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1htlc__create__operation_1afc9058a15b0e8f71aa953abe7f8f33af" prot="public" static="no" mutable="no">
        <type>account_id_type</type>
        <definition>account_id_type graphene::protocol::htlc_create_operation::to</definition>
        <argsstring></argsstring>
        <name>to</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/htlc.hpp" line="57" column="1" bodyfile="libraries/protocol/include/graphene/protocol/htlc.hpp" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1htlc__create__operation_1a40ec736d7c130ae086a84d42b80aad33" prot="public" static="no" mutable="no">
        <type><ref refid="structgraphene_1_1protocol_1_1asset" kindref="compound">asset</ref></type>
        <definition>asset graphene::protocol::htlc_create_operation::amount</definition>
        <argsstring></argsstring>
        <name>amount</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/htlc.hpp" line="59" column="1" bodyfile="libraries/protocol/include/graphene/protocol/htlc.hpp" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1htlc__create__operation_1a067099bfec9adef3b4933879f6af1316" prot="public" static="no" mutable="no">
        <type><ref refid="namespacegraphene_1_1protocol_1a8edbef4035c72a541a106ad51d004606" kindref="member">htlc_hash</ref></type>
        <definition>htlc_hash graphene::protocol::htlc_create_operation::preimage_hash</definition>
        <argsstring></argsstring>
        <name>preimage_hash</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/htlc.hpp" line="61" column="1" bodyfile="libraries/protocol/include/graphene/protocol/htlc.hpp" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1htlc__create__operation_1aef1ec78f85071d7959c74f4e8a5ed5fe" prot="public" static="no" mutable="no">
        <type>uint16_t</type>
        <definition>uint16_t graphene::protocol::htlc_create_operation::preimage_size</definition>
        <argsstring></argsstring>
        <name>preimage_size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/htlc.hpp" line="63" column="1" bodyfile="libraries/protocol/include/graphene/protocol/htlc.hpp" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1htlc__create__operation_1a5f19f4de91a61e9da40fe51138f1ca75" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t graphene::protocol::htlc_create_operation::claim_period_seconds</definition>
        <argsstring></argsstring>
        <name>claim_period_seconds</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/htlc.hpp" line="65" column="1" bodyfile="libraries/protocol/include/graphene/protocol/htlc.hpp" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1htlc__create__operation_1a01dfd6dea65a7b25fbfbe3166f67fbb4" prot="public" static="no" mutable="no">
        <type><ref refid="structgraphene_1_1protocol_1_1extension" kindref="compound">extension</ref>&lt; <ref refid="structgraphene_1_1protocol_1_1htlc__create__operation_1_1additional__options__type" kindref="compound">additional_options_type</ref> &gt;</type>
        <definition>extension&lt;additional_options_type&gt; graphene::protocol::htlc_create_operation::extensions</definition>
        <argsstring></argsstring>
        <name>extensions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/htlc.hpp" line="72" column="1" bodyfile="libraries/protocol/include/graphene/protocol/htlc.hpp" bodystart="72" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structgraphene_1_1protocol_1_1htlc__create__operation_1a3c85f015f22f4cf36b85f9219e674155" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void graphene::protocol::htlc_create_operation::validate</definition>
        <argsstring>() const</argsstring>
        <name>validate</name>
        <reimplements refid="structgraphene_1_1protocol_1_1base__operation_1a23d617a6fa0921d3f5b51dd5167e7a29">validate</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/htlc.hpp" line="77" column="1" bodyfile="libraries/protocol/htlc.cpp" bodystart="32" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1protocol_1_1htlc__create__operation_1a3c178c755d225bed1d043579fea988ef" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>account_id_type</type>
        <definition>account_id_type graphene::protocol::htlc_create_operation::fee_payer</definition>
        <argsstring>() const</argsstring>
        <name>fee_payer</name>
        <briefdescription>
<para>who will pay the fee </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/htlc.hpp" line="82" column="1" bodyfile="libraries/protocol/include/graphene/protocol/htlc.hpp" bodystart="82" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1protocol_1_1htlc__create__operation_1ae211d850e705485180e1f4dc7ffd8797" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacegraphene_1_1protocol_1a69b2104c1c11eed2d17bd29b86713347" kindref="member">share_type</ref></type>
        <definition>share_type graphene::protocol::htlc_create_operation::calculate_fee</definition>
        <argsstring>(const fee_parameters_type &amp;fee_params, uint32_t fee_per_kb) const</argsstring>
        <name>calculate_fee</name>
        <param>
          <type>const <ref refid="structgraphene_1_1protocol_1_1htlc__create__operation_1_1fee__parameters__type" kindref="compound">fee_parameters_type</ref> &amp;</type>
          <declname>fee_params</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>fee_per_kb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/htlc.hpp" line="87" column="1" bodyfile="libraries/protocol/htlc.cpp" bodystart="37" bodyend="47"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="4546">
        <label>graphene::protocol::base_operation</label>
        <link refid="structgraphene_1_1protocol_1_1base__operation"/>
      </node>
      <node id="4545">
        <label>graphene::protocol::htlc_create_operation</label>
        <link refid="structgraphene_1_1protocol_1_1htlc__create__operation"/>
        <childnode refid="4546" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4551">
        <label>graphene::protocol::extension&lt; graphene::protocol::htlc_create_operation::additional_options_type &gt;</label>
        <link refid="structgraphene_1_1protocol_1_1extension"/>
        <childnode refid="4552" relation="usage">
          <edgelabel>value</edgelabel>
        </childnode>
      </node>
      <node id="4555">
        <label>fc::static_variant&lt; htlc_algo_ripemd160, htlc_algo_sha1, htlc_algo_sha256, htlc_algo_hash160 &gt;</label>
        <link refid="classfc_1_1static__variant"/>
        <childnode refid="4556" relation="usage">
          <edgelabel>storage</edgelabel>
        </childnode>
      </node>
      <node id="4554">
        <label>account_id_type</label>
      </node>
      <node id="4553">
        <label>fc::optional&lt; graphene::protocol::memo_data &gt;</label>
        <link refid="classfc_1_1optional"/>
      </node>
      <node id="4552">
        <label>graphene::protocol::htlc_create_operation::additional_options_type</label>
        <link refid="structgraphene_1_1protocol_1_1htlc__create__operation_1_1additional__options__type"/>
        <childnode refid="4553" relation="usage">
          <edgelabel>memo</edgelabel>
        </childnode>
      </node>
      <node id="4550">
        <label>fc::safe&lt; int64_t &gt;</label>
        <link refid="structfc_1_1safe"/>
      </node>
      <node id="4548">
        <label>graphene::protocol::base_operation</label>
        <link refid="structgraphene_1_1protocol_1_1base__operation"/>
      </node>
      <node id="4549">
        <label>graphene::protocol::asset</label>
        <link refid="structgraphene_1_1protocol_1_1asset"/>
        <childnode refid="4550" relation="usage">
          <edgelabel>amount</edgelabel>
        </childnode>
      </node>
      <node id="4547">
        <label>graphene::protocol::htlc_create_operation</label>
        <link refid="structgraphene_1_1protocol_1_1htlc__create__operation"/>
        <childnode refid="4548" relation="public-inheritance">
        </childnode>
        <childnode refid="4549" relation="usage">
          <edgelabel>fee</edgelabel>
          <edgelabel>amount</edgelabel>
        </childnode>
        <childnode refid="4551" relation="usage">
          <edgelabel>extensions</edgelabel>
        </childnode>
        <childnode refid="4554" relation="usage">
          <edgelabel>from</edgelabel>
          <edgelabel>to</edgelabel>
        </childnode>
        <childnode refid="4555" relation="usage">
          <edgelabel>preimage_hash</edgelabel>
        </childnode>
      </node>
      <node id="4556">
        <label>fc::impl::dynamic_storage</label>
        <link refid="classfc_1_1impl_1_1dynamic__storage"/>
      </node>
    </collaborationgraph>
    <location file="libraries/protocol/include/graphene/protocol/htlc.hpp" line="46" column="1" bodyfile="libraries/protocol/include/graphene/protocol/htlc.hpp" bodystart="45" bodyend="88"/>
    <listofallmembers>
      <member refid="structgraphene_1_1protocol_1_1htlc__create__operation_1a40ec736d7c130ae086a84d42b80aad33" prot="public" virt="non-virtual"><scope>graphene::protocol::htlc_create_operation</scope><name>amount</name></member>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1aaccb0fa71ee529cf62324baaa99988fe" prot="public" virt="non-virtual"><scope>graphene::protocol::htlc_create_operation</scope><name>calculate_data_fee</name></member>
      <member refid="structgraphene_1_1protocol_1_1htlc__create__operation_1ae211d850e705485180e1f4dc7ffd8797" prot="public" virt="non-virtual"><scope>graphene::protocol::htlc_create_operation</scope><name>calculate_fee</name></member>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1a0be44badcee9a648413eb906dac1d3b3" prot="public" virt="non-virtual" ambiguityscope="graphene::protocol::base_operation::"><scope>graphene::protocol::htlc_create_operation</scope><name>calculate_fee</name></member>
      <member refid="structgraphene_1_1protocol_1_1htlc__create__operation_1a5f19f4de91a61e9da40fe51138f1ca75" prot="public" virt="non-virtual"><scope>graphene::protocol::htlc_create_operation</scope><name>claim_period_seconds</name></member>
      <member refid="structgraphene_1_1protocol_1_1htlc__create__operation_1a01dfd6dea65a7b25fbfbe3166f67fbb4" prot="public" virt="non-virtual"><scope>graphene::protocol::htlc_create_operation</scope><name>extensions</name></member>
      <member refid="structgraphene_1_1protocol_1_1htlc__create__operation_1a439b678775c0a217a53dce946de8e579" prot="public" virt="non-virtual"><scope>graphene::protocol::htlc_create_operation</scope><name>fee</name></member>
      <member refid="structgraphene_1_1protocol_1_1htlc__create__operation_1a3c178c755d225bed1d043579fea988ef" prot="public" virt="non-virtual"><scope>graphene::protocol::htlc_create_operation</scope><name>fee_payer</name></member>
      <member refid="structgraphene_1_1protocol_1_1htlc__create__operation_1af3e7cd2004b128a52671bcea85631ad7" prot="public" virt="non-virtual"><scope>graphene::protocol::htlc_create_operation</scope><name>from</name></member>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1a89ed7c6e7da93cd99bb41bc8d7e2627b" prot="public" virt="virtual"><scope>graphene::protocol::htlc_create_operation</scope><name>get_required_active_authorities</name></member>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1aabc48ce97877c67ff560b94284a7c0bb" prot="public" virt="virtual"><scope>graphene::protocol::htlc_create_operation</scope><name>get_required_authorities</name></member>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1a3251978e7bd0bb2f2fa23bcea5dee95c" prot="public" virt="virtual"><scope>graphene::protocol::htlc_create_operation</scope><name>get_required_owner_authorities</name></member>
      <member refid="structgraphene_1_1protocol_1_1htlc__create__operation_1a067099bfec9adef3b4933879f6af1316" prot="public" virt="non-virtual"><scope>graphene::protocol::htlc_create_operation</scope><name>preimage_hash</name></member>
      <member refid="structgraphene_1_1protocol_1_1htlc__create__operation_1aef1ec78f85071d7959c74f4e8a5ed5fe" prot="public" virt="non-virtual"><scope>graphene::protocol::htlc_create_operation</scope><name>preimage_size</name></member>
      <member refid="structgraphene_1_1protocol_1_1htlc__create__operation_1afc9058a15b0e8f71aa953abe7f8f33af" prot="public" virt="non-virtual"><scope>graphene::protocol::htlc_create_operation</scope><name>to</name></member>
      <member refid="structgraphene_1_1protocol_1_1htlc__create__operation_1a3c85f015f22f4cf36b85f9219e674155" prot="public" virt="virtual"><scope>graphene::protocol::htlc_create_operation</scope><name>validate</name></member>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1a485f3d3b963ff4c081af85945cf27774" prot="public" virt="non-virtual"><scope>graphene::protocol::htlc_create_operation</scope><name>validate_parallel</name></member>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1a04ac6688e2df1d511514e4fc1983b828" prot="public" virt="virtual"><scope>graphene::protocol::htlc_create_operation</scope><name>~base_operation</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
