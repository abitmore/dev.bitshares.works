<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classfc_1_1optional" kind="class" language="C++" prot="public">
    <compoundname>fc::optional</compoundname>
    <includes refid="optional_8hpp" local="no">optional.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classfc_1_1optional_1a60c8ee406455667ec37c5ee2e69aa41c" prot="public" static="no">
        <type>T</type>
        <definition>typedef T fc::optional&lt; T &gt;::value_type</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/optional.hpp" line="23" column="17" bodyfile="libraries/fc/include/fc/optional.hpp" bodystart="23" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classfc_1_1optional_1aa756d67787488b1e2bba885ce4da6fe0" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename U</type>
          </param>
        </templateparamlist>
        <type>friend class</type>
        <definition>friend class optional</definition>
        <argsstring></argsstring>
        <name>optional</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/optional.hpp" line="233" column="18" bodyfile="libraries/fc/include/fc/optional.hpp" bodystart="233" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classfc_1_1optional_1aed3aa0cd5eb4f7ef600b2e9ad295320f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator&lt;</definition>
        <argsstring>(const optional a, optional b)</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const <ref refid="classfc_1_1optional" kindref="compound">optional</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="classfc_1_1optional" kindref="compound">optional</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/optional.hpp" line="213" column="14" bodyfile="libraries/fc/include/fc/optional.hpp" bodystart="213" bodyend="217"/>
      </memberdef>
      <memberdef kind="friend" id="classfc_1_1optional_1a608be2170eb1ffcef97954156c7ebbd8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator==</definition>
        <argsstring>(const optional a, optional b)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classfc_1_1optional" kindref="compound">optional</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="classfc_1_1optional" kindref="compound">optional</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/optional.hpp" line="218" column="19" bodyfile="libraries/fc/include/fc/optional.hpp" bodystart="218" bodyend="222"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classfc_1_1optional_1ac3f6daefb64c82088e90cb4239c36b32" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool fc::optional&lt; T &gt;::_valid</definition>
        <argsstring></argsstring>
        <name>_valid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/optional.hpp" line="245" column="14" bodyfile="libraries/fc/include/fc/optional.hpp" bodystart="245" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classfc_1_1optional_1a8c6f2e7ef731d12d1a354dd134898842" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>fc::optional&lt; T &gt;::optional</definition>
        <argsstring>()</argsstring>
        <name>optional</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/optional.hpp" line="25" column="7" bodyfile="libraries/fc/include/fc/optional.hpp" bodystart="25" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1optional_1ae1bb6c6ab0c95c3b27910979b71555fe" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>fc::optional&lt; T &gt;::~optional</definition>
        <argsstring>()</argsstring>
        <name>~optional</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/optional.hpp" line="26" column="7" bodyfile="libraries/fc/include/fc/optional.hpp" bodystart="26" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1optional_1ae51e22870fa597103020e71f3b7cab9e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>fc::optional&lt; T &gt;::optional</definition>
        <argsstring>(optional &amp;o)</argsstring>
        <name>optional</name>
        <param>
          <type><ref refid="classfc_1_1optional" kindref="compound">optional</ref> &amp;</type>
          <declname>o</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/optional.hpp" line="28" column="7" bodyfile="libraries/fc/include/fc/optional.hpp" bodystart="28" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1optional_1af6ddfd3a6c75ab0cd6adc19a651b14b2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>fc::optional&lt; T &gt;::optional</definition>
        <argsstring>(const optional &amp;o)</argsstring>
        <name>optional</name>
        <param>
          <type>const <ref refid="classfc_1_1optional" kindref="compound">optional</ref> &amp;</type>
          <declname>o</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/optional.hpp" line="35" column="7" bodyfile="libraries/fc/include/fc/optional.hpp" bodystart="35" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1optional_1ae46cc01e5127eb4e5f4d51b9478fd57d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>fc::optional&lt; T &gt;::optional</definition>
        <argsstring>(optional &amp;&amp;o)</argsstring>
        <name>optional</name>
        <param>
          <type><ref refid="classfc_1_1optional" kindref="compound">optional</ref> &amp;&amp;</type>
          <declname>o</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/optional.hpp" line="42" column="7" bodyfile="libraries/fc/include/fc/optional.hpp" bodystart="42" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1optional_1aa1dc774586cb7c4bb1a21c0ecfd865bc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename U</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>fc::optional&lt; T &gt;::optional</definition>
        <argsstring>(const optional&lt; U &gt; &amp;o)</argsstring>
        <name>optional</name>
        <param>
          <type>const <ref refid="classfc_1_1optional" kindref="compound">optional</ref>&lt; U &gt; &amp;</type>
          <declname>o</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/optional.hpp" line="51" column="7" bodyfile="libraries/fc/include/fc/optional.hpp" bodystart="51" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1optional_1a530439d9ac81883cd74ec9cc8ff74b5a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename U</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>fc::optional&lt; T &gt;::optional</definition>
        <argsstring>(optional&lt; U &gt; &amp;o)</argsstring>
        <name>optional</name>
        <param>
          <type><ref refid="classfc_1_1optional" kindref="compound">optional</ref>&lt; U &gt; &amp;</type>
          <declname>o</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/optional.hpp" line="59" column="7" bodyfile="libraries/fc/include/fc/optional.hpp" bodystart="59" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1optional_1adf7909c2d49c7a1b3ef3f6cf8ad131cc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename U</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>fc::optional&lt; T &gt;::optional</definition>
        <argsstring>(optional&lt; U &gt; &amp;&amp;o)</argsstring>
        <name>optional</name>
        <param>
          <type><ref refid="classfc_1_1optional" kindref="compound">optional</ref>&lt; U &gt; &amp;&amp;</type>
          <declname>o</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/optional.hpp" line="70" column="7" bodyfile="libraries/fc/include/fc/optional.hpp" bodystart="70" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1optional_1a6b6bb3c22caa2bc93fe9c77eb4782a57" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename U</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>fc::optional&lt; T &gt;::optional</definition>
        <argsstring>(U &amp;&amp;u)</argsstring>
        <name>optional</name>
        <param>
          <type>U &amp;&amp;</type>
          <declname>u</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/optional.hpp" line="79" column="7" bodyfile="libraries/fc/include/fc/optional.hpp" bodystart="79" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1optional_1a22eaa3259adc0d716b5b0aa191836c0d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename U</type>
          </param>
        </templateparamlist>
        <type><ref refid="classfc_1_1optional" kindref="compound">optional</ref> &amp;</type>
        <definition>optional&amp; fc::optional&lt; T &gt;::operator=</definition>
        <argsstring>(U &amp;&amp;u)</argsstring>
        <name>operator=</name>
        <param>
          <type>U &amp;&amp;</type>
          <declname>u</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/optional.hpp" line="86" column="16" bodyfile="libraries/fc/include/fc/optional.hpp" bodystart="86" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1optional_1abf0e68e8f400e4490a329ce596f0a079" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename U</type>
          </param>
        </templateparamlist>
        <type><ref refid="classfc_1_1optional" kindref="compound">optional</ref> &amp;</type>
        <definition>optional&amp; fc::optional&lt; T &gt;::operator=</definition>
        <argsstring>(optional&lt; U &gt; &amp;o)</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classfc_1_1optional" kindref="compound">optional</ref>&lt; U &gt; &amp;</type>
          <declname>o</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/optional.hpp" line="95" column="16" bodyfile="libraries/fc/include/fc/optional.hpp" bodystart="95" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1optional_1a13c16803022e66a2cef36aeeace4a3ee" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename U</type>
          </param>
        </templateparamlist>
        <type><ref refid="classfc_1_1optional" kindref="compound">optional</ref> &amp;</type>
        <definition>optional&amp; fc::optional&lt; T &gt;::operator=</definition>
        <argsstring>(const optional&lt; U &gt; &amp;o)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classfc_1_1optional" kindref="compound">optional</ref>&lt; U &gt; &amp;</type>
          <declname>o</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/optional.hpp" line="109" column="16" bodyfile="libraries/fc/include/fc/optional.hpp" bodystart="109" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1optional_1a85304d4e96b6dedc3a125abc96120631" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classfc_1_1optional" kindref="compound">optional</ref> &amp;</type>
        <definition>optional&amp; fc::optional&lt; T &gt;::operator=</definition>
        <argsstring>(optional &amp;o)</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classfc_1_1optional" kindref="compound">optional</ref> &amp;</type>
          <declname>o</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/optional.hpp" line="123" column="16" bodyfile="libraries/fc/include/fc/optional.hpp" bodystart="123" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1optional_1a859ec2e84e277ecca8a1353978b0df5b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classfc_1_1optional" kindref="compound">optional</ref> &amp;</type>
        <definition>optional&amp; fc::optional&lt; T &gt;::operator=</definition>
        <argsstring>(const optional &amp;o)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classfc_1_1optional" kindref="compound">optional</ref> &amp;</type>
          <declname>o</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/optional.hpp" line="137" column="16" bodyfile="libraries/fc/include/fc/optional.hpp" bodystart="137" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1optional_1a15bcd4eed1211821573f8a7cc6af1b97" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename U</type>
          </param>
        </templateparamlist>
        <type><ref refid="classfc_1_1optional" kindref="compound">optional</ref> &amp;</type>
        <definition>optional&amp; fc::optional&lt; T &gt;::operator=</definition>
        <argsstring>(optional&lt; U &gt; &amp;&amp;o)</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classfc_1_1optional" kindref="compound">optional</ref>&lt; U &gt; &amp;&amp;</type>
          <declname>o</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/optional.hpp" line="152" column="16" bodyfile="libraries/fc/include/fc/optional.hpp" bodystart="152" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1optional_1a9aa346eec49d2f8538667b1fbd8f70e5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classfc_1_1optional" kindref="compound">optional</ref> &amp;</type>
        <definition>optional&amp; fc::optional&lt; T &gt;::operator=</definition>
        <argsstring>(optional &amp;&amp;o)</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classfc_1_1optional" kindref="compound">optional</ref> &amp;&amp;</type>
          <declname>o</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/optional.hpp" line="169" column="16" bodyfile="libraries/fc/include/fc/optional.hpp" bodystart="169" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1optional_1ae8cb2224350f244a3f8cceedcf28766e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool fc::optional&lt; T &gt;::valid</definition>
        <argsstring>() const</argsstring>
        <name>valid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/optional.hpp" line="186" column="12" bodyfile="libraries/fc/include/fc/optional.hpp" bodystart="186" bodyend="186"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1optional_1aa52792317833d4e9880bece4515bc26d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool fc::optional&lt; T &gt;::operator!</definition>
        <argsstring>() const</argsstring>
        <name>operator!</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/optional.hpp" line="187" column="12" bodyfile="libraries/fc/include/fc/optional.hpp" bodystart="187" bodyend="187"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1optional_1a78b84e12915697430ab7a1ea37b1c5ae" prot="public" static="no" const="yes" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>fc::optional&lt; T &gt;::operator bool</definition>
        <argsstring>() const</argsstring>
        <name>operator bool</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/optional.hpp" line="191" column="16" bodyfile="libraries/fc/include/fc/optional.hpp" bodystart="191" bodyend="191"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1optional_1af02761ab4fcc8f61a382dda8f97fd6b7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T &amp;</type>
        <definition>T&amp; fc::optional&lt; T &gt;::operator*</definition>
        <argsstring>()</argsstring>
        <name>operator*</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/optional.hpp" line="193" column="15" bodyfile="libraries/fc/include/fc/optional.hpp" bodystart="193" bodyend="193"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1optional_1a1936c8eb6f00733427e38f6271407e86" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const T &amp;</type>
        <definition>const T&amp; fc::optional&lt; T &gt;::operator*</definition>
        <argsstring>() const</argsstring>
        <name>operator*</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/optional.hpp" line="194" column="15" bodyfile="libraries/fc/include/fc/optional.hpp" bodystart="194" bodyend="194"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1optional_1aef7d32f415f5adb898ff9d1056b1a0eb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T *</type>
        <definition>T* fc::optional&lt; T &gt;::operator-&gt;</definition>
        <argsstring>()</argsstring>
        <name>operator-&gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/optional.hpp" line="196" column="15" bodyfile="libraries/fc/include/fc/optional.hpp" bodystart="196" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1optional_1abd06e3e773b3f6d6aa7c2a2a1a4ae7fa" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const T *</type>
        <definition>const T* fc::optional&lt; T &gt;::operator-&gt;</definition>
        <argsstring>() const</argsstring>
        <name>operator-&gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/optional.hpp" line="201" column="15" bodyfile="libraries/fc/include/fc/optional.hpp" bodystart="201" bodyend="205"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1optional_1a880cc7f4bafb6338f5c397c1b6f9ab3f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classfc_1_1optional" kindref="compound">optional</ref> &amp;</type>
        <definition>optional&amp; fc::optional&lt; T &gt;::operator=</definition>
        <argsstring>(std::nullptr_t)</argsstring>
        <name>operator=</name>
        <param>
          <type>std::nullptr_t</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/optional.hpp" line="207" column="16" bodyfile="libraries/fc/include/fc/optional.hpp" bodystart="207" bodyend="211"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1optional_1aec855f8ea4a41c149da6672000cec99a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void fc::optional&lt; T &gt;::reset</definition>
        <argsstring>()</argsstring>
        <name>reset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/optional.hpp" line="224" column="16" bodyfile="libraries/fc/include/fc/optional.hpp" bodystart="224" bodyend="231"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classfc_1_1optional_1aa3cc66d3c06e97fe4dcce33ac619dd9c" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T &amp;</type>
        <definition>T&amp; fc::optional&lt; T &gt;::ref</definition>
        <argsstring>()</argsstring>
        <name>ref</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/optional.hpp" line="234" column="15" bodyfile="libraries/fc/include/fc/optional.hpp" bodystart="234" bodyend="234"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1optional_1a578f39c2fc3ed14f4c2da196509a68de" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const T &amp;</type>
        <definition>const T&amp; fc::optional&lt; T &gt;::ref</definition>
        <argsstring>() const</argsstring>
        <name>ref</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/optional.hpp" line="235" column="15" bodyfile="libraries/fc/include/fc/optional.hpp" bodystart="235" bodyend="235"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1optional_1a12aae4b704cb3332e39d7e7baddf920d" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T *</type>
        <definition>T* fc::optional&lt; T &gt;::ptr</definition>
        <argsstring>()</argsstring>
        <name>ptr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/optional.hpp" line="236" column="15" bodyfile="libraries/fc/include/fc/optional.hpp" bodystart="236" bodyend="236"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1optional_1a24169ae322ec12f4d9444a963a235fa7" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const T *</type>
        <definition>const T* fc::optional&lt; T &gt;::ptr</definition>
        <argsstring>() const</argsstring>
        <name>ptr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/optional.hpp" line="237" column="15" bodyfile="libraries/fc/include/fc/optional.hpp" bodystart="237" bodyend="237"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1optional_1a67c5fd942f3979f2cc6c38f9e267f474" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double _value[((sizeof(T)+7)/8)]</type>
        <definition>double _value [((sizeof(T)+7)/8)] fc::optional&lt; T &gt;::__attribute__</definition>
        <argsstring>((aligned(16)))</argsstring>
        <name>__attribute__</name>
        <param>
          <type>(aligned(16))</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/optional.hpp" line="243" column="21"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>provides stack-based nullable value similar to boost::optional </para>
    </briefdescription>
    <detaileddescription>
<para>Simply including boost::optional adds 35,000 lines to each object file, using <ref refid="classfc_1_1optional" kindref="compound">fc::optional</ref> adds less than 400. </para>
    </detaileddescription>
    <location file="libraries/fc/include/fc/optional.hpp" line="21" column="1" bodyfile="libraries/fc/include/fc/optional.hpp" bodystart="20" bodyend="246"/>
    <listofallmembers>
      <member refid="classfc_1_1optional_1a67c5fd942f3979f2cc6c38f9e267f474" prot="private" virt="non-virtual"><scope>fc::optional</scope><name>__attribute__</name></member>
      <member refid="classfc_1_1optional_1ac3f6daefb64c82088e90cb4239c36b32" prot="private" virt="non-virtual"><scope>fc::optional</scope><name>_valid</name></member>
      <member refid="classfc_1_1optional_1a78b84e12915697430ab7a1ea37b1c5ae" prot="public" virt="non-virtual"><scope>fc::optional</scope><name>operator bool</name></member>
      <member refid="classfc_1_1optional_1aa52792317833d4e9880bece4515bc26d" prot="public" virt="non-virtual"><scope>fc::optional</scope><name>operator!</name></member>
      <member refid="classfc_1_1optional_1af02761ab4fcc8f61a382dda8f97fd6b7" prot="public" virt="non-virtual"><scope>fc::optional</scope><name>operator*</name></member>
      <member refid="classfc_1_1optional_1a1936c8eb6f00733427e38f6271407e86" prot="public" virt="non-virtual"><scope>fc::optional</scope><name>operator*</name></member>
      <member refid="classfc_1_1optional_1aef7d32f415f5adb898ff9d1056b1a0eb" prot="public" virt="non-virtual"><scope>fc::optional</scope><name>operator-&gt;</name></member>
      <member refid="classfc_1_1optional_1abd06e3e773b3f6d6aa7c2a2a1a4ae7fa" prot="public" virt="non-virtual"><scope>fc::optional</scope><name>operator-&gt;</name></member>
      <member refid="classfc_1_1optional_1aed3aa0cd5eb4f7ef600b2e9ad295320f" prot="public" virt="non-virtual"><scope>fc::optional</scope><name>operator&lt;</name></member>
      <member refid="classfc_1_1optional_1a22eaa3259adc0d716b5b0aa191836c0d" prot="public" virt="non-virtual"><scope>fc::optional</scope><name>operator=</name></member>
      <member refid="classfc_1_1optional_1abf0e68e8f400e4490a329ce596f0a079" prot="public" virt="non-virtual"><scope>fc::optional</scope><name>operator=</name></member>
      <member refid="classfc_1_1optional_1a13c16803022e66a2cef36aeeace4a3ee" prot="public" virt="non-virtual"><scope>fc::optional</scope><name>operator=</name></member>
      <member refid="classfc_1_1optional_1a85304d4e96b6dedc3a125abc96120631" prot="public" virt="non-virtual"><scope>fc::optional</scope><name>operator=</name></member>
      <member refid="classfc_1_1optional_1a859ec2e84e277ecca8a1353978b0df5b" prot="public" virt="non-virtual"><scope>fc::optional</scope><name>operator=</name></member>
      <member refid="classfc_1_1optional_1a15bcd4eed1211821573f8a7cc6af1b97" prot="public" virt="non-virtual"><scope>fc::optional</scope><name>operator=</name></member>
      <member refid="classfc_1_1optional_1a9aa346eec49d2f8538667b1fbd8f70e5" prot="public" virt="non-virtual"><scope>fc::optional</scope><name>operator=</name></member>
      <member refid="classfc_1_1optional_1a880cc7f4bafb6338f5c397c1b6f9ab3f" prot="public" virt="non-virtual"><scope>fc::optional</scope><name>operator=</name></member>
      <member refid="classfc_1_1optional_1a608be2170eb1ffcef97954156c7ebbd8" prot="public" virt="non-virtual"><scope>fc::optional</scope><name>operator==</name></member>
      <member refid="classfc_1_1optional_1aa756d67787488b1e2bba885ce4da6fe0" prot="private" virt="non-virtual"><scope>fc::optional</scope><name>optional</name></member>
      <member refid="classfc_1_1optional_1a8c6f2e7ef731d12d1a354dd134898842" prot="public" virt="non-virtual"><scope>fc::optional</scope><name>optional</name></member>
      <member refid="classfc_1_1optional_1ae51e22870fa597103020e71f3b7cab9e" prot="public" virt="non-virtual"><scope>fc::optional</scope><name>optional</name></member>
      <member refid="classfc_1_1optional_1af6ddfd3a6c75ab0cd6adc19a651b14b2" prot="public" virt="non-virtual"><scope>fc::optional</scope><name>optional</name></member>
      <member refid="classfc_1_1optional_1ae46cc01e5127eb4e5f4d51b9478fd57d" prot="public" virt="non-virtual"><scope>fc::optional</scope><name>optional</name></member>
      <member refid="classfc_1_1optional_1aa1dc774586cb7c4bb1a21c0ecfd865bc" prot="public" virt="non-virtual"><scope>fc::optional</scope><name>optional</name></member>
      <member refid="classfc_1_1optional_1a530439d9ac81883cd74ec9cc8ff74b5a" prot="public" virt="non-virtual"><scope>fc::optional</scope><name>optional</name></member>
      <member refid="classfc_1_1optional_1adf7909c2d49c7a1b3ef3f6cf8ad131cc" prot="public" virt="non-virtual"><scope>fc::optional</scope><name>optional</name></member>
      <member refid="classfc_1_1optional_1a6b6bb3c22caa2bc93fe9c77eb4782a57" prot="public" virt="non-virtual"><scope>fc::optional</scope><name>optional</name></member>
      <member refid="classfc_1_1optional_1a12aae4b704cb3332e39d7e7baddf920d" prot="private" virt="non-virtual"><scope>fc::optional</scope><name>ptr</name></member>
      <member refid="classfc_1_1optional_1a24169ae322ec12f4d9444a963a235fa7" prot="private" virt="non-virtual"><scope>fc::optional</scope><name>ptr</name></member>
      <member refid="classfc_1_1optional_1aa3cc66d3c06e97fe4dcce33ac619dd9c" prot="private" virt="non-virtual"><scope>fc::optional</scope><name>ref</name></member>
      <member refid="classfc_1_1optional_1a578f39c2fc3ed14f4c2da196509a68de" prot="private" virt="non-virtual"><scope>fc::optional</scope><name>ref</name></member>
      <member refid="classfc_1_1optional_1aec855f8ea4a41c149da6672000cec99a" prot="public" virt="non-virtual"><scope>fc::optional</scope><name>reset</name></member>
      <member refid="classfc_1_1optional_1ae8cb2224350f244a3f8cceedcf28766e" prot="public" virt="non-virtual"><scope>fc::optional</scope><name>valid</name></member>
      <member refid="classfc_1_1optional_1a60c8ee406455667ec37c5ee2e69aa41c" prot="public" virt="non-virtual"><scope>fc::optional</scope><name>value_type</name></member>
      <member refid="classfc_1_1optional_1ae1bb6c6ab0c95c3b27910979b71555fe" prot="public" virt="non-virtual"><scope>fc::optional</scope><name>~optional</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
