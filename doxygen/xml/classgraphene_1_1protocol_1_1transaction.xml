<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classgraphene_1_1protocol_1_1transaction" kind="class" language="C++" prot="public">
    <compoundname>graphene::protocol::transaction</compoundname>
    <derivedcompoundref refid="classgraphene_1_1protocol_1_1signed__transaction" prot="public" virt="non-virtual">graphene::protocol::signed_transaction</derivedcompoundref>
    <includes refid="transaction_8hpp" local="no">transaction.hpp</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classgraphene_1_1protocol_1_1transaction_1a409ead8644ff5fcb2dc3527910afa0f8" prot="public" static="no" mutable="no">
        <type>uint16_t</type>
        <definition>uint16_t graphene::protocol::transaction::ref_block_num</definition>
        <argsstring></argsstring>
        <name>ref_block_num</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Least significant 16 bits from the reference block number. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/transaction.hpp" line="76" column="1" bodyfile="libraries/protocol/include/graphene/protocol/transaction.hpp" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgraphene_1_1protocol_1_1transaction_1a8b2ed9c30bc7d04c96e6ed1e4652dcbe" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t graphene::protocol::transaction::ref_block_prefix</definition>
        <argsstring></argsstring>
        <name>ref_block_prefix</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The first non-block-number 32-bits of the reference block ID. Recall that block IDs have 32 bits of block number followed by the actual block hash, so this field should be set using the second 32 bits in the <ref refid="namespacegraphene_1_1protocol_1a32e784a8edceba5506db2c130ed9cb9c" kindref="member">block_id_type</ref> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/transaction.hpp" line="82" column="1" bodyfile="libraries/protocol/include/graphene/protocol/transaction.hpp" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgraphene_1_1protocol_1_1transaction_1a303447df940705d8ab860d2d52317e80" prot="public" static="no" mutable="no">
        <type><ref refid="classfc_1_1time__point__sec" kindref="compound">fc::time_point_sec</ref></type>
        <definition>fc::time_point_sec graphene::protocol::transaction::expiration</definition>
        <argsstring></argsstring>
        <name>expiration</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This field specifies the absolute expiration for this transaction. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/transaction.hpp" line="87" column="1" bodyfile="libraries/protocol/include/graphene/protocol/transaction.hpp" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgraphene_1_1protocol_1_1transaction_1a00bfb1cd13936871cd987b74dca0417a" prot="public" static="no" mutable="no">
        <type>vector&lt; <ref refid="group__operations_1ga9aa13b4d89e9b8b56d1074b715de6568" kindref="member">operation</ref> &gt;</type>
        <definition>vector&lt;operation&gt; graphene::protocol::transaction::operations</definition>
        <argsstring></argsstring>
        <name>operations</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/transaction.hpp" line="89" column="1" bodyfile="libraries/protocol/include/graphene/protocol/transaction.hpp" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgraphene_1_1protocol_1_1transaction_1ac4922d0bbee524ba5eacc8a665888be2" prot="public" static="no" mutable="no">
        <type><ref refid="group__operations_1gabaddcaf5bde76414891b4c29031d9288" kindref="member">extensions_type</ref></type>
        <definition>extensions_type graphene::protocol::transaction::extensions</definition>
        <argsstring></argsstring>
        <name>extensions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/transaction.hpp" line="90" column="1" bodyfile="libraries/protocol/include/graphene/protocol/transaction.hpp" bodystart="90" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classgraphene_1_1protocol_1_1transaction_1ab8a7d50e9abe892ac8d8c9edfa407743" prot="protected" static="no" mutable="yes">
        <type><ref refid="namespacegraphene_1_1protocol_1a040f9f71bff896e89dc9ee3ff92bb076" kindref="member">transaction_id_type</ref></type>
        <definition>transaction_id_type graphene::protocol::transaction::_tx_id_buffer</definition>
        <argsstring></argsstring>
        <name>_tx_id_buffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/transaction.hpp" line="128" column="1" bodyfile="libraries/protocol/include/graphene/protocol/transaction.hpp" bodystart="128" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classgraphene_1_1protocol_1_1transaction_1a03d9df4aeb611d900a8d18787056e682" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual graphene::protocol::transaction::~transaction</definition>
        <argsstring>()=default</argsstring>
        <name>~transaction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/transaction.hpp" line="72" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1protocol_1_1transaction_1a04ffe009d27aec9e221041ba22125532" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacegraphene_1_1protocol_1a4ba2f090fee47759ed812b7849c6fee8" kindref="member">digest_type</ref></type>
        <definition>digest_type graphene::protocol::transaction::digest</definition>
        <argsstring>() const</argsstring>
        <name>digest</name>
        <briefdescription>
<para>Calculate the digest for a transaction. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/transaction.hpp" line="93" column="1" bodyfile="libraries/protocol/transaction.cpp" bodystart="43" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1protocol_1_1transaction_1ab837a9c225d37d0fe9eb952ee6bf5cc1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const <ref refid="namespacegraphene_1_1protocol_1a040f9f71bff896e89dc9ee3ff92bb076" kindref="member">transaction_id_type</ref> &amp;</type>
        <definition>const transaction_id_type &amp; graphene::protocol::transaction::id</definition>
        <argsstring>() const</argsstring>
        <name>id</name>
        <reimplementedby refid="classgraphene_1_1protocol_1_1precomputable__transaction_1ab7a8492b910ef622a76332d6a7372fdb">id</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/transaction.hpp" line="94" column="1" bodyfile="libraries/protocol/transaction.cpp" bodystart="70" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1protocol_1_1transaction_1ae691d92c2a4cbc1264ea5b698fd4df60" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void graphene::protocol::transaction::validate</definition>
        <argsstring>() const</argsstring>
        <name>validate</name>
        <reimplementedby refid="classgraphene_1_1protocol_1_1precomputable__transaction_1aff4373557a8bf96de54ce19414755a30">validate</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/transaction.hpp" line="95" column="1" bodyfile="libraries/protocol/transaction.cpp" bodystart="58" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1protocol_1_1transaction_1a083a44dddfc1c36adb8806262aee25d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::protocol::transaction::set_expiration</definition>
        <argsstring>(fc::time_point_sec expiration_time)</argsstring>
        <name>set_expiration</name>
        <param>
          <type><ref refid="classfc_1_1time__point__sec" kindref="compound">fc::time_point_sec</ref></type>
          <declname>expiration_time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/transaction.hpp" line="97" column="1" bodyfile="libraries/protocol/transaction.cpp" bodystart="92" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1protocol_1_1transaction_1aee3b70d4b548901a0d3a811bad926098" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::protocol::transaction::set_reference_block</definition>
        <argsstring>(const block_id_type &amp;reference_block)</argsstring>
        <name>set_reference_block</name>
        <param>
          <type>const <ref refid="namespacegraphene_1_1protocol_1a32e784a8edceba5506db2c130ed9cb9c" kindref="member">block_id_type</ref> &amp;</type>
          <declname>reference_block</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/transaction.hpp" line="98" column="1" bodyfile="libraries/protocol/transaction.cpp" bodystart="97" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1protocol_1_1transaction_1a00813917deaf56177dc010944765f8c4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Visitor</type>
          </param>
        </templateparamlist>
        <type>vector&lt; typename Visitor::result_type &gt;</type>
        <definition>vector&lt;typename Visitor::result_type&gt; graphene::protocol::transaction::visit</definition>
        <argsstring>(Visitor &amp;&amp;visitor)</argsstring>
        <name>visit</name>
        <param>
          <type>Visitor &amp;&amp;</type>
          <declname>visitor</declname>
        </param>
        <briefdescription>
<para>visit all operations </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/transaction.hpp" line="102" column="1" bodyfile="libraries/protocol/include/graphene/protocol/transaction.hpp" bodystart="102" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1protocol_1_1transaction_1add3323f0daeb3d5ccf3e222e5a2de9ce" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Visitor</type>
          </param>
        </templateparamlist>
        <type>vector&lt; typename Visitor::result_type &gt;</type>
        <definition>vector&lt;typename Visitor::result_type&gt; graphene::protocol::transaction::visit</definition>
        <argsstring>(Visitor &amp;&amp;visitor) const</argsstring>
        <name>visit</name>
        <param>
          <type>Visitor &amp;&amp;</type>
          <declname>visitor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/transaction.hpp" line="110" column="1" bodyfile="libraries/protocol/include/graphene/protocol/transaction.hpp" bodystart="110" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1protocol_1_1transaction_1aa2b9c07185c7f05118dca8aa9ba69b08" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::protocol::transaction::get_required_authorities</definition>
        <argsstring>(flat_set&lt; account_id_type &gt; &amp;active, flat_set&lt; account_id_type &gt; &amp;owner, vector&lt; authority &gt; &amp;other, bool ignore_custom_operation_required_auths) const</argsstring>
        <name>get_required_authorities</name>
        <param>
          <type>flat_set&lt; account_id_type &gt; &amp;</type>
          <declname>active</declname>
        </param>
        <param>
          <type>flat_set&lt; account_id_type &gt; &amp;</type>
          <declname>owner</declname>
        </param>
        <param>
          <type>vector&lt; <ref refid="structgraphene_1_1protocol_1_1authority" kindref="compound">authority</ref> &gt; &amp;</type>
          <declname>other</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>ignore_custom_operation_required_auths</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/transaction.hpp" line="118" column="1" bodyfile="libraries/protocol/transaction.cpp" bodystart="103" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1protocol_1_1transaction_1a05a5400509cd28ec52ae3952918d803f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>uint64_t</type>
        <definition>uint64_t graphene::protocol::transaction::get_packed_size</definition>
        <argsstring>() const</argsstring>
        <name>get_packed_size</name>
        <reimplementedby refid="classgraphene_1_1protocol_1_1precomputable__transaction_1a636c0fc4a3822748311f5d74d7f8b140">get_packed_size</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/transaction.hpp" line="123" column="1" bodyfile="libraries/protocol/transaction.cpp" bodystart="65" bodyend="68"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classgraphene_1_1protocol_1_1transaction_1aa3f69556ccaf5552871c344c3150182d" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacegraphene_1_1protocol_1a4ba2f090fee47759ed812b7849c6fee8" kindref="member">digest_type</ref></type>
        <definition>digest_type graphene::protocol::transaction::sig_digest</definition>
        <argsstring>(const chain_id_type &amp;chain_id) const</argsstring>
        <name>sig_digest</name>
        <param>
          <type>const <ref refid="namespacegraphene_1_1protocol_1a56354f39ed89f6a0a13fe90ba8228809" kindref="member">chain_id_type</ref> &amp;</type>
          <declname>chain_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/transaction.hpp" line="127" column="1" bodyfile="libraries/protocol/transaction.cpp" bodystart="50" bodyend="56"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>groups operations that should be applied atomically </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="7735">
        <label>graphene::protocol::precomputable_transaction</label>
        <link refid="classgraphene_1_1protocol_1_1precomputable__transaction"/>
        <childnode refid="7734" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7736">
        <label>graphene::protocol::processed_transaction</label>
        <link refid="structgraphene_1_1protocol_1_1processed__transaction"/>
        <childnode refid="7735" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7734">
        <label>graphene::protocol::signed_transaction</label>
        <link refid="classgraphene_1_1protocol_1_1signed__transaction"/>
        <childnode refid="7733" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7733">
        <label>graphene::protocol::transaction</label>
        <link refid="classgraphene_1_1protocol_1_1transaction"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="7738">
        <label>fc::ripemd160</label>
        <link refid="classfc_1_1ripemd160"/>
      </node>
      <node id="7739">
        <label>fc::time_point_sec</label>
        <link refid="classfc_1_1time__point__sec"/>
      </node>
      <node id="7740">
        <label>vector&lt; fc::static_variant &gt;</label>
      </node>
      <node id="7737">
        <label>graphene::protocol::transaction</label>
        <link refid="classgraphene_1_1protocol_1_1transaction"/>
        <childnode refid="7738" relation="usage">
          <edgelabel>_tx_id_buffer</edgelabel>
        </childnode>
        <childnode refid="7739" relation="usage">
          <edgelabel>expiration</edgelabel>
        </childnode>
        <childnode refid="7740" relation="usage">
          <edgelabel>operations</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="libraries/protocol/include/graphene/protocol/transaction.hpp" line="70" column="1" bodyfile="libraries/protocol/include/graphene/protocol/transaction.hpp" bodystart="69" bodyend="129"/>
    <listofallmembers>
      <member refid="classgraphene_1_1protocol_1_1transaction_1ab8a7d50e9abe892ac8d8c9edfa407743" prot="protected" virt="non-virtual"><scope>graphene::protocol::transaction</scope><name>_tx_id_buffer</name></member>
      <member refid="classgraphene_1_1protocol_1_1transaction_1a04ffe009d27aec9e221041ba22125532" prot="public" virt="non-virtual"><scope>graphene::protocol::transaction</scope><name>digest</name></member>
      <member refid="classgraphene_1_1protocol_1_1transaction_1a303447df940705d8ab860d2d52317e80" prot="public" virt="non-virtual"><scope>graphene::protocol::transaction</scope><name>expiration</name></member>
      <member refid="classgraphene_1_1protocol_1_1transaction_1ac4922d0bbee524ba5eacc8a665888be2" prot="public" virt="non-virtual"><scope>graphene::protocol::transaction</scope><name>extensions</name></member>
      <member refid="classgraphene_1_1protocol_1_1transaction_1a05a5400509cd28ec52ae3952918d803f" prot="public" virt="virtual"><scope>graphene::protocol::transaction</scope><name>get_packed_size</name></member>
      <member refid="classgraphene_1_1protocol_1_1transaction_1aa2b9c07185c7f05118dca8aa9ba69b08" prot="public" virt="non-virtual"><scope>graphene::protocol::transaction</scope><name>get_required_authorities</name></member>
      <member refid="classgraphene_1_1protocol_1_1transaction_1ab837a9c225d37d0fe9eb952ee6bf5cc1" prot="public" virt="virtual"><scope>graphene::protocol::transaction</scope><name>id</name></member>
      <member refid="classgraphene_1_1protocol_1_1transaction_1a00bfb1cd13936871cd987b74dca0417a" prot="public" virt="non-virtual"><scope>graphene::protocol::transaction</scope><name>operations</name></member>
      <member refid="classgraphene_1_1protocol_1_1transaction_1a409ead8644ff5fcb2dc3527910afa0f8" prot="public" virt="non-virtual"><scope>graphene::protocol::transaction</scope><name>ref_block_num</name></member>
      <member refid="classgraphene_1_1protocol_1_1transaction_1a8b2ed9c30bc7d04c96e6ed1e4652dcbe" prot="public" virt="non-virtual"><scope>graphene::protocol::transaction</scope><name>ref_block_prefix</name></member>
      <member refid="classgraphene_1_1protocol_1_1transaction_1a083a44dddfc1c36adb8806262aee25d5" prot="public" virt="non-virtual"><scope>graphene::protocol::transaction</scope><name>set_expiration</name></member>
      <member refid="classgraphene_1_1protocol_1_1transaction_1aee3b70d4b548901a0d3a811bad926098" prot="public" virt="non-virtual"><scope>graphene::protocol::transaction</scope><name>set_reference_block</name></member>
      <member refid="classgraphene_1_1protocol_1_1transaction_1aa3f69556ccaf5552871c344c3150182d" prot="protected" virt="non-virtual"><scope>graphene::protocol::transaction</scope><name>sig_digest</name></member>
      <member refid="classgraphene_1_1protocol_1_1transaction_1ae691d92c2a4cbc1264ea5b698fd4df60" prot="public" virt="virtual"><scope>graphene::protocol::transaction</scope><name>validate</name></member>
      <member refid="classgraphene_1_1protocol_1_1transaction_1a00813917deaf56177dc010944765f8c4" prot="public" virt="non-virtual"><scope>graphene::protocol::transaction</scope><name>visit</name></member>
      <member refid="classgraphene_1_1protocol_1_1transaction_1add3323f0daeb3d5ccf3e222e5a2de9ce" prot="public" virt="non-virtual"><scope>graphene::protocol::transaction</scope><name>visit</name></member>
      <member refid="classgraphene_1_1protocol_1_1transaction_1a03d9df4aeb611d900a8d18787056e682" prot="public" virt="virtual"><scope>graphene::protocol::transaction</scope><name>~transaction</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
