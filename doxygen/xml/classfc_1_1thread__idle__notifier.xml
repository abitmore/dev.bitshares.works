<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classfc_1_1thread__idle__notifier" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>fc::thread_idle_notifier</compoundname>
    <derivedcompoundref refid="classfc_1_1detail_1_1idle__notifier__impl" prot="public" virt="non-virtual">fc::detail::idle_notifier_impl</derivedcompoundref>
    <includes refid="thread_8hpp" local="no">thread.hpp</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classfc_1_1thread__idle__notifier_1a2d21cdead774689954b59073e078cc63" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual fc::thread_idle_notifier::~thread_idle_notifier</definition>
        <argsstring>()</argsstring>
        <name>~thread_idle_notifier</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/thread/thread.hpp" line="26" column="1" bodyfile="libraries/fc/include/fc/thread/thread.hpp" bodystart="26" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1thread__idle__notifier_1aad95de1538a16983b455f23a7ddb73dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="classfc_1_1task__base" kindref="compound">task_base</ref> *</type>
        <definition>virtual task_base* fc::thread_idle_notifier::idle</definition>
        <argsstring>()=0</argsstring>
        <name>idle</name>
        <reimplementedby refid="classfc_1_1detail_1_1idle__notifier__impl_1a52ee3790666f700560dfde7fd6c06752">idle</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method is called when the thread is idle. If it returns a <ref refid="classfc_1_1task__base" kindref="compound">task_base</ref> it will be queued and executed immediately. <simplesect kind="return"><para>a task to execute, or nullptr </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/thread/thread.hpp" line="32" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1thread__idle__notifier_1aac3dc857608ab4c80b3d0675bfc52d52" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void fc::thread_idle_notifier::busy</definition>
        <argsstring>()=0</argsstring>
        <name>busy</name>
        <reimplementedby refid="classfc_1_1detail_1_1idle__notifier__impl_1aeca6fcd636ae130816b4e8f637a0dfb4">busy</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method is called when the thread is no longer idle, e. g. after it has woken up due to a timer or signal. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/thread/thread.hpp" line="36" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Instances of this class can be used to get notifications when a thread is (or is no longer) idle. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="6383">
        <label>fc::thread_idle_notifier</label>
        <link refid="classfc_1_1thread__idle__notifier"/>
      </node>
      <node id="6384">
        <label>fc::detail::idle_notifier_impl</label>
        <link refid="classfc_1_1detail_1_1idle__notifier__impl"/>
        <childnode refid="6383" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="libraries/fc/include/fc/thread/thread.hpp" line="24" column="1" bodyfile="libraries/fc/include/fc/thread/thread.hpp" bodystart="24" bodyend="37"/>
    <listofallmembers>
      <member refid="classfc_1_1thread__idle__notifier_1aac3dc857608ab4c80b3d0675bfc52d52" prot="public" virt="pure-virtual"><scope>fc::thread_idle_notifier</scope><name>busy</name></member>
      <member refid="classfc_1_1thread__idle__notifier_1aad95de1538a16983b455f23a7ddb73dd" prot="public" virt="pure-virtual"><scope>fc::thread_idle_notifier</scope><name>idle</name></member>
      <member refid="classfc_1_1thread__idle__notifier_1a2d21cdead774689954b59073e078cc63" prot="public" virt="virtual"><scope>fc::thread_idle_notifier</scope><name>~thread_idle_notifier</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
