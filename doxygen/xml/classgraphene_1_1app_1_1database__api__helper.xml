<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classgraphene_1_1app_1_1database__api__helper" kind="class" language="C++" prot="public">
    <compoundname>graphene::app::database_api_helper</compoundname>
    <derivedcompoundref refid="classgraphene_1_1app_1_1database__api__impl" prot="public" virt="non-virtual">graphene::app::database_api_impl</derivedcompoundref>
    <includes refid="database__api__helper_8hxx" local="no">database_api_helper.hxx</includes>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="classgraphene_1_1app_1_1database__api__helper_1ad90d7425bba21f237fc228b3351d6270" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename X</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto graphene::app::database_api_helper::make_tuple_if_multiple</definition>
        <argsstring>(X x) const</argsstring>
        <name>make_tuple_if_multiple</name>
        <param>
          <type>X</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Template functions for simple list_X and get_X_by_T APIs, to reduce duplicate code </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/database_api_helper.hxx" line="49" column="9" bodyfile="libraries/app/database_api_helper.hxx" bodystart="49" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1app_1_1database__api__helper_1a602a7d5cd75c9e94be1f49723536f3e7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>X</declname>
            <defname>X</defname>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto graphene::app::database_api_helper::make_tuple_if_multiple</definition>
        <argsstring>(X... x) const</argsstring>
        <name>make_tuple_if_multiple</name>
        <param>
          <type>X...</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/database_api_helper.hxx" line="53" column="9" bodyfile="libraries/app/database_api_helper.hxx" bodystart="53" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1app_1_1database__api__helper_1aa743b08bb41009aa39c51daf505cffe4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto graphene::app::database_api_helper::call_end_or_upper_bound</definition>
        <argsstring>(const T &amp;t) const</argsstring>
        <name>call_end_or_upper_bound</name>
        <param>
          <type>const T &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/database_api_helper.hxx" line="57" column="9" bodyfile="libraries/app/database_api_helper.hxx" bodystart="57" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1app_1_1database__api__helper_1af3f38dde207b28e6c4e56b421b3d6ddb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>X</declname>
            <defname>X</defname>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto graphene::app::database_api_helper::call_end_or_upper_bound</definition>
        <argsstring>(const T &amp;t, X... x) const</argsstring>
        <name>call_end_or_upper_bound</name>
        <param>
          <type>const T &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type>X...</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/database_api_helper.hxx" line="61" column="9" bodyfile="libraries/app/database_api_helper.hxx" bodystart="61" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1app_1_1database__api__helper_1a78bfa8142b4431eae91d450b87ca3af4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename OBJ_TYPE</type>
          </param>
          <param>
            <type>typename OBJ_ID_TYPE</type>
          </param>
          <param>
            <type>typename INDEX_TYPE</type>
          </param>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>X</declname>
            <defname>X</defname>
          </param>
        </templateparamlist>
        <type>vector&lt; OBJ_TYPE &gt;</type>
        <definition>vector&lt;OBJ_TYPE&gt; graphene::app::database_api_helper::get_objects_by_x</definition>
        <argsstring>(T application_options::*app_opt_member_ptr, const INDEX_TYPE &amp;idx, const optional&lt; uint32_t &gt; &amp;olimit, const optional&lt; OBJ_ID_TYPE &gt; &amp;ostart_id, X... x) const</argsstring>
        <name>get_objects_by_x</name>
        <param>
          <type>T application_options::*</type>
          <declname>app_opt_member_ptr</declname>
        </param>
        <param>
          <type>const INDEX_TYPE &amp;</type>
          <declname>idx</declname>
        </param>
        <param>
          <type>const <ref refid="classfc_1_1optional" kindref="compound">optional</ref>&lt; uint32_t &gt; &amp;</type>
          <declname>olimit</declname>
        </param>
        <param>
          <type>const <ref refid="classfc_1_1optional" kindref="compound">optional</ref>&lt; OBJ_ID_TYPE &gt; &amp;</type>
          <declname>ostart_id</declname>
        </param>
        <param>
          <type>X...</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/database_api_helper.hxx" line="65" column="11" bodyfile="libraries/app/database_api_helper.hxx" bodystart="65" bodyend="95"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classgraphene_1_1app_1_1database__api__helper_1a5d29c9ad82ecfbb2a9ab6b4d2fb4e313" prot="public" static="no" mutable="no">
        <type><ref refid="classgraphene_1_1chain_1_1database" kindref="compound">graphene::chain::database</ref> &amp;</type>
        <definition>graphene::chain::database&amp; graphene::app::database_api_helper::_db</definition>
        <argsstring></argsstring>
        <name>_db</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/database_api_helper.hxx" line="35" column="30" bodyfile="libraries/app/database_api_helper.hxx" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgraphene_1_1app_1_1database__api__helper_1ac2880e144ca265f0ac59bb31aaf4a889" prot="public" static="no" mutable="no">
        <type>const <ref refid="classgraphene_1_1app_1_1application__options" kindref="compound">application_options</ref> *</type>
        <definition>const application_options* graphene::app::database_api_helper::_app_options</definition>
        <argsstring></argsstring>
        <name>_app_options</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/database_api_helper.hxx" line="36" column="30" bodyfile="libraries/app/database_api_helper.hxx" bodystart="36" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classgraphene_1_1app_1_1database__api__helper_1a57f872ba11b3e28e7636545ef0728094" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>graphene::app::database_api_helper::database_api_helper</definition>
        <argsstring>(graphene::chain::database &amp;db, const application_options *app_options)</argsstring>
        <name>database_api_helper</name>
        <param>
          <type><ref refid="classgraphene_1_1chain_1_1database" kindref="compound">graphene::chain::database</ref> &amp;</type>
          <declname>db</declname>
        </param>
        <param>
          <type>const <ref refid="classgraphene_1_1app_1_1application__options" kindref="compound">application_options</ref> *</type>
          <declname>app_options</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/database_api_helper.hxx" line="31" column="4" bodyfile="libraries/app/database_api.cpp" bodystart="59" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1app_1_1database__api__helper_1ad4fdda5e6386d31015fd91d5db0c1b32" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>graphene::app::database_api_helper::database_api_helper</definition>
        <argsstring>(const graphene::app::application &amp;app)</argsstring>
        <name>database_api_helper</name>
        <param>
          <type>const <ref refid="classgraphene_1_1app_1_1application" kindref="compound">graphene::app::application</ref> &amp;</type>
          <declname>app</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/database_api_helper.hxx" line="32" column="13" bodyfile="libraries/app/database_api.cpp" bodystart="64" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1app_1_1database__api__helper_1ad57a0aa7f2cc9775c2458f5cb7b3cb19" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classgraphene_1_1chain_1_1account__object" kindref="compound">account_object</ref> *</type>
        <definition>const account_object * graphene::app::database_api_helper::get_account_from_string</definition>
        <argsstring>(const std::string &amp;name_or_id, bool throw_if_not_found=true) const</argsstring>
        <name>get_account_from_string</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name_or_id</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>throw_if_not_found</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/database_api_helper.hxx" line="39" column="25" bodyfile="libraries/app/database_api.cpp" bodystart="3042" bodyend="3066"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1app_1_1database__api__helper_1ad92ff45a2d96b10f3b613fbc8675febe" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classgraphene_1_1chain_1_1asset__object" kindref="compound">asset_object</ref> *</type>
        <definition>const asset_object * graphene::app::database_api_helper::get_asset_from_string</definition>
        <argsstring>(const std::string &amp;symbol_or_id, bool throw_if_not_found=true) const</argsstring>
        <name>get_asset_from_string</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>symbol_or_id</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>throw_if_not_found</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/database_api_helper.hxx" line="43" column="23" bodyfile="libraries/app/database_api.cpp" bodystart="3068" bodyend="3092"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>graphene::app::database_api_impl</label>
        <link refid="classgraphene_1_1app_1_1database__api__impl"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>graphene::app::database_api_helper</label>
        <link refid="classgraphene_1_1app_1_1database__api__helper"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="6">
        <label>fc::time_point_sec</label>
        <link refid="classfc_1_1time__point__sec"/>
      </node>
      <node id="4">
        <label>graphene::db::object_database</label>
        <link refid="classgraphene_1_1db_1_1object__database"/>
        <childnode refid="5" relation="usage">
          <edgelabel>_undo_db</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>graphene::app::application_options</label>
        <link refid="classgraphene_1_1app_1_1application__options"/>
      </node>
      <node id="3">
        <label>graphene::chain::database</label>
        <link refid="classgraphene_1_1chain_1_1database"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>_current_block_time</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>graphene::app::database_api_helper</label>
        <link refid="classgraphene_1_1app_1_1database__api__helper"/>
        <childnode refid="2" relation="usage">
          <edgelabel>_app_options</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>_db</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>graphene::db::undo_database</label>
        <link refid="classgraphene_1_1db_1_1undo__database"/>
      </node>
    </collaborationgraph>
    <location file="libraries/app/database_api_helper.hxx" line="29" column="1" bodyfile="libraries/app/database_api_helper.hxx" bodystart="28" bodyend="98"/>
    <listofallmembers>
      <member refid="classgraphene_1_1app_1_1database__api__helper_1ac2880e144ca265f0ac59bb31aaf4a889" prot="public" virt="non-virtual"><scope>graphene::app::database_api_helper</scope><name>_app_options</name></member>
      <member refid="classgraphene_1_1app_1_1database__api__helper_1a5d29c9ad82ecfbb2a9ab6b4d2fb4e313" prot="public" virt="non-virtual"><scope>graphene::app::database_api_helper</scope><name>_db</name></member>
      <member refid="classgraphene_1_1app_1_1database__api__helper_1aa743b08bb41009aa39c51daf505cffe4" prot="public" virt="non-virtual"><scope>graphene::app::database_api_helper</scope><name>call_end_or_upper_bound</name></member>
      <member refid="classgraphene_1_1app_1_1database__api__helper_1af3f38dde207b28e6c4e56b421b3d6ddb" prot="public" virt="non-virtual"><scope>graphene::app::database_api_helper</scope><name>call_end_or_upper_bound</name></member>
      <member refid="classgraphene_1_1app_1_1database__api__helper_1a57f872ba11b3e28e7636545ef0728094" prot="public" virt="non-virtual"><scope>graphene::app::database_api_helper</scope><name>database_api_helper</name></member>
      <member refid="classgraphene_1_1app_1_1database__api__helper_1ad4fdda5e6386d31015fd91d5db0c1b32" prot="public" virt="non-virtual"><scope>graphene::app::database_api_helper</scope><name>database_api_helper</name></member>
      <member refid="classgraphene_1_1app_1_1database__api__helper_1ad57a0aa7f2cc9775c2458f5cb7b3cb19" prot="public" virt="non-virtual"><scope>graphene::app::database_api_helper</scope><name>get_account_from_string</name></member>
      <member refid="classgraphene_1_1app_1_1database__api__helper_1ad92ff45a2d96b10f3b613fbc8675febe" prot="public" virt="non-virtual"><scope>graphene::app::database_api_helper</scope><name>get_asset_from_string</name></member>
      <member refid="classgraphene_1_1app_1_1database__api__helper_1a78bfa8142b4431eae91d450b87ca3af4" prot="public" virt="non-virtual"><scope>graphene::app::database_api_helper</scope><name>get_objects_by_x</name></member>
      <member refid="classgraphene_1_1app_1_1database__api__helper_1ad90d7425bba21f237fc228b3351d6270" prot="public" virt="non-virtual"><scope>graphene::app::database_api_helper</scope><name>make_tuple_if_multiple</name></member>
      <member refid="classgraphene_1_1app_1_1database__api__helper_1a602a7d5cd75c9e94be1f49723536f3e7" prot="public" virt="non-virtual"><scope>graphene::app::database_api_helper</scope><name>make_tuple_if_multiple</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
