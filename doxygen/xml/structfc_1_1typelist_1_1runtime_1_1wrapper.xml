<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structfc_1_1typelist_1_1runtime_1_1wrapper" kind="struct" language="C++" prot="public">
    <compoundname>fc::typelist::runtime::wrapper</compoundname>
    <includes refid="typelist_8hpp" local="no">typelist.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structfc_1_1typelist_1_1runtime_1_1wrapper_1a43de7ae5cf095f225d6a534a1c3dcabd" prot="public" static="no">
        <type>T</type>
        <definition>using fc::typelist::runtime::wrapper&lt; T &gt;::type =  T</definition>
        <argsstring></argsstring>
        <name>type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/reflect/typelist.hpp" line="230" column="1" bodyfile="libraries/fc/include/fc/reflect/typelist.hpp" bodystart="230" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Type wrapper object allowing arbitrary types to be passed to functions as information rather than data. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="libraries/fc/include/fc/reflect/typelist.hpp" line="230" column="1" bodyfile="libraries/fc/include/fc/reflect/typelist.hpp" bodystart="230" bodyend="230"/>
    <listofallmembers>
      <member refid="structfc_1_1typelist_1_1runtime_1_1wrapper_1a43de7ae5cf095f225d6a534a1c3dcabd" prot="public" virt="non-virtual"><scope>fc::typelist::runtime::wrapper</scope><name>type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
