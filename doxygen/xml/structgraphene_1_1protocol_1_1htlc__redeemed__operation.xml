<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structgraphene_1_1protocol_1_1htlc__redeemed__operation" kind="struct" language="C++" prot="public">
    <compoundname>graphene::protocol::htlc_redeemed_operation</compoundname>
    <basecompoundref refid="structgraphene_1_1protocol_1_1base__operation" prot="public" virt="non-virtual">graphene::protocol::base_operation</basecompoundref>
    <includes refid="htlc_8hpp" local="no">htlc.hpp</includes>
    <innerclass refid="structgraphene_1_1protocol_1_1htlc__redeemed__operation_1_1fee__parameters__type" prot="public">graphene::protocol::htlc_redeemed_operation::fee_parameters_type</innerclass>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1htlc__redeemed__operation_1ad0db1ffcad745b5c261f5a11d2b31ba7" prot="public" static="no" mutable="no">
        <type>htlc_id_type</type>
        <definition>htlc_id_type graphene::protocol::htlc_redeemed_operation::htlc_id</definition>
        <argsstring></argsstring>
        <name>htlc_id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/htlc.hpp" line="143" column="1" bodyfile="libraries/protocol/include/graphene/protocol/htlc.hpp" bodystart="143" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1htlc__redeemed__operation_1ace3fb06034530aef8a669dbb635c6fdd" prot="public" static="no" mutable="no">
        <type>account_id_type</type>
        <definition>account_id_type graphene::protocol::htlc_redeemed_operation::from</definition>
        <argsstring></argsstring>
        <name>from</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/htlc.hpp" line="144" column="1" bodyfile="libraries/protocol/include/graphene/protocol/htlc.hpp" bodystart="144" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1htlc__redeemed__operation_1a56b8aed6f7cb5458599b4d3f99913dc6" prot="public" static="no" mutable="no">
        <type>account_id_type</type>
        <definition>account_id_type graphene::protocol::htlc_redeemed_operation::to</definition>
        <argsstring></argsstring>
        <name>to</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/htlc.hpp" line="144" column="1" bodyfile="libraries/protocol/include/graphene/protocol/htlc.hpp" bodystart="144" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1htlc__redeemed__operation_1a77bc0defba09c99acaaefe4ba7dfbc20" prot="public" static="no" mutable="no">
        <type>account_id_type</type>
        <definition>account_id_type graphene::protocol::htlc_redeemed_operation::redeemer</definition>
        <argsstring></argsstring>
        <name>redeemer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/htlc.hpp" line="144" column="1" bodyfile="libraries/protocol/include/graphene/protocol/htlc.hpp" bodystart="144" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1htlc__redeemed__operation_1acf2a4e3b53f47fb0a41c94ae6f8aaabd" prot="public" static="no" mutable="no">
        <type><ref refid="structgraphene_1_1protocol_1_1asset" kindref="compound">asset</ref></type>
        <definition>asset graphene::protocol::htlc_redeemed_operation::amount</definition>
        <argsstring></argsstring>
        <name>amount</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/htlc.hpp" line="145" column="1" bodyfile="libraries/protocol/include/graphene/protocol/htlc.hpp" bodystart="145" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1htlc__redeemed__operation_1ac44e57eb4770c27eeb4694fec4d3706d" prot="public" static="no" mutable="no">
        <type><ref refid="namespacegraphene_1_1protocol_1a8edbef4035c72a541a106ad51d004606" kindref="member">htlc_hash</ref></type>
        <definition>htlc_hash graphene::protocol::htlc_redeemed_operation::htlc_preimage_hash</definition>
        <argsstring></argsstring>
        <name>htlc_preimage_hash</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/htlc.hpp" line="146" column="1" bodyfile="libraries/protocol/include/graphene/protocol/htlc.hpp" bodystart="146" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1htlc__redeemed__operation_1a88796ab0f3766a823517df5f8ceb1832" prot="public" static="no" mutable="no">
        <type>uint16_t</type>
        <definition>uint16_t graphene::protocol::htlc_redeemed_operation::htlc_preimage_size</definition>
        <argsstring></argsstring>
        <name>htlc_preimage_size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/htlc.hpp" line="147" column="1" bodyfile="libraries/protocol/include/graphene/protocol/htlc.hpp" bodystart="147" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1htlc__redeemed__operation_1a4601391fce50742c0df7af846d342f7a" prot="public" static="no" mutable="no">
        <type><ref refid="structgraphene_1_1protocol_1_1asset" kindref="compound">asset</ref></type>
        <definition>asset graphene::protocol::htlc_redeemed_operation::fee</definition>
        <argsstring></argsstring>
        <name>fee</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/htlc.hpp" line="149" column="1" bodyfile="libraries/protocol/include/graphene/protocol/htlc.hpp" bodystart="149" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1htlc__redeemed__operation_1a6a1b7b9e2c13c672e85b3434333dad90" prot="public" static="no" mutable="no">
        <type>std::vector&lt; char &gt;</type>
        <definition>std::vector&lt;char&gt; graphene::protocol::htlc_redeemed_operation::preimage</definition>
        <argsstring></argsstring>
        <name>preimage</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/htlc.hpp" line="150" column="1" bodyfile="libraries/protocol/include/graphene/protocol/htlc.hpp" bodystart="150" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structgraphene_1_1protocol_1_1htlc__redeemed__operation_1a39a4722ec177847970ac6352aed96687" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>graphene::protocol::htlc_redeemed_operation::htlc_redeemed_operation</definition>
        <argsstring>()</argsstring>
        <name>htlc_redeemed_operation</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/htlc.hpp" line="131" column="1" bodyfile="libraries/protocol/include/graphene/protocol/htlc.hpp" bodystart="131" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1protocol_1_1htlc__redeemed__operation_1a72bca4ee82f7c145cca0b28f34ab200a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>graphene::protocol::htlc_redeemed_operation::htlc_redeemed_operation</definition>
        <argsstring>(htlc_id_type htlc_id, account_id_type from, account_id_type to, account_id_type redeemer, asset amount, const htlc_hash &amp;preimage_hash, uint16_t preimage_size, const std::vector&lt; char &gt; &amp;preimage)</argsstring>
        <name>htlc_redeemed_operation</name>
        <param>
          <type>htlc_id_type</type>
          <declname>htlc_id</declname>
        </param>
        <param>
          <type>account_id_type</type>
          <declname>from</declname>
        </param>
        <param>
          <type>account_id_type</type>
          <declname>to</declname>
        </param>
        <param>
          <type>account_id_type</type>
          <declname>redeemer</declname>
        </param>
        <param>
          <type><ref refid="structgraphene_1_1protocol_1_1asset" kindref="compound">asset</ref></type>
          <declname>amount</declname>
        </param>
        <param>
          <type>const <ref refid="namespacegraphene_1_1protocol_1a8edbef4035c72a541a106ad51d004606" kindref="member">htlc_hash</ref> &amp;</type>
          <declname>preimage_hash</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>preimage_size</declname>
        </param>
        <param>
          <type>const std::vector&lt; char &gt; &amp;</type>
          <declname>preimage</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/htlc.hpp" line="132" column="1" bodyfile="libraries/protocol/include/graphene/protocol/htlc.hpp" bodystart="132" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1protocol_1_1htlc__redeemed__operation_1a317566b408eb00d2741d0e16382f51e9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>account_id_type</type>
        <definition>account_id_type graphene::protocol::htlc_redeemed_operation::fee_payer</definition>
        <argsstring>() const</argsstring>
        <name>fee_payer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/htlc.hpp" line="138" column="1" bodyfile="libraries/protocol/include/graphene/protocol/htlc.hpp" bodystart="138" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1protocol_1_1htlc__redeemed__operation_1a1d62060b10e0e194905038a2dfceeda0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void graphene::protocol::htlc_redeemed_operation::validate</definition>
        <argsstring>() const</argsstring>
        <name>validate</name>
        <reimplements refid="structgraphene_1_1protocol_1_1base__operation_1a23d617a6fa0921d3f5b51dd5167e7a29">validate</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/htlc.hpp" line="139" column="1" bodyfile="libraries/protocol/include/graphene/protocol/htlc.hpp" bodystart="139" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1protocol_1_1htlc__redeemed__operation_1a932a11a384dc5f53da9138b993fc4751" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacegraphene_1_1protocol_1a69b2104c1c11eed2d17bd29b86713347" kindref="member">share_type</ref></type>
        <definition>share_type graphene::protocol::htlc_redeemed_operation::calculate_fee</definition>
        <argsstring>(const fee_parameters_type &amp;k) const</argsstring>
        <name>calculate_fee</name>
        <param>
          <type>const <ref refid="structgraphene_1_1protocol_1_1htlc__redeemed__operation_1_1fee__parameters__type" kindref="compound">fee_parameters_type</ref> &amp;</type>
          <declname>k</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/htlc.hpp" line="141" column="1" bodyfile="libraries/protocol/include/graphene/protocol/htlc.hpp" bodystart="141" bodyend="141"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>virtual op to assist with notifying related parties </para>    </detaileddescription>
    <inheritancegraph>
      <node id="4732">
        <label>graphene::protocol::htlc_redeemed_operation</label>
        <link refid="structgraphene_1_1protocol_1_1htlc__redeemed__operation"/>
        <childnode refid="4733" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4733">
        <label>graphene::protocol::base_operation</label>
        <link refid="structgraphene_1_1protocol_1_1base__operation"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4734">
        <label>graphene::protocol::htlc_redeemed_operation</label>
        <link refid="structgraphene_1_1protocol_1_1htlc__redeemed__operation"/>
        <childnode refid="4735" relation="public-inheritance">
        </childnode>
        <childnode refid="4736" relation="usage">
          <edgelabel>fee</edgelabel>
          <edgelabel>amount</edgelabel>
        </childnode>
        <childnode refid="4738" relation="usage">
          <edgelabel>redeemer</edgelabel>
          <edgelabel>from</edgelabel>
          <edgelabel>to</edgelabel>
        </childnode>
        <childnode refid="4739" relation="usage">
          <edgelabel>htlc_preimage_hash</edgelabel>
        </childnode>
      </node>
      <node id="4739">
        <label>fc::static_variant&lt; htlc_algo_ripemd160, htlc_algo_sha1, htlc_algo_sha256, htlc_algo_hash160 &gt;</label>
        <link refid="classfc_1_1static__variant"/>
        <childnode refid="4740" relation="usage">
          <edgelabel>storage</edgelabel>
        </childnode>
      </node>
      <node id="4738">
        <label>account_id_type</label>
      </node>
      <node id="4737">
        <label>fc::safe&lt; int64_t &gt;</label>
        <link refid="structfc_1_1safe"/>
      </node>
      <node id="4735">
        <label>graphene::protocol::base_operation</label>
        <link refid="structgraphene_1_1protocol_1_1base__operation"/>
      </node>
      <node id="4736">
        <label>graphene::protocol::asset</label>
        <link refid="structgraphene_1_1protocol_1_1asset"/>
        <childnode refid="4737" relation="usage">
          <edgelabel>amount</edgelabel>
        </childnode>
      </node>
      <node id="4740">
        <label>fc::impl::dynamic_storage</label>
        <link refid="classfc_1_1impl_1_1dynamic__storage"/>
      </node>
    </collaborationgraph>
    <location file="libraries/protocol/include/graphene/protocol/htlc.hpp" line="128" column="1" bodyfile="libraries/protocol/include/graphene/protocol/htlc.hpp" bodystart="127" bodyend="151"/>
    <listofallmembers>
      <member refid="structgraphene_1_1protocol_1_1htlc__redeemed__operation_1acf2a4e3b53f47fb0a41c94ae6f8aaabd" prot="public" virt="non-virtual"><scope>graphene::protocol::htlc_redeemed_operation</scope><name>amount</name></member>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1aaccb0fa71ee529cf62324baaa99988fe" prot="public" virt="non-virtual"><scope>graphene::protocol::htlc_redeemed_operation</scope><name>calculate_data_fee</name></member>
      <member refid="structgraphene_1_1protocol_1_1htlc__redeemed__operation_1a932a11a384dc5f53da9138b993fc4751" prot="public" virt="non-virtual"><scope>graphene::protocol::htlc_redeemed_operation</scope><name>calculate_fee</name></member>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1a0be44badcee9a648413eb906dac1d3b3" prot="public" virt="non-virtual" ambiguityscope="graphene::protocol::base_operation::"><scope>graphene::protocol::htlc_redeemed_operation</scope><name>calculate_fee</name></member>
      <member refid="structgraphene_1_1protocol_1_1htlc__redeemed__operation_1a4601391fce50742c0df7af846d342f7a" prot="public" virt="non-virtual"><scope>graphene::protocol::htlc_redeemed_operation</scope><name>fee</name></member>
      <member refid="structgraphene_1_1protocol_1_1htlc__redeemed__operation_1a317566b408eb00d2741d0e16382f51e9" prot="public" virt="non-virtual"><scope>graphene::protocol::htlc_redeemed_operation</scope><name>fee_payer</name></member>
      <member refid="structgraphene_1_1protocol_1_1htlc__redeemed__operation_1ace3fb06034530aef8a669dbb635c6fdd" prot="public" virt="non-virtual"><scope>graphene::protocol::htlc_redeemed_operation</scope><name>from</name></member>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1a89ed7c6e7da93cd99bb41bc8d7e2627b" prot="public" virt="virtual"><scope>graphene::protocol::htlc_redeemed_operation</scope><name>get_required_active_authorities</name></member>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1aabc48ce97877c67ff560b94284a7c0bb" prot="public" virt="virtual"><scope>graphene::protocol::htlc_redeemed_operation</scope><name>get_required_authorities</name></member>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1a3251978e7bd0bb2f2fa23bcea5dee95c" prot="public" virt="virtual"><scope>graphene::protocol::htlc_redeemed_operation</scope><name>get_required_owner_authorities</name></member>
      <member refid="structgraphene_1_1protocol_1_1htlc__redeemed__operation_1ad0db1ffcad745b5c261f5a11d2b31ba7" prot="public" virt="non-virtual"><scope>graphene::protocol::htlc_redeemed_operation</scope><name>htlc_id</name></member>
      <member refid="structgraphene_1_1protocol_1_1htlc__redeemed__operation_1ac44e57eb4770c27eeb4694fec4d3706d" prot="public" virt="non-virtual"><scope>graphene::protocol::htlc_redeemed_operation</scope><name>htlc_preimage_hash</name></member>
      <member refid="structgraphene_1_1protocol_1_1htlc__redeemed__operation_1a88796ab0f3766a823517df5f8ceb1832" prot="public" virt="non-virtual"><scope>graphene::protocol::htlc_redeemed_operation</scope><name>htlc_preimage_size</name></member>
      <member refid="structgraphene_1_1protocol_1_1htlc__redeemed__operation_1a39a4722ec177847970ac6352aed96687" prot="public" virt="non-virtual"><scope>graphene::protocol::htlc_redeemed_operation</scope><name>htlc_redeemed_operation</name></member>
      <member refid="structgraphene_1_1protocol_1_1htlc__redeemed__operation_1a72bca4ee82f7c145cca0b28f34ab200a" prot="public" virt="non-virtual"><scope>graphene::protocol::htlc_redeemed_operation</scope><name>htlc_redeemed_operation</name></member>
      <member refid="structgraphene_1_1protocol_1_1htlc__redeemed__operation_1a6a1b7b9e2c13c672e85b3434333dad90" prot="public" virt="non-virtual"><scope>graphene::protocol::htlc_redeemed_operation</scope><name>preimage</name></member>
      <member refid="structgraphene_1_1protocol_1_1htlc__redeemed__operation_1a77bc0defba09c99acaaefe4ba7dfbc20" prot="public" virt="non-virtual"><scope>graphene::protocol::htlc_redeemed_operation</scope><name>redeemer</name></member>
      <member refid="structgraphene_1_1protocol_1_1htlc__redeemed__operation_1a56b8aed6f7cb5458599b4d3f99913dc6" prot="public" virt="non-virtual"><scope>graphene::protocol::htlc_redeemed_operation</scope><name>to</name></member>
      <member refid="structgraphene_1_1protocol_1_1htlc__redeemed__operation_1a1d62060b10e0e194905038a2dfceeda0" prot="public" virt="virtual"><scope>graphene::protocol::htlc_redeemed_operation</scope><name>validate</name></member>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1a485f3d3b963ff4c081af85945cf27774" prot="public" virt="non-virtual"><scope>graphene::protocol::htlc_redeemed_operation</scope><name>validate_parallel</name></member>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1a04ac6688e2df1d511514e4fc1983b828" prot="public" virt="virtual"><scope>graphene::protocol::htlc_redeemed_operation</scope><name>~base_operation</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
