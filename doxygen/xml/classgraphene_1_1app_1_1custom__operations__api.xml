<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classgraphene_1_1app_1_1custom__operations__api" kind="class" language="C++" prot="public">
    <compoundname>graphene::app::custom_operations_api</compoundname>
    <includes refid="app_2include_2graphene_2app_2api_8hpp" local="no">api.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classgraphene_1_1app_1_1custom__operations__api_1a0d9c0b4a55e27dfa408a03b4757e2264" prot="private" static="no" mutable="no">
        <type><ref refid="classgraphene_1_1app_1_1application" kindref="compound">application</ref> &amp;</type>
        <definition>application&amp; graphene::app::custom_operations_api::_app</definition>
        <argsstring></argsstring>
        <name>_app</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/include/graphene/app/api.hpp" line="691" column="19" bodyfile="libraries/app/include/graphene/app/api.hpp" bodystart="691" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classgraphene_1_1app_1_1custom__operations__api_1a5700459ed2913c05f10ef9e4eacf2b1b" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>graphene::app::custom_operations_api::custom_operations_api</definition>
        <argsstring>(application &amp;app)</argsstring>
        <name>custom_operations_api</name>
        <param>
          <type><ref refid="classgraphene_1_1app_1_1application" kindref="compound">application</ref> &amp;</type>
          <declname>app</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/include/graphene/app/api.hpp" line="653" column="16" bodyfile="libraries/app/api.cpp" bodystart="1017" bodyend="1020"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1app_1_1custom__operations__api_1a655e79f3314c9e28029e05b3c1d1b050" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>vector&lt; <ref refid="structgraphene_1_1custom__operations_1_1account__storage__object" kindref="compound">account_storage_object</ref> &gt;</type>
        <definition>vector&lt; account_storage_object &gt; graphene::app::custom_operations_api::get_storage_info</definition>
        <argsstring>(const optional&lt; std::string &gt; &amp;account_name_or_id=optional&lt; std::string &gt;(), const optional&lt; std::string &gt; &amp;catalog=optional&lt; std::string &gt;(), const optional&lt; std::string &gt; &amp;key=optional&lt; std::string &gt;(), const optional&lt; uint32_t &gt; &amp;limit=optional&lt; uint32_t &gt;(), const optional&lt; account_storage_id_type &gt; &amp;start_id=optional&lt; account_storage_id_type &gt;()) const</argsstring>
        <name>get_storage_info</name>
        <param>
          <type>const optional&lt; std::string &gt; &amp;</type>
          <declname>account_name_or_id</declname>
          <defval>optional&lt; std::string &gt;()</defval>
        </param>
        <param>
          <type>const optional&lt; std::string &gt; &amp;</type>
          <declname>catalog</declname>
          <defval>optional&lt; std::string &gt;()</defval>
        </param>
        <param>
          <type>const optional&lt; std::string &gt; &amp;</type>
          <declname>key</declname>
          <defval>optional&lt; std::string &gt;()</defval>
        </param>
        <param>
          <type>const optional&lt; uint32_t &gt; &amp;</type>
          <declname>limit</declname>
          <defval>optional&lt; uint32_t &gt;()</defval>
        </param>
        <param>
          <type>const optional&lt; <ref refid="namespacegraphene_1_1custom__operations_1ae5f07713b15ad24ba9defe67dd8f3b3e" kindref="member">account_storage_id_type</ref> &gt; &amp;</type>
          <declname>start_id</declname>
          <defval>optional&lt; <ref refid="namespacegraphene_1_1custom__operations_1ae5f07713b15ad24ba9defe67dd8f3b3e" kindref="member">account_storage_id_type</ref> &gt;()</defval>
        </param>
        <briefdescription>
<para>Get stored objects. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>account_name_or_id</parametername>
</parameternamelist>
<parameterdescription>
<para>The account name or ID to get info from. Optional. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>catalog</parametername>
</parameternamelist>
<parameterdescription>
<para>The catalog to get info from. Each account can store data in multiple catalogs. Optional. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>The key to get info from. Each catalog can contain multiple keys. Optional. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>limit</parametername>
</parameternamelist>
<parameterdescription>
<para>The limitation of items each query can fetch, not greater than the configured value of <emphasis>api_limit_get_storage_info</emphasis>. Optional. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>start_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Start ID of stored object, fetch objects whose IDs are greater than or equal to this ID </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The stored objects found, sorted by their ID</para>
</simplesect>
<simplesect kind="note"><para><orderedlist>
<listitem><para>By passing <emphasis>null</emphasis> to various optional parameters, or omitting where applicable, this API can be used to query stored objects by a) account, catalog and key, or b) account and catalog, or c) account, or d) catalog and key, or e) catalog, or f) unconditionally. Queries with keys without a catalog are not allowed.</para>
</listitem><listitem><para>If <computeroutput>account_name_or_id</computeroutput> is specified but cannot be tied to an account, an error will be returned.</para>
</listitem><listitem><para><computeroutput>limit</computeroutput> can be omitted or be <emphasis>null</emphasis>, if so the configured value of <emphasis>api_limit_get_storage_info</emphasis> will be used.</para>
</listitem><listitem><para><computeroutput>start_id</computeroutput> can be omitted or be <emphasis>null</emphasis>, if so the API will return the &quot;first page&quot; of objects.</para>
</listitem><listitem><para>One or more optional parameters can be omitted from the end of the parameter list, and the optional parameters in the middle cannot be omitted (but can be <emphasis>null</emphasis>). </para>
</listitem></orderedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/app/include/graphene/app/api.hpp" line="683" column="14" bodyfile="libraries/app/api.cpp" bodystart="1022" bodyend="1089"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The <ref refid="classgraphene_1_1app_1_1custom__operations__api" kindref="compound">custom_operations_api</ref> class exposes access to standard custom objects parsed by the custom_operations_plugin. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="libraries/app/include/graphene/app/api.hpp" line="651" column="1" bodyfile="libraries/app/include/graphene/app/api.hpp" bodystart="650" bodyend="692"/>
    <listofallmembers>
      <member refid="classgraphene_1_1app_1_1custom__operations__api_1a0d9c0b4a55e27dfa408a03b4757e2264" prot="private" virt="non-virtual"><scope>graphene::app::custom_operations_api</scope><name>_app</name></member>
      <member refid="classgraphene_1_1app_1_1custom__operations__api_1a5700459ed2913c05f10ef9e4eacf2b1b" prot="public" virt="non-virtual"><scope>graphene::app::custom_operations_api</scope><name>custom_operations_api</name></member>
      <member refid="classgraphene_1_1app_1_1custom__operations__api_1a655e79f3314c9e28029e05b3c1d1b050" prot="public" virt="non-virtual"><scope>graphene::app::custom_operations_api</scope><name>get_storage_info</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
