<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structgraphene_1_1protocol_1_1account__name__eq__lit__predicate" kind="struct" language="C++" prot="public">
    <compoundname>graphene::protocol::account_name_eq_lit_predicate</compoundname>
    <includes refid="assert_8hpp" local="no">assert.hpp</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1account__name__eq__lit__predicate_1a102018749212dc999a33e20d7a08b9fd" prot="public" static="no" mutable="no">
        <type>account_id_type</type>
        <definition>account_id_type graphene::protocol::account_name_eq_lit_predicate::account_id</definition>
        <argsstring></argsstring>
        <name>account_id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/assert.hpp" line="36" column="1" bodyfile="libraries/protocol/include/graphene/protocol/assert.hpp" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1account__name__eq__lit__predicate_1ae616b94ad085ebbf19959d8f77c0a02a" prot="public" static="no" mutable="no">
        <type>string</type>
        <definition>string graphene::protocol::account_name_eq_lit_predicate::name</definition>
        <argsstring></argsstring>
        <name>name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/assert.hpp" line="37" column="1" bodyfile="libraries/protocol/include/graphene/protocol/assert.hpp" bodystart="37" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structgraphene_1_1protocol_1_1account__name__eq__lit__predicate_1ac709ac938b4481e21cce51bc26077e31" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool graphene::protocol::account_name_eq_lit_predicate::validate</definition>
        <argsstring>() const</argsstring>
        <name>validate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Perform state-independent checks. Verify account_name is a valid account name. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/assert.hpp" line="43" column="1" bodyfile="libraries/protocol/assert.cpp" bodystart="32" bodyend="35"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Used to verify that account_id-&gt;name is equal to the given string literal. </para>    </detaileddescription>
    <collaborationgraph>
      <node id="153">
        <label>string</label>
      </node>
      <node id="152">
        <label>account_id_type</label>
      </node>
      <node id="151">
        <label>graphene::protocol::account_name_eq_lit_predicate</label>
        <link refid="structgraphene_1_1protocol_1_1account__name__eq__lit__predicate"/>
        <childnode refid="152" relation="usage">
          <edgelabel>account_id</edgelabel>
        </childnode>
        <childnode refid="153" relation="usage">
          <edgelabel>name</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="libraries/protocol/include/graphene/protocol/assert.hpp" line="35" column="1" bodyfile="libraries/protocol/include/graphene/protocol/assert.hpp" bodystart="34" bodyend="44"/>
    <listofallmembers>
      <member refid="structgraphene_1_1protocol_1_1account__name__eq__lit__predicate_1a102018749212dc999a33e20d7a08b9fd" prot="public" virt="non-virtual"><scope>graphene::protocol::account_name_eq_lit_predicate</scope><name>account_id</name></member>
      <member refid="structgraphene_1_1protocol_1_1account__name__eq__lit__predicate_1ae616b94ad085ebbf19959d8f77c0a02a" prot="public" virt="non-virtual"><scope>graphene::protocol::account_name_eq_lit_predicate</scope><name>name</name></member>
      <member refid="structgraphene_1_1protocol_1_1account__name__eq__lit__predicate_1ac709ac938b4481e21cce51bc26077e31" prot="public" virt="non-virtual"><scope>graphene::protocol::account_name_eq_lit_predicate</scope><name>validate</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
