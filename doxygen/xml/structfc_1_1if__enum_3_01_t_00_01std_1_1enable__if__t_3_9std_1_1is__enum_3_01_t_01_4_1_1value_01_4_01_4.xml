<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structfc_1_1if__enum_3_01_t_00_01std_1_1enable__if__t_3_9std_1_1is__enum_3_01_t_01_4_1_1value_01_4_01_4" kind="struct" language="C++" prot="public">
    <compoundname>fc::if_enum&lt; T, std::enable_if_t&lt;!std::is_enum&lt; T &gt;::value &gt; &gt;</compoundname>
    <includes refid="reflect_2variant_8hpp" local="no">variant.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structfc_1_1if__enum_3_01_t_00_01std_1_1enable__if__t_3_9std_1_1is__enum_3_01_t_01_4_1_1value_01_4_01_4_1a759ddfd40e6f06c3cf95466770f08f27" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void fc::if_enum&lt; T, std::enable_if_t&lt;!std::is_enum&lt; T &gt;::value &gt; &gt;::to_variant</definition>
        <argsstring>(const T &amp;v, fc::variant &amp;vo, uint32_t max_depth)</argsstring>
        <name>to_variant</name>
        <param>
          <type>const T &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type><ref refid="classfc_1_1variant" kindref="compound">fc::variant</ref> &amp;</type>
          <declname>vo</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>max_depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/reflect/variant.hpp" line="71" column="1" bodyfile="libraries/fc/include/fc/reflect/variant.hpp" bodystart="71" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="structfc_1_1if__enum_3_01_t_00_01std_1_1enable__if__t_3_9std_1_1is__enum_3_01_t_01_4_1_1value_01_4_01_4_1a9a63ecfb2abf3f1a996a191d1e319445" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void fc::if_enum&lt; T, std::enable_if_t&lt;!std::is_enum&lt; T &gt;::value &gt; &gt;::from_variant</definition>
        <argsstring>(const fc::variant &amp;v, T &amp;o, uint32_t max_depth)</argsstring>
        <name>from_variant</name>
        <param>
          <type>const <ref refid="classfc_1_1variant" kindref="compound">fc::variant</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>T &amp;</type>
          <declname>o</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>max_depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/reflect/variant.hpp" line="77" column="1" bodyfile="libraries/fc/include/fc/reflect/variant.hpp" bodystart="77" bodyend="81"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="libraries/fc/include/fc/reflect/variant.hpp" line="70" column="1" bodyfile="libraries/fc/include/fc/reflect/variant.hpp" bodystart="69" bodyend="82"/>
    <listofallmembers>
      <member refid="structfc_1_1if__enum_3_01_t_00_01std_1_1enable__if__t_3_9std_1_1is__enum_3_01_t_01_4_1_1value_01_4_01_4_1a9a63ecfb2abf3f1a996a191d1e319445" prot="public" virt="non-virtual"><scope>fc::if_enum&lt; T, std::enable_if_t&lt;!std::is_enum&lt; T &gt;::value &gt; &gt;</scope><name>from_variant</name></member>
      <member refid="structfc_1_1if__enum_3_01_t_00_01std_1_1enable__if__t_3_9std_1_1is__enum_3_01_t_01_4_1_1value_01_4_01_4_1a759ddfd40e6f06c3cf95466770f08f27" prot="public" virt="non-virtual"><scope>fc::if_enum&lt; T, std::enable_if_t&lt;!std::is_enum&lt; T &gt;::value &gt; &gt;</scope><name>to_variant</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
