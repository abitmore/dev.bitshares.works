<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="structgraphene_1_1protocol_1_1asset__claim__fees__operation" kind="struct" language="C++" prot="public">
    <compoundname>graphene::protocol::asset_claim_fees_operation</compoundname>
    <basecompoundref refid="structgraphene_1_1protocol_1_1base__operation" prot="public" virt="non-virtual">graphene::protocol::base_operation</basecompoundref>
    <includes refid="asset__ops_8hpp" local="no">asset_ops.hpp</includes>
    <innerclass refid="structgraphene_1_1protocol_1_1asset__claim__fees__operation_1_1additional__options__type" prot="public">graphene::protocol::asset_claim_fees_operation::additional_options_type</innerclass>
    <innerclass refid="structgraphene_1_1protocol_1_1asset__claim__fees__operation_1_1fee__parameters__type" prot="public">graphene::protocol::asset_claim_fees_operation::fee_parameters_type</innerclass>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1asset__claim__fees__operation_1a0b0a7476675c5bef3ae9ce03b2e534df" prot="public" static="no" mutable="no">
        <type><ref refid="structgraphene_1_1protocol_1_1asset" kindref="compound">asset</ref></type>
        <definition>asset graphene::protocol::asset_claim_fees_operation::fee</definition>
        <argsstring></argsstring>
        <name>fee</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/asset_ops.hpp" line="499" column="1" bodyfile="libraries/protocol/include/graphene/protocol/asset_ops.hpp" bodystart="499" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1asset__claim__fees__operation_1a759c03c3b931615793e298f7b9aa5178" prot="public" static="no" mutable="no">
        <type>account_id_type</type>
        <definition>account_id_type graphene::protocol::asset_claim_fees_operation::issuer</definition>
        <argsstring></argsstring>
        <name>issuer</name>
        <briefdescription>
<para>must match issuer of asset from which we claim fees </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/asset_ops.hpp" line="500" column="1" bodyfile="libraries/protocol/include/graphene/protocol/asset_ops.hpp" bodystart="500" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1asset__claim__fees__operation_1a21837b356e6cea569a22ee7958951429" prot="public" static="no" mutable="no">
        <type><ref refid="structgraphene_1_1protocol_1_1asset" kindref="compound">asset</ref></type>
        <definition>asset graphene::protocol::asset_claim_fees_operation::amount_to_claim</definition>
        <argsstring></argsstring>
        <name>amount_to_claim</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/asset_ops.hpp" line="501" column="1" bodyfile="libraries/protocol/include/graphene/protocol/asset_ops.hpp" bodystart="501" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1asset__claim__fees__operation_1a463357820b5fad45cd773002fa2761f1" prot="public" static="no" mutable="no">
        <type><ref refid="structgraphene_1_1protocol_1_1extension" kindref="compound">extension</ref>&lt; <ref refid="structgraphene_1_1protocol_1_1asset__claim__fees__operation_1_1additional__options__type" kindref="compound">additional_options_type</ref> &gt;</type>
        <definition>extension&lt;additional_options_type&gt; graphene::protocol::asset_claim_fees_operation::extensions</definition>
        <argsstring></argsstring>
        <name>extensions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/asset_ops.hpp" line="503" column="1" bodyfile="libraries/protocol/include/graphene/protocol/asset_ops.hpp" bodystart="503" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structgraphene_1_1protocol_1_1asset__claim__fees__operation_1a781b3798a6bd7a4d052753f33e4da8f4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>account_id_type</type>
        <definition>account_id_type graphene::protocol::asset_claim_fees_operation::fee_payer</definition>
        <argsstring>() const </argsstring>
        <name>fee_payer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/asset_ops.hpp" line="505" column="1" bodyfile="libraries/protocol/include/graphene/protocol/asset_ops.hpp" bodystart="505" bodyend="505"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1protocol_1_1asset__claim__fees__operation_1a7c6986303078bf0cf01eaf08a5c56b25" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::protocol::asset_claim_fees_operation::validate</definition>
        <argsstring>() const </argsstring>
        <name>validate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/asset_ops.hpp" line="506" column="1" bodyfile="libraries/protocol/asset_ops.cpp" bodystart="325" bodyend="330"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>used to transfer accumulated fees back to the issuer&apos;s balance. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="701">
        <label>graphene::protocol::base_operation</label>
        <link refid="structgraphene_1_1protocol_1_1base__operation"/>
      </node>
      <node id="700">
        <label>graphene::protocol::asset_claim_fees_operation</label>
        <link refid="structgraphene_1_1protocol_1_1asset__claim__fees__operation"/>
        <childnode refid="701" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="709">
        <label>fc::optional&lt; asset_id_type &gt;</label>
        <link refid="classfc_1_1optional"/>
      </node>
      <node id="708">
        <label>graphene::protocol::asset_claim_fees_operation::additional_options_type</label>
        <link refid="structgraphene_1_1protocol_1_1asset__claim__fees__operation_1_1additional__options__type"/>
        <childnode refid="709" relation="usage">
          <edgelabel>claim_from_asset_id</edgelabel>
        </childnode>
      </node>
      <node id="706">
        <label>account_id_type</label>
      </node>
      <node id="705">
        <label>fc::safe&lt; int64_t &gt;</label>
        <link refid="structfc_1_1safe"/>
      </node>
      <node id="707">
        <label>graphene::protocol::extension&lt; graphene::protocol::asset_claim_fees_operation::additional_options_type &gt;</label>
        <link refid="structgraphene_1_1protocol_1_1extension"/>
        <childnode refid="708" relation="usage">
          <edgelabel>value</edgelabel>
        </childnode>
      </node>
      <node id="703">
        <label>graphene::protocol::base_operation</label>
        <link refid="structgraphene_1_1protocol_1_1base__operation"/>
      </node>
      <node id="704">
        <label>graphene::protocol::asset</label>
        <link refid="structgraphene_1_1protocol_1_1asset"/>
        <childnode refid="705" relation="usage">
          <edgelabel>amount</edgelabel>
        </childnode>
      </node>
      <node id="702">
        <label>graphene::protocol::asset_claim_fees_operation</label>
        <link refid="structgraphene_1_1protocol_1_1asset__claim__fees__operation"/>
        <childnode refid="703" relation="public-inheritance">
        </childnode>
        <childnode refid="704" relation="usage">
          <edgelabel>fee</edgelabel>
          <edgelabel>amount_to_claim</edgelabel>
        </childnode>
        <childnode refid="706" relation="usage">
          <edgelabel>issuer</edgelabel>
        </childnode>
        <childnode refid="707" relation="usage">
          <edgelabel>extensions</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="libraries/protocol/include/graphene/protocol/asset_ops.hpp" line="484" column="1" bodyfile="libraries/protocol/include/graphene/protocol/asset_ops.hpp" bodystart="483" bodyend="507"/>
    <listofallmembers>
      <member refid="structgraphene_1_1protocol_1_1asset__claim__fees__operation_1a21837b356e6cea569a22ee7958951429" prot="public" virt="non-virtual"><scope>graphene::protocol::asset_claim_fees_operation</scope><name>amount_to_claim</name></member>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1aaccb0fa71ee529cf62324baaa99988fe" prot="public" virt="non-virtual"><scope>graphene::protocol::asset_claim_fees_operation</scope><name>calculate_data_fee</name></member>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1afd01efa3e06367c572512e381b1106fb" prot="public" virt="non-virtual"><scope>graphene::protocol::asset_claim_fees_operation</scope><name>calculate_fee</name></member>
      <member refid="structgraphene_1_1protocol_1_1asset__claim__fees__operation_1a463357820b5fad45cd773002fa2761f1" prot="public" virt="non-virtual"><scope>graphene::protocol::asset_claim_fees_operation</scope><name>extensions</name></member>
      <member refid="structgraphene_1_1protocol_1_1asset__claim__fees__operation_1a0b0a7476675c5bef3ae9ce03b2e534df" prot="public" virt="non-virtual"><scope>graphene::protocol::asset_claim_fees_operation</scope><name>fee</name></member>
      <member refid="structgraphene_1_1protocol_1_1asset__claim__fees__operation_1a781b3798a6bd7a4d052753f33e4da8f4" prot="public" virt="non-virtual"><scope>graphene::protocol::asset_claim_fees_operation</scope><name>fee_payer</name></member>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1aded12887f115b2bfa54ecd59540fa242" prot="public" virt="non-virtual"><scope>graphene::protocol::asset_claim_fees_operation</scope><name>get_required_active_authorities</name></member>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1a6ea245f980406ab52fdb90283e687d1c" prot="public" virt="non-virtual"><scope>graphene::protocol::asset_claim_fees_operation</scope><name>get_required_authorities</name></member>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1a0742a4b91de875366ec466a5b67b2811" prot="public" virt="non-virtual"><scope>graphene::protocol::asset_claim_fees_operation</scope><name>get_required_owner_authorities</name></member>
      <member refid="structgraphene_1_1protocol_1_1asset__claim__fees__operation_1a759c03c3b931615793e298f7b9aa5178" prot="public" virt="non-virtual"><scope>graphene::protocol::asset_claim_fees_operation</scope><name>issuer</name></member>
      <member refid="structgraphene_1_1protocol_1_1asset__claim__fees__operation_1a7c6986303078bf0cf01eaf08a5c56b25" prot="public" virt="non-virtual"><scope>graphene::protocol::asset_claim_fees_operation</scope><name>validate</name></member>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1a41d0a14a070ac634be11f30dbf559935" prot="public" virt="non-virtual"><scope>graphene::protocol::asset_claim_fees_operation</scope><name>validate_parallel</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
