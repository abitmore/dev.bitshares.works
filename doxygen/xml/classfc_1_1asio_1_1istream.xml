<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classfc_1_1asio_1_1istream" kind="class" language="C++" prot="public">
    <compoundname>fc::asio::istream</compoundname>
    <basecompoundref refid="classfc_1_1istream" prot="public" virt="virtual">fc::istream</basecompoundref>
    <includes refid="asio_8hpp" local="no">asio.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename AsyncReadStream</type>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classfc_1_1asio_1_1istream_1ab5cf88bb341390912efe7e1ccd46ecee" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; AsyncReadStream &gt;</type>
        <definition>std::shared_ptr&lt;AsyncReadStream&gt; fc::asio::istream&lt; AsyncReadStream &gt;::_stream</definition>
        <argsstring></argsstring>
        <name>_stream</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/asio.hpp" line="295" column="1" bodyfile="libraries/fc/include/fc/asio.hpp" bodystart="295" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classfc_1_1asio_1_1istream_1a3e5d6f8b9ae9cdf3cc2e37c4a2ebe0fa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>fc::asio::istream&lt; AsyncReadStream &gt;::istream</definition>
        <argsstring>(std::shared_ptr&lt; AsyncReadStream &gt; str)</argsstring>
        <name>istream</name>
        <param>
          <type>std::shared_ptr&lt; AsyncReadStream &gt;</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/asio.hpp" line="282" column="1" bodyfile="libraries/fc/include/fc/asio.hpp" bodystart="282" bodyend="283"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1asio_1_1istream_1afa81ec76f0c56c68f18bacf6b1ae6720" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>size_t</type>
        <definition>virtual size_t fc::asio::istream&lt; AsyncReadStream &gt;::readsome</definition>
        <argsstring>(char *buf, size_t len)</argsstring>
        <name>readsome</name>
        <reimplements refid="classfc_1_1istream_1a2d8500cfafdd8ee8134a6dbe30ffbc57">readsome</reimplements>
        <param>
          <type>char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>read at least 1 byte or throw, if no data is available this method should block cooperatively until data is available or fc::eof is thrown.</para><para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>fc::eof</parametername>
</parameternamelist>
<parameterdescription>
<para>if at least 1 byte cannot be read </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/asio.hpp" line="285" column="1" bodyfile="libraries/fc/include/fc/asio.hpp" bodystart="285" bodyend="288"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1asio_1_1istream_1aaaca6edbd7472173edc231cf9a2c4066" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>size_t</type>
        <definition>virtual size_t fc::asio::istream&lt; AsyncReadStream &gt;::readsome</definition>
        <argsstring>(const std::shared_ptr&lt; char &gt; &amp;buf, size_t len, size_t offset)</argsstring>
        <name>readsome</name>
        <reimplements refid="classfc_1_1istream_1a1480e604a53bd3f92f44c217a472fed0">readsome</reimplements>
        <param>
          <type>const std::shared_ptr&lt; char &gt; &amp;</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/asio.hpp" line="289" column="1" bodyfile="libraries/fc/include/fc/asio.hpp" bodystart="289" bodyend="292"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="4729">
        <label>fc::istream</label>
        <link refid="classfc_1_1istream"/>
      </node>
      <node id="4728">
        <label>fc::asio::istream&lt; AsyncReadStream &gt;</label>
        <link refid="classfc_1_1asio_1_1istream"/>
        <childnode refid="4729" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4731">
        <label>fc::istream</label>
        <link refid="classfc_1_1istream"/>
      </node>
      <node id="4730">
        <label>fc::asio::istream&lt; AsyncReadStream &gt;</label>
        <link refid="classfc_1_1asio_1_1istream"/>
        <childnode refid="4731" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="libraries/fc/include/fc/asio.hpp" line="280" column="1" bodyfile="libraries/fc/include/fc/asio.hpp" bodystart="279" bodyend="296"/>
    <listofallmembers>
      <member refid="classfc_1_1asio_1_1istream_1ab5cf88bb341390912efe7e1ccd46ecee" prot="private" virt="non-virtual"><scope>fc::asio::istream</scope><name>_stream</name></member>
      <member refid="classfc_1_1istream_1ac217a213d8fe2554eaba25b7daf6c9b2" prot="public" virt="virtual"><scope>fc::asio::istream</scope><name>get</name></member>
      <member refid="classfc_1_1istream_1af20469d279f38832b5a2e13c95185e95" prot="public" virt="non-virtual"><scope>fc::asio::istream</scope><name>get</name></member>
      <member refid="classfc_1_1asio_1_1istream_1a3e5d6f8b9ae9cdf3cc2e37c4a2ebe0fa" prot="public" virt="non-virtual"><scope>fc::asio::istream</scope><name>istream</name></member>
      <member refid="classfc_1_1istream_1ad7f71af193e4aa4c2efaab0ca22b1b86" prot="public" virt="non-virtual"><scope>fc::asio::istream</scope><name>read</name></member>
      <member refid="classfc_1_1istream_1a94e767f126e952db54be791ee0cc6d1e" prot="public" virt="non-virtual"><scope>fc::asio::istream</scope><name>read</name></member>
      <member refid="classfc_1_1asio_1_1istream_1afa81ec76f0c56c68f18bacf6b1ae6720" prot="public" virt="virtual"><scope>fc::asio::istream</scope><name>readsome</name></member>
      <member refid="classfc_1_1asio_1_1istream_1aaaca6edbd7472173edc231cf9a2c4066" prot="public" virt="virtual"><scope>fc::asio::istream</scope><name>readsome</name></member>
      <member refid="classfc_1_1istream_1a3d6f017f2fbcead4c7213618b5a21d36" prot="public" virt="virtual"><scope>fc::asio::istream</scope><name>~istream</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
