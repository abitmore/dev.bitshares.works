<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structgraphene_1_1protocol_1_1asset__create__operation" kind="struct" language="C++" prot="public">
    <compoundname>graphene::protocol::asset_create_operation</compoundname>
    <basecompoundref refid="structgraphene_1_1protocol_1_1base__operation" prot="public" virt="non-virtual">graphene::protocol::base_operation</basecompoundref>
    <includes refid="asset__ops_8hpp" local="no">asset_ops.hpp</includes>
    <innerclass refid="structgraphene_1_1protocol_1_1asset__create__operation_1_1fee__parameters__type" prot="public">graphene::protocol::asset_create_operation::fee_parameters_type</innerclass>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1asset__create__operation_1a38377d84e54275d6aec1f2bf5a0c52cc" prot="public" static="no" mutable="no">
        <type><ref refid="structgraphene_1_1protocol_1_1asset" kindref="compound">asset</ref></type>
        <definition>asset graphene::protocol::asset_create_operation::fee</definition>
        <argsstring></argsstring>
        <name>fee</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/asset_ops.hpp" line="201" column="1" bodyfile="libraries/protocol/include/graphene/protocol/asset_ops.hpp" bodystart="201" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1asset__create__operation_1ac27bbefe9ae67f0669f6d0fef2bcfa3a" prot="public" static="no" mutable="no">
        <type>account_id_type</type>
        <definition>account_id_type graphene::protocol::asset_create_operation::issuer</definition>
        <argsstring></argsstring>
        <name>issuer</name>
        <briefdescription>
<para>This account must sign and pay the fee for this operation. Later, this account may update the asset. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/asset_ops.hpp" line="203" column="1" bodyfile="libraries/protocol/include/graphene/protocol/asset_ops.hpp" bodystart="203" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1asset__create__operation_1ad99880cb43d1f29cca9fdcd474baa95d" prot="public" static="no" mutable="no">
        <type>string</type>
        <definition>string graphene::protocol::asset_create_operation::symbol</definition>
        <argsstring></argsstring>
        <name>symbol</name>
        <briefdescription>
<para>The ticker symbol of this asset. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/asset_ops.hpp" line="205" column="1" bodyfile="libraries/protocol/include/graphene/protocol/asset_ops.hpp" bodystart="205" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1asset__create__operation_1a08482cbf4258f45565312b70c9955cf3" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t graphene::protocol::asset_create_operation::precision</definition>
        <argsstring></argsstring>
        <name>precision</name>
        <initializer>= 0</initializer>
        <briefdescription>
<para>Number of digits to the right of decimal point, must be less than or equal to 12. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/asset_ops.hpp" line="207" column="1" bodyfile="libraries/protocol/include/graphene/protocol/asset_ops.hpp" bodystart="207" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1asset__create__operation_1a04fd05c4c4f52385f4b6a82434a9a5fe" prot="public" static="no" mutable="no">
        <type><ref refid="structgraphene_1_1protocol_1_1asset__options" kindref="compound">asset_options</ref></type>
        <definition>asset_options graphene::protocol::asset_create_operation::common_options</definition>
        <argsstring></argsstring>
        <name>common_options</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Options common to all assets.</para><para><simplesect kind="note"><para>common_options.core_exchange_rate technically needs to store the asset ID of this new asset. Since this ID is not known at the time this operation is created, create this price as though the new asset has instance ID 1, and the chain will overwrite it with the new asset&apos;s ID. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/asset_ops.hpp" line="214" column="1" bodyfile="libraries/protocol/include/graphene/protocol/asset_ops.hpp" bodystart="214" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1asset__create__operation_1a905f77a54beb7eeeb182e398f25757ac" prot="public" static="no" mutable="no">
        <type><ref refid="classfc_1_1optional" kindref="compound">optional</ref>&lt; <ref refid="structgraphene_1_1protocol_1_1bitasset__options" kindref="compound">bitasset_options</ref> &gt;</type>
        <definition>optional&lt;bitasset_options&gt; graphene::protocol::asset_create_operation::bitasset_opts</definition>
        <argsstring></argsstring>
        <name>bitasset_opts</name>
        <briefdescription>
<para>Options only available for BitAssets. MUST be non-null if and only if the asset is market-issued. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/asset_ops.hpp" line="216" column="1" bodyfile="libraries/protocol/include/graphene/protocol/asset_ops.hpp" bodystart="216" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1asset__create__operation_1a87aa0f916e688d1097328daf2c82b258" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool graphene::protocol::asset_create_operation::is_prediction_market</definition>
        <argsstring></argsstring>
        <name>is_prediction_market</name>
        <initializer>= false</initializer>
        <briefdescription>
<para>For BitAssets, set this to true if the asset implements a prediction market; false otherwise. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/asset_ops.hpp" line="218" column="1" bodyfile="libraries/protocol/include/graphene/protocol/asset_ops.hpp" bodystart="218" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1asset__create__operation_1a94415a058b3ca8e17766a95c108c18f8" prot="public" static="no" mutable="no">
        <type><ref refid="group__operations_1gabaddcaf5bde76414891b4c29031d9288" kindref="member">extensions_type</ref></type>
        <definition>extensions_type graphene::protocol::asset_create_operation::extensions</definition>
        <argsstring></argsstring>
        <name>extensions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/asset_ops.hpp" line="219" column="1" bodyfile="libraries/protocol/include/graphene/protocol/asset_ops.hpp" bodystart="219" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structgraphene_1_1protocol_1_1asset__create__operation_1ac9d77554f5e51f60b362ab7c5ae63be9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>account_id_type</type>
        <definition>account_id_type graphene::protocol::asset_create_operation::fee_payer</definition>
        <argsstring>() const</argsstring>
        <name>fee_payer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/asset_ops.hpp" line="221" column="1" bodyfile="libraries/protocol/include/graphene/protocol/asset_ops.hpp" bodystart="221" bodyend="221"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1protocol_1_1asset__create__operation_1a1053b2cdfb77ff60525857b4fc5c20af" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void graphene::protocol::asset_create_operation::validate</definition>
        <argsstring>() const</argsstring>
        <name>validate</name>
        <reimplements refid="structgraphene_1_1protocol_1_1base__operation_1a23d617a6fa0921d3f5b51dd5167e7a29">validate</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/asset_ops.hpp" line="222" column="1" bodyfile="libraries/protocol/asset_ops.cpp" bodystart="110" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1protocol_1_1asset__create__operation_1af3a57493bc7b1b2520a79053a0138e74" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacegraphene_1_1protocol_1a69b2104c1c11eed2d17bd29b86713347" kindref="member">share_type</ref></type>
        <definition>share_type graphene::protocol::asset_create_operation::calculate_fee</definition>
        <argsstring>(const fee_parameters_type &amp;k, optional&lt; uint64_t &gt; sub_asset_creation_fee) const</argsstring>
        <name>calculate_fee</name>
        <param>
          <type>const <ref refid="structgraphene_1_1protocol_1_1asset__create__operation_1_1fee__parameters__type" kindref="compound">fee_parameters_type</ref> &amp;</type>
          <declname>k</declname>
        </param>
        <param>
          <type><ref refid="classfc_1_1optional" kindref="compound">optional</ref>&lt; uint64_t &gt;</type>
          <declname>sub_asset_creation_fee</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/asset_ops.hpp" line="223" column="1" bodyfile="libraries/protocol/asset_ops.cpp" bodystart="82" bodyend="108"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="829">
        <label>graphene::protocol::base_operation</label>
        <link refid="structgraphene_1_1protocol_1_1base__operation"/>
      </node>
      <node id="828">
        <label>graphene::protocol::asset_create_operation</label>
        <link refid="structgraphene_1_1protocol_1_1asset__create__operation"/>
        <childnode refid="829" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="837">
        <label>flat_set&lt; asset_id_type &gt;</label>
      </node>
      <node id="839">
        <label>string</label>
      </node>
      <node id="840">
        <label>graphene::protocol::price</label>
        <link refid="structgraphene_1_1protocol_1_1price"/>
        <childnode refid="841" relation="usage">
          <edgelabel>base</edgelabel>
          <edgelabel>quote</edgelabel>
        </childnode>
      </node>
      <node id="834">
        <label>graphene::protocol::additional_asset_options</label>
        <link refid="structgraphene_1_1protocol_1_1additional__asset__options"/>
        <childnode refid="835" relation="usage">
          <edgelabel>taker_fee_percent</edgelabel>
          <edgelabel>reward_percent</edgelabel>
        </childnode>
        <childnode refid="836" relation="usage">
          <edgelabel>whitelist_market_fee_sharing</edgelabel>
        </childnode>
      </node>
      <node id="843">
        <label>fc::optional&lt; graphene::protocol::bitasset_options &gt;</label>
        <link refid="classfc_1_1optional"/>
      </node>
      <node id="836">
        <label>fc::optional&lt; flat_set&lt; account_id_type &gt; &gt;</label>
        <link refid="classfc_1_1optional"/>
      </node>
      <node id="844">
        <label>account_id_type</label>
      </node>
      <node id="842">
        <label>flat_set&lt; account_id_type &gt;</label>
      </node>
      <node id="838">
        <label>fc::safe&lt; int64_t &gt;</label>
        <link refid="structfc_1_1safe"/>
      </node>
      <node id="832">
        <label>graphene::protocol::asset_options</label>
        <link refid="structgraphene_1_1protocol_1_1asset__options"/>
        <childnode refid="833" relation="usage">
          <edgelabel>extensions</edgelabel>
        </childnode>
        <childnode refid="837" relation="usage">
          <edgelabel>whitelist_markets</edgelabel>
          <edgelabel>blacklist_markets</edgelabel>
        </childnode>
        <childnode refid="838" relation="usage">
          <edgelabel>max_market_fee</edgelabel>
          <edgelabel>max_supply</edgelabel>
        </childnode>
        <childnode refid="839" relation="usage">
          <edgelabel>description</edgelabel>
        </childnode>
        <childnode refid="840" relation="usage">
          <edgelabel>core_exchange_rate</edgelabel>
        </childnode>
        <childnode refid="842" relation="usage">
          <edgelabel>whitelist_authorities</edgelabel>
          <edgelabel>blacklist_authorities</edgelabel>
        </childnode>
      </node>
      <node id="831">
        <label>graphene::protocol::base_operation</label>
        <link refid="structgraphene_1_1protocol_1_1base__operation"/>
      </node>
      <node id="841">
        <label>graphene::protocol::asset</label>
        <link refid="structgraphene_1_1protocol_1_1asset"/>
        <childnode refid="838" relation="usage">
          <edgelabel>amount</edgelabel>
        </childnode>
      </node>
      <node id="833">
        <label>graphene::protocol::extension&lt; additional_asset_options &gt;</label>
        <link refid="structgraphene_1_1protocol_1_1extension"/>
        <childnode refid="834" relation="usage">
          <edgelabel>value</edgelabel>
        </childnode>
      </node>
      <node id="830">
        <label>graphene::protocol::asset_create_operation</label>
        <link refid="structgraphene_1_1protocol_1_1asset__create__operation"/>
        <childnode refid="831" relation="public-inheritance">
        </childnode>
        <childnode refid="832" relation="usage">
          <edgelabel>common_options</edgelabel>
        </childnode>
        <childnode refid="843" relation="usage">
          <edgelabel>bitasset_opts</edgelabel>
        </childnode>
        <childnode refid="841" relation="usage">
          <edgelabel>fee</edgelabel>
        </childnode>
        <childnode refid="844" relation="usage">
          <edgelabel>issuer</edgelabel>
        </childnode>
        <childnode refid="839" relation="usage">
          <edgelabel>symbol</edgelabel>
        </childnode>
      </node>
      <node id="835">
        <label>fc::optional&lt; uint16_t &gt;</label>
        <link refid="classfc_1_1optional"/>
      </node>
    </collaborationgraph>
    <location file="libraries/protocol/include/graphene/protocol/asset_ops.hpp" line="193" column="1" bodyfile="libraries/protocol/include/graphene/protocol/asset_ops.hpp" bodystart="192" bodyend="224"/>
    <listofallmembers>
      <member refid="structgraphene_1_1protocol_1_1asset__create__operation_1a905f77a54beb7eeeb182e398f25757ac" prot="public" virt="non-virtual"><scope>graphene::protocol::asset_create_operation</scope><name>bitasset_opts</name></member>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1aaccb0fa71ee529cf62324baaa99988fe" prot="public" virt="non-virtual"><scope>graphene::protocol::asset_create_operation</scope><name>calculate_data_fee</name></member>
      <member refid="structgraphene_1_1protocol_1_1asset__create__operation_1af3a57493bc7b1b2520a79053a0138e74" prot="public" virt="non-virtual"><scope>graphene::protocol::asset_create_operation</scope><name>calculate_fee</name></member>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1a0be44badcee9a648413eb906dac1d3b3" prot="public" virt="non-virtual" ambiguityscope="graphene::protocol::base_operation::"><scope>graphene::protocol::asset_create_operation</scope><name>calculate_fee</name></member>
      <member refid="structgraphene_1_1protocol_1_1asset__create__operation_1a04fd05c4c4f52385f4b6a82434a9a5fe" prot="public" virt="non-virtual"><scope>graphene::protocol::asset_create_operation</scope><name>common_options</name></member>
      <member refid="structgraphene_1_1protocol_1_1asset__create__operation_1a94415a058b3ca8e17766a95c108c18f8" prot="public" virt="non-virtual"><scope>graphene::protocol::asset_create_operation</scope><name>extensions</name></member>
      <member refid="structgraphene_1_1protocol_1_1asset__create__operation_1a38377d84e54275d6aec1f2bf5a0c52cc" prot="public" virt="non-virtual"><scope>graphene::protocol::asset_create_operation</scope><name>fee</name></member>
      <member refid="structgraphene_1_1protocol_1_1asset__create__operation_1ac9d77554f5e51f60b362ab7c5ae63be9" prot="public" virt="non-virtual"><scope>graphene::protocol::asset_create_operation</scope><name>fee_payer</name></member>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1a89ed7c6e7da93cd99bb41bc8d7e2627b" prot="public" virt="virtual"><scope>graphene::protocol::asset_create_operation</scope><name>get_required_active_authorities</name></member>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1aabc48ce97877c67ff560b94284a7c0bb" prot="public" virt="virtual"><scope>graphene::protocol::asset_create_operation</scope><name>get_required_authorities</name></member>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1a3251978e7bd0bb2f2fa23bcea5dee95c" prot="public" virt="virtual"><scope>graphene::protocol::asset_create_operation</scope><name>get_required_owner_authorities</name></member>
      <member refid="structgraphene_1_1protocol_1_1asset__create__operation_1a87aa0f916e688d1097328daf2c82b258" prot="public" virt="non-virtual"><scope>graphene::protocol::asset_create_operation</scope><name>is_prediction_market</name></member>
      <member refid="structgraphene_1_1protocol_1_1asset__create__operation_1ac27bbefe9ae67f0669f6d0fef2bcfa3a" prot="public" virt="non-virtual"><scope>graphene::protocol::asset_create_operation</scope><name>issuer</name></member>
      <member refid="structgraphene_1_1protocol_1_1asset__create__operation_1a08482cbf4258f45565312b70c9955cf3" prot="public" virt="non-virtual"><scope>graphene::protocol::asset_create_operation</scope><name>precision</name></member>
      <member refid="structgraphene_1_1protocol_1_1asset__create__operation_1ad99880cb43d1f29cca9fdcd474baa95d" prot="public" virt="non-virtual"><scope>graphene::protocol::asset_create_operation</scope><name>symbol</name></member>
      <member refid="structgraphene_1_1protocol_1_1asset__create__operation_1a1053b2cdfb77ff60525857b4fc5c20af" prot="public" virt="virtual"><scope>graphene::protocol::asset_create_operation</scope><name>validate</name></member>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1a485f3d3b963ff4c081af85945cf27774" prot="public" virt="non-virtual"><scope>graphene::protocol::asset_create_operation</scope><name>validate_parallel</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
