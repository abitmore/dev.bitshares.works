<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classfc_1_1ifstream" kind="class" language="C++" prot="public">
    <compoundname>fc::ifstream</compoundname>
    <basecompoundref refid="classfc_1_1istream" prot="public" virt="virtual">fc::istream</basecompoundref>
    <includes refid="fstream_8hpp" local="no">fstream.hpp</includes>
    <innerclass refid="classfc_1_1ifstream_1_1impl" prot="public">fc::ifstream::impl</innerclass>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="classfc_1_1ifstream_1a1cd4c01627c310f9d3710f81e38bf4ea" prot="public" static="no">
        <name>mode</name>
        <enumvalue id="classfc_1_1ifstream_1a1cd4c01627c310f9d3710f81e38bf4eaab3d7c75f091f9b1b9fb3a2e48b417e84" prot="public">
          <name>in</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classfc_1_1ifstream_1a1cd4c01627c310f9d3710f81e38bf4eaa0e3d16bf1b632e7f877578d8bdd0134f" prot="public">
          <name>binary</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/fstream.hpp" line="29" column="1" bodyfile="libraries/fc/include/fc/io/fstream.hpp" bodystart="29" bodyend="29"/>
      </memberdef>
      <memberdef kind="enum" id="classfc_1_1ifstream_1a7e935ca8c6d5c45b2c88c446316999f8" prot="public" static="no">
        <name>seekdir</name>
        <enumvalue id="classfc_1_1ifstream_1a7e935ca8c6d5c45b2c88c446316999f8a63486b64edbded5bd633973aacca0c4a" prot="public">
          <name>beg</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classfc_1_1ifstream_1a7e935ca8c6d5c45b2c88c446316999f8a27f47c9321b071887f77437071eb6c63" prot="public">
          <name>cur</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classfc_1_1ifstream_1a7e935ca8c6d5c45b2c88c446316999f8a7399e7e5c03bc19ce1279278ae2fdad0" prot="public">
          <name>end</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/fstream.hpp" line="30" column="1" bodyfile="libraries/fc/include/fc/io/fstream.hpp" bodystart="30" bodyend="30"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classfc_1_1ifstream_1a7dcf5f69c72fcdfbfd63bde9cc1701de" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classfc_1_1ifstream_1_1impl" kindref="compound">impl</ref> &gt;</type>
        <definition>std::shared_ptr&lt;impl&gt; fc::ifstream::my</definition>
        <argsstring></argsstring>
        <name>my</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/fstream.hpp" line="47" column="1" bodyfile="libraries/fc/include/fc/io/fstream.hpp" bodystart="46" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classfc_1_1ifstream_1a0f0d7381d13c8d4dd59f90256eda5236" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fc::ifstream::ifstream</definition>
        <argsstring>()</argsstring>
        <name>ifstream</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/fstream.hpp" line="32" column="1" bodyfile="libraries/fc/src/io/fstream.cpp" bodystart="55" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1ifstream_1aa96377386b62e50cc78643f483d6093d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fc::ifstream::ifstream</definition>
        <argsstring>(const fc::path &amp;file, int m=binary)</argsstring>
        <name>ifstream</name>
        <param>
          <type>const <ref refid="classfc_1_1path" kindref="compound">fc::path</ref> &amp;</type>
          <declname>file</declname>
        </param>
        <param>
          <type>int</type>
          <declname>m</declname>
          <defval><ref refid="classfc_1_1ifstream_1a1cd4c01627c310f9d3710f81e38bf4eaa0e3d16bf1b632e7f877578d8bdd0134f" kindref="member">binary</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/fstream.hpp" line="33" column="1" bodyfile="libraries/fc/src/io/fstream.cpp" bodystart="57" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1ifstream_1a5d457f15805e69f31cb521e34dfd9f93" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fc::ifstream::~ifstream</definition>
        <argsstring>()</argsstring>
        <name>~ifstream</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/fstream.hpp" line="34" column="1" bodyfile="libraries/fc/src/io/fstream.cpp" bodystart="62" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1ifstream_1a64c37a9cca24b2735a840c5c68a6f0b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void fc::ifstream::open</definition>
        <argsstring>(const fc::path &amp;file, int m)</argsstring>
        <name>open</name>
        <param>
          <type>const <ref refid="classfc_1_1path" kindref="compound">fc::path</ref> &amp;</type>
          <declname>file</declname>
        </param>
        <param>
          <type>int</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/fstream.hpp" line="36" column="1" bodyfile="libraries/fc/src/io/fstream.cpp" bodystart="64" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1ifstream_1a3b0612e0baec2ab639f12d64eb02587a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>size_t</type>
        <definition>size_t fc::ifstream::readsome</definition>
        <argsstring>(char *buf, size_t len)</argsstring>
        <name>readsome</name>
        <reimplements refid="classfc_1_1istream_1a2d8500cfafdd8ee8134a6dbe30ffbc57">readsome</reimplements>
        <param>
          <type>char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>read at least 1 byte or throw, if no data is available this method should block cooperatively until data is available or fc::eof is thrown.</para><para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>fc::eof</parametername>
</parameternamelist>
<parameterdescription>
<para>if at least 1 byte cannot be read </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/fstream.hpp" line="37" column="1" bodyfile="libraries/fc/src/io/fstream.cpp" bodystart="69" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1ifstream_1a64b6a02e1516136b31a5a369942ff5db" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>size_t</type>
        <definition>size_t fc::ifstream::readsome</definition>
        <argsstring>(const std::shared_ptr&lt; char &gt; &amp;buffer, size_t max, size_t offset)</argsstring>
        <name>readsome</name>
        <reimplements refid="classfc_1_1istream_1a1480e604a53bd3f92f44c217a472fed0">readsome</reimplements>
        <param>
          <type>const std::shared_ptr&lt; char &gt; &amp;</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>max</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/fstream.hpp" line="38" column="1" bodyfile="libraries/fc/src/io/fstream.cpp" bodystart="82" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1ifstream_1ae541da20aff813ea2399a95bd80a6347" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classfc_1_1ifstream" kindref="compound">ifstream</ref> &amp;</type>
        <definition>ifstream &amp; fc::ifstream::read</definition>
        <argsstring>(char *buf, size_t len)</argsstring>
        <name>read</name>
        <param>
          <type>char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/fstream.hpp" line="39" column="1" bodyfile="libraries/fc/src/io/fstream.cpp" bodystart="87" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1ifstream_1a45c66ec6188bf2eaed30de78e4fd42c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classfc_1_1ifstream" kindref="compound">ifstream</ref> &amp;</type>
        <definition>ifstream &amp; fc::ifstream::seekg</definition>
        <argsstring>(size_t p, seekdir d=beg)</argsstring>
        <name>seekg</name>
        <param>
          <type>size_t</type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="classfc_1_1ifstream_1a7e935ca8c6d5c45b2c88c446316999f8" kindref="member">seekdir</ref></type>
          <declname>d</declname>
          <defval><ref refid="classfc_1_1ifstream_1a7e935ca8c6d5c45b2c88c446316999f8a63486b64edbded5bd633973aacca0c4a" kindref="member">beg</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/fstream.hpp" line="40" column="1" bodyfile="libraries/fc/src/io/fstream.cpp" bodystart="95" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1ifstream_1ad0f57eab9ac88ce64d4005b1c55bd18a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void fc::ifstream::get</definition>
        <argsstring>(char &amp;c)</argsstring>
        <name>get</name>
        <param>
          <type>char &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/fstream.hpp" line="42" column="1" bodyfile="libraries/fc/include/fc/io/fstream.hpp" bodystart="42" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1ifstream_1a12bad1b934f9cc99c10325edb7c3be64" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void fc::ifstream::close</definition>
        <argsstring>()</argsstring>
        <name>close</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/fstream.hpp" line="43" column="1" bodyfile="libraries/fc/src/io/fstream.cpp" bodystart="103" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1ifstream_1a35f07cafe925887ab306dc843f069549" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool fc::ifstream::eof</definition>
        <argsstring>() const</argsstring>
        <name>eof</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/fstream.hpp" line="44" column="1" bodyfile="libraries/fc/src/io/fstream.cpp" bodystart="105" bodyend="105"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="4800">
        <label>fc::ifstream</label>
        <link refid="classfc_1_1ifstream"/>
        <childnode refid="4801" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4801">
        <label>fc::istream</label>
        <link refid="classfc_1_1istream"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4802">
        <label>fc::ifstream</label>
        <link refid="classfc_1_1ifstream"/>
        <childnode refid="4803" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4803">
        <label>fc::istream</label>
        <link refid="classfc_1_1istream"/>
      </node>
    </collaborationgraph>
    <location file="libraries/fc/include/fc/io/fstream.hpp" line="27" column="1" bodyfile="libraries/fc/include/fc/io/fstream.hpp" bodystart="27" bodyend="48"/>
    <listofallmembers>
      <member refid="classfc_1_1ifstream_1a7e935ca8c6d5c45b2c88c446316999f8a63486b64edbded5bd633973aacca0c4a" prot="public" virt="non-virtual"><scope>fc::ifstream</scope><name>beg</name></member>
      <member refid="classfc_1_1ifstream_1a1cd4c01627c310f9d3710f81e38bf4eaa0e3d16bf1b632e7f877578d8bdd0134f" prot="public" virt="non-virtual"><scope>fc::ifstream</scope><name>binary</name></member>
      <member refid="classfc_1_1ifstream_1a12bad1b934f9cc99c10325edb7c3be64" prot="public" virt="non-virtual"><scope>fc::ifstream</scope><name>close</name></member>
      <member refid="classfc_1_1ifstream_1a7e935ca8c6d5c45b2c88c446316999f8a27f47c9321b071887f77437071eb6c63" prot="public" virt="non-virtual"><scope>fc::ifstream</scope><name>cur</name></member>
      <member refid="classfc_1_1ifstream_1a7e935ca8c6d5c45b2c88c446316999f8a7399e7e5c03bc19ce1279278ae2fdad0" prot="public" virt="non-virtual"><scope>fc::ifstream</scope><name>end</name></member>
      <member refid="classfc_1_1ifstream_1a35f07cafe925887ab306dc843f069549" prot="public" virt="non-virtual"><scope>fc::ifstream</scope><name>eof</name></member>
      <member refid="classfc_1_1ifstream_1ad0f57eab9ac88ce64d4005b1c55bd18a" prot="public" virt="non-virtual"><scope>fc::ifstream</scope><name>get</name></member>
      <member refid="classfc_1_1istream_1ac217a213d8fe2554eaba25b7daf6c9b2" prot="public" virt="virtual" ambiguityscope="fc::istream::"><scope>fc::ifstream</scope><name>get</name></member>
      <member refid="classfc_1_1ifstream_1a0f0d7381d13c8d4dd59f90256eda5236" prot="public" virt="non-virtual"><scope>fc::ifstream</scope><name>ifstream</name></member>
      <member refid="classfc_1_1ifstream_1aa96377386b62e50cc78643f483d6093d" prot="public" virt="non-virtual"><scope>fc::ifstream</scope><name>ifstream</name></member>
      <member refid="classfc_1_1ifstream_1a1cd4c01627c310f9d3710f81e38bf4eaab3d7c75f091f9b1b9fb3a2e48b417e84" prot="public" virt="non-virtual"><scope>fc::ifstream</scope><name>in</name></member>
      <member refid="classfc_1_1ifstream_1a1cd4c01627c310f9d3710f81e38bf4ea" prot="public" virt="non-virtual"><scope>fc::ifstream</scope><name>mode</name></member>
      <member refid="classfc_1_1ifstream_1a7dcf5f69c72fcdfbfd63bde9cc1701de" prot="private" virt="non-virtual"><scope>fc::ifstream</scope><name>my</name></member>
      <member refid="classfc_1_1ifstream_1a64c37a9cca24b2735a840c5c68a6f0b4" prot="public" virt="non-virtual"><scope>fc::ifstream</scope><name>open</name></member>
      <member refid="classfc_1_1ifstream_1ae541da20aff813ea2399a95bd80a6347" prot="public" virt="non-virtual"><scope>fc::ifstream</scope><name>read</name></member>
      <member refid="classfc_1_1istream_1a94e767f126e952db54be791ee0cc6d1e" prot="public" virt="non-virtual" ambiguityscope="fc::istream::"><scope>fc::ifstream</scope><name>read</name></member>
      <member refid="classfc_1_1ifstream_1a3b0612e0baec2ab639f12d64eb02587a" prot="public" virt="virtual"><scope>fc::ifstream</scope><name>readsome</name></member>
      <member refid="classfc_1_1ifstream_1a64b6a02e1516136b31a5a369942ff5db" prot="public" virt="virtual"><scope>fc::ifstream</scope><name>readsome</name></member>
      <member refid="classfc_1_1ifstream_1a7e935ca8c6d5c45b2c88c446316999f8" prot="public" virt="non-virtual"><scope>fc::ifstream</scope><name>seekdir</name></member>
      <member refid="classfc_1_1ifstream_1a45c66ec6188bf2eaed30de78e4fd42c1" prot="public" virt="non-virtual"><scope>fc::ifstream</scope><name>seekg</name></member>
      <member refid="classfc_1_1ifstream_1a5d457f15805e69f31cb521e34dfd9f93" prot="public" virt="non-virtual"><scope>fc::ifstream</scope><name>~ifstream</name></member>
      <member refid="classfc_1_1istream_1a3d6f017f2fbcead4c7213618b5a21d36" prot="public" virt="virtual"><scope>fc::ifstream</scope><name>~istream</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
