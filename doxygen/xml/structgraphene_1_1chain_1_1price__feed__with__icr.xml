<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structgraphene_1_1chain_1_1price__feed__with__icr" kind="struct" language="C++" prot="public">
    <compoundname>graphene::chain::price_feed_with_icr</compoundname>
    <basecompoundref refid="structgraphene_1_1protocol_1_1price__feed" prot="public" virt="non-virtual">graphene::protocol::price_feed</basecompoundref>
    <includes refid="asset__object_8hpp" local="no">asset_object.hpp</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structgraphene_1_1chain_1_1price__feed__with__icr_1af99bb9515168ac49ba66b5a9b222c1fc" prot="public" static="no" mutable="no">
        <type>uint16_t</type>
        <definition>uint16_t graphene::chain::price_feed_with_icr::initial_collateral_ratio</definition>
        <argsstring></argsstring>
        <name>initial_collateral_ratio</name>
        <initializer>= <ref refid="protocol_2include_2graphene_2protocol_2config_8hpp_1a088a6500f643fafb7334b33bbea0231a" kindref="member">GRAPHENE_DEFAULT_MAINTENANCE_COLLATERAL_RATIO</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>After BSIP77, when creating a new debt position or updating an existing position, the position will be checked against this parameter. Fixed point between 1.000 and 10.000, implied fixed point denominator is GRAPHENE_COLLATERAL_RATIO_DENOM </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/asset_object.hpp" line="237" column="1" bodyfile="libraries/chain/include/graphene/chain/asset_object.hpp" bodystart="237" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structgraphene_1_1chain_1_1price__feed__with__icr_1a9856148571a8321a27b732902c136b73" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>graphene::chain::price_feed_with_icr::price_feed_with_icr</definition>
        <argsstring>()</argsstring>
        <name>price_feed_with_icr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/asset_object.hpp" line="239" column="1" bodyfile="libraries/chain/include/graphene/chain/asset_object.hpp" bodystart="239" bodyend="241"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1chain_1_1price__feed__with__icr_1ab7b2f4e6a03a42379efe71a83506e735" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>graphene::chain::price_feed_with_icr::price_feed_with_icr</definition>
        <argsstring>(const price_feed &amp;pf, const optional&lt; uint16_t &gt; &amp;icr={})</argsstring>
        <name>price_feed_with_icr</name>
        <param>
          <type>const <ref refid="structgraphene_1_1protocol_1_1price__feed" kindref="compound">price_feed</ref> &amp;</type>
          <declname>pf</declname>
        </param>
        <param>
          <type>const <ref refid="classfc_1_1optional" kindref="compound">optional</ref>&lt; uint16_t &gt; &amp;</type>
          <declname>icr</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/asset_object.hpp" line="243" column="1" bodyfile="libraries/chain/include/graphene/chain/asset_object.hpp" bodystart="243" bodyend="245"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1chain_1_1price__feed__with__icr_1ad479a7da0c7305515d50fef021d265da" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structgraphene_1_1protocol_1_1price" kindref="compound">price</ref></type>
        <definition>price graphene::chain::price_feed_with_icr::get_initial_collateralization</definition>
        <argsstring>() const</argsstring>
        <name>get_initial_collateralization</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The result will be used to check new debt positions and position updates. Calculation: ~settlement_price * initial_collateral_ratio / GRAPHENE_COLLATERAL_RATIO_DENOM </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/asset_object.hpp" line="249" column="1" bodyfile="libraries/chain/asset_object.cpp" bodystart="145" bodyend="150"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>defines market parameters for margin positions, extended with an initial_collateral_ratio field </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="6071">
        <label>graphene::protocol::price_feed</label>
        <link refid="structgraphene_1_1protocol_1_1price__feed"/>
      </node>
      <node id="6070">
        <label>graphene::chain::price_feed_with_icr</label>
        <link refid="structgraphene_1_1chain_1_1price__feed__with__icr"/>
        <childnode refid="6071" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="6074">
        <label>graphene::protocol::price</label>
        <link refid="structgraphene_1_1protocol_1_1price"/>
        <childnode refid="6075" relation="usage">
          <edgelabel>base</edgelabel>
          <edgelabel>quote</edgelabel>
        </childnode>
      </node>
      <node id="6076">
        <label>fc::safe&lt; int64_t &gt;</label>
        <link refid="structfc_1_1safe"/>
      </node>
      <node id="6073">
        <label>graphene::protocol::price_feed</label>
        <link refid="structgraphene_1_1protocol_1_1price__feed"/>
        <childnode refid="6074" relation="usage">
          <edgelabel>core_exchange_rate</edgelabel>
          <edgelabel>settlement_price</edgelabel>
        </childnode>
      </node>
      <node id="6075">
        <label>graphene::protocol::asset</label>
        <link refid="structgraphene_1_1protocol_1_1asset"/>
        <childnode refid="6076" relation="usage">
          <edgelabel>amount</edgelabel>
        </childnode>
      </node>
      <node id="6072">
        <label>graphene::chain::price_feed_with_icr</label>
        <link refid="structgraphene_1_1chain_1_1price__feed__with__icr"/>
        <childnode refid="6073" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="libraries/chain/include/graphene/chain/asset_object.hpp" line="233" column="1" bodyfile="libraries/chain/include/graphene/chain/asset_object.hpp" bodystart="232" bodyend="250"/>
    <listofallmembers>
      <member refid="structgraphene_1_1protocol_1_1price__feed_1ae6bf318a90269e2e638df9b3cb89504e" prot="public" virt="non-virtual"><scope>graphene::chain::price_feed_with_icr</scope><name>core_exchange_rate</name></member>
      <member refid="structgraphene_1_1chain_1_1price__feed__with__icr_1ad479a7da0c7305515d50fef021d265da" prot="public" virt="non-virtual"><scope>graphene::chain::price_feed_with_icr</scope><name>get_initial_collateralization</name></member>
      <member refid="structgraphene_1_1chain_1_1price__feed__with__icr_1af99bb9515168ac49ba66b5a9b222c1fc" prot="public" virt="non-virtual"><scope>graphene::chain::price_feed_with_icr</scope><name>initial_collateral_ratio</name></member>
      <member refid="structgraphene_1_1protocol_1_1price__feed_1ac9864f61729920e739c9272b89719273" prot="public" virt="non-virtual"><scope>graphene::chain::price_feed_with_icr</scope><name>is_for</name></member>
      <member refid="structgraphene_1_1protocol_1_1price__feed_1a81a886eed9c27f296d4631a885b97c8a" prot="public" virt="non-virtual"><scope>graphene::chain::price_feed_with_icr</scope><name>maintenance_collateral_ratio</name></member>
      <member refid="structgraphene_1_1protocol_1_1price__feed_1a30f1e1b7f21c0e198dfae800c4d11273" prot="public" virt="non-virtual"><scope>graphene::chain::price_feed_with_icr</scope><name>maintenance_collateralization</name></member>
      <member refid="structgraphene_1_1protocol_1_1price__feed_1aea09f66a8c1a41cd77b41e376c8760da" prot="public" virt="non-virtual"><scope>graphene::chain::price_feed_with_icr</scope><name>margin_call_order_price</name></member>
      <member refid="structgraphene_1_1protocol_1_1price__feed_1a91e6fc8c402647bab588133ce172d3b3" prot="public" virt="non-virtual"><scope>graphene::chain::price_feed_with_icr</scope><name>margin_call_order_ratio</name></member>
      <member refid="structgraphene_1_1protocol_1_1price__feed_1a0bdb5d3b180dd7df1ecf147966329a37" prot="public" virt="non-virtual"><scope>graphene::chain::price_feed_with_icr</scope><name>margin_call_params_equal</name></member>
      <member refid="structgraphene_1_1protocol_1_1price__feed_1abdf72aeccadb7c3a61165f557d7b5b6c" prot="public" virt="non-virtual"><scope>graphene::chain::price_feed_with_icr</scope><name>margin_call_pays_ratio</name></member>
      <member refid="structgraphene_1_1protocol_1_1price__feed_1af018fd5a315703a5afcd20fdf287a464" prot="public" virt="non-virtual"><scope>graphene::chain::price_feed_with_icr</scope><name>max_short_squeeze_price</name></member>
      <member refid="structgraphene_1_1protocol_1_1price__feed_1a98463272d7cab66ef4201b261eca5c43" prot="public" virt="non-virtual"><scope>graphene::chain::price_feed_with_icr</scope><name>max_short_squeeze_price_before_hf_1270</name></member>
      <member refid="structgraphene_1_1protocol_1_1price__feed_1afef11ed5832c728c7dec984b0d75e6da" prot="public" virt="non-virtual"><scope>graphene::chain::price_feed_with_icr</scope><name>maximum_short_squeeze_ratio</name></member>
      <member refid="structgraphene_1_1chain_1_1price__feed__with__icr_1a9856148571a8321a27b732902c136b73" prot="public" virt="non-virtual"><scope>graphene::chain::price_feed_with_icr</scope><name>price_feed_with_icr</name></member>
      <member refid="structgraphene_1_1chain_1_1price__feed__with__icr_1ab7b2f4e6a03a42379efe71a83506e735" prot="public" virt="non-virtual"><scope>graphene::chain::price_feed_with_icr</scope><name>price_feed_with_icr</name></member>
      <member refid="structgraphene_1_1protocol_1_1price__feed_1a6252428604466bc644f3e56ce8353c02" prot="public" virt="non-virtual"><scope>graphene::chain::price_feed_with_icr</scope><name>settlement_price</name></member>
      <member refid="structgraphene_1_1protocol_1_1price__feed_1affca92dc941ee449f0a2a1c99a3e1473" prot="public" virt="non-virtual"><scope>graphene::chain::price_feed_with_icr</scope><name>validate</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
