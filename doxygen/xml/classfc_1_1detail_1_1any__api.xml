<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classfc_1_1detail_1_1any__api" kind="class" language="C++" prot="public">
    <compoundname>fc::detail::any_api</compoundname>
    <basecompoundref refid="classfc_1_1api__base" prot="public" virt="non-virtual">fc::api_base</basecompoundref>
    <includes refid="api__connection_8hpp" local="no">api_connection.hpp</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classfc_1_1detail_1_1any__api_1a534d5a13911c242a2d49a21c9785760d" prot="public" static="no" mutable="no">
        <type><ref refid="namespacefc_1a18e9e0bd9c0a52896425ae1172bc4e2b" kindref="member">api_id_type</ref></type>
        <definition>api_id_type fc::detail::any_api::_api_id</definition>
        <argsstring></argsstring>
        <name>_api_id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/rpc/api_connection.hpp" line="103" column="1" bodyfile="libraries/fc/include/fc/rpc/api_connection.hpp" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classfc_1_1detail_1_1any__api_1aae058b58c4a7d62908df6de21ad6a73a" prot="public" static="no" mutable="no">
        <type>std::weak_ptr&lt; <ref refid="classfc_1_1api__connection" kindref="compound">fc::api_connection</ref> &gt;</type>
        <definition>std::weak_ptr&lt;fc::api_connection&gt; fc::detail::any_api::_api_connection</definition>
        <argsstring></argsstring>
        <name>_api_connection</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/rpc/api_connection.hpp" line="104" column="1" bodyfile="libraries/fc/include/fc/rpc/api_connection.hpp" bodystart="104" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classfc_1_1detail_1_1any__api_1a4ca3597c7722daa10cbe3e780d7a7d36" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>fc::detail::any_api::any_api</definition>
        <argsstring>(api_id_type api_id, const std::shared_ptr&lt; fc::api_connection &gt; &amp;con)</argsstring>
        <name>any_api</name>
        <param>
          <type><ref refid="namespacefc_1a18e9e0bd9c0a52896425ae1172bc4e2b" kindref="member">api_id_type</ref></type>
          <declname>api_id</declname>
        </param>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classfc_1_1api__connection" kindref="compound">fc::api_connection</ref> &gt; &amp;</type>
          <declname>con</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/rpc/api_connection.hpp" line="94" column="1" bodyfile="libraries/fc/include/fc/rpc/api_connection.hpp" bodystart="94" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1detail_1_1any__api_1a7b5ec2a4fdd53f29b311528c1576aa89" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>uint64_t</type>
        <definition>virtual uint64_t fc::detail::any_api::get_handle</definition>
        <argsstring>() const override</argsstring>
        <name>get_handle</name>
        <reimplements refid="classfc_1_1api__base_1a101030d0c1e946040fc8dade7f051309">get_handle</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/rpc/api_connection.hpp" line="97" column="1" bodyfile="libraries/fc/include/fc/rpc/api_connection.hpp" bodystart="97" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1detail_1_1any__api_1a57544c4d7f1dbb7aba824f4a9f618dd4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespacefc_1a18e9e0bd9c0a52896425ae1172bc4e2b" kindref="member">api_id_type</ref></type>
        <definition>virtual api_id_type fc::detail::any_api::register_api</definition>
        <argsstring>(api_connection &amp;conn) const override</argsstring>
        <name>register_api</name>
        <reimplements refid="classfc_1_1api__base_1a999476d6eb0dd3a40d40a496c9c1a318">register_api</reimplements>
        <param>
          <type><ref refid="classfc_1_1api__connection" kindref="compound">api_connection</ref> &amp;</type>
          <declname>conn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/rpc/api_connection.hpp" line="100" column="1" bodyfile="libraries/fc/include/fc/rpc/api_connection.hpp" bodystart="100" bodyend="101"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>If api&lt;T&gt; is returned from a remote method, the API is eagerly bound to api&lt;T&gt; of the correct type in <ref refid="namespacefc_1a7fad1781925faf69eca1fc23228158cf" kindref="member">api_visitor::from_variant()</ref>. This binding [1] needs a reference to the <ref refid="classfc_1_1api__connection" kindref="compound">api_connection</ref>, which is made available to <ref refid="namespacefc_1a7fad1781925faf69eca1fc23228158cf" kindref="member">from_variant()</ref> as a parameter.</para><para>However, in the case of a remote method which returns <ref refid="classfc_1_1api__base" kindref="compound">api_base</ref> which can subsequently be cast by the caller with as&lt;T&gt;, we need to keep track of the connection because the binding is done later (when the client code actually calls as&lt;T&gt;).</para><para>[1] The binding actually happens in get_remote_api(). </para>    </detaileddescription>
    <inheritancegraph>
      <node id="500">
        <label>fc::detail::any_api</label>
        <link refid="classfc_1_1detail_1_1any__api"/>
        <childnode refid="501" relation="public-inheritance">
        </childnode>
      </node>
      <node id="501">
        <label>fc::api_base</label>
        <link refid="classfc_1_1api__base"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="502">
        <label>fc::detail::any_api</label>
        <link refid="classfc_1_1detail_1_1any__api"/>
        <childnode refid="503" relation="public-inheritance">
        </childnode>
      </node>
      <node id="503">
        <label>fc::api_base</label>
        <link refid="classfc_1_1api__base"/>
      </node>
    </collaborationgraph>
    <location file="libraries/fc/include/fc/rpc/api_connection.hpp" line="92" column="1" bodyfile="libraries/fc/include/fc/rpc/api_connection.hpp" bodystart="91" bodyend="105"/>
    <listofallmembers>
      <member refid="classfc_1_1detail_1_1any__api_1aae058b58c4a7d62908df6de21ad6a73a" prot="public" virt="non-virtual"><scope>fc::detail::any_api</scope><name>_api_connection</name></member>
      <member refid="classfc_1_1detail_1_1any__api_1a534d5a13911c242a2d49a21c9785760d" prot="public" virt="non-virtual"><scope>fc::detail::any_api</scope><name>_api_id</name></member>
      <member refid="classfc_1_1detail_1_1any__api_1a4ca3597c7722daa10cbe3e780d7a7d36" prot="public" virt="non-virtual"><scope>fc::detail::any_api</scope><name>any_api</name></member>
      <member refid="classfc_1_1api__base_1a8defc5c5b610084dcb77e9ddcdef3e2e" prot="public" virt="non-virtual"><scope>fc::detail::any_api</scope><name>api_base</name></member>
      <member refid="classfc_1_1api__base_1a65ecf3353c25e7bf0f305b2354fbdbb7" prot="public" virt="non-virtual"><scope>fc::detail::any_api</scope><name>as</name></member>
      <member refid="classfc_1_1api__base_1a922163f7944289eb48c7dfb8acd8ba02" prot="public" virt="non-virtual"><scope>fc::detail::any_api</scope><name>as</name></member>
      <member refid="classfc_1_1detail_1_1any__api_1a7b5ec2a4fdd53f29b311528c1576aa89" prot="public" virt="virtual"><scope>fc::detail::any_api</scope><name>get_handle</name></member>
      <member refid="classfc_1_1detail_1_1any__api_1a57544c4d7f1dbb7aba824f4a9f618dd4" prot="public" virt="virtual"><scope>fc::detail::any_api</scope><name>register_api</name></member>
      <member refid="classfc_1_1api__base_1a7191e098deecfd91e0859de0db8440db" prot="public" virt="virtual"><scope>fc::detail::any_api</scope><name>~api_base</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
