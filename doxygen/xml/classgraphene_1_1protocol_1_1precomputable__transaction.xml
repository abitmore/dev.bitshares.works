<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classgraphene_1_1protocol_1_1precomputable__transaction" kind="class" language="C++" prot="public">
    <compoundname>graphene::protocol::precomputable_transaction</compoundname>
    <basecompoundref refid="classgraphene_1_1protocol_1_1signed__transaction" prot="public" virt="non-virtual">graphene::protocol::signed_transaction</basecompoundref>
    <derivedcompoundref refid="structgraphene_1_1protocol_1_1processed__transaction" prot="public" virt="non-virtual">graphene::protocol::processed_transaction</derivedcompoundref>
    <includes refid="transaction_8hpp" local="no">transaction.hpp</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classgraphene_1_1protocol_1_1precomputable__transaction_1a8cfa21177d116026ab6a7e4fcc4c56c3" prot="protected" static="no" mutable="yes">
        <type>bool</type>
        <definition>bool graphene::protocol::precomputable_transaction::_validated</definition>
        <argsstring></argsstring>
        <name>_validated</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/transaction.hpp" line="245" column="20" bodyfile="libraries/protocol/include/graphene/protocol/transaction.hpp" bodystart="245" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgraphene_1_1protocol_1_1precomputable__transaction_1a4055c58e5ba7ffab92db18852d23b3d5" prot="protected" static="no" mutable="yes">
        <type>uint64_t</type>
        <definition>uint64_t graphene::protocol::precomputable_transaction::_packed_size</definition>
        <argsstring></argsstring>
        <name>_packed_size</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/transaction.hpp" line="246" column="24" bodyfile="libraries/protocol/include/graphene/protocol/transaction.hpp" bodystart="246" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classgraphene_1_1protocol_1_1precomputable__transaction_1a93734606764cb005ad817f20e72fbb9a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>graphene::protocol::precomputable_transaction::precomputable_transaction</definition>
        <argsstring>()</argsstring>
        <name>precomputable_transaction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/transaction.hpp" line="235" column="7" bodyfile="libraries/protocol/include/graphene/protocol/transaction.hpp" bodystart="235" bodyend="235"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1protocol_1_1precomputable__transaction_1ac75c4cd83b67bd212559360b1ab58229" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>graphene::protocol::precomputable_transaction::precomputable_transaction</definition>
        <argsstring>(const signed_transaction &amp;tx)</argsstring>
        <name>precomputable_transaction</name>
        <param>
          <type>const <ref refid="classgraphene_1_1protocol_1_1signed__transaction" kindref="compound">signed_transaction</ref> &amp;</type>
          <declname>tx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/transaction.hpp" line="236" column="7" bodyfile="libraries/protocol/include/graphene/protocol/transaction.hpp" bodystart="236" bodyend="236"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1protocol_1_1precomputable__transaction_1a343bf87bdf7524768c57b6e611614376" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>graphene::protocol::precomputable_transaction::precomputable_transaction</definition>
        <argsstring>(signed_transaction &amp;&amp;tx)</argsstring>
        <name>precomputable_transaction</name>
        <param>
          <type><ref refid="classgraphene_1_1protocol_1_1signed__transaction" kindref="compound">signed_transaction</ref> &amp;&amp;</type>
          <declname>tx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/transaction.hpp" line="237" column="7" bodyfile="libraries/protocol/include/graphene/protocol/transaction.hpp" bodystart="237" bodyend="237"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1protocol_1_1precomputable__transaction_1a324ad7fb889d2aecba21110aac0e370e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual graphene::protocol::precomputable_transaction::~precomputable_transaction</definition>
        <argsstring>()=default</argsstring>
        <name>~precomputable_transaction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/transaction.hpp" line="238" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1protocol_1_1precomputable__transaction_1ab7a8492b910ef622a76332d6a7372fdb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const <ref refid="namespacegraphene_1_1protocol_1a040f9f71bff896e89dc9ee3ff92bb076" kindref="member">transaction_id_type</ref> &amp;</type>
        <definition>const transaction_id_type &amp; graphene::protocol::precomputable_transaction::id</definition>
        <argsstring>() const override</argsstring>
        <name>id</name>
        <reimplements refid="classgraphene_1_1protocol_1_1transaction_1ab837a9c225d37d0fe9eb952ee6bf5cc1">id</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/transaction.hpp" line="240" column="47" bodyfile="libraries/protocol/transaction.cpp" bodystart="434" bodyend="439"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1protocol_1_1precomputable__transaction_1aff4373557a8bf96de54ce19414755a30" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void graphene::protocol::precomputable_transaction::validate</definition>
        <argsstring>() const override</argsstring>
        <name>validate</name>
        <reimplements refid="classgraphene_1_1protocol_1_1transaction_1ae691d92c2a4cbc1264ea5b698fd4df60">validate</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/transaction.hpp" line="241" column="48" bodyfile="libraries/protocol/transaction.cpp" bodystart="441" bodyend="446"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1protocol_1_1precomputable__transaction_1adb185966f6f81112f7ad707931617d85" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const flat_set&lt; <ref refid="structgraphene_1_1protocol_1_1public__key__type" kindref="compound">public_key_type</ref> &gt; &amp;</type>
        <definition>const flat_set&lt; public_key_type &gt; &amp; graphene::protocol::precomputable_transaction::get_signature_keys</definition>
        <argsstring>(const chain_id_type &amp;chain_id) const override</argsstring>
        <name>get_signature_keys</name>
        <reimplements refid="classgraphene_1_1protocol_1_1signed__transaction_1a399bd56dd3f093b1ac3f3b92862214dc">get_signature_keys</reimplements>
        <param>
          <type>const <ref refid="namespacegraphene_1_1protocol_1a56354f39ed89f6a0a13fe90ba8228809" kindref="member">chain_id_type</ref> &amp;</type>
          <declname>chain_id</declname>
        </param>
        <briefdescription>
<para>Extract public keys from signatures with given chain ID. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>chain_id</parametername>
</parameternamelist>
<parameterdescription>
<para>A chain ID </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Public keys </para>
</simplesect>
<simplesect kind="note"><para>If <ref refid="classgraphene_1_1protocol_1_1signed__transaction_1aadfd54dd910b56c969cfbae3a09f4da9" kindref="member">_signees</ref> is empty, E.G. when it&apos;s the first time calling this function for the signed transaction, public keys will be extracted with given chain ID, and be stored into the mutable <ref refid="classgraphene_1_1protocol_1_1signed__transaction_1aadfd54dd910b56c969cfbae3a09f4da9" kindref="member">_signees</ref> field, then <ref refid="classgraphene_1_1protocol_1_1signed__transaction_1aadfd54dd910b56c969cfbae3a09f4da9" kindref="member">_signees</ref> will be returned; otherwise, the <computeroutput>chain_id</computeroutput> parameter will be ignored, and <ref refid="classgraphene_1_1protocol_1_1signed__transaction_1aadfd54dd910b56c969cfbae3a09f4da9" kindref="member">_signees</ref> will be returned directly. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/transaction.hpp" line="242" column="30" bodyfile="libraries/protocol/transaction.cpp" bodystart="455" bodyend="462"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1protocol_1_1precomputable__transaction_1a636c0fc4a3822748311f5d74d7f8b140" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>uint64_t</type>
        <definition>uint64_t graphene::protocol::precomputable_transaction::get_packed_size</definition>
        <argsstring>() const override</argsstring>
        <name>get_packed_size</name>
        <reimplements refid="classgraphene_1_1protocol_1_1transaction_1a05a5400509cd28ec52ae3952918d803f">get_packed_size</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/transaction.hpp" line="243" column="48" bodyfile="libraries/protocol/transaction.cpp" bodystart="448" bodyend="453"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>This represents a signed transaction that will never have its operations, signatures etc. modified again, after initial creation. It is therefore safe to cache results from various calls. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>graphene::protocol::precomputable_transaction</label>
        <link refid="classgraphene_1_1protocol_1_1precomputable__transaction"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>graphene::protocol::processed_transaction</label>
        <link refid="structgraphene_1_1protocol_1_1processed__transaction"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>graphene::protocol::signed_transaction</label>
        <link refid="classgraphene_1_1protocol_1_1signed__transaction"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>graphene::protocol::transaction</label>
        <link refid="classgraphene_1_1protocol_1_1transaction"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4">
        <label>fc::ripemd160</label>
        <link refid="classfc_1_1ripemd160"/>
      </node>
      <node id="1">
        <label>graphene::protocol::precomputable_transaction</label>
        <link refid="classgraphene_1_1protocol_1_1precomputable__transaction"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>flat_set&lt; graphene::protocol::public_key_type &gt;</label>
      </node>
      <node id="5">
        <label>fc::time_point_sec</label>
        <link refid="classfc_1_1time__point__sec"/>
      </node>
      <node id="6">
        <label>vector&lt; fc::static_variant &gt;</label>
      </node>
      <node id="7">
        <label>vector&lt; fc::zero_initialized_array &gt;</label>
      </node>
      <node id="2">
        <label>graphene::protocol::signed_transaction</label>
        <link refid="classgraphene_1_1protocol_1_1signed__transaction"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>signatures</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>_signees</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>graphene::protocol::transaction</label>
        <link refid="classgraphene_1_1protocol_1_1transaction"/>
        <childnode refid="4" relation="usage">
          <edgelabel>_tx_id_buffer</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>expiration</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>operations</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="libraries/protocol/include/graphene/protocol/transaction.hpp" line="233" column="61" bodyfile="libraries/protocol/include/graphene/protocol/transaction.hpp" bodystart="233" bodyend="247"/>
    <listofallmembers>
      <member refid="classgraphene_1_1protocol_1_1precomputable__transaction_1a4055c58e5ba7ffab92db18852d23b3d5" prot="protected" virt="non-virtual"><scope>graphene::protocol::precomputable_transaction</scope><name>_packed_size</name></member>
      <member refid="classgraphene_1_1protocol_1_1signed__transaction_1aadfd54dd910b56c969cfbae3a09f4da9" prot="protected" virt="non-virtual"><scope>graphene::protocol::precomputable_transaction</scope><name>_signees</name></member>
      <member refid="classgraphene_1_1protocol_1_1transaction_1ab8a7d50e9abe892ac8d8c9edfa407743" prot="protected" virt="non-virtual"><scope>graphene::protocol::precomputable_transaction</scope><name>_tx_id_buffer</name></member>
      <member refid="classgraphene_1_1protocol_1_1precomputable__transaction_1a8cfa21177d116026ab6a7e4fcc4c56c3" prot="protected" virt="non-virtual"><scope>graphene::protocol::precomputable_transaction</scope><name>_validated</name></member>
      <member refid="classgraphene_1_1protocol_1_1signed__transaction_1a8b2d6eb25d606f2fee9472885d7c6f88" prot="public" virt="non-virtual"><scope>graphene::protocol::precomputable_transaction</scope><name>clear</name></member>
      <member refid="classgraphene_1_1protocol_1_1signed__transaction_1a8fdd77aab962bde6cea772b25e16aa52" prot="public" virt="non-virtual"><scope>graphene::protocol::precomputable_transaction</scope><name>clear_signatures</name></member>
      <member refid="classgraphene_1_1protocol_1_1transaction_1a04ffe009d27aec9e221041ba22125532" prot="public" virt="non-virtual"><scope>graphene::protocol::precomputable_transaction</scope><name>digest</name></member>
      <member refid="classgraphene_1_1protocol_1_1transaction_1a303447df940705d8ab860d2d52317e80" prot="public" virt="non-virtual"><scope>graphene::protocol::precomputable_transaction</scope><name>expiration</name></member>
      <member refid="classgraphene_1_1protocol_1_1transaction_1ac4922d0bbee524ba5eacc8a665888be2" prot="public" virt="non-virtual"><scope>graphene::protocol::precomputable_transaction</scope><name>extensions</name></member>
      <member refid="classgraphene_1_1protocol_1_1precomputable__transaction_1a636c0fc4a3822748311f5d74d7f8b140" prot="public" virt="virtual"><scope>graphene::protocol::precomputable_transaction</scope><name>get_packed_size</name></member>
      <member refid="classgraphene_1_1protocol_1_1transaction_1aa2b9c07185c7f05118dca8aa9ba69b08" prot="public" virt="non-virtual"><scope>graphene::protocol::precomputable_transaction</scope><name>get_required_authorities</name></member>
      <member refid="classgraphene_1_1protocol_1_1signed__transaction_1a4853c99a58a0bff2e2d45256c680be92" prot="public" virt="non-virtual"><scope>graphene::protocol::precomputable_transaction</scope><name>get_required_signatures</name></member>
      <member refid="classgraphene_1_1protocol_1_1precomputable__transaction_1adb185966f6f81112f7ad707931617d85" prot="public" virt="virtual"><scope>graphene::protocol::precomputable_transaction</scope><name>get_signature_keys</name></member>
      <member refid="classgraphene_1_1protocol_1_1precomputable__transaction_1ab7a8492b910ef622a76332d6a7372fdb" prot="public" virt="virtual"><scope>graphene::protocol::precomputable_transaction</scope><name>id</name></member>
      <member refid="classgraphene_1_1protocol_1_1signed__transaction_1a70d7d5de93386618b443ee9f57370a63" prot="public" virt="non-virtual"><scope>graphene::protocol::precomputable_transaction</scope><name>minimize_required_signatures</name></member>
      <member refid="classgraphene_1_1protocol_1_1transaction_1a00bfb1cd13936871cd987b74dca0417a" prot="public" virt="non-virtual"><scope>graphene::protocol::precomputable_transaction</scope><name>operations</name></member>
      <member refid="classgraphene_1_1protocol_1_1precomputable__transaction_1a93734606764cb005ad817f20e72fbb9a" prot="public" virt="non-virtual"><scope>graphene::protocol::precomputable_transaction</scope><name>precomputable_transaction</name></member>
      <member refid="classgraphene_1_1protocol_1_1precomputable__transaction_1ac75c4cd83b67bd212559360b1ab58229" prot="public" virt="non-virtual"><scope>graphene::protocol::precomputable_transaction</scope><name>precomputable_transaction</name></member>
      <member refid="classgraphene_1_1protocol_1_1precomputable__transaction_1a343bf87bdf7524768c57b6e611614376" prot="public" virt="non-virtual"><scope>graphene::protocol::precomputable_transaction</scope><name>precomputable_transaction</name></member>
      <member refid="classgraphene_1_1protocol_1_1transaction_1a409ead8644ff5fcb2dc3527910afa0f8" prot="public" virt="non-virtual"><scope>graphene::protocol::precomputable_transaction</scope><name>ref_block_num</name></member>
      <member refid="classgraphene_1_1protocol_1_1transaction_1a8b2ed9c30bc7d04c96e6ed1e4652dcbe" prot="public" virt="non-virtual"><scope>graphene::protocol::precomputable_transaction</scope><name>ref_block_prefix</name></member>
      <member refid="classgraphene_1_1protocol_1_1transaction_1a083a44dddfc1c36adb8806262aee25d5" prot="public" virt="non-virtual"><scope>graphene::protocol::precomputable_transaction</scope><name>set_expiration</name></member>
      <member refid="classgraphene_1_1protocol_1_1transaction_1aee3b70d4b548901a0d3a811bad926098" prot="public" virt="non-virtual"><scope>graphene::protocol::precomputable_transaction</scope><name>set_reference_block</name></member>
      <member refid="classgraphene_1_1protocol_1_1transaction_1aa3f69556ccaf5552871c344c3150182d" prot="protected" virt="non-virtual"><scope>graphene::protocol::precomputable_transaction</scope><name>sig_digest</name></member>
      <member refid="classgraphene_1_1protocol_1_1signed__transaction_1abf07d5eb67a82bf0c3d19e2a5d59262e" prot="public" virt="non-virtual"><scope>graphene::protocol::precomputable_transaction</scope><name>sign</name></member>
      <member refid="classgraphene_1_1protocol_1_1signed__transaction_1ad3704a171d765acbded80a9b8dc87f81" prot="public" virt="non-virtual"><scope>graphene::protocol::precomputable_transaction</scope><name>sign</name></member>
      <member refid="classgraphene_1_1protocol_1_1signed__transaction_1a0ead94f9c1deaef5710d072f9da8f75b" prot="public" virt="non-virtual"><scope>graphene::protocol::precomputable_transaction</scope><name>signatures</name></member>
      <member refid="classgraphene_1_1protocol_1_1signed__transaction_1a4f868c01c731aed8174809f502de5d9f" prot="public" virt="non-virtual"><scope>graphene::protocol::precomputable_transaction</scope><name>signed_transaction</name></member>
      <member refid="classgraphene_1_1protocol_1_1precomputable__transaction_1aff4373557a8bf96de54ce19414755a30" prot="public" virt="virtual"><scope>graphene::protocol::precomputable_transaction</scope><name>validate</name></member>
      <member refid="classgraphene_1_1protocol_1_1signed__transaction_1a00e34f26eb30033c2d1afdfb9c573a94" prot="public" virt="non-virtual"><scope>graphene::protocol::precomputable_transaction</scope><name>verify_authority</name></member>
      <member refid="classgraphene_1_1protocol_1_1transaction_1a00813917deaf56177dc010944765f8c4" prot="public" virt="non-virtual"><scope>graphene::protocol::precomputable_transaction</scope><name>visit</name></member>
      <member refid="classgraphene_1_1protocol_1_1transaction_1add3323f0daeb3d5ccf3e222e5a2de9ce" prot="public" virt="non-virtual"><scope>graphene::protocol::precomputable_transaction</scope><name>visit</name></member>
      <member refid="classgraphene_1_1protocol_1_1precomputable__transaction_1a324ad7fb889d2aecba21110aac0e370e" prot="public" virt="virtual"><scope>graphene::protocol::precomputable_transaction</scope><name>~precomputable_transaction</name></member>
      <member refid="classgraphene_1_1protocol_1_1signed__transaction_1ab5bd7fee46143f039152df1ce313786a" prot="public" virt="virtual"><scope>graphene::protocol::precomputable_transaction</scope><name>~signed_transaction</name></member>
      <member refid="classgraphene_1_1protocol_1_1transaction_1a03d9df4aeb611d900a8d18787056e682" prot="public" virt="virtual"><scope>graphene::protocol::precomputable_transaction</scope><name>~transaction</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
