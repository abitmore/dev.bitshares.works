<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classgraphene_1_1chain_1_1evaluator" kind="class" language="C++" prot="public">
    <compoundname>graphene::chain::evaluator</compoundname>
    <basecompoundref refid="classgraphene_1_1chain_1_1generic__evaluator" prot="public" virt="non-virtual">graphene::chain::generic_evaluator</basecompoundref>
    <includes refid="evaluator_8hpp" local="no">evaluator.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename</type>
        <declname>DerivedEvaluator</declname>
        <defname>DerivedEvaluator</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classgraphene_1_1chain_1_1evaluator_1a1fc01577ffad44dfa3283a5a1c79a7e6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int graphene::chain::evaluator&lt; DerivedEvaluator &gt;::get_type</definition>
        <argsstring>() const override</argsstring>
        <name>get_type</name>
        <reimplements refid="classgraphene_1_1chain_1_1generic__evaluator_1adfbfe3f65ee5a2e72865dc8e8c38f83b">get_type</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/evaluator.hpp" line="145" column="1" bodyfile="libraries/chain/include/graphene/chain/evaluator.hpp" bodystart="145" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1chain_1_1evaluator_1ad206096f93b8a944901c2f0cb1bed151" prot="public" static="no" const="no" explicit="no" inline="yes" final="yes" virt="virtual">
        <type><ref refid="group__operations_1gaa71296d574534eaf5315415023d64eeb" kindref="member">operation_result</ref></type>
        <definition>virtual operation_result graphene::chain::evaluator&lt; DerivedEvaluator &gt;::evaluate</definition>
        <argsstring>(const operation &amp;o) final override</argsstring>
        <name>evaluate</name>
        <reimplements refid="classgraphene_1_1chain_1_1generic__evaluator_1abdba7bfbacff8b598c7e284250e0ebbe">evaluate</reimplements>
        <param>
          <type>const <ref refid="group__operations_1ga9aa13b4d89e9b8b56d1074b715de6568" kindref="member">operation</ref> &amp;</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>derived classes should ASSUME that the default validation that is indepenent of chain state should be performed by op.validate() and should not perform these extra checks. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/evaluator.hpp" line="147" column="1" bodyfile="libraries/chain/include/graphene/chain/evaluator.hpp" bodystart="147" bodyend="163"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1chain_1_1evaluator_1a4186e76425438ece8cd64bfc6961608c" prot="public" static="no" const="no" explicit="no" inline="yes" final="yes" virt="virtual">
        <type><ref refid="group__operations_1gaa71296d574534eaf5315415023d64eeb" kindref="member">operation_result</ref></type>
        <definition>virtual operation_result graphene::chain::evaluator&lt; DerivedEvaluator &gt;::apply</definition>
        <argsstring>(const operation &amp;o) final override</argsstring>
        <name>apply</name>
        <reimplements refid="classgraphene_1_1chain_1_1generic__evaluator_1a904097c372b2a7291340366c0194ad19">apply</reimplements>
        <param>
          <type>const <ref refid="group__operations_1ga9aa13b4d89e9b8b56d1074b715de6568" kindref="member">operation</ref> &amp;</type>
          <declname>o</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/evaluator.hpp" line="165" column="1" bodyfile="libraries/chain/include/graphene/chain/evaluator.hpp" bodystart="165" bodyend="178"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3352">
        <label>graphene::chain::evaluator&lt; DerivedEvaluator &gt;</label>
        <link refid="classgraphene_1_1chain_1_1evaluator"/>
        <childnode refid="3353" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3353">
        <label>graphene::chain::generic_evaluator</label>
        <link refid="classgraphene_1_1chain_1_1generic__evaluator"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3359">
        <label>graphene::db::abstract_object&lt; asset_object &gt;</label>
        <link refid="classgraphene_1_1db_1_1abstract__object"/>
        <childnode refid="3360" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3372">
        <label>fc::optional&lt; liquidity_pool_id_type &gt;</label>
        <link refid="classfc_1_1optional"/>
      </node>
      <node id="3368">
        <label>flat_set&lt; asset_id_type &gt;</label>
      </node>
      <node id="3382">
        <label>fc::ripemd160</label>
        <link refid="classfc_1_1ripemd160"/>
      </node>
      <node id="3393">
        <label>fc::static_variant&lt; no_special_authority, top_holders_special_authority &gt;</label>
        <link refid="classfc_1_1static__variant"/>
        <childnode refid="3394" relation="usage">
          <edgelabel>storage</edgelabel>
        </childnode>
      </node>
      <node id="3396">
        <label>graphene::protocol::account_options</label>
        <link refid="structgraphene_1_1protocol_1_1account__options"/>
        <childnode refid="3397" relation="usage">
          <edgelabel>votes</edgelabel>
        </childnode>
        <childnode refid="3374" relation="usage">
          <edgelabel>voting_account</edgelabel>
        </childnode>
        <childnode refid="3398" relation="usage">
          <edgelabel>memo_key</edgelabel>
        </childnode>
      </node>
      <node id="3369">
        <label>string</label>
      </node>
      <node id="3370">
        <label>graphene::protocol::price</label>
        <link refid="structgraphene_1_1protocol_1_1price"/>
        <childnode refid="3356" relation="usage">
          <edgelabel>base</edgelabel>
          <edgelabel>quote</edgelabel>
        </childnode>
      </node>
      <node id="3365">
        <label>graphene::protocol::additional_asset_options</label>
        <link refid="structgraphene_1_1protocol_1_1additional__asset__options"/>
        <childnode refid="3366" relation="usage">
          <edgelabel>taker_fee_percent</edgelabel>
          <edgelabel>reward_percent</edgelabel>
        </childnode>
        <childnode refid="3367" relation="usage">
          <edgelabel>whitelist_market_fee_sharing</edgelabel>
        </childnode>
      </node>
      <node id="3395">
        <label>fc::optional&lt; vesting_balance_id_type &gt;</label>
        <link refid="classfc_1_1optional"/>
      </node>
      <node id="3403">
        <label>flat_map&lt; graphene::protocol::address, weight_type &gt;</label>
      </node>
      <node id="3389">
        <label>graphene::db::abstract_object&lt; asset_dynamic_data_object &gt;</label>
        <link refid="classgraphene_1_1db_1_1abstract__object"/>
        <childnode refid="3360" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3367">
        <label>fc::optional&lt; flat_set&lt; account_id_type &gt; &gt;</label>
        <link refid="classfc_1_1optional"/>
      </node>
      <node id="3390">
        <label>graphene::chain::account_object</label>
        <link refid="classgraphene_1_1chain_1_1account__object"/>
        <childnode refid="3391" relation="public-inheritance">
        </childnode>
        <childnode refid="3392" relation="usage">
          <edgelabel>allowed_assets</edgelabel>
        </childnode>
        <childnode refid="3393" relation="usage">
          <edgelabel>owner_special_authority</edgelabel>
          <edgelabel>active_special_authority</edgelabel>
        </childnode>
        <childnode refid="3395" relation="usage">
          <edgelabel>cashback_vb</edgelabel>
        </childnode>
        <childnode refid="3396" relation="usage">
          <edgelabel>options</edgelabel>
        </childnode>
        <childnode refid="3374" relation="usage">
          <edgelabel>lifetime_referrer</edgelabel>
          <edgelabel>registrar</edgelabel>
          <edgelabel>referrer</edgelabel>
        </childnode>
        <childnode refid="3369" relation="usage">
          <edgelabel>name</edgelabel>
        </childnode>
        <childnode refid="3400" relation="usage">
          <edgelabel>active</edgelabel>
          <edgelabel>owner</edgelabel>
        </childnode>
        <childnode refid="3404" relation="usage">
          <edgelabel>whitelisted_accounts</edgelabel>
          <edgelabel>blacklisted_accounts</edgelabel>
        </childnode>
      </node>
      <node id="3404">
        <label>set&lt; account_id_type &gt;</label>
      </node>
      <node id="3374">
        <label>account_id_type</label>
      </node>
      <node id="3391">
        <label>graphene::db::abstract_object&lt; account_object &gt;</label>
        <link refid="classgraphene_1_1db_1_1abstract__object"/>
        <childnode refid="3360" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3401">
        <label>flat_map&lt; graphene::protocol::public_key_type, weight_type &gt;</label>
      </node>
      <node id="3371">
        <label>flat_set&lt; account_id_type &gt;</label>
      </node>
      <node id="3354">
        <label>graphene::chain::evaluator&lt; DerivedEvaluator &gt;</label>
        <link refid="classgraphene_1_1chain_1_1evaluator"/>
        <childnode refid="3355" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3357">
        <label>fc::safe&lt; int64_t &gt;</label>
        <link refid="structfc_1_1safe"/>
      </node>
      <node id="3363">
        <label>graphene::protocol::asset_options</label>
        <link refid="structgraphene_1_1protocol_1_1asset__options"/>
        <childnode refid="3364" relation="usage">
          <edgelabel>extensions</edgelabel>
        </childnode>
        <childnode refid="3368" relation="usage">
          <edgelabel>whitelist_markets</edgelabel>
          <edgelabel>blacklist_markets</edgelabel>
        </childnode>
        <childnode refid="3357" relation="usage">
          <edgelabel>max_market_fee</edgelabel>
          <edgelabel>max_supply</edgelabel>
        </childnode>
        <childnode refid="3369" relation="usage">
          <edgelabel>description</edgelabel>
        </childnode>
        <childnode refid="3370" relation="usage">
          <edgelabel>core_exchange_rate</edgelabel>
        </childnode>
        <childnode refid="3371" relation="usage">
          <edgelabel>whitelist_authorities</edgelabel>
          <edgelabel>blacklist_authorities</edgelabel>
        </childnode>
      </node>
      <node id="3385">
        <label>flat_set&lt; graphene::protocol::public_key_type &gt;</label>
      </node>
      <node id="3355">
        <label>graphene::chain::generic_evaluator</label>
        <link refid="classgraphene_1_1chain_1_1generic__evaluator"/>
        <childnode refid="3356" relation="usage">
          <edgelabel>fee_from_account</edgelabel>
        </childnode>
        <childnode refid="3358" relation="usage">
          <edgelabel>fee_asset</edgelabel>
        </childnode>
        <childnode refid="3357" relation="usage">
          <edgelabel>core_fee_paid</edgelabel>
        </childnode>
        <childnode refid="3375" relation="usage">
          <edgelabel>trx_state</edgelabel>
        </childnode>
        <childnode refid="3386" relation="usage">
          <edgelabel>fee_paying_account_statistics</edgelabel>
        </childnode>
        <childnode refid="3388" relation="usage">
          <edgelabel>fee_asset_dyn_data</edgelabel>
        </childnode>
        <childnode refid="3390" relation="usage">
          <edgelabel>fee_paying_account</edgelabel>
        </childnode>
      </node>
      <node id="3383">
        <label>fc::time_point_sec</label>
        <link refid="classfc_1_1time__point__sec"/>
      </node>
      <node id="3377">
        <label>graphene::db::object_database</label>
        <link refid="classgraphene_1_1db_1_1object__database"/>
        <childnode refid="3378" relation="usage">
          <edgelabel>_undo_db</edgelabel>
        </childnode>
      </node>
      <node id="3399">
        <label>fc::zero_initialized_array&lt; unsigned char, 33 &gt;</label>
        <link refid="classfc_1_1zero__initialized__array"/>
      </node>
      <node id="3379">
        <label>vector&lt; fc::static_variant &gt;</label>
      </node>
      <node id="3362">
        <label>fc::optional&lt; asset_bitasset_data_id_type &gt;</label>
        <link refid="classfc_1_1optional"/>
      </node>
      <node id="3356">
        <label>graphene::protocol::asset</label>
        <link refid="structgraphene_1_1protocol_1_1asset"/>
        <childnode refid="3357" relation="usage">
          <edgelabel>amount</edgelabel>
        </childnode>
      </node>
      <node id="3358">
        <label>graphene::chain::asset_object</label>
        <link refid="classgraphene_1_1chain_1_1asset__object"/>
        <childnode refid="3359" relation="public-inheritance">
        </childnode>
        <childnode refid="3362" relation="usage">
          <edgelabel>bitasset_data_id</edgelabel>
        </childnode>
        <childnode refid="3363" relation="usage">
          <edgelabel>options</edgelabel>
        </childnode>
        <childnode refid="3372" relation="usage">
          <edgelabel>for_liquidity_pool</edgelabel>
        </childnode>
        <childnode refid="3373" relation="usage">
          <edgelabel>buyback_account</edgelabel>
        </childnode>
        <childnode refid="3374" relation="usage">
          <edgelabel>issuer</edgelabel>
        </childnode>
        <childnode refid="3369" relation="usage">
          <edgelabel>symbol</edgelabel>
        </childnode>
      </node>
      <node id="3361">
        <label>graphene::db::object_id_type</label>
        <link refid="structgraphene_1_1db_1_1object__id__type"/>
      </node>
      <node id="3392">
        <label>fc::optional&lt; flat_set&lt; asset_id_type &gt; &gt;</label>
        <link refid="classfc_1_1optional"/>
      </node>
      <node id="3376">
        <label>graphene::chain::database</label>
        <link refid="classgraphene_1_1chain_1_1database"/>
        <childnode refid="3377" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3394">
        <label>fc::impl::dynamic_storage</label>
        <link refid="classfc_1_1impl_1_1dynamic__storage"/>
      </node>
      <node id="3360">
        <label>graphene::db::object</label>
        <link refid="classgraphene_1_1db_1_1object"/>
        <childnode refid="3361" relation="usage">
          <edgelabel>id</edgelabel>
        </childnode>
      </node>
      <node id="3398">
        <label>graphene::protocol::public_key_type</label>
        <link refid="structgraphene_1_1protocol_1_1public__key__type"/>
        <childnode refid="3399" relation="usage">
          <edgelabel>key_data</edgelabel>
        </childnode>
      </node>
      <node id="3364">
        <label>graphene::protocol::extension&lt; additional_asset_options &gt;</label>
        <link refid="structgraphene_1_1protocol_1_1extension"/>
        <childnode refid="3365" relation="usage">
          <edgelabel>value</edgelabel>
        </childnode>
      </node>
      <node id="3375">
        <label>graphene::chain::transaction_evaluation_state</label>
        <link refid="classgraphene_1_1chain_1_1transaction__evaluation__state"/>
        <childnode refid="3376" relation="usage">
          <edgelabel>_db</edgelabel>
        </childnode>
        <childnode refid="3379" relation="usage">
          <edgelabel>operation_results</edgelabel>
        </childnode>
        <childnode refid="3380" relation="usage">
          <edgelabel>_trx</edgelabel>
        </childnode>
      </node>
      <node id="3384">
        <label>vector&lt; fc::zero_initialized_array &gt;</label>
      </node>
      <node id="3397">
        <label>flat_set&lt; graphene::protocol::vote_id_type &gt;</label>
      </node>
      <node id="3373">
        <label>fc::optional&lt; account_id_type &gt;</label>
        <link refid="classfc_1_1optional"/>
      </node>
      <node id="3386">
        <label>graphene::chain::account_statistics_object</label>
        <link refid="classgraphene_1_1chain_1_1account__statistics__object"/>
        <childnode refid="3387" relation="public-inheritance">
        </childnode>
        <childnode refid="3374" relation="usage">
          <edgelabel>owner</edgelabel>
        </childnode>
        <childnode refid="3357" relation="usage">
          <edgelabel>total_pob_value</edgelabel>
          <edgelabel>pending_fees</edgelabel>
          <edgelabel>core_in_balance</edgelabel>
          <edgelabel>total_pol_value</edgelabel>
          <edgelabel>total_core_pol</edgelabel>
          <edgelabel>total_core_inactive</edgelabel>
          <edgelabel>lifetime_fees_paid</edgelabel>
          <edgelabel>pending_vested_fees</edgelabel>
          <edgelabel>total_core_in_orders</edgelabel>
          <edgelabel>total_core_pob</edgelabel>
          <edgelabel>...</edgelabel>
        </childnode>
        <childnode refid="3369" relation="usage">
          <edgelabel>name</edgelabel>
        </childnode>
      </node>
      <node id="3378">
        <label>graphene::db::undo_database</label>
        <link refid="classgraphene_1_1db_1_1undo__database"/>
      </node>
      <node id="3366">
        <label>fc::optional&lt; uint16_t &gt;</label>
        <link refid="classfc_1_1optional"/>
      </node>
      <node id="3400">
        <label>graphene::protocol::authority</label>
        <link refid="structgraphene_1_1protocol_1_1authority"/>
        <childnode refid="3401" relation="usage">
          <edgelabel>key_auths</edgelabel>
        </childnode>
        <childnode refid="3402" relation="usage">
          <edgelabel>account_auths</edgelabel>
        </childnode>
        <childnode refid="3403" relation="usage">
          <edgelabel>address_auths</edgelabel>
        </childnode>
      </node>
      <node id="3380">
        <label>graphene::protocol::signed_transaction</label>
        <link refid="classgraphene_1_1protocol_1_1signed__transaction"/>
        <childnode refid="3381" relation="public-inheritance">
        </childnode>
        <childnode refid="3384" relation="usage">
          <edgelabel>signatures</edgelabel>
        </childnode>
        <childnode refid="3385" relation="usage">
          <edgelabel>_signees</edgelabel>
        </childnode>
      </node>
      <node id="3402">
        <label>flat_map&lt; account_id_type, weight_type &gt;</label>
      </node>
      <node id="3381">
        <label>graphene::protocol::transaction</label>
        <link refid="classgraphene_1_1protocol_1_1transaction"/>
        <childnode refid="3382" relation="usage">
          <edgelabel>_tx_id_buffer</edgelabel>
        </childnode>
        <childnode refid="3383" relation="usage">
          <edgelabel>expiration</edgelabel>
        </childnode>
        <childnode refid="3379" relation="usage">
          <edgelabel>operations</edgelabel>
        </childnode>
      </node>
      <node id="3388">
        <label>graphene::chain::asset_dynamic_data_object</label>
        <link refid="classgraphene_1_1chain_1_1asset__dynamic__data__object"/>
        <childnode refid="3389" relation="public-inheritance">
        </childnode>
        <childnode refid="3357" relation="usage">
          <edgelabel>accumulated_collateral_fees</edgelabel>
          <edgelabel>confidential_supply</edgelabel>
          <edgelabel>fee_pool</edgelabel>
          <edgelabel>current_supply</edgelabel>
          <edgelabel>accumulated_fees</edgelabel>
        </childnode>
      </node>
      <node id="3387">
        <label>graphene::db::abstract_object&lt; account_statistics_object &gt;</label>
        <link refid="classgraphene_1_1db_1_1abstract__object"/>
        <childnode refid="3360" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="libraries/chain/include/graphene/chain/evaluator.hpp" line="143" column="1" bodyfile="libraries/chain/include/graphene/chain/evaluator.hpp" bodystart="142" bodyend="179"/>
    <listofallmembers>
      <member refid="classgraphene_1_1chain_1_1evaluator_1a4186e76425438ece8cd64bfc6961608c" prot="public" virt="virtual"><scope>graphene::chain::evaluator</scope><name>apply</name></member>
      <member refid="classgraphene_1_1chain_1_1generic__evaluator_1ab9da3acadc46e1d4a87ea91457de9a91" prot="protected" virt="non-virtual"><scope>graphene::chain::evaluator</scope><name>calculate_fee_for_operation</name></member>
      <member refid="classgraphene_1_1chain_1_1generic__evaluator_1a65bd5bfc5112f84b364ec43c1c17a699" prot="protected" virt="virtual"><scope>graphene::chain::evaluator</scope><name>convert_fee</name></member>
      <member refid="classgraphene_1_1chain_1_1generic__evaluator_1aa7e2ca176a3ce6690e17536549fb4c5b" prot="protected" virt="non-virtual"><scope>graphene::chain::evaluator</scope><name>core_fee_paid</name></member>
      <member refid="classgraphene_1_1chain_1_1generic__evaluator_1a9f906a5670b56865a2e9b4029a67ba81" prot="public" virt="non-virtual"><scope>graphene::chain::evaluator</scope><name>db</name></member>
      <member refid="classgraphene_1_1chain_1_1generic__evaluator_1a945e2f8e31ad68bd802618fff3a3d5d3" prot="protected" virt="non-virtual"><scope>graphene::chain::evaluator</scope><name>db_adjust_balance</name></member>
      <member refid="classgraphene_1_1chain_1_1evaluator_1ad206096f93b8a944901c2f0cb1bed151" prot="public" virt="virtual"><scope>graphene::chain::evaluator</scope><name>evaluate</name></member>
      <member refid="classgraphene_1_1chain_1_1generic__evaluator_1a07efd4fa9493389424fdaa38e626ebd4" prot="protected" virt="non-virtual"><scope>graphene::chain::evaluator</scope><name>fee_asset</name></member>
      <member refid="classgraphene_1_1chain_1_1generic__evaluator_1ad602d55adcb7229b91397a514c27a1c7" prot="protected" virt="non-virtual"><scope>graphene::chain::evaluator</scope><name>fee_asset_dyn_data</name></member>
      <member refid="classgraphene_1_1chain_1_1generic__evaluator_1aeced28daa14ff4a07b9eadf14f782b5a" prot="protected" virt="non-virtual"><scope>graphene::chain::evaluator</scope><name>fee_from_account</name></member>
      <member refid="classgraphene_1_1chain_1_1generic__evaluator_1a1ad16d69e89d5e9c04299b92e324bf7d" prot="protected" virt="non-virtual"><scope>graphene::chain::evaluator</scope><name>fee_paying_account</name></member>
      <member refid="classgraphene_1_1chain_1_1generic__evaluator_1a9f7422a38474ca4ede2f9bd82ac6cf91" prot="protected" virt="non-virtual"><scope>graphene::chain::evaluator</scope><name>fee_paying_account_statistics</name></member>
      <member refid="classgraphene_1_1chain_1_1generic__evaluator_1ab6ad5b670242e3dbcde741a5cc9ddad8" prot="protected" virt="non-virtual"><scope>graphene::chain::evaluator</scope><name>get_relative_id</name></member>
      <member refid="classgraphene_1_1chain_1_1evaluator_1a1fc01577ffad44dfa3283a5a1c79a7e6" prot="public" virt="virtual"><scope>graphene::chain::evaluator</scope><name>get_type</name></member>
      <member refid="classgraphene_1_1chain_1_1generic__evaluator_1a6ef4f7c04d0d0289cf95a9d18d5142cb" prot="protected" virt="non-virtual"><scope>graphene::chain::evaluator</scope><name>pay_fba_fee</name></member>
      <member refid="classgraphene_1_1chain_1_1generic__evaluator_1a832b9ba03e2d8b1dfb8e3e91d3ec49bc" prot="public" virt="virtual"><scope>graphene::chain::evaluator</scope><name>pay_fee</name></member>
      <member refid="classgraphene_1_1chain_1_1generic__evaluator_1a90ff8169dbff062373ea5fdc98e6c484" prot="protected" virt="non-virtual"><scope>graphene::chain::evaluator</scope><name>prepare_fee</name></member>
      <member refid="classgraphene_1_1chain_1_1generic__evaluator_1ad62bf969f43cfd4900a0f4fdadc2b780" prot="public" virt="virtual"><scope>graphene::chain::evaluator</scope><name>start_evaluate</name></member>
      <member refid="classgraphene_1_1chain_1_1generic__evaluator_1a7f87a32183ec768a0402913e0e64d881" prot="protected" virt="non-virtual"><scope>graphene::chain::evaluator</scope><name>trx_state</name></member>
      <member refid="classgraphene_1_1chain_1_1generic__evaluator_1ad716bd9ef32c10ba2a136cb0d7e24c1f" prot="public" virt="virtual"><scope>graphene::chain::evaluator</scope><name>~generic_evaluator</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
