<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="structgraphene_1_1protocol_1_1asset__claim__fees__operation_1_1additional__options__type" kind="struct" language="C++" prot="public">
    <compoundname>graphene::protocol::asset_claim_fees_operation::additional_options_type</compoundname>
    <includes refid="asset__ops_8hpp" local="no">asset_ops.hpp</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1asset__claim__fees__operation_1_1additional__options__type_1aea774e8c7064a80429883c412ffeba6b" prot="public" static="no" mutable="no">
        <type><ref refid="classfc_1_1optional" kindref="compound">fc::optional</ref>&lt; asset_id_type &gt;</type>
        <definition>fc::optional&lt;asset_id_type&gt; graphene::protocol::asset_claim_fees_operation::additional_options_type::claim_from_asset_id</definition>
        <argsstring></argsstring>
        <name>claim_from_asset_id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Which asset to claim fees from. This is needed, e.g., to claim collateral- denominated fees from a collateral-backed smart asset. If unset, assumed to be same asset as amount_to_claim is denominated in, such as would be the case when claiming market fees. If set, validation requires it to be a different asset_id than amount_to_claim (else there would exist two ways to form the same request). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/asset_ops.hpp" line="542" column="23" bodyfile="libraries/protocol/include/graphene/protocol/asset_ops.hpp" bodystart="542" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="2">
        <label>fc::optional&lt; asset_id_type &gt;</label>
        <link refid="classfc_1_1optional"/>
      </node>
      <node id="1">
        <label>graphene::protocol::asset_claim_fees_operation::additional_options_type</label>
        <link refid="structgraphene_1_1protocol_1_1asset__claim__fees__operation_1_1additional__options__type"/>
        <childnode refid="2" relation="usage">
          <edgelabel>claim_from_asset_id</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="libraries/protocol/include/graphene/protocol/asset_ops.hpp" line="536" column="1" bodyfile="libraries/protocol/include/graphene/protocol/asset_ops.hpp" bodystart="535" bodyend="543"/>
    <listofallmembers>
      <member refid="structgraphene_1_1protocol_1_1asset__claim__fees__operation_1_1additional__options__type_1aea774e8c7064a80429883c412ffeba6b" prot="public" virt="non-virtual"><scope>graphene::protocol::asset_claim_fees_operation::additional_options_type</scope><name>claim_from_asset_id</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
