<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classfc_1_1sha512" kind="class" language="C++" prot="public">
    <compoundname>fc::sha512</compoundname>
    <includes refid="sha512_8hpp" local="no">sha512.hpp</includes>
    <innerclass refid="classfc_1_1sha512_1_1encoder" prot="public">fc::sha512::encoder</innerclass>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classfc_1_1sha512_1aa0439868b3242ee76d3b319dc62b088b" prot="public" static="no" mutable="no">
        <type>boost::endian::little_uint64_buf_t</type>
        <definition>boost::endian::little_uint64_buf_t fc::sha512::_hash[8]</definition>
        <argsstring>[8]</argsstring>
        <name>_hash</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/crypto/sha512.hpp" line="67" column="1" bodyfile="libraries/fc/include/fc/crypto/sha512.hpp" bodystart="67" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classfc_1_1sha512_1a821d8aad5a2756af7345ce05dea6fa9a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fc::sha512::sha512</definition>
        <argsstring>()</argsstring>
        <name>sha512</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/crypto/sha512.hpp" line="12" column="1" bodyfile="libraries/fc/src/crypto/sha512.cpp" bodystart="12" bodyend="12"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1sha512_1af82bcace25c7186fd1351036a202bd71" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>fc::sha512::sha512</definition>
        <argsstring>(const std::string &amp;hex_str)</argsstring>
        <name>sha512</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>hex_str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/crypto/sha512.hpp" line="13" column="1" bodyfile="libraries/fc/src/crypto/sha512.cpp" bodystart="13" bodyend="15"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1sha512_1aca3b164b761dd3801ca98ba45de470da" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>string fc::sha512::str</definition>
        <argsstring>() const</argsstring>
        <name>str</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/crypto/sha512.hpp" line="15" column="1" bodyfile="libraries/fc/src/crypto/sha512.cpp" bodystart="17" bodyend="19"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1sha512_1a4078fad2223277520373d37e6e81d456" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fc::sha512::operator std::string</definition>
        <argsstring>() const</argsstring>
        <name>operator std::string</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/crypto/sha512.hpp" line="16" column="1" bodyfile="libraries/fc/src/crypto/sha512.cpp" bodystart="20" bodyend="20"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1sha512_1a3dcc46def52ac413b2fadeb1e932b447" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char * fc::sha512::data</definition>
        <argsstring>() const</argsstring>
        <name>data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/crypto/sha512.hpp" line="18" column="1" bodyfile="libraries/fc/src/crypto/sha512.cpp" bodystart="22" bodyend="22"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classfc_1_1sha512_1ae86ac4c2873d35e4a20f7a0a0b3b34e3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr size_t</type>
        <definition>static constexpr size_t fc::sha512::data_size</definition>
        <argsstring>()</argsstring>
        <name>data_size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/crypto/sha512.hpp" line="19" column="1" bodyfile="libraries/fc/include/fc/crypto/sha512.hpp" bodystart="19" bodyend="19"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1sha512_1af99a155477c84590d4f05b6d0e429b8e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classfc_1_1sha512" kindref="compound">sha512</ref></type>
        <definition>sha512 fc::sha512::hash</definition>
        <argsstring>(const char *d, uint32_t dlen)</argsstring>
        <name>hash</name>
        <param>
          <type>const char *</type>
          <declname>d</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>dlen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/crypto/sha512.hpp" line="21" column="1" bodyfile="libraries/fc/src/crypto/sha512.cpp" bodystart="34" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1sha512_1afa2090a74c86296723201735fdc7aa23" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classfc_1_1sha512" kindref="compound">sha512</ref></type>
        <definition>sha512 fc::sha512::hash</definition>
        <argsstring>(const std::string &amp;)</argsstring>
        <name>hash</name>
        <param>
          <type>const std::string &amp;</type>
          <defname>s</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/crypto/sha512.hpp" line="22" column="1" bodyfile="libraries/fc/src/crypto/sha512.cpp" bodystart="39" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1sha512_1a052b5fc57ca6dc3d626ef94a6bddcbd5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="classfc_1_1sha512" kindref="compound">sha512</ref></type>
        <definition>static sha512 fc::sha512::hash</definition>
        <argsstring>(const T &amp;t)</argsstring>
        <name>hash</name>
        <param>
          <type>const T &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/crypto/sha512.hpp" line="25" column="1" bodyfile="libraries/fc/include/fc/crypto/sha512.hpp" bodystart="25" bodyend="30"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classfc_1_1sha512_1a4b462b1c5818c74c3d5359e4ad989235" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>friend T &amp;</type>
        <definition>T&amp; operator&lt;&lt;</definition>
        <argsstring>(T &amp;ds, const sha512 &amp;ep)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>T &amp;</type>
          <declname>ds</declname>
        </param>
        <param>
          <type>const <ref refid="classfc_1_1sha512" kindref="compound">sha512</ref> &amp;</type>
          <declname>ep</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/crypto/sha512.hpp" line="49" column="1" bodyfile="libraries/fc/include/fc/crypto/sha512.hpp" bodystart="49" bodyend="52"/>
      </memberdef>
      <memberdef kind="friend" id="classfc_1_1sha512_1aa8bc9f467abf1546a02e21d69de7826c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>friend T &amp;</type>
        <definition>T&amp; operator&gt;&gt;</definition>
        <argsstring>(T &amp;ds, sha512 &amp;ep)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type>T &amp;</type>
          <declname>ds</declname>
        </param>
        <param>
          <type><ref refid="classfc_1_1sha512" kindref="compound">sha512</ref> &amp;</type>
          <declname>ep</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/crypto/sha512.hpp" line="55" column="1" bodyfile="libraries/fc/include/fc/crypto/sha512.hpp" bodystart="55" bodyend="58"/>
      </memberdef>
      <memberdef kind="friend" id="classfc_1_1sha512_1a4d802e3d693af721c4f69def59e07662" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend <ref refid="classfc_1_1sha512" kindref="compound">sha512</ref></type>
        <definition>sha512 operator&lt;&lt;</definition>
        <argsstring>(const sha512 &amp;h1, uint32_t i)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>const <ref refid="classfc_1_1sha512" kindref="compound">sha512</ref> &amp;</type>
          <declname>h1</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/crypto/sha512.hpp" line="59" column="1" bodyfile="libraries/fc/src/crypto/sha512.cpp" bodystart="55" bodyend="59"/>
      </memberdef>
      <memberdef kind="friend" id="classfc_1_1sha512_1a9e4ae326ff88f5480a089474bcfa40c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator==</definition>
        <argsstring>(const sha512 &amp;h1, const sha512 &amp;h2)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classfc_1_1sha512" kindref="compound">sha512</ref> &amp;</type>
          <declname>h1</declname>
        </param>
        <param>
          <type>const <ref refid="classfc_1_1sha512" kindref="compound">sha512</ref> &amp;</type>
          <declname>h2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/crypto/sha512.hpp" line="60" column="1" bodyfile="libraries/fc/src/crypto/sha512.cpp" bodystart="84" bodyend="86"/>
      </memberdef>
      <memberdef kind="friend" id="classfc_1_1sha512_1a6d5596380065c7a5d94c24ee6d8a0b8a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator!=</definition>
        <argsstring>(const sha512 &amp;h1, const sha512 &amp;h2)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classfc_1_1sha512" kindref="compound">sha512</ref> &amp;</type>
          <declname>h1</declname>
        </param>
        <param>
          <type>const <ref refid="classfc_1_1sha512" kindref="compound">sha512</ref> &amp;</type>
          <declname>h2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/crypto/sha512.hpp" line="61" column="1" bodyfile="libraries/fc/src/crypto/sha512.cpp" bodystart="81" bodyend="83"/>
      </memberdef>
      <memberdef kind="friend" id="classfc_1_1sha512_1a1fd23cc764b2105b2af0d3f95bd53a01" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend <ref refid="classfc_1_1sha512" kindref="compound">sha512</ref></type>
        <definition>sha512 operator^</definition>
        <argsstring>(const sha512 &amp;h1, const sha512 &amp;h2)</argsstring>
        <name>operator^</name>
        <param>
          <type>const <ref refid="classfc_1_1sha512" kindref="compound">sha512</ref> &amp;</type>
          <declname>h1</declname>
        </param>
        <param>
          <type>const <ref refid="classfc_1_1sha512" kindref="compound">sha512</ref> &amp;</type>
          <declname>h2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/crypto/sha512.hpp" line="62" column="1" bodyfile="libraries/fc/src/crypto/sha512.cpp" bodystart="60" bodyend="71"/>
      </memberdef>
      <memberdef kind="friend" id="classfc_1_1sha512_1a6481f74cab63c6fa5cb1b1e3607a0756" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator&gt;=</definition>
        <argsstring>(const sha512 &amp;h1, const sha512 &amp;h2)</argsstring>
        <name>operator&gt;=</name>
        <param>
          <type>const <ref refid="classfc_1_1sha512" kindref="compound">sha512</ref> &amp;</type>
          <declname>h1</declname>
        </param>
        <param>
          <type>const <ref refid="classfc_1_1sha512" kindref="compound">sha512</ref> &amp;</type>
          <declname>h2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/crypto/sha512.hpp" line="63" column="1" bodyfile="libraries/fc/src/crypto/sha512.cpp" bodystart="72" bodyend="74"/>
      </memberdef>
      <memberdef kind="friend" id="classfc_1_1sha512_1adc02e323d02228115f0d428e0765d09e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator&gt;</definition>
        <argsstring>(const sha512 &amp;h1, const sha512 &amp;h2)</argsstring>
        <name>operator&gt;</name>
        <param>
          <type>const <ref refid="classfc_1_1sha512" kindref="compound">sha512</ref> &amp;</type>
          <declname>h1</declname>
        </param>
        <param>
          <type>const <ref refid="classfc_1_1sha512" kindref="compound">sha512</ref> &amp;</type>
          <declname>h2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/crypto/sha512.hpp" line="64" column="1" bodyfile="libraries/fc/src/crypto/sha512.cpp" bodystart="75" bodyend="77"/>
      </memberdef>
      <memberdef kind="friend" id="classfc_1_1sha512_1a362bda52c15891f197a1c266eb2a71ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator&lt;</definition>
        <argsstring>(const sha512 &amp;h1, const sha512 &amp;h2)</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const <ref refid="classfc_1_1sha512" kindref="compound">sha512</ref> &amp;</type>
          <declname>h1</declname>
        </param>
        <param>
          <type>const <ref refid="classfc_1_1sha512" kindref="compound">sha512</ref> &amp;</type>
          <declname>h2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/crypto/sha512.hpp" line="65" column="1" bodyfile="libraries/fc/src/crypto/sha512.cpp" bodystart="78" bodyend="80"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="libraries/fc/include/fc/crypto/sha512.hpp" line="10" column="1" bodyfile="libraries/fc/include/fc/crypto/sha512.hpp" bodystart="9" bodyend="68"/>
    <listofallmembers>
      <member refid="classfc_1_1sha512_1aa0439868b3242ee76d3b319dc62b088b" prot="public" virt="non-virtual"><scope>fc::sha512</scope><name>_hash</name></member>
      <member refid="classfc_1_1sha512_1a3dcc46def52ac413b2fadeb1e932b447" prot="public" virt="non-virtual"><scope>fc::sha512</scope><name>data</name></member>
      <member refid="classfc_1_1sha512_1ae86ac4c2873d35e4a20f7a0a0b3b34e3" prot="public" virt="non-virtual"><scope>fc::sha512</scope><name>data_size</name></member>
      <member refid="classfc_1_1sha512_1af99a155477c84590d4f05b6d0e429b8e" prot="public" virt="non-virtual"><scope>fc::sha512</scope><name>hash</name></member>
      <member refid="classfc_1_1sha512_1afa2090a74c86296723201735fdc7aa23" prot="public" virt="non-virtual"><scope>fc::sha512</scope><name>hash</name></member>
      <member refid="classfc_1_1sha512_1a052b5fc57ca6dc3d626ef94a6bddcbd5" prot="public" virt="non-virtual"><scope>fc::sha512</scope><name>hash</name></member>
      <member refid="classfc_1_1sha512_1a4078fad2223277520373d37e6e81d456" prot="public" virt="non-virtual"><scope>fc::sha512</scope><name>operator std::string</name></member>
      <member refid="classfc_1_1sha512_1a6d5596380065c7a5d94c24ee6d8a0b8a" prot="public" virt="non-virtual"><scope>fc::sha512</scope><name>operator!=</name></member>
      <member refid="classfc_1_1sha512_1a362bda52c15891f197a1c266eb2a71ee" prot="public" virt="non-virtual"><scope>fc::sha512</scope><name>operator&lt;</name></member>
      <member refid="classfc_1_1sha512_1a4b462b1c5818c74c3d5359e4ad989235" prot="public" virt="non-virtual"><scope>fc::sha512</scope><name>operator&lt;&lt;</name></member>
      <member refid="classfc_1_1sha512_1a4d802e3d693af721c4f69def59e07662" prot="public" virt="non-virtual"><scope>fc::sha512</scope><name>operator&lt;&lt;</name></member>
      <member refid="classfc_1_1sha512_1a9e4ae326ff88f5480a089474bcfa40c5" prot="public" virt="non-virtual"><scope>fc::sha512</scope><name>operator==</name></member>
      <member refid="classfc_1_1sha512_1adc02e323d02228115f0d428e0765d09e" prot="public" virt="non-virtual"><scope>fc::sha512</scope><name>operator&gt;</name></member>
      <member refid="classfc_1_1sha512_1a6481f74cab63c6fa5cb1b1e3607a0756" prot="public" virt="non-virtual"><scope>fc::sha512</scope><name>operator&gt;=</name></member>
      <member refid="classfc_1_1sha512_1aa8bc9f467abf1546a02e21d69de7826c" prot="public" virt="non-virtual"><scope>fc::sha512</scope><name>operator&gt;&gt;</name></member>
      <member refid="classfc_1_1sha512_1a1fd23cc764b2105b2af0d3f95bd53a01" prot="public" virt="non-virtual"><scope>fc::sha512</scope><name>operator^</name></member>
      <member refid="classfc_1_1sha512_1a821d8aad5a2756af7345ce05dea6fa9a" prot="public" virt="non-virtual"><scope>fc::sha512</scope><name>sha512</name></member>
      <member refid="classfc_1_1sha512_1af82bcace25c7186fd1351036a202bd71" prot="public" virt="non-virtual"><scope>fc::sha512</scope><name>sha512</name></member>
      <member refid="classfc_1_1sha512_1aca3b164b761dd3801ca98ba45de470da" prot="public" virt="non-virtual"><scope>fc::sha512</scope><name>str</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
