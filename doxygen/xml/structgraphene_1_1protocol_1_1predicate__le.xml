<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structgraphene_1_1protocol_1_1predicate__le" kind="struct" language="C++" prot="public">
    <compoundname>graphene::protocol::predicate_le</compoundname>
    <basecompoundref refid="structgraphene_1_1protocol_1_1predicate__compare" prot="public" virt="non-virtual">graphene::protocol::predicate_compare&lt; Field, Argument &gt;</basecompoundref>
    <includes refid="restriction__predicate_8hxx" local="no">restriction_predicate.hxx</includes>
    <templateparamlist>
      <param>
        <type>typename Field</type>
      </param>
      <param>
        <type>typename Argument</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structgraphene_1_1protocol_1_1predicate__le_1a61ab5bc1dfc8c9ed464120a55d356fce" prot="public" static="no">
        <type><ref refid="structgraphene_1_1protocol_1_1predicate__compare" kindref="compound">predicate_compare</ref>&lt; Field, Argument &gt;</type>
        <definition>using graphene::protocol::predicate_le&lt; Field, Argument &gt;::base =  predicate_compare&lt;Field, Argument&gt;</definition>
        <argsstring></argsstring>
        <name>base</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/custom_authorities/restriction_predicate.hxx" line="229" column="1" bodyfile="libraries/protocol/custom_authorities/restriction_predicate.hxx" bodystart="229" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structgraphene_1_1protocol_1_1predicate__le_1affa934c0abd30a93f265c9e0b1b27195" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr bool</type>
        <definition>constexpr bool graphene::protocol::predicate_le&lt; Field, Argument &gt;::operator()</definition>
        <argsstring>(const Field &amp;f, const Argument &amp;a) const</argsstring>
        <name>operator()</name>
        <param>
          <type>const Field &amp;</type>
          <declname>f</declname>
        </param>
        <param>
          <type>const Argument &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/custom_authorities/restriction_predicate.hxx" line="230" column="1" bodyfile="libraries/protocol/custom_authorities/restriction_predicate.hxx" bodystart="230" bodyend="230"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="6430">
        <label>graphene::protocol::predicate_invalid&lt; Field, Argument &gt;</label>
        <link refid="structgraphene_1_1protocol_1_1predicate__invalid"/>
      </node>
      <node id="6429">
        <label>graphene::protocol::predicate_compare&lt; Field, Argument &gt;</label>
        <link refid="structgraphene_1_1protocol_1_1predicate__compare"/>
        <childnode refid="6430" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6428">
        <label>graphene::protocol::predicate_le&lt; Field, Argument &gt;</label>
        <link refid="structgraphene_1_1protocol_1_1predicate__le"/>
        <childnode refid="6429" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="6433">
        <label>graphene::protocol::predicate_invalid&lt; Field, Argument &gt;</label>
        <link refid="structgraphene_1_1protocol_1_1predicate__invalid"/>
      </node>
      <node id="6432">
        <label>graphene::protocol::predicate_compare&lt; Field, Argument &gt;</label>
        <link refid="structgraphene_1_1protocol_1_1predicate__compare"/>
        <childnode refid="6433" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6431">
        <label>graphene::protocol::predicate_le&lt; Field, Argument &gt;</label>
        <link refid="structgraphene_1_1protocol_1_1predicate__le"/>
        <childnode refid="6432" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="libraries/protocol/custom_authorities/restriction_predicate.hxx" line="228" column="1" bodyfile="libraries/protocol/custom_authorities/restriction_predicate.hxx" bodystart="228" bodyend="231"/>
    <listofallmembers>
      <member refid="structgraphene_1_1protocol_1_1predicate__le_1a61ab5bc1dfc8c9ed464120a55d356fce" prot="public" virt="non-virtual"><scope>graphene::protocol::predicate_le</scope><name>base</name></member>
      <member refid="structgraphene_1_1protocol_1_1predicate__le_1affa934c0abd30a93f265c9e0b1b27195" prot="public" virt="non-virtual"><scope>graphene::protocol::predicate_le</scope><name>operator()</name></member>
      <member refid="structgraphene_1_1protocol_1_1predicate__invalid_1ab93fc74601f7eab21fb9cc0a10b69014" prot="public" virt="non-virtual"><scope>graphene::protocol::predicate_le</scope><name>predicate_invalid</name></member>
      <member refid="structgraphene_1_1protocol_1_1predicate__invalid_1a8286fe372c0741e853098abd64535f23" prot="public" virt="non-virtual"><scope>graphene::protocol::predicate_le</scope><name>valid</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
