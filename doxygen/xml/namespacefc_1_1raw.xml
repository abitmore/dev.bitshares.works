<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="namespacefc_1_1raw" kind="namespace" language="C++">
    <compoundname>fc::raw</compoundname>
    <innerclass refid="structfc_1_1raw_1_1pack__static__variant" prot="public">fc::raw::pack_static_variant</innerclass>
    <innerclass refid="structfc_1_1raw_1_1unpack__static__variant" prot="public">fc::raw::unpack_static_variant</innerclass>
    <innerclass refid="classfc_1_1raw_1_1variant__packer" prot="public">fc::raw::variant_packer</innerclass>
    <innernamespace refid="namespacefc_1_1raw_1_1detail">fc::raw::detail</innernamespace>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespacefc_1_1raw_1afccb3526362b37a2489df717e89071ae" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>A</declname>
            <defname>A</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void fc::raw::pack</definition>
        <argsstring>(Stream &amp;s, const flat_set&lt; T, A... &gt; &amp;value, uint32_t _max_depth)</argsstring>
        <name>pack</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const flat_set&lt; T, A... &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>_max_depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/container/flat.hpp" line="11" column="1" bodyfile="libraries/fc/include/fc/container/flat.hpp" bodystart="11" bodyend="21"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1raw_1afe1441df98f7f45f900b1adf7c3d40a3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>A</declname>
            <defname>A</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void fc::raw::unpack</definition>
        <argsstring>(Stream &amp;s, flat_set&lt; T, A... &gt; &amp;value, uint32_t _max_depth)</argsstring>
        <name>unpack</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>flat_set&lt; T, A... &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>_max_depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/container/flat.hpp" line="23" column="1" bodyfile="libraries/fc/include/fc/container/flat.hpp" bodystart="23" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1raw_1a458caeacd2806bf6ca4cc2ca055a54b8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
          <param>
            <type>typename K</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>V</declname>
            <defname>V</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void fc::raw::pack</definition>
        <argsstring>(Stream &amp;s, const flat_map&lt; K, V... &gt; &amp;value, uint32_t _max_depth)</argsstring>
        <name>pack</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const flat_map&lt; K, V... &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>_max_depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/container/flat.hpp" line="37" column="1" bodyfile="libraries/fc/include/fc/container/flat.hpp" bodystart="37" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1raw_1a25f9bf518f4652f6df811b4e88a74743" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
          <param>
            <type>typename K</type>
          </param>
          <param>
            <type>typename V</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>A</declname>
            <defname>A</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void fc::raw::unpack</definition>
        <argsstring>(Stream &amp;s, flat_map&lt; K, V, A... &gt; &amp;value, uint32_t _max_depth)</argsstring>
        <name>unpack</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>flat_map&lt; K, V, A... &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>_max_depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/container/flat.hpp" line="49" column="1" bodyfile="libraries/fc/include/fc/container/flat.hpp" bodystart="49" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1raw_1a4a9f01d5d92595e08a44bcf56f9fb202" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename A</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void fc::raw::pack</definition>
        <argsstring>(Stream &amp;s, const bip::vector&lt; T, A &gt; &amp;value, uint32_t _max_depth)</argsstring>
        <name>pack</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const bip::vector&lt; T, A &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>_max_depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/container/flat.hpp" line="65" column="1" bodyfile="libraries/fc/include/fc/container/flat.hpp" bodystart="65" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1raw_1af6949fc892c1222318acfd36ff220187" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename A</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void fc::raw::unpack</definition>
        <argsstring>(Stream &amp;s, bip::vector&lt; T, A &gt; &amp;value, uint32_t _max_depth)</argsstring>
        <name>unpack</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>bip::vector&lt; T, A &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>_max_depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/container/flat.hpp" line="82" column="1" bodyfile="libraries/fc/include/fc/container/flat.hpp" bodystart="82" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1raw_1a4ab1d948b03a91f2349d3e97eb950a16" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
          <param>
            <type>size_t</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void fc::raw::pack</definition>
        <argsstring>(Stream &amp;s, const zero_initialized_array&lt; unsigned char, N &gt; &amp;v, uint32_t _max_depth)</argsstring>
        <name>pack</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const <ref refid="classfc_1_1zero__initialized__array" kindref="compound">zero_initialized_array</ref>&lt; unsigned char, N &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>_max_depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/container/zeroed_array.hpp" line="64" column="1" bodyfile="libraries/fc/include/fc/container/zeroed_array.hpp" bodystart="64" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1raw_1a09ae049c6337b239ad1fa72ba25a3f42" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
          <param>
            <type>size_t</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void fc::raw::unpack</definition>
        <argsstring>(Stream &amp;s, zero_initialized_array&lt; unsigned char, N &gt; &amp;v, uint32_t _max_depth)</argsstring>
        <name>unpack</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="classfc_1_1zero__initialized__array" kindref="compound">zero_initialized_array</ref>&lt; unsigned char, N &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>_max_depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/container/zeroed_array.hpp" line="68" column="1" bodyfile="libraries/fc/include/fc/container/zeroed_array.hpp" bodystart="68" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1raw_1a40e83a1b77132f8181e1a2df368c7a8f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void fc::raw::unpack</definition>
        <argsstring>(Stream &amp;s, fc::ecc::public_key &amp;pk, uint32_t _max_depth)</argsstring>
        <name>unpack</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="classfc_1_1ecc_1_1public__key" kindref="compound">fc::ecc::public_key</ref> &amp;</type>
          <declname>pk</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>_max_depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/crypto/elliptic.hpp" line="240" column="1" bodyfile="libraries/fc/include/fc/crypto/elliptic.hpp" bodystart="240" bodyend="246"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1raw_1a32306474378f795d4663a9c4412902ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void fc::raw::pack</definition>
        <argsstring>(Stream &amp;s, const fc::ecc::public_key &amp;pk, uint32_t _max_depth)</argsstring>
        <name>pack</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const <ref refid="classfc_1_1ecc_1_1public__key" kindref="compound">fc::ecc::public_key</ref> &amp;</type>
          <declname>pk</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>_max_depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/crypto/elliptic.hpp" line="249" column="1" bodyfile="libraries/fc/include/fc/crypto/elliptic.hpp" bodystart="249" bodyend="253"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1raw_1a82a53bf5988073f9e93f3052da831ff5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void fc::raw::unpack</definition>
        <argsstring>(Stream &amp;s, fc::ecc::private_key &amp;pk, uint32_t _max_depth)</argsstring>
        <name>unpack</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="classfc_1_1ecc_1_1private__key" kindref="compound">fc::ecc::private_key</ref> &amp;</type>
          <declname>pk</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>_max_depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/crypto/elliptic.hpp" line="256" column="1" bodyfile="libraries/fc/include/fc/crypto/elliptic.hpp" bodystart="256" bodyend="262"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1raw_1a71a89044cf6aeb7b456b81684dc099b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void fc::raw::pack</definition>
        <argsstring>(Stream &amp;s, const fc::ecc::private_key &amp;pk, uint32_t _max_depth)</argsstring>
        <name>pack</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const <ref refid="classfc_1_1ecc_1_1private__key" kindref="compound">fc::ecc::private_key</ref> &amp;</type>
          <declname>pk</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>_max_depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/crypto/elliptic.hpp" line="265" column="1" bodyfile="libraries/fc/include/fc/crypto/elliptic.hpp" bodystart="265" bodyend="269"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1raw_1a1ee2ac0fb1c66ea055c16378e4992141" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void fc::raw::pack</definition>
        <argsstring>(T &amp;ds, const hash160 &amp;ep, uint32_t _max_depth)</argsstring>
        <name>pack</name>
        <param>
          <type>T &amp;</type>
          <declname>ds</declname>
        </param>
        <param>
          <type>const <ref refid="classfc_1_1hash160" kindref="compound">hash160</ref> &amp;</type>
          <declname>ep</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>_max_depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/crypto/hash160.hpp" line="96" column="1" bodyfile="libraries/fc/include/fc/crypto/hash160.hpp" bodystart="96" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1raw_1ac396fcd50877c08a15b240136eac2a7b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void fc::raw::unpack</definition>
        <argsstring>(T &amp;ds, hash160 &amp;ep, uint32_t _max_depth)</argsstring>
        <name>unpack</name>
        <param>
          <type>T &amp;</type>
          <declname>ds</declname>
        </param>
        <param>
          <type><ref refid="classfc_1_1hash160" kindref="compound">hash160</ref> &amp;</type>
          <declname>ep</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>_max_depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/crypto/hash160.hpp" line="101" column="1" bodyfile="libraries/fc/include/fc/crypto/hash160.hpp" bodystart="101" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1raw_1a2d651bdb3282b9ab73d1187808fe4fe5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void fc::raw::pack</definition>
        <argsstring>(T &amp;ds, const ripemd160 &amp;ep, uint32_t _max_depth)</argsstring>
        <name>pack</name>
        <param>
          <type>T &amp;</type>
          <declname>ds</declname>
        </param>
        <param>
          <type>const <ref refid="classfc_1_1ripemd160" kindref="compound">ripemd160</ref> &amp;</type>
          <declname>ep</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>_max_depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/crypto/ripemd160.hpp" line="77" column="1" bodyfile="libraries/fc/include/fc/crypto/ripemd160.hpp" bodystart="77" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1raw_1ac8407dd7e8ed69eacc3c2bad4307b4e6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void fc::raw::unpack</definition>
        <argsstring>(T &amp;ds, ripemd160 &amp;ep, uint32_t _max_depth)</argsstring>
        <name>unpack</name>
        <param>
          <type>T &amp;</type>
          <declname>ds</declname>
        </param>
        <param>
          <type><ref refid="classfc_1_1ripemd160" kindref="compound">ripemd160</ref> &amp;</type>
          <declname>ep</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>_max_depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/crypto/ripemd160.hpp" line="82" column="1" bodyfile="libraries/fc/include/fc/crypto/ripemd160.hpp" bodystart="82" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1raw_1a69852912ac2b9e39e1400e5380526dec" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void fc::raw::pack</definition>
        <argsstring>(T &amp;ds, const sha1 &amp;ep, uint32_t _max_depth)</argsstring>
        <name>pack</name>
        <param>
          <type>T &amp;</type>
          <declname>ds</declname>
        </param>
        <param>
          <type>const <ref refid="classfc_1_1sha1" kindref="compound">sha1</ref> &amp;</type>
          <declname>ep</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>_max_depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/crypto/sha1.hpp" line="74" column="1" bodyfile="libraries/fc/include/fc/crypto/sha1.hpp" bodystart="74" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1raw_1a13d5be2b5564ebbd2d000eb9308afa5b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void fc::raw::unpack</definition>
        <argsstring>(T &amp;ds, sha1 &amp;ep, uint32_t _max_depth)</argsstring>
        <name>unpack</name>
        <param>
          <type>T &amp;</type>
          <declname>ds</declname>
        </param>
        <param>
          <type><ref refid="classfc_1_1sha1" kindref="compound">sha1</ref> &amp;</type>
          <declname>ep</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>_max_depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/crypto/sha1.hpp" line="79" column="1" bodyfile="libraries/fc/include/fc/crypto/sha1.hpp" bodystart="79" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1raw_1a21eee530d5cd8d768bec65f0e8e45222" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void fc::raw::pack</definition>
        <argsstring>(T &amp;ds, const sha224 &amp;ep, uint32_t _max_depth)</argsstring>
        <name>pack</name>
        <param>
          <type>T &amp;</type>
          <declname>ds</declname>
        </param>
        <param>
          <type>const <ref refid="classfc_1_1sha224" kindref="compound">sha224</ref> &amp;</type>
          <declname>ep</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>_max_depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/crypto/sha224.hpp" line="74" column="1" bodyfile="libraries/fc/include/fc/crypto/sha224.hpp" bodystart="74" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1raw_1aee34991b90be7c59bb911d64bdd385e6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void fc::raw::unpack</definition>
        <argsstring>(T &amp;ds, sha224 &amp;ep, uint32_t _max_depth)</argsstring>
        <name>unpack</name>
        <param>
          <type>T &amp;</type>
          <declname>ds</declname>
        </param>
        <param>
          <type><ref refid="classfc_1_1sha224" kindref="compound">sha224</ref> &amp;</type>
          <declname>ep</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>_max_depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/crypto/sha224.hpp" line="79" column="1" bodyfile="libraries/fc/include/fc/crypto/sha224.hpp" bodystart="79" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1raw_1a53f6f43c0377b2a90f707f31e5f96514" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void fc::raw::pack</definition>
        <argsstring>(T &amp;ds, const sha256 &amp;ep, uint32_t _max_depth)</argsstring>
        <name>pack</name>
        <param>
          <type>T &amp;</type>
          <declname>ds</declname>
        </param>
        <param>
          <type>const <ref refid="classfc_1_1sha256" kindref="compound">sha256</ref> &amp;</type>
          <declname>ep</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>_max_depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/crypto/sha256.hpp" line="77" column="1" bodyfile="libraries/fc/include/fc/crypto/sha256.hpp" bodystart="77" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1raw_1a1c1e83f56b73437f7985a75eba1a3bab" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void fc::raw::unpack</definition>
        <argsstring>(T &amp;ds, sha256 &amp;ep, uint32_t _max_depth)</argsstring>
        <name>unpack</name>
        <param>
          <type>T &amp;</type>
          <declname>ds</declname>
        </param>
        <param>
          <type><ref refid="classfc_1_1sha256" kindref="compound">sha256</ref> &amp;</type>
          <declname>ep</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>_max_depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/crypto/sha256.hpp" line="82" column="1" bodyfile="libraries/fc/include/fc/crypto/sha256.hpp" bodystart="82" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1raw_1a0150701b345a17016e87802b65b57650" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void fc::raw::pack</definition>
        <argsstring>(T &amp;ds, const sha512 &amp;ep, uint32_t _max_depth)</argsstring>
        <name>pack</name>
        <param>
          <type>T &amp;</type>
          <declname>ds</declname>
        </param>
        <param>
          <type>const <ref refid="classfc_1_1sha512" kindref="compound">sha512</ref> &amp;</type>
          <declname>ep</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>_max_depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/crypto/sha512.hpp" line="73" column="1" bodyfile="libraries/fc/include/fc/crypto/sha512.hpp" bodystart="73" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1raw_1a2818bc21b4f356706cecdcebc7830af8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void fc::raw::unpack</definition>
        <argsstring>(T &amp;ds, sha512 &amp;ep, uint32_t _max_depth)</argsstring>
        <name>unpack</name>
        <param>
          <type>T &amp;</type>
          <declname>ds</declname>
        </param>
        <param>
          <type><ref refid="classfc_1_1sha512" kindref="compound">sha512</ref> &amp;</type>
          <declname>ep</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>_max_depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/crypto/sha512.hpp" line="78" column="1" bodyfile="libraries/fc/include/fc/crypto/sha512.hpp" bodystart="78" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1raw_1a0c15764c53ab8689c9931a058bcc04fc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
          <param>
            <type>typename IntType</type>
          </param>
          <param>
            <type>typename EnumType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void fc::raw::pack</definition>
        <argsstring>(Stream &amp;s, const fc::enum_type&lt; IntType, EnumType &gt; &amp;tp, uint32_t _max_depth)</argsstring>
        <name>pack</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const <ref refid="classfc_1_1enum__type" kindref="compound">fc::enum_type</ref>&lt; IntType, EnumType &gt; &amp;</type>
          <declname>tp</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>_max_depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/enum_type.hpp" line="66" column="1" bodyfile="libraries/fc/include/fc/io/enum_type.hpp" bodystart="66" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1raw_1aa9c84629b6c5d8d1ec5a7baa4721444e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
          <param>
            <type>typename IntType</type>
          </param>
          <param>
            <type>typename EnumType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void fc::raw::unpack</definition>
        <argsstring>(Stream &amp;s, fc::enum_type&lt; IntType, EnumType &gt; &amp;tp, uint32_t _max_depth)</argsstring>
        <name>unpack</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="classfc_1_1enum__type" kindref="compound">fc::enum_type</ref>&lt; IntType, EnumType &gt; &amp;</type>
          <declname>tp</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>_max_depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/enum_type.hpp" line="73" column="1" bodyfile="libraries/fc/include/fc/io/enum_type.hpp" bodystart="73" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1raw_1ae232b9b720acc6e34f46a6e19a4d8bf6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
          <param>
            <type>typename Arg0</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void fc::raw::pack</definition>
        <argsstring>(Stream &amp;s, const Arg0 &amp;a0, Args... args, uint32_t _max_depth)</argsstring>
        <name>pack</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const Arg0 &amp;</type>
          <declname>a0</declname>
        </param>
        <param>
          <type>Args...</type>
          <declname>args</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>_max_depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/raw.hpp" line="21" column="1" bodyfile="libraries/fc/include/fc/io/raw.hpp" bodystart="21" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1raw_1a2667f29dc7893d4c924914fa454e069e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void fc::raw::pack</definition>
        <argsstring>(Stream &amp;s, const uint128_t &amp;v, uint32_t _max_depth)</argsstring>
        <name>pack</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const uint128_t &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>_max_depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/raw.hpp" line="29" column="1" bodyfile="libraries/fc/include/fc/io/raw.hpp" bodystart="29" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1raw_1a7bf7e9040f5ebae15f7ddbb9ea5c3561" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void fc::raw::unpack</definition>
        <argsstring>(Stream &amp;s, uint128_t &amp;v, uint32_t _max_depth)</argsstring>
        <name>unpack</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>uint128_t &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>_max_depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/raw.hpp" line="37" column="1" bodyfile="libraries/fc/include/fc/io/raw.hpp" bodystart="37" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1raw_1ad19dc85c0d80f2f9ca097777d5d53067" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void fc::raw::pack</definition>
        <argsstring>(Stream &amp;s, const fc::exception &amp;e, uint32_t _max_depth)</argsstring>
        <name>pack</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const <ref refid="classfc_1_1exception" kindref="compound">fc::exception</ref> &amp;</type>
          <declname>e</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>_max_depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/raw.hpp" line="45" column="1" bodyfile="libraries/fc/include/fc/io/raw.hpp" bodystart="45" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1raw_1a90534d3a994b411ad4f599f6763d3e6f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void fc::raw::unpack</definition>
        <argsstring>(Stream &amp;s, fc::exception &amp;e, uint32_t _max_depth)</argsstring>
        <name>unpack</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="classfc_1_1exception" kindref="compound">fc::exception</ref> &amp;</type>
          <declname>e</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>_max_depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/raw.hpp" line="55" column="1" bodyfile="libraries/fc/include/fc/io/raw.hpp" bodystart="55" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1raw_1ae9d8b5c872c7f321f322352139b181c6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void fc::raw::pack</definition>
        <argsstring>(Stream &amp;s, const fc::log_message &amp;msg, uint32_t _max_depth)</argsstring>
        <name>pack</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const <ref refid="classfc_1_1log__message" kindref="compound">fc::log_message</ref> &amp;</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>_max_depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/raw.hpp" line="72" column="1" bodyfile="libraries/fc/include/fc/io/raw.hpp" bodystart="72" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1raw_1ac79a3cb934b097b03745d2d5ed1e7c39" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void fc::raw::unpack</definition>
        <argsstring>(Stream &amp;s, fc::log_message &amp;msg, uint32_t _max_depth)</argsstring>
        <name>unpack</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="classfc_1_1log__message" kindref="compound">fc::log_message</ref> &amp;</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>_max_depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/raw.hpp" line="79" column="1" bodyfile="libraries/fc/include/fc/io/raw.hpp" bodystart="79" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1raw_1a04464e50ab346281743c434d9288b390" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void fc::raw::pack</definition>
        <argsstring>(Stream &amp;s, const fc::path &amp;tp, uint32_t _max_depth)</argsstring>
        <name>pack</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const <ref refid="classfc_1_1path" kindref="compound">fc::path</ref> &amp;</type>
          <declname>tp</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>_max_depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/raw.hpp" line="89" column="1" bodyfile="libraries/fc/include/fc/io/raw.hpp" bodystart="89" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1raw_1a718e84e4076299a516833eb2f9d0e7ac" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void fc::raw::unpack</definition>
        <argsstring>(Stream &amp;s, fc::path &amp;tp, uint32_t _max_depth)</argsstring>
        <name>unpack</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="classfc_1_1path" kindref="compound">fc::path</ref> &amp;</type>
          <declname>tp</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>_max_depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/raw.hpp" line="96" column="1" bodyfile="libraries/fc/include/fc/io/raw.hpp" bodystart="96" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1raw_1aed4b4dfdda18e3425175e7ce3de608a2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void fc::raw::pack</definition>
        <argsstring>(Stream &amp;s, const fc::time_point_sec &amp;tp, uint32_t _max_depth)</argsstring>
        <name>pack</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const <ref refid="classfc_1_1time__point__sec" kindref="compound">fc::time_point_sec</ref> &amp;</type>
          <declname>tp</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>_max_depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/raw.hpp" line="105" column="1" bodyfile="libraries/fc/include/fc/io/raw.hpp" bodystart="105" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1raw_1a88a6af6e1d1f60282fd6de9d775fb2c5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void fc::raw::unpack</definition>
        <argsstring>(Stream &amp;s, fc::time_point_sec &amp;tp, uint32_t _max_depth)</argsstring>
        <name>unpack</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="classfc_1_1time__point__sec" kindref="compound">fc::time_point_sec</ref> &amp;</type>
          <declname>tp</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>_max_depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/raw.hpp" line="111" column="1" bodyfile="libraries/fc/include/fc/io/raw.hpp" bodystart="111" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1raw_1a7d21073241788b7ce2c53f5c083c414e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void fc::raw::pack</definition>
        <argsstring>(Stream &amp;s, const fc::time_point &amp;tp, uint32_t _max_depth)</argsstring>
        <name>pack</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const <ref refid="classfc_1_1time__point" kindref="compound">fc::time_point</ref> &amp;</type>
          <declname>tp</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>_max_depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/raw.hpp" line="119" column="1" bodyfile="libraries/fc/include/fc/io/raw.hpp" bodystart="119" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1raw_1a186eea24874730526dc8cbecb291dd65" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void fc::raw::unpack</definition>
        <argsstring>(Stream &amp;s, fc::time_point &amp;tp, uint32_t _max_depth)</argsstring>
        <name>unpack</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="classfc_1_1time__point" kindref="compound">fc::time_point</ref> &amp;</type>
          <declname>tp</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>_max_depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/raw.hpp" line="125" column="1" bodyfile="libraries/fc/include/fc/io/raw.hpp" bodystart="125" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1raw_1acd39c037901a65068392dda13ced85e6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void fc::raw::pack</definition>
        <argsstring>(Stream &amp;s, const fc::microseconds &amp;usec, uint32_t _max_depth)</argsstring>
        <name>pack</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const <ref refid="classfc_1_1microseconds" kindref="compound">fc::microseconds</ref> &amp;</type>
          <declname>usec</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>_max_depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/raw.hpp" line="133" column="1" bodyfile="libraries/fc/include/fc/io/raw.hpp" bodystart="133" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1raw_1aad05a87e43b590317e7dbb0f8baa883e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void fc::raw::unpack</definition>
        <argsstring>(Stream &amp;s, fc::microseconds &amp;usec, uint32_t _max_depth)</argsstring>
        <name>unpack</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="classfc_1_1microseconds" kindref="compound">fc::microseconds</ref> &amp;</type>
          <declname>usec</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>_max_depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/raw.hpp" line="139" column="1" bodyfile="libraries/fc/include/fc/io/raw.hpp" bodystart="139" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1raw_1a9fc809494157094833baa0f00fdbd9ef" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
          <param>
            <type>size_t</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void fc::raw::pack</definition>
        <argsstring>(Stream &amp;s, const std::array&lt; char, N &gt; &amp;v, uint32_t _max_depth)</argsstring>
        <name>pack</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const std::array&lt; char, N &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>_max_depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/raw.hpp" line="147" column="1" bodyfile="libraries/fc/include/fc/io/raw.hpp" bodystart="147" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1raw_1a5be3763f96b7a964abd51147c068c692" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
          <param>
            <type>size_t</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void fc::raw::pack</definition>
        <argsstring>(Stream &amp;s, const std::array&lt; unsigned char, N &gt; &amp;v, uint32_t _max_depth)</argsstring>
        <name>pack</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const std::array&lt; unsigned char, N &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>_max_depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/raw.hpp" line="151" column="1" bodyfile="libraries/fc/include/fc/io/raw.hpp" bodystart="151" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1raw_1a2d8a4b3c0d0eda1100d5d9fd009558b9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
          <param>
            <type>size_t</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void fc::raw::unpack</definition>
        <argsstring>(Stream &amp;s, std::array&lt; char, N &gt; &amp;v, uint32_t _max_depth)</argsstring>
        <name>unpack</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>std::array&lt; char, N &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>_max_depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/raw.hpp" line="156" column="1" bodyfile="libraries/fc/include/fc/io/raw.hpp" bodystart="156" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1raw_1a67945cd1e2e8482fe225fabd96f8d162" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
          <param>
            <type>size_t</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void fc::raw::unpack</definition>
        <argsstring>(Stream &amp;s, std::array&lt; unsigned char, N &gt; &amp;v, uint32_t _max_depth)</argsstring>
        <name>unpack</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>std::array&lt; unsigned char, N &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>_max_depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/raw.hpp" line="160" column="1" bodyfile="libraries/fc/include/fc/io/raw.hpp" bodystart="160" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1raw_1af0ac646f3065fd56b9d97dd50229bc42" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void fc::raw::pack</definition>
        <argsstring>(Stream &amp;s, const std::shared_ptr&lt; T &gt; &amp;v, uint32_t _max_depth)</argsstring>
        <name>pack</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const std::shared_ptr&lt; T &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>_max_depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/raw.hpp" line="165" column="1" bodyfile="libraries/fc/include/fc/io/raw.hpp" bodystart="165" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1raw_1ae01ae973efc58450e8c2a8e939bca646" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void fc::raw::unpack</definition>
        <argsstring>(Stream &amp;s, std::shared_ptr&lt; T &gt; &amp;v, uint32_t _max_depth)</argsstring>
        <name>unpack</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; T &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>_max_depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/raw.hpp" line="172" column="1" bodyfile="libraries/fc/include/fc/io/raw.hpp" bodystart="172" bodyend="177"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1raw_1a42cf2a5276c98a2af8191c97ee1826dc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void fc::raw::pack</definition>
        <argsstring>(Stream &amp;s, const std::shared_ptr&lt; const T &gt; &amp;v, uint32_t _max_depth)</argsstring>
        <name>pack</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const std::shared_ptr&lt; const T &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>_max_depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/raw.hpp" line="180" column="1" bodyfile="libraries/fc/include/fc/io/raw.hpp" bodystart="180" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1raw_1abdab3ec1c93b74bc7c1c034c3884c07b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void fc::raw::unpack</definition>
        <argsstring>(Stream &amp;s, std::shared_ptr&lt; const T &gt; &amp;v, uint32_t _max_depth)</argsstring>
        <name>unpack</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; const T &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>_max_depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/raw.hpp" line="187" column="1" bodyfile="libraries/fc/include/fc/io/raw.hpp" bodystart="187" bodyend="193"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1raw_1af3532fbc5fd7f05d90e0c3dcded47767" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void fc::raw::pack</definition>
        <argsstring>(Stream &amp;s, const unsigned_int &amp;v, uint32_t _max_depth)</argsstring>
        <name>pack</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const <ref refid="structfc_1_1unsigned__int" kindref="compound">unsigned_int</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>_max_depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/raw.hpp" line="195" column="1" bodyfile="libraries/fc/include/fc/io/raw.hpp" bodystart="195" bodyend="203"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1raw_1aaf6043f052dc23c8f650f98145c9dae7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void fc::raw::unpack</definition>
        <argsstring>(Stream &amp;s, unsigned_int &amp;vi, uint32_t _max_depth)</argsstring>
        <name>unpack</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="structfc_1_1unsigned__int" kindref="compound">unsigned_int</ref> &amp;</type>
          <declname>vi</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>_max_depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/raw.hpp" line="205" column="1" bodyfile="libraries/fc/include/fc/io/raw.hpp" bodystart="205" bodyend="215"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1raw_1a8233688d083850ac6ce082441c9e7844" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void fc::raw::unpack</definition>
        <argsstring>(Stream &amp;s, const T &amp;vi, uint32_t _max_depth)</argsstring>
        <name>unpack</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>vi</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>_max_depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/raw.hpp" line="217" column="1" bodyfile="libraries/fc/include/fc/io/raw.hpp" bodystart="217" bodyend="223"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1raw_1afb91e6020bbd438eee91ecc81212692d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void fc::raw::pack</definition>
        <argsstring>(Stream &amp;s, const char *v, uint32_t _max_depth)</argsstring>
        <name>pack</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>v</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>_max_depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/raw.hpp" line="225" column="1" bodyfile="libraries/fc/include/fc/io/raw.hpp" bodystart="225" bodyend="229"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1raw_1a8381acfb7f051413313059299fb8ec4c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void fc::raw::pack</definition>
        <argsstring>(Stream &amp;s, const safe&lt; T &gt; &amp;v, uint32_t _max_depth)</argsstring>
        <name>pack</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const <ref refid="structfc_1_1safe" kindref="compound">safe</ref>&lt; T &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>_max_depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/raw.hpp" line="232" column="1" bodyfile="libraries/fc/include/fc/io/raw.hpp" bodystart="232" bodyend="236"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1raw_1aef1e051aeb5b8df1e159efcca3bef2bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void fc::raw::unpack</definition>
        <argsstring>(Stream &amp;s, fc::safe&lt; T &gt; &amp;v, uint32_t _max_depth)</argsstring>
        <name>unpack</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="structfc_1_1safe" kindref="compound">fc::safe</ref>&lt; T &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>_max_depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/raw.hpp" line="239" column="1" bodyfile="libraries/fc/include/fc/io/raw.hpp" bodystart="239" bodyend="243"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1raw_1adb3c8bde33bb9e8ea35fb59b400e3517" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>unsigned int</type>
            <declname>S</declname>
            <defname>S</defname>
          </param>
          <param>
            <type>typename Align</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void fc::raw::pack</definition>
        <argsstring>(Stream &amp;s, const fc::fwd&lt; T, S, Align &gt; &amp;v, uint32_t _max_depth)</argsstring>
        <name>pack</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const <ref refid="classfc_1_1fwd" kindref="compound">fc::fwd</ref>&lt; T, S, Align &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>_max_depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/raw.hpp" line="246" column="1" bodyfile="libraries/fc/include/fc/io/raw.hpp" bodystart="246" bodyend="249"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1raw_1a5342a3be1f1afcd99eec4f065fc2faeb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>unsigned int</type>
            <declname>S</declname>
            <defname>S</defname>
          </param>
          <param>
            <type>typename Align</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void fc::raw::unpack</definition>
        <argsstring>(Stream &amp;s, fc::fwd&lt; T, S, Align &gt; &amp;v, uint32_t _max_depth)</argsstring>
        <name>unpack</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="classfc_1_1fwd" kindref="compound">fc::fwd</ref>&lt; T, S, Align &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>_max_depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/raw.hpp" line="252" column="1" bodyfile="libraries/fc/include/fc/io/raw.hpp" bodystart="252" bodyend="255"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1raw_1a1465f13df0cf0828ab79c0f11bc7b101" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void fc::raw::pack</definition>
        <argsstring>(Stream &amp;s, const fc::optional&lt; T &gt; &amp;v, uint32_t _max_depth)</argsstring>
        <name>pack</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const <ref refid="classfc_1_1optional" kindref="compound">fc::optional</ref>&lt; T &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>_max_depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/raw.hpp" line="259" column="1" bodyfile="libraries/fc/include/fc/io/raw.hpp" bodystart="259" bodyend="264"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1raw_1a570cd099c251ef70d9e4751582dc11cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void fc::raw::unpack</definition>
        <argsstring>(Stream &amp;s, fc::optional&lt; T &gt; &amp;v, uint32_t _max_depth)</argsstring>
        <name>unpack</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="classfc_1_1optional" kindref="compound">fc::optional</ref>&lt; T &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>_max_depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/raw.hpp" line="267" column="1" bodyfile="libraries/fc/include/fc/io/raw.hpp" bodystart="267" bodyend="273"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1raw_1a07fd7d9ce380c40907710d2a7412c04f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void fc::raw::pack</definition>
        <argsstring>(Stream &amp;s, const std::vector&lt; char &gt; &amp;value, uint32_t _max_depth)</argsstring>
        <name>pack</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const std::vector&lt; char &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>_max_depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/raw.hpp" line="276" column="1" bodyfile="libraries/fc/include/fc/io/raw.hpp" bodystart="276" bodyend="281"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1raw_1a5180e9c337ed69c384c4b2aae264a28e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void fc::raw::unpack</definition>
        <argsstring>(Stream &amp;s, std::vector&lt; char &gt; &amp;value, uint32_t _max_depth)</argsstring>
        <name>unpack</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>std::vector&lt; char &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>_max_depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/raw.hpp" line="282" column="1" bodyfile="libraries/fc/include/fc/io/raw.hpp" bodystart="282" bodyend="289"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1raw_1a389d8cd82f304c645ef2f81cf7c20b10" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void fc::raw::pack</definition>
        <argsstring>(Stream &amp;s, const std::string &amp;v, uint32_t _max_depth)</argsstring>
        <name>pack</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>_max_depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/raw.hpp" line="292" column="1" bodyfile="libraries/fc/include/fc/io/raw.hpp" bodystart="292" bodyend="296"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1raw_1a7173f8335449b0a0a5b8ca507b1ba615" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void fc::raw::unpack</definition>
        <argsstring>(Stream &amp;s, std::string &amp;v, uint32_t _max_depth)</argsstring>
        <name>unpack</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>std::string &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>_max_depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/raw.hpp" line="298" column="1" bodyfile="libraries/fc/include/fc/io/raw.hpp" bodystart="298" bodyend="304"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1raw_1a6640e8a5f831f9133dcd10e2ab49895e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void fc::raw::pack</definition>
        <argsstring>(Stream &amp;s, const bool &amp;v, uint32_t _max_depth)</argsstring>
        <name>pack</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const bool &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>_max_depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/raw.hpp" line="307" column="1" bodyfile="libraries/fc/include/fc/io/raw.hpp" bodystart="307" bodyend="311"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1raw_1a9e3d94df829feadc466b5d2120986c6b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void fc::raw::unpack</definition>
        <argsstring>(Stream &amp;s, bool &amp;v, uint32_t _max_depth)</argsstring>
        <name>unpack</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>bool &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>_max_depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/raw.hpp" line="312" column="1" bodyfile="libraries/fc/include/fc/io/raw.hpp" bodystart="312" bodyend="319"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1raw_1a6ce4c37760bc02213d0e459c54b6f77d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void fc::raw::pack</definition>
        <argsstring>(Stream &amp;s, const std::unordered_set&lt; T &gt; &amp;value, uint32_t _max_depth)</argsstring>
        <name>pack</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const std::unordered_set&lt; T &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>_max_depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/raw.hpp" line="553" column="1" bodyfile="libraries/fc/include/fc/io/raw.hpp" bodystart="553" bodyend="563"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1raw_1a92dfc3ca96704bd6e8a31bb68ddec0a6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void fc::raw::unpack</definition>
        <argsstring>(Stream &amp;s, std::unordered_set&lt; T &gt; &amp;value, uint32_t _max_depth)</argsstring>
        <name>unpack</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>std::unordered_set&lt; T &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>_max_depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/raw.hpp" line="565" column="1" bodyfile="libraries/fc/include/fc/io/raw.hpp" bodystart="565" bodyend="577"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1raw_1a11bffd12aff2d983c0a15caa03113630" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
          <param>
            <type>typename K</type>
          </param>
          <param>
            <type>typename V</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void fc::raw::pack</definition>
        <argsstring>(Stream &amp;s, const std::pair&lt; K, V &gt; &amp;value, uint32_t _max_depth)</argsstring>
        <name>pack</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const std::pair&lt; K, V &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>_max_depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/raw.hpp" line="581" column="1" bodyfile="libraries/fc/include/fc/io/raw.hpp" bodystart="581" bodyend="586"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1raw_1ae558379aef7427445240d92aa0c4963e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
          <param>
            <type>typename K</type>
          </param>
          <param>
            <type>typename V</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void fc::raw::unpack</definition>
        <argsstring>(Stream &amp;s, std::pair&lt; K, V &gt; &amp;value, uint32_t _max_depth)</argsstring>
        <name>unpack</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>std::pair&lt; K, V &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>_max_depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/raw.hpp" line="588" column="1" bodyfile="libraries/fc/include/fc/io/raw.hpp" bodystart="588" bodyend="594"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1raw_1a338afc6d5d7803caa082b6007d75d883" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
          <param>
            <type>typename K</type>
          </param>
          <param>
            <type>typename V</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void fc::raw::pack</definition>
        <argsstring>(Stream &amp;s, const std::unordered_map&lt; K, V &gt; &amp;value, uint32_t _max_depth)</argsstring>
        <name>pack</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const std::unordered_map&lt; K, V &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>_max_depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/raw.hpp" line="597" column="1" bodyfile="libraries/fc/include/fc/io/raw.hpp" bodystart="597" bodyend="607"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1raw_1a8165f8eb42b1580f185736960c177e95" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
          <param>
            <type>typename K</type>
          </param>
          <param>
            <type>typename V</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void fc::raw::unpack</definition>
        <argsstring>(Stream &amp;s, std::unordered_map&lt; K, V &gt; &amp;value, uint32_t _max_depth)</argsstring>
        <name>unpack</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>std::unordered_map&lt; K, V &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>_max_depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/raw.hpp" line="609" column="1" bodyfile="libraries/fc/include/fc/io/raw.hpp" bodystart="609" bodyend="622"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1raw_1a550b9114292ae7c5d4cf55d95a6a2b4b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
          <param>
            <type>typename K</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>V</declname>
            <defname>V</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void fc::raw::pack</definition>
        <argsstring>(Stream &amp;s, const std::map&lt; K, V... &gt; &amp;value, uint32_t _max_depth)</argsstring>
        <name>pack</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const std::map&lt; K, V... &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>_max_depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/raw.hpp" line="624" column="1" bodyfile="libraries/fc/include/fc/io/raw.hpp" bodystart="624" bodyend="634"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1raw_1af5e357581e56cc8b3e826ad54e1c0747" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
          <param>
            <type>typename K</type>
          </param>
          <param>
            <type>typename V</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>A</declname>
            <defname>A</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void fc::raw::unpack</definition>
        <argsstring>(Stream &amp;s, std::map&lt; K, V, A... &gt; &amp;value, uint32_t _max_depth)</argsstring>
        <name>unpack</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>std::map&lt; K, V, A... &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>_max_depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/raw.hpp" line="636" column="1" bodyfile="libraries/fc/include/fc/io/raw.hpp" bodystart="636" bodyend="648"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1raw_1ad6d02cd6440cf89f7cf55cd1185daacb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void fc::raw::pack</definition>
        <argsstring>(Stream &amp;s, const std::deque&lt; T &gt; &amp;value, uint32_t _max_depth)</argsstring>
        <name>pack</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const std::deque&lt; T &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>_max_depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/raw.hpp" line="651" column="1" bodyfile="libraries/fc/include/fc/io/raw.hpp" bodystart="651" bodyend="661"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1raw_1ac2d5da016a1154330a5f1a103f000730" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void fc::raw::unpack</definition>
        <argsstring>(Stream &amp;s, std::deque&lt; T &gt; &amp;value, uint32_t _max_depth)</argsstring>
        <name>unpack</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>std::deque&lt; T &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>_max_depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/raw.hpp" line="664" column="1" bodyfile="libraries/fc/include/fc/io/raw.hpp" bodystart="664" bodyend="675"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1raw_1a204e3ad3c66ffd28a69013e2ed7b30be" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void fc::raw::pack</definition>
        <argsstring>(Stream &amp;s, const std::vector&lt; T &gt; &amp;value, uint32_t _max_depth)</argsstring>
        <name>pack</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const std::vector&lt; T &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>_max_depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/raw.hpp" line="678" column="1" bodyfile="libraries/fc/include/fc/io/raw.hpp" bodystart="678" bodyend="688"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1raw_1abe86fc857f412d8c50ab3a77e24427f9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void fc::raw::unpack</definition>
        <argsstring>(Stream &amp;s, std::vector&lt; T &gt; &amp;value, uint32_t _max_depth)</argsstring>
        <name>unpack</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>std::vector&lt; T &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>_max_depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/raw.hpp" line="691" column="1" bodyfile="libraries/fc/include/fc/io/raw.hpp" bodystart="691" bodyend="702"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1raw_1a43f278d790c4c7a79ccb1999e12f1ede" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void fc::raw::pack</definition>
        <argsstring>(Stream &amp;s, const std::set&lt; T &gt; &amp;value, uint32_t _max_depth)</argsstring>
        <name>pack</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const std::set&lt; T &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>_max_depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/raw.hpp" line="705" column="1" bodyfile="libraries/fc/include/fc/io/raw.hpp" bodystart="705" bodyend="715"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1raw_1a9c9b0f298c501cddb98c50930fc18e6f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void fc::raw::unpack</definition>
        <argsstring>(Stream &amp;s, std::set&lt; T &gt; &amp;value, uint32_t _max_depth)</argsstring>
        <name>unpack</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>std::set&lt; T &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>_max_depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/raw.hpp" line="718" column="1" bodyfile="libraries/fc/include/fc/io/raw.hpp" bodystart="718" bodyend="728"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1raw_1a296a3fa10bf8aa46c0e9326a55690b0e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
          <param>
            <type>boost::endian::order</type>
            <declname>O</declname>
            <defname>O</defname>
          </param>
          <param>
            <type>class T</type>
          </param>
          <param>
            <type>std::size_t</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
          <param>
            <type>boost::endian::align</type>
            <declname>A</declname>
            <defname>A</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void fc::raw::pack</definition>
        <argsstring>(Stream &amp;s, const boost::endian::endian_buffer&lt; O, T, N, A &gt; &amp;v, uint32_t _max_depth)</argsstring>
        <name>pack</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const boost::endian::endian_buffer&lt; O, T, N, A &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>_max_depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/raw.hpp" line="731" column="1" bodyfile="libraries/fc/include/fc/io/raw.hpp" bodystart="731" bodyend="735"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1raw_1ae7608045619f9f6482c2aca0b0b7365f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
          <param>
            <type>boost::endian::order</type>
            <declname>O</declname>
            <defname>O</defname>
          </param>
          <param>
            <type>class T</type>
          </param>
          <param>
            <type>std::size_t</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
          <param>
            <type>boost::endian::align</type>
            <declname>A</declname>
            <defname>A</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void fc::raw::unpack</definition>
        <argsstring>(Stream &amp;s, boost::endian::endian_buffer&lt; O, T, N, A &gt; &amp;v, uint32_t _max_depth)</argsstring>
        <name>unpack</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>boost::endian::endian_buffer&lt; O, T, N, A &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>_max_depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/raw.hpp" line="737" column="1" bodyfile="libraries/fc/include/fc/io/raw.hpp" bodystart="737" bodyend="741"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1raw_1a6c297b0ee9c5c6dfca5b4a1c10b10c07" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void fc::raw::pack</definition>
        <argsstring>(Stream &amp;s, const T &amp;v, uint32_t _max_depth)</argsstring>
        <name>pack</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>_max_depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/raw.hpp" line="745" column="1" bodyfile="libraries/fc/include/fc/io/raw.hpp" bodystart="745" bodyend="748"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1raw_1acb219bccda0ba1cdc42ad70f601b47d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void fc::raw::unpack</definition>
        <argsstring>(Stream &amp;s, T &amp;v, uint32_t _max_depth)</argsstring>
        <name>unpack</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>T &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>_max_depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/raw.hpp" line="750" column="1" bodyfile="libraries/fc/include/fc/io/raw.hpp" bodystart="750" bodyend="754"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1raw_1a64937a5adc8041247f7007882224e225" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>size_t</type>
        <definition>size_t fc::raw::pack_size</definition>
        <argsstring>(const T &amp;v)</argsstring>
        <name>pack_size</name>
        <param>
          <type>const T &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/raw.hpp" line="757" column="1" bodyfile="libraries/fc/include/fc/io/raw.hpp" bodystart="757" bodyend="762"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1raw_1aeef91af5b9f3fc711426665a81bc12f6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>std::vector&lt; char &gt;</type>
        <definition>std::vector&lt; char &gt; fc::raw::pack</definition>
        <argsstring>(const T &amp;v, uint32_t _max_depth)</argsstring>
        <name>pack</name>
        <param>
          <type>const T &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>_max_depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/raw.hpp" line="765" column="1" bodyfile="libraries/fc/include/fc/io/raw.hpp" bodystart="765" bodyend="777"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1raw_1a07b515a20325194fa8276f8b130f41a9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>Next</declname>
            <defname>Next</defname>
          </param>
        </templateparamlist>
        <type>std::vector&lt; char &gt;</type>
        <definition>std::vector&lt;char&gt; fc::raw::pack</definition>
        <argsstring>(const T &amp;v, Next... next, uint32_t _max_depth)</argsstring>
        <name>pack</name>
        <param>
          <type>const T &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>Next...</type>
          <declname>next</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>_max_depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/raw.hpp" line="780" column="1" bodyfile="libraries/fc/include/fc/io/raw.hpp" bodystart="780" bodyend="792"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1raw_1a936f312a12e9fc9bfcbc66758570dbed" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T fc::raw::unpack</definition>
        <argsstring>(const std::vector&lt; char &gt; &amp;s, uint32_t _max_depth)</argsstring>
        <name>unpack</name>
        <param>
          <type>const std::vector&lt; char &gt; &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>_max_depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/raw.hpp" line="796" column="1" bodyfile="libraries/fc/include/fc/io/raw.hpp" bodystart="796" bodyend="805"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1raw_1a8951f78670a3a69388eb998ba3645e8c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void fc::raw::unpack</definition>
        <argsstring>(const std::vector&lt; char &gt; &amp;s, T &amp;tmp, uint32_t _max_depth)</argsstring>
        <name>unpack</name>
        <param>
          <type>const std::vector&lt; char &gt; &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>T &amp;</type>
          <declname>tmp</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>_max_depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/raw.hpp" line="808" column="1" bodyfile="libraries/fc/include/fc/io/raw.hpp" bodystart="808" bodyend="815"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1raw_1ad5f8335475314a9355d3567ae587cc6d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void fc::raw::pack</definition>
        <argsstring>(char *d, uint32_t s, const T &amp;v, uint32_t _max_depth)</argsstring>
        <name>pack</name>
        <param>
          <type>char *</type>
          <declname>d</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>_max_depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/raw.hpp" line="818" column="1" bodyfile="libraries/fc/include/fc/io/raw.hpp" bodystart="818" bodyend="822"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1raw_1ae5b0d988c2069cab4f90f49d9773190c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T fc::raw::unpack</definition>
        <argsstring>(const char *d, uint32_t s, uint32_t _max_depth)</argsstring>
        <name>unpack</name>
        <param>
          <type>const char *</type>
          <declname>d</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>s</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>_max_depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/raw.hpp" line="825" column="1" bodyfile="libraries/fc/include/fc/io/raw.hpp" bodystart="825" bodyend="832"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1raw_1ae1b88ca8687b07b3d6d73b780a20d798" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void fc::raw::unpack</definition>
        <argsstring>(const char *d, uint32_t s, T &amp;v, uint32_t _max_depth)</argsstring>
        <name>unpack</name>
        <param>
          <type>const char *</type>
          <declname>d</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>s</declname>
        </param>
        <param>
          <type>T &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>_max_depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/raw.hpp" line="835" column="1" bodyfile="libraries/fc/include/fc/io/raw.hpp" bodystart="835" bodyend="840"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1raw_1a4159af4e0f9ca487ff519f2afbf79640" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>T</declname>
            <defname>T</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void fc::raw::pack</definition>
        <argsstring>(Stream &amp;s, const static_variant&lt; T... &gt; &amp;sv, uint32_t _max_depth)</argsstring>
        <name>pack</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const <ref refid="classfc_1_1static__variant" kindref="compound">static_variant</ref>&lt; T... &gt; &amp;</type>
          <declname>sv</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>_max_depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/raw.hpp" line="878" column="1" bodyfile="libraries/fc/include/fc/io/raw.hpp" bodystart="878" bodyend="884"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1raw_1a1b78d8591f15330421bd0fedfd03b50b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>T</declname>
            <defname>T</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void fc::raw::unpack</definition>
        <argsstring>(Stream &amp;s, static_variant&lt; T... &gt; &amp;sv, uint32_t _max_depth)</argsstring>
        <name>unpack</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="classfc_1_1static__variant" kindref="compound">static_variant</ref>&lt; T... &gt; &amp;</type>
          <declname>sv</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>_max_depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/raw.hpp" line="886" column="1" bodyfile="libraries/fc/include/fc/io/raw.hpp" bodystart="886" bodyend="894"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1raw_1a42509c437501a1c1098d2ae2c7ab7e6b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void fc::raw::pack</definition>
        <argsstring>(Stream &amp;s, const variant_object &amp;v, uint32_t _max_depth=FC_PACK_MAX_DEPTH)</argsstring>
        <name>pack</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const <ref refid="classfc_1_1variant__object" kindref="compound">variant_object</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>_max_depth</declname>
          <defval><ref refid="fc_2include_2fc_2config_8hpp_1afbd29dd00d5136a6ec9cc7cfdcadc9d0" kindref="member">FC_PACK_MAX_DEPTH</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/raw_fwd.hpp" line="81" column="1" bodyfile="libraries/fc/include/fc/io/raw_variant.hpp" bodystart="125" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1raw_1aa86bff1a762f0cfbf0b793f264d7d68f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void fc::raw::unpack</definition>
        <argsstring>(Stream &amp;s, variant_object &amp;v, uint32_t _max_depth=FC_PACK_MAX_DEPTH)</argsstring>
        <name>unpack</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="classfc_1_1variant__object" kindref="compound">variant_object</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>_max_depth</declname>
          <defval><ref refid="fc_2include_2fc_2config_8hpp_1afbd29dd00d5136a6ec9cc7cfdcadc9d0" kindref="member">FC_PACK_MAX_DEPTH</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/raw_fwd.hpp" line="82" column="1" bodyfile="libraries/fc/include/fc/io/raw_variant.hpp" bodystart="138" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1raw_1acc153570a3db4b28e0ba648a28773328" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void fc::raw::pack</definition>
        <argsstring>(Stream &amp;s, const variant &amp;v, uint32_t _max_depth=FC_PACK_MAX_DEPTH)</argsstring>
        <name>pack</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const <ref refid="classfc_1_1variant" kindref="compound">variant</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>_max_depth</declname>
          <defval><ref refid="fc_2include_2fc_2config_8hpp_1afbd29dd00d5136a6ec9cc7cfdcadc9d0" kindref="member">FC_PACK_MAX_DEPTH</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/raw_fwd.hpp" line="83" column="1" bodyfile="libraries/fc/include/fc/io/raw_variant.hpp" bodystart="55" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1raw_1af76b4317a025b1074ba586a5c9d9ecf8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void fc::raw::unpack</definition>
        <argsstring>(Stream &amp;s, variant &amp;v, uint32_t _max_depth=FC_PACK_MAX_DEPTH)</argsstring>
        <name>unpack</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="classfc_1_1variant" kindref="compound">variant</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>_max_depth</declname>
          <defval><ref refid="fc_2include_2fc_2config_8hpp_1afbd29dd00d5136a6ec9cc7cfdcadc9d0" kindref="member">FC_PACK_MAX_DEPTH</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/raw_fwd.hpp" line="84" column="1" bodyfile="libraries/fc/include/fc/io/raw_variant.hpp" bodystart="63" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1raw_1a07a39af9291f6f33724025118ce226fd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void fc::raw::pack</definition>
        <argsstring>(Stream &amp;s, const ip::endpoint &amp;v, uint32_t _max_depth=FC_PACK_MAX_DEPTH)</argsstring>
        <name>pack</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const <ref refid="classfc_1_1ip_1_1endpoint" kindref="compound">ip::endpoint</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>_max_depth</declname>
          <defval><ref refid="fc_2include_2fc_2config_8hpp_1afbd29dd00d5136a6ec9cc7cfdcadc9d0" kindref="member">FC_PACK_MAX_DEPTH</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/raw_fwd.hpp" line="88" column="1" bodyfile="libraries/fc/include/fc/network/ip.hpp" bodystart="123" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1raw_1af6fced1d43bba73ae700d3c9bb2a3c2c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void fc::raw::unpack</definition>
        <argsstring>(Stream &amp;s, ip::endpoint &amp;v, uint32_t _max_depth=FC_PACK_MAX_DEPTH)</argsstring>
        <name>unpack</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="classfc_1_1ip_1_1endpoint" kindref="compound">ip::endpoint</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>_max_depth</declname>
          <defval><ref refid="fc_2include_2fc_2config_8hpp_1afbd29dd00d5136a6ec9cc7cfdcadc9d0" kindref="member">FC_PACK_MAX_DEPTH</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/raw_fwd.hpp" line="89" column="1" bodyfile="libraries/fc/include/fc/network/ip.hpp" bodystart="131" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1raw_1a00281c36d307bff0376d5a0475705769" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void fc::raw::unpack</definition>
        <argsstring>(Stream &amp;s, fc::sha224 &amp;, uint32_t _max_depth=FC_PACK_MAX_DEPTH)</argsstring>
        <name>unpack</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="classfc_1_1sha224" kindref="compound">fc::sha224</ref> &amp;</type>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>_max_depth</declname>
          <defval><ref refid="fc_2include_2fc_2config_8hpp_1afbd29dd00d5136a6ec9cc7cfdcadc9d0" kindref="member">FC_PACK_MAX_DEPTH</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/raw_fwd.hpp" line="109" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1raw_1aa8eecd62ebd4b9e139a2008b86f8ae9e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void fc::raw::pack</definition>
        <argsstring>(Stream &amp;s, const fc::sha224 &amp;, uint32_t _max_depth=FC_PACK_MAX_DEPTH)</argsstring>
        <name>pack</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const <ref refid="classfc_1_1sha224" kindref="compound">fc::sha224</ref> &amp;</type>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>_max_depth</declname>
          <defval><ref refid="fc_2include_2fc_2config_8hpp_1afbd29dd00d5136a6ec9cc7cfdcadc9d0" kindref="member">FC_PACK_MAX_DEPTH</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/raw_fwd.hpp" line="110" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1raw_1a4860ca4c70b57cfd0669c15b2d349f12" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void fc::raw::unpack</definition>
        <argsstring>(Stream &amp;s, fc::sha256 &amp;, uint32_t _max_depth=FC_PACK_MAX_DEPTH)</argsstring>
        <name>unpack</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="classfc_1_1sha256" kindref="compound">fc::sha256</ref> &amp;</type>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>_max_depth</declname>
          <defval><ref refid="fc_2include_2fc_2config_8hpp_1afbd29dd00d5136a6ec9cc7cfdcadc9d0" kindref="member">FC_PACK_MAX_DEPTH</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/raw_fwd.hpp" line="111" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1raw_1a5200455ba67a8ad9529a79c02382f380" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void fc::raw::pack</definition>
        <argsstring>(Stream &amp;s, const fc::sha256 &amp;, uint32_t _max_depth=FC_PACK_MAX_DEPTH)</argsstring>
        <name>pack</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const <ref refid="classfc_1_1sha256" kindref="compound">fc::sha256</ref> &amp;</type>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>_max_depth</declname>
          <defval><ref refid="fc_2include_2fc_2config_8hpp_1afbd29dd00d5136a6ec9cc7cfdcadc9d0" kindref="member">FC_PACK_MAX_DEPTH</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/raw_fwd.hpp" line="112" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1raw_1a31d1dabb40806af348efd7014aa4ef86" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void fc::raw::unpack</definition>
        <argsstring>(Stream &amp;s, fc::sha512 &amp;, uint32_t _max_depth=FC_PACK_MAX_DEPTH)</argsstring>
        <name>unpack</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="classfc_1_1sha512" kindref="compound">fc::sha512</ref> &amp;</type>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>_max_depth</declname>
          <defval><ref refid="fc_2include_2fc_2config_8hpp_1afbd29dd00d5136a6ec9cc7cfdcadc9d0" kindref="member">FC_PACK_MAX_DEPTH</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/raw_fwd.hpp" line="113" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1raw_1a61062d21029729e728bd24a336896fa7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void fc::raw::pack</definition>
        <argsstring>(Stream &amp;s, const fc::sha512 &amp;, uint32_t _max_depth=FC_PACK_MAX_DEPTH)</argsstring>
        <name>pack</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const <ref refid="classfc_1_1sha512" kindref="compound">fc::sha512</ref> &amp;</type>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>_max_depth</declname>
          <defval><ref refid="fc_2include_2fc_2config_8hpp_1afbd29dd00d5136a6ec9cc7cfdcadc9d0" kindref="member">FC_PACK_MAX_DEPTH</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/raw_fwd.hpp" line="114" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1raw_1aa1b4d059e9ef51d4ed6ddc6d4782272a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void fc::raw::unpack</definition>
        <argsstring>(Stream &amp;s, fc::ripemd160 &amp;, uint32_t _max_depth=FC_PACK_MAX_DEPTH)</argsstring>
        <name>unpack</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="classfc_1_1ripemd160" kindref="compound">fc::ripemd160</ref> &amp;</type>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>_max_depth</declname>
          <defval><ref refid="fc_2include_2fc_2config_8hpp_1afbd29dd00d5136a6ec9cc7cfdcadc9d0" kindref="member">FC_PACK_MAX_DEPTH</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/raw_fwd.hpp" line="115" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1raw_1a25b0498339d52d8eb58a1d5f74e09e3e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void fc::raw::pack</definition>
        <argsstring>(Stream &amp;s, const fc::ripemd160 &amp;, uint32_t _max_depth=FC_PACK_MAX_DEPTH)</argsstring>
        <name>pack</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const <ref refid="classfc_1_1ripemd160" kindref="compound">fc::ripemd160</ref> &amp;</type>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>_max_depth</declname>
          <defval><ref refid="fc_2include_2fc_2config_8hpp_1afbd29dd00d5136a6ec9cc7cfdcadc9d0" kindref="member">FC_PACK_MAX_DEPTH</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/raw_fwd.hpp" line="116" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1raw_1aebcab947900c0eb02c8125d20ce74c79" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>size_t</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void fc::raw::pack</definition>
        <argsstring>(Stream &amp;s, const std::array&lt; T, N &gt; &amp;v, uint32_t _max_depth)=delete</argsstring>
        <name>pack</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const std::array&lt; T, N &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>_max_depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/raw_fwd.hpp" line="136" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1raw_1a1b7824310f898f418c7ee2de1a9fc7fc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>size_t</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void fc::raw::unpack</definition>
        <argsstring>(Stream &amp;s, std::array&lt; T, N &gt; &amp;v, uint32_t _max_depth)=delete</argsstring>
        <name>unpack</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>std::array&lt; T, N &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>_max_depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/raw_fwd.hpp" line="138" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1raw_1afdb032ab483fcaa81ca270cc7e84a37b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void fc::raw::pack</definition>
        <argsstring>(Stream &amp;s, const ip::address &amp;v, uint32_t _max_depth=FC_PACK_MAX_DEPTH)</argsstring>
        <name>pack</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const <ref refid="classfc_1_1ip_1_1address" kindref="compound">ip::address</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>_max_depth</declname>
          <defval><ref refid="fc_2include_2fc_2config_8hpp_1afbd29dd00d5136a6ec9cc7cfdcadc9d0" kindref="member">FC_PACK_MAX_DEPTH</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/network/ip.hpp" line="108" column="1" bodyfile="libraries/fc/include/fc/network/ip.hpp" bodystart="108" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1raw_1ac6c30889642a67c6f39e5eb9afc260bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void fc::raw::unpack</definition>
        <argsstring>(Stream &amp;s, ip::address &amp;v, uint32_t _max_depth=FC_PACK_MAX_DEPTH)</argsstring>
        <name>unpack</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="classfc_1_1ip_1_1address" kindref="compound">ip::address</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>_max_depth</declname>
          <defval><ref refid="fc_2include_2fc_2config_8hpp_1afbd29dd00d5136a6ec9cc7cfdcadc9d0" kindref="member">FC_PACK_MAX_DEPTH</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/network/ip.hpp" line="114" column="1" bodyfile="libraries/fc/include/fc/network/ip.hpp" bodystart="114" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1raw_1ae203fcff2601478bcfb3d241c9a9a54f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void fc::raw::pack</definition>
        <argsstring>(Stream &amp;stream, const graphene::protocol::extension&lt; T &gt; &amp;value, uint32_t _max_depth=FC_PACK_MAX_DEPTH)</argsstring>
        <name>pack</name>
        <param>
          <type>Stream &amp;</type>
          <declname>stream</declname>
        </param>
        <param>
          <type>const <ref refid="structgraphene_1_1protocol_1_1extension" kindref="compound">graphene::protocol::extension</ref>&lt; T &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>_max_depth</declname>
          <defval><ref refid="fc_2include_2fc_2config_8hpp_1afbd29dd00d5136a6ec9cc7cfdcadc9d0" kindref="member">FC_PACK_MAX_DEPTH</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/ext.hpp" line="209" column="1" bodyfile="libraries/protocol/include/graphene/protocol/ext.hpp" bodystart="209" bodyend="218"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1raw_1a0b0b7520308593827677d1e430c5fdd8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Stream</type>
          </param>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void fc::raw::unpack</definition>
        <argsstring>(Stream &amp;s, graphene::protocol::extension&lt; T &gt; &amp;value, uint32_t _max_depth=FC_PACK_MAX_DEPTH)</argsstring>
        <name>unpack</name>
        <param>
          <type>Stream &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="structgraphene_1_1protocol_1_1extension" kindref="compound">graphene::protocol::extension</ref>&lt; T &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>_max_depth</declname>
          <defval><ref refid="fc_2include_2fc_2config_8hpp_1afbd29dd00d5136a6ec9cc7cfdcadc9d0" kindref="member">FC_PACK_MAX_DEPTH</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/ext.hpp" line="222" column="1" bodyfile="libraries/protocol/include/graphene/protocol/ext.hpp" bodystart="222" bodyend="230"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1raw_1a32a199697045525fbca469dfeeb161c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template void</type>
        <definition>template void fc::raw::pack</definition>
        <argsstring>(datastream&lt; size_t &gt; &amp;s, const graphene::protocol::pts_address &amp;tx, uint32_t _max_depth)</argsstring>
        <name>pack</name>
        <param>
          <type><ref refid="classfc_1_1datastream" kindref="compound">datastream</ref>&lt; size_t &gt; &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const <ref refid="structgraphene_1_1protocol_1_1pts__address" kindref="compound">graphene::protocol::pts_address</ref> &amp;</type>
          <declname>tx</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>_max_depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/pts_address.hpp" line="90" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1raw_1a0661099108a86db1bbbbe87d3b4fcf23" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template void</type>
        <definition>template void fc::raw::pack</definition>
        <argsstring>(datastream&lt; char *&gt; &amp;s, const graphene::protocol::pts_address &amp;tx, uint32_t _max_depth)</argsstring>
        <name>pack</name>
        <param>
          <type><ref refid="classfc_1_1datastream" kindref="compound">datastream</ref>&lt; char *&gt; &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const <ref refid="structgraphene_1_1protocol_1_1pts__address" kindref="compound">graphene::protocol::pts_address</ref> &amp;</type>
          <declname>tx</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>_max_depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/pts_address.hpp" line="92" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1raw_1a9f26174b9936275643d584dc50f0f0f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template void</type>
        <definition>template void fc::raw::unpack</definition>
        <argsstring>(datastream&lt; const char *&gt; &amp;s, graphene::protocol::pts_address &amp;tx, uint32_t _max_depth)</argsstring>
        <name>unpack</name>
        <param>
          <type><ref refid="classfc_1_1datastream" kindref="compound">datastream</ref>&lt; const char *&gt; &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="structgraphene_1_1protocol_1_1pts__address" kindref="compound">graphene::protocol::pts_address</ref> &amp;</type>
          <declname>tx</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>_max_depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/pts_address.hpp" line="94" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1raw_1abc75bf53849c3eca153e7b43f7ef7e29" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template void</type>
        <definition>template void fc::raw::pack</definition>
        <argsstring>(datastream&lt; size_t &gt; &amp;s, const graphene::protocol::public_key_type &amp;tx, uint32_t _max_depth=FC_PACK_MAX_DEPTH)</argsstring>
        <name>pack</name>
        <param>
          <type><ref refid="classfc_1_1datastream" kindref="compound">datastream</ref>&lt; size_t &gt; &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const <ref refid="structgraphene_1_1protocol_1_1public__key__type" kindref="compound">graphene::protocol::public_key_type</ref> &amp;</type>
          <declname>tx</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>_max_depth</declname>
          <defval><ref refid="fc_2include_2fc_2config_8hpp_1afbd29dd00d5136a6ec9cc7cfdcadc9d0" kindref="member">FC_PACK_MAX_DEPTH</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/types.cpp" line="121" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1raw_1a026c54b0882f93c9f9b6e3a8e0e69fe4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template void</type>
        <definition>template void fc::raw::pack</definition>
        <argsstring>(datastream&lt; char *&gt; &amp;s, const graphene::protocol::public_key_type &amp;tx, uint32_t _max_depth=FC_PACK_MAX_DEPTH)</argsstring>
        <name>pack</name>
        <param>
          <type><ref refid="classfc_1_1datastream" kindref="compound">datastream</ref>&lt; char *&gt; &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const <ref refid="structgraphene_1_1protocol_1_1public__key__type" kindref="compound">graphene::protocol::public_key_type</ref> &amp;</type>
          <declname>tx</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>_max_depth</declname>
          <defval><ref refid="fc_2include_2fc_2config_8hpp_1afbd29dd00d5136a6ec9cc7cfdcadc9d0" kindref="member">FC_PACK_MAX_DEPTH</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/types.cpp" line="123" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacefc_1_1raw_1a844eae7e15c9b4a41f93cba66c73d548" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>template void</type>
        <definition>template void fc::raw::unpack</definition>
        <argsstring>(datastream&lt; const char *&gt; &amp;s, graphene::protocol::public_key_type &amp;tx, uint32_t _max_depth=FC_PACK_MAX_DEPTH)</argsstring>
        <name>unpack</name>
        <param>
          <type><ref refid="classfc_1_1datastream" kindref="compound">datastream</ref>&lt; const char *&gt; &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="structgraphene_1_1protocol_1_1public__key__type" kindref="compound">graphene::protocol::public_key_type</ref> &amp;</type>
          <declname>tx</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>_max_depth</declname>
          <defval><ref refid="fc_2include_2fc_2config_8hpp_1afbd29dd00d5136a6ec9cc7cfdcadc9d0" kindref="member">FC_PACK_MAX_DEPTH</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/types.cpp" line="125" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>serializes like an IntType </para>    </detaileddescription>
    <location file="libraries/fc/include/fc/container/flat.hpp" line="9" column="1"/>
  </compounddef>
</doxygen>
