<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor" kind="struct" language="C++" prot="public">
    <compoundname>graphene::chain::proposal_operation_hardfork_visitor</compoundname>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1adb804e5e83320af04f6cdb29b944a36d" prot="public" static="no">
        <type>void</type>
        <definition>typedef void graphene::chain::proposal_operation_hardfork_visitor::result_type</definition>
        <argsstring></argsstring>
        <name>result_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/proposal_evaluator.cpp" line="57" column="1" bodyfile="libraries/chain/proposal_evaluator.cpp" bodystart="57" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1a4d984fd0d3673e8dd5d232e7674b90ab" prot="public" static="no" mutable="no">
        <type>const <ref refid="classgraphene_1_1chain_1_1database" kindref="compound">database</ref> &amp;</type>
        <definition>const database&amp; graphene::chain::proposal_operation_hardfork_visitor::db</definition>
        <argsstring></argsstring>
        <name>db</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/proposal_evaluator.cpp" line="58" column="1" bodyfile="libraries/chain/proposal_evaluator.cpp" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1a49d262acc4a43da659e0aee75d1665d1" prot="public" static="no" mutable="no">
        <type>const <ref refid="classfc_1_1time__point__sec" kindref="compound">fc::time_point_sec</ref></type>
        <definition>const fc::time_point_sec graphene::chain::proposal_operation_hardfork_visitor::block_time</definition>
        <argsstring></argsstring>
        <name>block_time</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/proposal_evaluator.cpp" line="59" column="1" bodyfile="libraries/chain/proposal_evaluator.cpp" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1a60e8c44ebd54d5aa07097f0321d48756" prot="public" static="no" mutable="no">
        <type>const <ref refid="classfc_1_1time__point__sec" kindref="compound">fc::time_point_sec</ref></type>
        <definition>const fc::time_point_sec graphene::chain::proposal_operation_hardfork_visitor::next_maintenance_time</definition>
        <argsstring></argsstring>
        <name>next_maintenance_time</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/proposal_evaluator.cpp" line="60" column="1" bodyfile="libraries/chain/proposal_evaluator.cpp" bodystart="60" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1a80b3700e7234cbb7f4990e7b00c3fa30" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>graphene::chain::proposal_operation_hardfork_visitor::proposal_operation_hardfork_visitor</definition>
        <argsstring>(const database &amp;_db, const fc::time_point_sec bt)</argsstring>
        <name>proposal_operation_hardfork_visitor</name>
        <param>
          <type>const <ref refid="classgraphene_1_1chain_1_1database" kindref="compound">database</ref> &amp;</type>
          <declname>_db</declname>
        </param>
        <param>
          <type>const <ref refid="classfc_1_1time__point__sec" kindref="compound">fc::time_point_sec</ref></type>
          <declname>bt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/proposal_evaluator.cpp" line="62" column="1" bodyfile="libraries/chain/proposal_evaluator.cpp" bodystart="62" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1aee249da22e0cdb44064a216becf61531" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void graphene::chain::proposal_operation_hardfork_visitor::operator()</definition>
        <argsstring>(const T &amp;v) const </argsstring>
        <name>operator()</name>
        <param>
          <type>const T &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/proposal_evaluator.cpp" line="66" column="1" bodyfile="libraries/chain/proposal_evaluator.cpp" bodystart="66" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1a1590144d170633be6234fe131fe23964" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::chain::proposal_operation_hardfork_visitor::operator()</definition>
        <argsstring>(const graphene::chain::asset_create_operation &amp;v) const </argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="structgraphene_1_1protocol_1_1asset__create__operation" kindref="compound">graphene::chain::asset_create_operation</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/proposal_evaluator.cpp" line="68" column="1" bodyfile="libraries/chain/proposal_evaluator.cpp" bodystart="68" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1a6b8e9d2bce725d245a57c4ce03ddbae7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::chain::proposal_operation_hardfork_visitor::operator()</definition>
        <argsstring>(const graphene::chain::asset_update_operation &amp;v) const </argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="structgraphene_1_1protocol_1_1asset__update__operation" kindref="compound">graphene::chain::asset_update_operation</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/proposal_evaluator.cpp" line="86" column="1" bodyfile="libraries/chain/proposal_evaluator.cpp" bodystart="86" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1a97b5f2378cf5b8de366d7c84f65e8d95" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::chain::proposal_operation_hardfork_visitor::operator()</definition>
        <argsstring>(const graphene::chain::asset_update_bitasset_operation &amp;v) const </argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="structgraphene_1_1protocol_1_1asset__update__bitasset__operation" kindref="compound">graphene::chain::asset_update_bitasset_operation</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/proposal_evaluator.cpp" line="101" column="1" bodyfile="libraries/chain/proposal_evaluator.cpp" bodystart="101" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1ae96f1c77ae3b6767aa4c5e8e0387aee5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::chain::proposal_operation_hardfork_visitor::operator()</definition>
        <argsstring>(const graphene::chain::asset_claim_fees_operation &amp;v) const </argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="structgraphene_1_1protocol_1_1asset__claim__fees__operation" kindref="compound">graphene::chain::asset_claim_fees_operation</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/proposal_evaluator.cpp" line="108" column="1" bodyfile="libraries/chain/proposal_evaluator.cpp" bodystart="108" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1a4689472a00b818cddb76fac0b976a8ee" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::chain::proposal_operation_hardfork_visitor::operator()</definition>
        <argsstring>(const graphene::chain::asset_publish_feed_operation &amp;v) const </argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="structgraphene_1_1protocol_1_1asset__publish__feed__operation" kindref="compound">graphene::chain::asset_publish_feed_operation</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/proposal_evaluator.cpp" line="112" column="1" bodyfile="libraries/chain/proposal_evaluator.cpp" bodystart="112" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1a331a648b19e72a7fbad6fb2f6f1f302d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::chain::proposal_operation_hardfork_visitor::operator()</definition>
        <argsstring>(const graphene::chain::committee_member_update_global_parameters_operation &amp;op) const </argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="structgraphene_1_1protocol_1_1committee__member__update__global__parameters__operation" kindref="compound">graphene::chain::committee_member_update_global_parameters_operation</ref> &amp;</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/proposal_evaluator.cpp" line="118" column="1" bodyfile="libraries/chain/proposal_evaluator.cpp" bodystart="118" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1a479f0ac8e26c23b4a3868b082192d8d8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::chain::proposal_operation_hardfork_visitor::operator()</definition>
        <argsstring>(const graphene::chain::htlc_create_operation &amp;op) const </argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="structgraphene_1_1protocol_1_1htlc__create__operation" kindref="compound">graphene::chain::htlc_create_operation</ref> &amp;</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/proposal_evaluator.cpp" line="163" column="1" bodyfile="libraries/chain/proposal_evaluator.cpp" bodystart="163" bodyend="175"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1ac4eb7d10ac063b233d6ade5efa9fe76f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::chain::proposal_operation_hardfork_visitor::operator()</definition>
        <argsstring>(const graphene::chain::htlc_redeem_operation &amp;op) const </argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="structgraphene_1_1protocol_1_1htlc__redeem__operation" kindref="compound">graphene::chain::htlc_redeem_operation</ref> &amp;</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/proposal_evaluator.cpp" line="176" column="1" bodyfile="libraries/chain/proposal_evaluator.cpp" bodystart="176" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1a4be7c8786dd6019fec3d23db1e5de939" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::chain::proposal_operation_hardfork_visitor::operator()</definition>
        <argsstring>(const graphene::chain::htlc_extend_operation &amp;op) const </argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="structgraphene_1_1protocol_1_1htlc__extend__operation" kindref="compound">graphene::chain::htlc_extend_operation</ref> &amp;</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/proposal_evaluator.cpp" line="179" column="1" bodyfile="libraries/chain/proposal_evaluator.cpp" bodystart="179" bodyend="181"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1a279164bc221a248337d2daa9872251e8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::chain::proposal_operation_hardfork_visitor::operator()</definition>
        <argsstring>(const graphene::chain::custom_authority_create_operation &amp;) const </argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="structgraphene_1_1protocol_1_1custom__authority__create__operation" kindref="compound">graphene::chain::custom_authority_create_operation</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/proposal_evaluator.cpp" line="182" column="1" bodyfile="libraries/chain/proposal_evaluator.cpp" bodystart="182" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1a4cb95eba572a16419ed75e3b720794c5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::chain::proposal_operation_hardfork_visitor::operator()</definition>
        <argsstring>(const graphene::chain::custom_authority_update_operation &amp;) const </argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="structgraphene_1_1protocol_1_1custom__authority__update__operation" kindref="compound">graphene::chain::custom_authority_update_operation</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/proposal_evaluator.cpp" line="185" column="1" bodyfile="libraries/chain/proposal_evaluator.cpp" bodystart="185" bodyend="187"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1a0e05ed09547de42946781e2d4e723a41" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::chain::proposal_operation_hardfork_visitor::operator()</definition>
        <argsstring>(const graphene::chain::custom_authority_delete_operation &amp;) const </argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="structgraphene_1_1protocol_1_1custom__authority__delete__operation" kindref="compound">graphene::chain::custom_authority_delete_operation</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/proposal_evaluator.cpp" line="188" column="1" bodyfile="libraries/chain/proposal_evaluator.cpp" bodystart="188" bodyend="190"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1a06b5b5e47b440da7c69c6c0684bd66e5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::chain::proposal_operation_hardfork_visitor::operator()</definition>
        <argsstring>(const graphene::chain::ticket_create_operation &amp;op) const </argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="structgraphene_1_1protocol_1_1ticket__create__operation" kindref="compound">graphene::chain::ticket_create_operation</ref> &amp;</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/proposal_evaluator.cpp" line="191" column="1" bodyfile="libraries/chain/proposal_evaluator.cpp" bodystart="191" bodyend="193"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1a6a707cea11c8f580f5f46636908ad914" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::chain::proposal_operation_hardfork_visitor::operator()</definition>
        <argsstring>(const graphene::chain::ticket_update_operation &amp;op) const </argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="structgraphene_1_1protocol_1_1ticket__update__operation" kindref="compound">graphene::chain::ticket_update_operation</ref> &amp;</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/proposal_evaluator.cpp" line="194" column="1" bodyfile="libraries/chain/proposal_evaluator.cpp" bodystart="194" bodyend="196"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1a81e767d6e020736025d388f3f943bc08" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::chain::proposal_operation_hardfork_visitor::operator()</definition>
        <argsstring>(const graphene::chain::liquidity_pool_create_operation &amp;op) const </argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="structgraphene_1_1protocol_1_1liquidity__pool__create__operation" kindref="compound">graphene::chain::liquidity_pool_create_operation</ref> &amp;</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/proposal_evaluator.cpp" line="197" column="1" bodyfile="libraries/chain/proposal_evaluator.cpp" bodystart="197" bodyend="199"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1acb9a8d69cc6e37ee9336ef8322aa8999" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::chain::proposal_operation_hardfork_visitor::operator()</definition>
        <argsstring>(const graphene::chain::liquidity_pool_delete_operation &amp;op) const </argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="structgraphene_1_1protocol_1_1liquidity__pool__delete__operation" kindref="compound">graphene::chain::liquidity_pool_delete_operation</ref> &amp;</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/proposal_evaluator.cpp" line="200" column="1" bodyfile="libraries/chain/proposal_evaluator.cpp" bodystart="200" bodyend="202"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1abc4d23b827d1c4a4ebbe76fbb3dfbb68" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::chain::proposal_operation_hardfork_visitor::operator()</definition>
        <argsstring>(const graphene::chain::liquidity_pool_deposit_operation &amp;op) const </argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="structgraphene_1_1protocol_1_1liquidity__pool__deposit__operation" kindref="compound">graphene::chain::liquidity_pool_deposit_operation</ref> &amp;</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/proposal_evaluator.cpp" line="203" column="1" bodyfile="libraries/chain/proposal_evaluator.cpp" bodystart="203" bodyend="205"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1a3da79e18b4467b5854e514642c52a831" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::chain::proposal_operation_hardfork_visitor::operator()</definition>
        <argsstring>(const graphene::chain::liquidity_pool_withdraw_operation &amp;op) const </argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="structgraphene_1_1protocol_1_1liquidity__pool__withdraw__operation" kindref="compound">graphene::chain::liquidity_pool_withdraw_operation</ref> &amp;</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/proposal_evaluator.cpp" line="206" column="1" bodyfile="libraries/chain/proposal_evaluator.cpp" bodystart="206" bodyend="208"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1ad884104846e0ce6dd7a6b912b3918c08" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::chain::proposal_operation_hardfork_visitor::operator()</definition>
        <argsstring>(const graphene::chain::liquidity_pool_exchange_operation &amp;op) const </argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="structgraphene_1_1protocol_1_1liquidity__pool__exchange__operation" kindref="compound">graphene::chain::liquidity_pool_exchange_operation</ref> &amp;</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/proposal_evaluator.cpp" line="209" column="1" bodyfile="libraries/chain/proposal_evaluator.cpp" bodystart="209" bodyend="211"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1a999ec1bd5ece3b5a09384758be759408" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::chain::proposal_operation_hardfork_visitor::operator()</definition>
        <argsstring>(const graphene::chain::proposal_create_operation &amp;v) const </argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="structgraphene_1_1protocol_1_1proposal__create__operation" kindref="compound">graphene::chain::proposal_create_operation</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/proposal_evaluator.cpp" line="214" column="1" bodyfile="libraries/chain/proposal_evaluator.cpp" bodystart="214" bodyend="228"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="5886">
        <label>graphene::chain::proposal_operation_hardfork_visitor</label>
        <link refid="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor"/>
        <childnode refid="5887" relation="usage">
          <edgelabel>block_time</edgelabel>
          <edgelabel>next_maintenance_time</edgelabel>
        </childnode>
        <childnode refid="5888" relation="usage">
          <edgelabel>db</edgelabel>
        </childnode>
      </node>
      <node id="5887">
        <label>fc::time_point_sec</label>
        <link refid="classfc_1_1time__point__sec"/>
      </node>
      <node id="5889">
        <label>graphene::db::object_database</label>
        <link refid="classgraphene_1_1db_1_1object__database"/>
        <childnode refid="5890" relation="usage">
          <edgelabel>_undo_db</edgelabel>
        </childnode>
      </node>
      <node id="5888">
        <label>graphene::chain::database</label>
        <link refid="classgraphene_1_1chain_1_1database"/>
        <childnode refid="5889" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5890">
        <label>graphene::db::undo_database</label>
        <link refid="classgraphene_1_1db_1_1undo__database"/>
      </node>
    </collaborationgraph>
    <location file="libraries/chain/proposal_evaluator.cpp" line="56" column="1" bodyfile="libraries/chain/proposal_evaluator.cpp" bodystart="55" bodyend="229"/>
    <listofallmembers>
      <member refid="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1a49d262acc4a43da659e0aee75d1665d1" prot="public" virt="non-virtual"><scope>graphene::chain::proposal_operation_hardfork_visitor</scope><name>block_time</name></member>
      <member refid="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1a4d984fd0d3673e8dd5d232e7674b90ab" prot="public" virt="non-virtual"><scope>graphene::chain::proposal_operation_hardfork_visitor</scope><name>db</name></member>
      <member refid="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1a60e8c44ebd54d5aa07097f0321d48756" prot="public" virt="non-virtual"><scope>graphene::chain::proposal_operation_hardfork_visitor</scope><name>next_maintenance_time</name></member>
      <member refid="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1aee249da22e0cdb44064a216becf61531" prot="public" virt="non-virtual"><scope>graphene::chain::proposal_operation_hardfork_visitor</scope><name>operator()</name></member>
      <member refid="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1a1590144d170633be6234fe131fe23964" prot="public" virt="non-virtual"><scope>graphene::chain::proposal_operation_hardfork_visitor</scope><name>operator()</name></member>
      <member refid="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1a6b8e9d2bce725d245a57c4ce03ddbae7" prot="public" virt="non-virtual"><scope>graphene::chain::proposal_operation_hardfork_visitor</scope><name>operator()</name></member>
      <member refid="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1a97b5f2378cf5b8de366d7c84f65e8d95" prot="public" virt="non-virtual"><scope>graphene::chain::proposal_operation_hardfork_visitor</scope><name>operator()</name></member>
      <member refid="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1ae96f1c77ae3b6767aa4c5e8e0387aee5" prot="public" virt="non-virtual"><scope>graphene::chain::proposal_operation_hardfork_visitor</scope><name>operator()</name></member>
      <member refid="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1a4689472a00b818cddb76fac0b976a8ee" prot="public" virt="non-virtual"><scope>graphene::chain::proposal_operation_hardfork_visitor</scope><name>operator()</name></member>
      <member refid="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1a331a648b19e72a7fbad6fb2f6f1f302d" prot="public" virt="non-virtual"><scope>graphene::chain::proposal_operation_hardfork_visitor</scope><name>operator()</name></member>
      <member refid="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1a479f0ac8e26c23b4a3868b082192d8d8" prot="public" virt="non-virtual"><scope>graphene::chain::proposal_operation_hardfork_visitor</scope><name>operator()</name></member>
      <member refid="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1ac4eb7d10ac063b233d6ade5efa9fe76f" prot="public" virt="non-virtual"><scope>graphene::chain::proposal_operation_hardfork_visitor</scope><name>operator()</name></member>
      <member refid="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1a4be7c8786dd6019fec3d23db1e5de939" prot="public" virt="non-virtual"><scope>graphene::chain::proposal_operation_hardfork_visitor</scope><name>operator()</name></member>
      <member refid="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1a279164bc221a248337d2daa9872251e8" prot="public" virt="non-virtual"><scope>graphene::chain::proposal_operation_hardfork_visitor</scope><name>operator()</name></member>
      <member refid="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1a4cb95eba572a16419ed75e3b720794c5" prot="public" virt="non-virtual"><scope>graphene::chain::proposal_operation_hardfork_visitor</scope><name>operator()</name></member>
      <member refid="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1a0e05ed09547de42946781e2d4e723a41" prot="public" virt="non-virtual"><scope>graphene::chain::proposal_operation_hardfork_visitor</scope><name>operator()</name></member>
      <member refid="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1a06b5b5e47b440da7c69c6c0684bd66e5" prot="public" virt="non-virtual"><scope>graphene::chain::proposal_operation_hardfork_visitor</scope><name>operator()</name></member>
      <member refid="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1a6a707cea11c8f580f5f46636908ad914" prot="public" virt="non-virtual"><scope>graphene::chain::proposal_operation_hardfork_visitor</scope><name>operator()</name></member>
      <member refid="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1a81e767d6e020736025d388f3f943bc08" prot="public" virt="non-virtual"><scope>graphene::chain::proposal_operation_hardfork_visitor</scope><name>operator()</name></member>
      <member refid="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1acb9a8d69cc6e37ee9336ef8322aa8999" prot="public" virt="non-virtual"><scope>graphene::chain::proposal_operation_hardfork_visitor</scope><name>operator()</name></member>
      <member refid="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1abc4d23b827d1c4a4ebbe76fbb3dfbb68" prot="public" virt="non-virtual"><scope>graphene::chain::proposal_operation_hardfork_visitor</scope><name>operator()</name></member>
      <member refid="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1a3da79e18b4467b5854e514642c52a831" prot="public" virt="non-virtual"><scope>graphene::chain::proposal_operation_hardfork_visitor</scope><name>operator()</name></member>
      <member refid="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1ad884104846e0ce6dd7a6b912b3918c08" prot="public" virt="non-virtual"><scope>graphene::chain::proposal_operation_hardfork_visitor</scope><name>operator()</name></member>
      <member refid="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1a999ec1bd5ece3b5a09384758be759408" prot="public" virt="non-virtual"><scope>graphene::chain::proposal_operation_hardfork_visitor</scope><name>operator()</name></member>
      <member refid="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1a80b3700e7234cbb7f4990e7b00c3fa30" prot="public" virt="non-virtual"><scope>graphene::chain::proposal_operation_hardfork_visitor</scope><name>proposal_operation_hardfork_visitor</name></member>
      <member refid="structgraphene_1_1chain_1_1proposal__operation__hardfork__visitor_1adb804e5e83320af04f6cdb29b944a36d" prot="public" virt="non-virtual"><scope>graphene::chain::proposal_operation_hardfork_visitor</scope><name>result_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
