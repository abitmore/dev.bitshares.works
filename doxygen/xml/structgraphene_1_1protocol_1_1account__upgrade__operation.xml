<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="structgraphene_1_1protocol_1_1account__upgrade__operation" kind="struct" language="C++" prot="public">
    <compoundname>graphene::protocol::account_upgrade_operation</compoundname>
    <basecompoundref refid="structgraphene_1_1protocol_1_1base__operation" prot="public" virt="non-virtual">graphene::protocol::base_operation</basecompoundref>
    <includes refid="account_8hpp" local="no">account.hpp</includes>
    <innerclass refid="structgraphene_1_1protocol_1_1account__upgrade__operation_1_1fee__parameters__type" prot="public">graphene::protocol::account_upgrade_operation::fee_parameters_type</innerclass>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1account__upgrade__operation_1adf16cd82b228a5d16c06897c60240ca6" prot="public" static="no" mutable="no">
        <type><ref refid="structgraphene_1_1protocol_1_1asset" kindref="compound">asset</ref></type>
        <definition>asset graphene::protocol::account_upgrade_operation::fee</definition>
        <argsstring></argsstring>
        <name>fee</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/account.hpp" line="242" column="1" bodyfile="libraries/protocol/include/graphene/protocol/account.hpp" bodystart="242" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1account__upgrade__operation_1a16d8fb7571c0d517e4c74b8b0237f825" prot="public" static="no" mutable="no">
        <type>account_id_type</type>
        <definition>account_id_type graphene::protocol::account_upgrade_operation::account_to_upgrade</definition>
        <argsstring></argsstring>
        <name>account_to_upgrade</name>
        <briefdescription>
<para>The account to upgrade; must not already be a lifetime member. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/account.hpp" line="244" column="1" bodyfile="libraries/protocol/include/graphene/protocol/account.hpp" bodystart="244" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1account__upgrade__operation_1a8d90dc4eb2f134cdef0346d496d15ca4" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool graphene::protocol::account_upgrade_operation::upgrade_to_lifetime_member</definition>
        <argsstring></argsstring>
        <name>upgrade_to_lifetime_member</name>
        <initializer>= false</initializer>
        <briefdescription>
<para>If true, the account will be upgraded to a lifetime member; otherwise, it will add a year to the subscription. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/account.hpp" line="246" column="1" bodyfile="libraries/protocol/include/graphene/protocol/account.hpp" bodystart="246" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1account__upgrade__operation_1acce979b01bdd9e982936ec6857218b1b" prot="public" static="no" mutable="no">
        <type><ref refid="group__operations_1gabaddcaf5bde76414891b4c29031d9288" kindref="member">extensions_type</ref></type>
        <definition>extensions_type graphene::protocol::account_upgrade_operation::extensions</definition>
        <argsstring></argsstring>
        <name>extensions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/account.hpp" line="247" column="1" bodyfile="libraries/protocol/include/graphene/protocol/account.hpp" bodystart="247" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structgraphene_1_1protocol_1_1account__upgrade__operation_1a558ac21619cacfc78e520139aaafcc6c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>account_id_type</type>
        <definition>account_id_type graphene::protocol::account_upgrade_operation::fee_payer</definition>
        <argsstring>() const </argsstring>
        <name>fee_payer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/account.hpp" line="249" column="1" bodyfile="libraries/protocol/include/graphene/protocol/account.hpp" bodystart="249" bodyend="249"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1protocol_1_1account__upgrade__operation_1a5a95d7ce4ad7529759b65956d7c5267a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::protocol::account_upgrade_operation::validate</definition>
        <argsstring>() const </argsstring>
        <name>validate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/account.hpp" line="250" column="1" bodyfile="libraries/protocol/account.cpp" bodystart="268" bodyend="271"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1protocol_1_1account__upgrade__operation_1a71876142458531ad5ab29e9afb47c2c1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacegraphene_1_1protocol_1a69b2104c1c11eed2d17bd29b86713347" kindref="member">share_type</ref></type>
        <definition>share_type graphene::protocol::account_upgrade_operation::calculate_fee</definition>
        <argsstring>(const fee_parameters_type &amp;k) const </argsstring>
        <name>calculate_fee</name>
        <param>
          <type>const <ref refid="structgraphene_1_1protocol_1_1account__upgrade__operation_1_1fee__parameters__type" kindref="compound">fee_parameters_type</ref> &amp;</type>
          <declname>k</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/account.hpp" line="251" column="1" bodyfile="libraries/protocol/account.cpp" bodystart="261" bodyend="266"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Manage an account&apos;s membership status</para><para>This operation is used to upgrade an account to a member, or renew its subscription. If an account which is an unexpired annual subscription member publishes this operation with <ref refid="structgraphene_1_1protocol_1_1account__upgrade__operation_1a8d90dc4eb2f134cdef0346d496d15ca4" kindref="member">upgrade_to_lifetime_member</ref> set to false, the account&apos;s membership expiration date will be pushed backward one year. If a basic account publishes it with <ref refid="structgraphene_1_1protocol_1_1account__upgrade__operation_1a8d90dc4eb2f134cdef0346d496d15ca4" kindref="member">upgrade_to_lifetime_member</ref> set to false, the account will be upgraded to a subscription member with an expiration date one year after the processing time of this operation. </para>    </briefdescription>
    <detaileddescription>
<para>Any account may use this operation to become a lifetime member by setting <ref refid="structgraphene_1_1protocol_1_1account__upgrade__operation_1a8d90dc4eb2f134cdef0346d496d15ca4" kindref="member">upgrade_to_lifetime_member</ref> to true. Once an account has become a lifetime member, it may not use this operation anymore. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="330">
        <label>graphene::protocol::base_operation</label>
        <link refid="structgraphene_1_1protocol_1_1base__operation"/>
      </node>
      <node id="329">
        <label>graphene::protocol::account_upgrade_operation</label>
        <link refid="structgraphene_1_1protocol_1_1account__upgrade__operation"/>
        <childnode refid="330" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="335">
        <label>account_id_type</label>
      </node>
      <node id="334">
        <label>fc::safe&lt; int64_t &gt;</label>
        <link refid="structfc_1_1safe"/>
      </node>
      <node id="332">
        <label>graphene::protocol::base_operation</label>
        <link refid="structgraphene_1_1protocol_1_1base__operation"/>
      </node>
      <node id="333">
        <label>graphene::protocol::asset</label>
        <link refid="structgraphene_1_1protocol_1_1asset"/>
        <childnode refid="334" relation="usage">
          <edgelabel>amount</edgelabel>
        </childnode>
      </node>
      <node id="331">
        <label>graphene::protocol::account_upgrade_operation</label>
        <link refid="structgraphene_1_1protocol_1_1account__upgrade__operation"/>
        <childnode refid="332" relation="public-inheritance">
        </childnode>
        <childnode refid="333" relation="usage">
          <edgelabel>fee</edgelabel>
        </childnode>
        <childnode refid="335" relation="usage">
          <edgelabel>account_to_upgrade</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="libraries/protocol/include/graphene/protocol/account.hpp" line="236" column="1" bodyfile="libraries/protocol/include/graphene/protocol/account.hpp" bodystart="235" bodyend="252"/>
    <listofallmembers>
      <member refid="structgraphene_1_1protocol_1_1account__upgrade__operation_1a16d8fb7571c0d517e4c74b8b0237f825" prot="public" virt="non-virtual"><scope>graphene::protocol::account_upgrade_operation</scope><name>account_to_upgrade</name></member>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1aaccb0fa71ee529cf62324baaa99988fe" prot="public" virt="non-virtual"><scope>graphene::protocol::account_upgrade_operation</scope><name>calculate_data_fee</name></member>
      <member refid="structgraphene_1_1protocol_1_1account__upgrade__operation_1a71876142458531ad5ab29e9afb47c2c1" prot="public" virt="non-virtual"><scope>graphene::protocol::account_upgrade_operation</scope><name>calculate_fee</name></member>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1afd01efa3e06367c572512e381b1106fb" prot="public" virt="non-virtual" ambiguityscope="graphene::protocol::base_operation::"><scope>graphene::protocol::account_upgrade_operation</scope><name>calculate_fee</name></member>
      <member refid="structgraphene_1_1protocol_1_1account__upgrade__operation_1acce979b01bdd9e982936ec6857218b1b" prot="public" virt="non-virtual"><scope>graphene::protocol::account_upgrade_operation</scope><name>extensions</name></member>
      <member refid="structgraphene_1_1protocol_1_1account__upgrade__operation_1adf16cd82b228a5d16c06897c60240ca6" prot="public" virt="non-virtual"><scope>graphene::protocol::account_upgrade_operation</scope><name>fee</name></member>
      <member refid="structgraphene_1_1protocol_1_1account__upgrade__operation_1a558ac21619cacfc78e520139aaafcc6c" prot="public" virt="non-virtual"><scope>graphene::protocol::account_upgrade_operation</scope><name>fee_payer</name></member>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1aded12887f115b2bfa54ecd59540fa242" prot="public" virt="non-virtual"><scope>graphene::protocol::account_upgrade_operation</scope><name>get_required_active_authorities</name></member>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1a6ea245f980406ab52fdb90283e687d1c" prot="public" virt="non-virtual"><scope>graphene::protocol::account_upgrade_operation</scope><name>get_required_authorities</name></member>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1a0742a4b91de875366ec466a5b67b2811" prot="public" virt="non-virtual"><scope>graphene::protocol::account_upgrade_operation</scope><name>get_required_owner_authorities</name></member>
      <member refid="structgraphene_1_1protocol_1_1account__upgrade__operation_1a8d90dc4eb2f134cdef0346d496d15ca4" prot="public" virt="non-virtual"><scope>graphene::protocol::account_upgrade_operation</scope><name>upgrade_to_lifetime_member</name></member>
      <member refid="structgraphene_1_1protocol_1_1account__upgrade__operation_1a5a95d7ce4ad7529759b65956d7c5267a" prot="public" virt="non-virtual"><scope>graphene::protocol::account_upgrade_operation</scope><name>validate</name></member>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1a41d0a14a070ac634be11f30dbf559935" prot="public" virt="non-virtual"><scope>graphene::protocol::account_upgrade_operation</scope><name>validate_parallel</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
