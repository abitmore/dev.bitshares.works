<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classfc_1_1detail_1_1idle__notifier__impl" kind="class" language="C++" prot="public">
    <compoundname>fc::detail::idle_notifier_impl</compoundname>
    <basecompoundref refid="classfc_1_1thread__idle__notifier" prot="public" virt="non-virtual">fc::thread_idle_notifier</basecompoundref>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classfc_1_1detail_1_1idle__notifier__impl_1aa87666e2009609a8c20418eea2db3ce9" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t fc::detail::idle_notifier_impl::id</definition>
        <argsstring></argsstring>
        <name>id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/src/thread/parallel.cpp" line="58" column="1" bodyfile="libraries/fc/src/thread/parallel.cpp" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classfc_1_1detail_1_1idle__notifier__impl_1a3e922d97c793ca713228aeb8f0796f5e" prot="public" static="no" mutable="no">
        <type><ref refid="classfc_1_1detail_1_1pool__impl" kindref="compound">pool_impl</ref> *</type>
        <definition>pool_impl* fc::detail::idle_notifier_impl::my_pool</definition>
        <argsstring></argsstring>
        <name>my_pool</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/src/thread/parallel.cpp" line="59" column="1" bodyfile="libraries/fc/src/thread/parallel.cpp" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classfc_1_1detail_1_1idle__notifier__impl_1a500c2b169d497b62fbffc8740224c4c4" prot="public" static="no" mutable="no">
        <type>boost::atomic&lt; bool &gt;</type>
        <definition>boost::atomic&lt;bool&gt; fc::detail::idle_notifier_impl::is_idle</definition>
        <argsstring></argsstring>
        <name>is_idle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/src/thread/parallel.cpp" line="60" column="1" bodyfile="libraries/fc/src/thread/parallel.cpp" bodystart="60" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classfc_1_1detail_1_1idle__notifier__impl_1a4adc53e9b350b82072d113d54d5eac41" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>fc::detail::idle_notifier_impl::idle_notifier_impl</definition>
        <argsstring>()</argsstring>
        <name>idle_notifier_impl</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/src/thread/parallel.cpp" line="38" column="1" bodyfile="libraries/fc/src/thread/parallel.cpp" bodystart="38" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1detail_1_1idle__notifier__impl_1a16970f2318d2bdb6672aedb5ae7e952d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>fc::detail::idle_notifier_impl::idle_notifier_impl</definition>
        <argsstring>(const idle_notifier_impl &amp;copy)</argsstring>
        <name>idle_notifier_impl</name>
        <param>
          <type>const <ref refid="classfc_1_1detail_1_1idle__notifier__impl" kindref="compound">idle_notifier_impl</ref> &amp;</type>
          <declname>copy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/src/thread/parallel.cpp" line="43" column="1" bodyfile="libraries/fc/src/thread/parallel.cpp" bodystart="43" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1detail_1_1idle__notifier__impl_1a8b64a3e2fb0c720535addfda94f46195" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual fc::detail::idle_notifier_impl::~idle_notifier_impl</definition>
        <argsstring>()</argsstring>
        <name>~idle_notifier_impl</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/src/thread/parallel.cpp" line="50" column="1" bodyfile="libraries/fc/src/thread/parallel.cpp" bodystart="50" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1detail_1_1idle__notifier__impl_1a52ee3790666f700560dfde7fd6c06752" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classfc_1_1task__base" kindref="compound">task_base</ref> *</type>
        <definition>task_base * fc::detail::idle_notifier_impl::idle</definition>
        <argsstring>()</argsstring>
        <name>idle</name>
        <reimplements refid="classfc_1_1thread__idle__notifier_1aad95de1538a16983b455f23a7ddb73dd">idle</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method is called when the thread is idle. If it returns a <ref refid="classfc_1_1task__base" kindref="compound">task_base</ref> it will be queued and executed immediately. <simplesect kind="return"><para>a task to execute, or nullptr </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/src/thread/parallel.cpp" line="52" column="1" bodyfile="libraries/fc/src/thread/parallel.cpp" bodystart="126" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1detail_1_1idle__notifier__impl_1aeca6fcd636ae130816b4e8f637a0dfb4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void fc::detail::idle_notifier_impl::busy</definition>
        <argsstring>()</argsstring>
        <name>busy</name>
        <reimplements refid="classfc_1_1thread__idle__notifier_1aac3dc857608ab4c80b3d0675bfc52d52">busy</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method is called when the thread is no longer idle, e. g. after it has woken up due to a timer or signal. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/src/thread/parallel.cpp" line="53" column="1" bodyfile="libraries/fc/src/thread/parallel.cpp" bodystart="53" bodyend="56"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="4499">
        <label>fc::thread_idle_notifier</label>
        <link refid="classfc_1_1thread__idle__notifier"/>
      </node>
      <node id="4498">
        <label>fc::detail::idle_notifier_impl</label>
        <link refid="classfc_1_1detail_1_1idle__notifier__impl"/>
        <childnode refid="4499" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4501">
        <label>fc::thread_idle_notifier</label>
        <link refid="classfc_1_1thread__idle__notifier"/>
      </node>
      <node id="4502">
        <label>fc::detail::pool_impl</label>
        <link refid="classfc_1_1detail_1_1pool__impl"/>
      </node>
      <node id="4500">
        <label>fc::detail::idle_notifier_impl</label>
        <link refid="classfc_1_1detail_1_1idle__notifier__impl"/>
        <childnode refid="4501" relation="public-inheritance">
        </childnode>
        <childnode refid="4502" relation="usage">
          <edgelabel>my_pool</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="libraries/fc/src/thread/parallel.cpp" line="36" column="1" bodyfile="libraries/fc/src/thread/parallel.cpp" bodystart="35" bodyend="61"/>
    <listofallmembers>
      <member refid="classfc_1_1detail_1_1idle__notifier__impl_1aeca6fcd636ae130816b4e8f637a0dfb4" prot="public" virt="virtual"><scope>fc::detail::idle_notifier_impl</scope><name>busy</name></member>
      <member refid="classfc_1_1detail_1_1idle__notifier__impl_1aa87666e2009609a8c20418eea2db3ce9" prot="public" virt="non-virtual"><scope>fc::detail::idle_notifier_impl</scope><name>id</name></member>
      <member refid="classfc_1_1detail_1_1idle__notifier__impl_1a52ee3790666f700560dfde7fd6c06752" prot="public" virt="virtual"><scope>fc::detail::idle_notifier_impl</scope><name>idle</name></member>
      <member refid="classfc_1_1detail_1_1idle__notifier__impl_1a4adc53e9b350b82072d113d54d5eac41" prot="public" virt="non-virtual"><scope>fc::detail::idle_notifier_impl</scope><name>idle_notifier_impl</name></member>
      <member refid="classfc_1_1detail_1_1idle__notifier__impl_1a16970f2318d2bdb6672aedb5ae7e952d" prot="public" virt="non-virtual"><scope>fc::detail::idle_notifier_impl</scope><name>idle_notifier_impl</name></member>
      <member refid="classfc_1_1detail_1_1idle__notifier__impl_1a500c2b169d497b62fbffc8740224c4c4" prot="public" virt="non-virtual"><scope>fc::detail::idle_notifier_impl</scope><name>is_idle</name></member>
      <member refid="classfc_1_1detail_1_1idle__notifier__impl_1a3e922d97c793ca713228aeb8f0796f5e" prot="public" virt="non-virtual"><scope>fc::detail::idle_notifier_impl</scope><name>my_pool</name></member>
      <member refid="classfc_1_1detail_1_1idle__notifier__impl_1a8b64a3e2fb0c720535addfda94f46195" prot="public" virt="virtual"><scope>fc::detail::idle_notifier_impl</scope><name>~idle_notifier_impl</name></member>
      <member refid="classfc_1_1thread__idle__notifier_1a2d21cdead774689954b59073e078cc63" prot="public" virt="virtual"><scope>fc::detail::idle_notifier_impl</scope><name>~thread_idle_notifier</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
