<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structgraphene_1_1protocol_1_1custom__operation" kind="struct" language="C++" prot="public">
    <compoundname>graphene::protocol::custom_operation</compoundname>
    <basecompoundref refid="structgraphene_1_1protocol_1_1base__operation" prot="public" virt="non-virtual">graphene::protocol::base_operation</basecompoundref>
    <includes refid="custom_8hpp" local="no">custom.hpp</includes>
    <innerclass refid="structgraphene_1_1protocol_1_1custom__operation_1_1fee__parameters__type" prot="public">graphene::protocol::custom_operation::fee_parameters_type</innerclass>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1custom__operation_1a8caf7ca431eeb2a88f79fa5de9281787" prot="public" static="no" mutable="no">
        <type><ref refid="structgraphene_1_1protocol_1_1asset" kindref="compound">asset</ref></type>
        <definition>asset graphene::protocol::custom_operation::fee</definition>
        <argsstring></argsstring>
        <name>fee</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/custom.hpp" line="45" column="1" bodyfile="libraries/protocol/include/graphene/protocol/custom.hpp" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1custom__operation_1ad1c6e30f0211e5b98c7cdd6993b170f8" prot="public" static="no" mutable="no">
        <type>account_id_type</type>
        <definition>account_id_type graphene::protocol::custom_operation::payer</definition>
        <argsstring></argsstring>
        <name>payer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/custom.hpp" line="46" column="1" bodyfile="libraries/protocol/include/graphene/protocol/custom.hpp" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1custom__operation_1af4592f67a485f6a7eaa4ff343d32a7bf" prot="public" static="no" mutable="no">
        <type>flat_set&lt; account_id_type &gt;</type>
        <definition>flat_set&lt;account_id_type&gt; graphene::protocol::custom_operation::required_auths</definition>
        <argsstring></argsstring>
        <name>required_auths</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/custom.hpp" line="47" column="1" bodyfile="libraries/protocol/include/graphene/protocol/custom.hpp" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1custom__operation_1a2b3fc747e2bf2f1da3bf3cd368a6410e" prot="public" static="no" mutable="no">
        <type>uint16_t</type>
        <definition>uint16_t graphene::protocol::custom_operation::id</definition>
        <argsstring></argsstring>
        <name>id</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/custom.hpp" line="48" column="1" bodyfile="libraries/protocol/include/graphene/protocol/custom.hpp" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1custom__operation_1ac7d15a1d3473f48cd7b12ca97ebcc491" prot="public" static="no" mutable="no">
        <type>vector&lt; char &gt;</type>
        <definition>vector&lt;char&gt; graphene::protocol::custom_operation::data</definition>
        <argsstring></argsstring>
        <name>data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/custom.hpp" line="49" column="1" bodyfile="libraries/protocol/include/graphene/protocol/custom.hpp" bodystart="49" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structgraphene_1_1protocol_1_1custom__operation_1a24036f9fb150f0be9babe36776d2363e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>account_id_type</type>
        <definition>account_id_type graphene::protocol::custom_operation::fee_payer</definition>
        <argsstring>() const</argsstring>
        <name>fee_payer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/custom.hpp" line="51" column="1" bodyfile="libraries/protocol/include/graphene/protocol/custom.hpp" bodystart="51" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1protocol_1_1custom__operation_1a2d9c04c1f8d7cb655a6e73451784a682" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void graphene::protocol::custom_operation::validate</definition>
        <argsstring>() const</argsstring>
        <name>validate</name>
        <reimplements refid="structgraphene_1_1protocol_1_1base__operation_1a23d617a6fa0921d3f5b51dd5167e7a29">validate</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/custom.hpp" line="52" column="1" bodyfile="libraries/protocol/custom.cpp" bodystart="30" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1protocol_1_1custom__operation_1a0eac0d56d889279dd760bf0c57e42140" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacegraphene_1_1protocol_1a69b2104c1c11eed2d17bd29b86713347" kindref="member">share_type</ref></type>
        <definition>share_type graphene::protocol::custom_operation::calculate_fee</definition>
        <argsstring>(const fee_parameters_type &amp;k) const</argsstring>
        <name>calculate_fee</name>
        <param>
          <type>const <ref refid="structgraphene_1_1protocol_1_1custom__operation_1_1fee__parameters__type" kindref="compound">fee_parameters_type</ref> &amp;</type>
          <declname>k</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/custom.hpp" line="53" column="1" bodyfile="libraries/protocol/custom.cpp" bodystart="34" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1protocol_1_1custom__operation_1ab24f76a2575e5a05f0f9c898a50c909a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void graphene::protocol::custom_operation::get_required_active_authorities</definition>
        <argsstring>(flat_set&lt; account_id_type &gt; &amp;auths) const</argsstring>
        <name>get_required_active_authorities</name>
        <reimplements refid="structgraphene_1_1protocol_1_1base__operation_1a89ed7c6e7da93cd99bb41bc8d7e2627b">get_required_active_authorities</reimplements>
        <param>
          <type>flat_set&lt; account_id_type &gt; &amp;</type>
          <declname>auths</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/custom.hpp" line="54" column="1" bodyfile="libraries/protocol/include/graphene/protocol/custom.hpp" bodystart="54" bodyend="56"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>provides a generic way to add higher level protocols on top of witness consensus</para><para>There is no validation for this operation other than that required auths are valid and a fee is paid that is appropriate for the data contained. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3383">
        <label>graphene::protocol::base_operation</label>
        <link refid="structgraphene_1_1protocol_1_1base__operation"/>
      </node>
      <node id="3382">
        <label>graphene::protocol::custom_operation</label>
        <link refid="structgraphene_1_1protocol_1_1custom__operation"/>
        <childnode refid="3383" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3388">
        <label>vector&lt; char &gt;</label>
      </node>
      <node id="3389">
        <label>account_id_type</label>
      </node>
      <node id="3390">
        <label>flat_set&lt; account_id_type &gt;</label>
      </node>
      <node id="3387">
        <label>fc::safe&lt; int64_t &gt;</label>
        <link refid="structfc_1_1safe"/>
      </node>
      <node id="3385">
        <label>graphene::protocol::base_operation</label>
        <link refid="structgraphene_1_1protocol_1_1base__operation"/>
      </node>
      <node id="3386">
        <label>graphene::protocol::asset</label>
        <link refid="structgraphene_1_1protocol_1_1asset"/>
        <childnode refid="3387" relation="usage">
          <edgelabel>amount</edgelabel>
        </childnode>
      </node>
      <node id="3384">
        <label>graphene::protocol::custom_operation</label>
        <link refid="structgraphene_1_1protocol_1_1custom__operation"/>
        <childnode refid="3385" relation="public-inheritance">
        </childnode>
        <childnode refid="3386" relation="usage">
          <edgelabel>fee</edgelabel>
        </childnode>
        <childnode refid="3388" relation="usage">
          <edgelabel>data</edgelabel>
        </childnode>
        <childnode refid="3389" relation="usage">
          <edgelabel>payer</edgelabel>
        </childnode>
        <childnode refid="3390" relation="usage">
          <edgelabel>required_auths</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="libraries/protocol/include/graphene/protocol/custom.hpp" line="39" column="1" bodyfile="libraries/protocol/include/graphene/protocol/custom.hpp" bodystart="38" bodyend="57"/>
    <listofallmembers>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1aaccb0fa71ee529cf62324baaa99988fe" prot="public" virt="non-virtual"><scope>graphene::protocol::custom_operation</scope><name>calculate_data_fee</name></member>
      <member refid="structgraphene_1_1protocol_1_1custom__operation_1a0eac0d56d889279dd760bf0c57e42140" prot="public" virt="non-virtual"><scope>graphene::protocol::custom_operation</scope><name>calculate_fee</name></member>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1a0be44badcee9a648413eb906dac1d3b3" prot="public" virt="non-virtual" ambiguityscope="graphene::protocol::base_operation::"><scope>graphene::protocol::custom_operation</scope><name>calculate_fee</name></member>
      <member refid="structgraphene_1_1protocol_1_1custom__operation_1ac7d15a1d3473f48cd7b12ca97ebcc491" prot="public" virt="non-virtual"><scope>graphene::protocol::custom_operation</scope><name>data</name></member>
      <member refid="structgraphene_1_1protocol_1_1custom__operation_1a8caf7ca431eeb2a88f79fa5de9281787" prot="public" virt="non-virtual"><scope>graphene::protocol::custom_operation</scope><name>fee</name></member>
      <member refid="structgraphene_1_1protocol_1_1custom__operation_1a24036f9fb150f0be9babe36776d2363e" prot="public" virt="non-virtual"><scope>graphene::protocol::custom_operation</scope><name>fee_payer</name></member>
      <member refid="structgraphene_1_1protocol_1_1custom__operation_1ab24f76a2575e5a05f0f9c898a50c909a" prot="public" virt="virtual"><scope>graphene::protocol::custom_operation</scope><name>get_required_active_authorities</name></member>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1aabc48ce97877c67ff560b94284a7c0bb" prot="public" virt="virtual"><scope>graphene::protocol::custom_operation</scope><name>get_required_authorities</name></member>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1a3251978e7bd0bb2f2fa23bcea5dee95c" prot="public" virt="virtual"><scope>graphene::protocol::custom_operation</scope><name>get_required_owner_authorities</name></member>
      <member refid="structgraphene_1_1protocol_1_1custom__operation_1a2b3fc747e2bf2f1da3bf3cd368a6410e" prot="public" virt="non-virtual"><scope>graphene::protocol::custom_operation</scope><name>id</name></member>
      <member refid="structgraphene_1_1protocol_1_1custom__operation_1ad1c6e30f0211e5b98c7cdd6993b170f8" prot="public" virt="non-virtual"><scope>graphene::protocol::custom_operation</scope><name>payer</name></member>
      <member refid="structgraphene_1_1protocol_1_1custom__operation_1af4592f67a485f6a7eaa4ff343d32a7bf" prot="public" virt="non-virtual"><scope>graphene::protocol::custom_operation</scope><name>required_auths</name></member>
      <member refid="structgraphene_1_1protocol_1_1custom__operation_1a2d9c04c1f8d7cb655a6e73451784a682" prot="public" virt="virtual"><scope>graphene::protocol::custom_operation</scope><name>validate</name></member>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1a485f3d3b963ff4c081af85945cf27774" prot="public" virt="non-virtual"><scope>graphene::protocol::custom_operation</scope><name>validate_parallel</name></member>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1a04ac6688e2df1d511514e4fc1983b828" prot="public" virt="virtual"><scope>graphene::protocol::custom_operation</scope><name>~base_operation</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
