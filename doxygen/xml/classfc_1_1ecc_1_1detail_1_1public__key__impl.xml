<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classfc_1_1ecc_1_1detail_1_1public__key__impl" kind="class" language="C++" prot="public">
    <compoundname>fc::ecc::detail::public_key_impl</compoundname>
    <includes refid="__elliptic__impl__pub_8hpp" local="no">_elliptic_impl_pub.hpp</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classfc_1_1ecc_1_1detail_1_1public__key__impl_1a0126aa413164230b009ade93e8d260c2" prot="public" static="no" mutable="no">
        <type>EC_KEY *</type>
        <definition>EC_KEY* fc::ecc::detail::public_key_impl::_key</definition>
        <argsstring></argsstring>
        <name>_key</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/src/crypto/_elliptic_impl_pub.hpp" line="27" column="1" bodyfile="libraries/fc/src/crypto/_elliptic_impl_pub.hpp" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classfc_1_1ecc_1_1detail_1_1public__key__impl_1a43b5ef8d2fa49686a315d6655aa019a6" prot="public" static="no" mutable="no">
        <type><ref refid="namespacefc_1_1ecc_1a050b3233b3000ad6098af37f768aae7a" kindref="member">public_key_data</ref></type>
        <definition>public_key_data fc::ecc::detail::public_key_impl::_key</definition>
        <argsstring></argsstring>
        <name>_key</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/src/crypto/elliptic_secp256k1.cpp" line="51" column="1" bodyfile="libraries/fc/src/crypto/elliptic_secp256k1.cpp" bodystart="51" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classfc_1_1ecc_1_1detail_1_1public__key__impl_1a335ab1403e6cf3a5a0532c9432657b99" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fc::ecc::detail::public_key_impl::public_key_impl</definition>
        <argsstring>() BOOST_NOEXCEPT</argsstring>
        <name>public_key_impl</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/src/crypto/_elliptic_impl_pub.hpp" line="16" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1ecc_1_1detail_1_1public__key__impl_1ae106b784d9cad9cb02c02c86e47e8cad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fc::ecc::detail::public_key_impl::public_key_impl</definition>
        <argsstring>(const public_key_impl &amp;cpy) BOOST_NOEXCEPT</argsstring>
        <name>public_key_impl</name>
        <param>
          <type>const <ref refid="classfc_1_1ecc_1_1detail_1_1public__key__impl" kindref="compound">public_key_impl</ref> &amp;</type>
          <declname>cpy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/src/crypto/_elliptic_impl_pub.hpp" line="17" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1ecc_1_1detail_1_1public__key__impl_1a207584088a1daf4532bef012d728a012" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fc::ecc::detail::public_key_impl::public_key_impl</definition>
        <argsstring>(public_key_impl &amp;&amp;cpy) BOOST_NOEXCEPT</argsstring>
        <name>public_key_impl</name>
        <param>
          <type><ref refid="classfc_1_1ecc_1_1detail_1_1public__key__impl" kindref="compound">public_key_impl</ref> &amp;&amp;</type>
          <declname>cpy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/src/crypto/_elliptic_impl_pub.hpp" line="18" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1ecc_1_1detail_1_1public__key__impl_1a65b429a992c0d614c39ba4af459374fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fc::ecc::detail::public_key_impl::~public_key_impl</definition>
        <argsstring>() BOOST_NOEXCEPT</argsstring>
        <name>~public_key_impl</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/src/crypto/_elliptic_impl_pub.hpp" line="19" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1ecc_1_1detail_1_1public__key__impl_1a46caebdeb132ce6a8d3d69adce124f25" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classfc_1_1ecc_1_1detail_1_1public__key__impl" kindref="compound">public_key_impl</ref> &amp;</type>
        <definition>public_key_impl&amp; fc::ecc::detail::public_key_impl::operator=</definition>
        <argsstring>(const public_key_impl &amp;pk) BOOST_NOEXCEPT</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classfc_1_1ecc_1_1detail_1_1public__key__impl" kindref="compound">public_key_impl</ref> &amp;</type>
          <declname>pk</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/src/crypto/_elliptic_impl_pub.hpp" line="21" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1ecc_1_1detail_1_1public__key__impl_1a154d0531bb2217a04619047d7a302391" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classfc_1_1ecc_1_1detail_1_1public__key__impl" kindref="compound">public_key_impl</ref> &amp;</type>
        <definition>public_key_impl&amp; fc::ecc::detail::public_key_impl::operator=</definition>
        <argsstring>(public_key_impl &amp;&amp;pk) BOOST_NOEXCEPT</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classfc_1_1ecc_1_1detail_1_1public__key__impl" kindref="compound">public_key_impl</ref> &amp;&amp;</type>
          <declname>pk</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/src/crypto/_elliptic_impl_pub.hpp" line="23" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1ecc_1_1detail_1_1public__key__impl_1a335ab1403e6cf3a5a0532c9432657b99" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>fc::ecc::detail::public_key_impl::public_key_impl</definition>
        <argsstring>() BOOST_NOEXCEPT</argsstring>
        <name>public_key_impl</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/src/crypto/elliptic_secp256k1.cpp" line="39" column="1" bodyfile="libraries/fc/src/crypto/elliptic_secp256k1.cpp" bodystart="39" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1ecc_1_1detail_1_1public__key__impl_1ae106b784d9cad9cb02c02c86e47e8cad" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>fc::ecc::detail::public_key_impl::public_key_impl</definition>
        <argsstring>(const public_key_impl &amp;cpy) BOOST_NOEXCEPT</argsstring>
        <name>public_key_impl</name>
        <param>
          <type>const <ref refid="classfc_1_1ecc_1_1detail_1_1public__key__impl" kindref="compound">public_key_impl</ref> &amp;</type>
          <declname>cpy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/src/crypto/elliptic_secp256k1.cpp" line="45" column="1" bodyfile="libraries/fc/src/crypto/elliptic_secp256k1.cpp" bodystart="45" bodyend="49"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classfc_1_1ecc_1_1detail_1_1public__key__impl_1afe8953b43953441a22f3cf432a412523" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int fc::ecc::detail::public_key_impl::ECDSA_SIG_recover_key_GFp</definition>
        <argsstring>(EC_KEY *eckey, ECDSA_SIG *ecsig, const unsigned char *msg, int msglen, int recid, int check)</argsstring>
        <name>ECDSA_SIG_recover_key_GFp</name>
        <param>
          <type>EC_KEY *</type>
          <declname>eckey</declname>
        </param>
        <param>
          <type>ECDSA_SIG *</type>
          <declname>ecsig</declname>
        </param>
        <param>
          <type>const unsigned char *</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>int</type>
          <declname>msglen</declname>
        </param>
        <param>
          <type>int</type>
          <declname>recid</declname>
        </param>
        <param>
          <type>int</type>
          <declname>check</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/src/crypto/_elliptic_impl_pub.hpp" line="25" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classfc_1_1ecc_1_1detail_1_1public__key__impl_1a229d7f0d3d32cf012ebf6a5a808ff72c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void fc::ecc::detail::public_key_impl::free_key</definition>
        <argsstring>() BOOST_NOEXCEPT</argsstring>
        <name>free_key</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/src/crypto/_elliptic_impl_pub.hpp" line="30" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="6777">
        <label>fc::ecc::detail::public_key_impl</label>
        <link refid="classfc_1_1ecc_1_1detail_1_1public__key__impl"/>
        <childnode refid="6778" relation="usage">
          <edgelabel>_key</edgelabel>
        </childnode>
      </node>
      <node id="6778">
        <label>fc::zero_initialized_array&lt; unsigned char, 33 &gt;</label>
        <link refid="classfc_1_1zero__initialized__array"/>
      </node>
    </collaborationgraph>
    <location file="libraries/fc/src/crypto/_elliptic_impl_pub.hpp" line="14" column="1" bodyfile="libraries/fc/src/crypto/_elliptic_impl_pub.hpp" bodystart="13" bodyend="31"/>
    <listofallmembers>
      <member refid="classfc_1_1ecc_1_1detail_1_1public__key__impl_1a0126aa413164230b009ade93e8d260c2" prot="public" virt="non-virtual"><scope>fc::ecc::detail::public_key_impl</scope><name>_key</name></member>
      <member refid="classfc_1_1ecc_1_1detail_1_1public__key__impl_1a43b5ef8d2fa49686a315d6655aa019a6" prot="public" virt="non-virtual"><scope>fc::ecc::detail::public_key_impl</scope><name>_key</name></member>
      <member refid="classfc_1_1ecc_1_1detail_1_1public__key__impl_1afe8953b43953441a22f3cf432a412523" prot="public" virt="non-virtual"><scope>fc::ecc::detail::public_key_impl</scope><name>ECDSA_SIG_recover_key_GFp</name></member>
      <member refid="classfc_1_1ecc_1_1detail_1_1public__key__impl_1a229d7f0d3d32cf012ebf6a5a808ff72c" prot="private" virt="non-virtual"><scope>fc::ecc::detail::public_key_impl</scope><name>free_key</name></member>
      <member refid="classfc_1_1ecc_1_1detail_1_1public__key__impl_1a46caebdeb132ce6a8d3d69adce124f25" prot="public" virt="non-virtual"><scope>fc::ecc::detail::public_key_impl</scope><name>operator=</name></member>
      <member refid="classfc_1_1ecc_1_1detail_1_1public__key__impl_1a154d0531bb2217a04619047d7a302391" prot="public" virt="non-virtual"><scope>fc::ecc::detail::public_key_impl</scope><name>operator=</name></member>
      <member refid="classfc_1_1ecc_1_1detail_1_1public__key__impl_1a335ab1403e6cf3a5a0532c9432657b99" prot="public" virt="non-virtual"><scope>fc::ecc::detail::public_key_impl</scope><name>public_key_impl</name></member>
      <member refid="classfc_1_1ecc_1_1detail_1_1public__key__impl_1ae106b784d9cad9cb02c02c86e47e8cad" prot="public" virt="non-virtual"><scope>fc::ecc::detail::public_key_impl</scope><name>public_key_impl</name></member>
      <member refid="classfc_1_1ecc_1_1detail_1_1public__key__impl_1a207584088a1daf4532bef012d728a012" prot="public" virt="non-virtual"><scope>fc::ecc::detail::public_key_impl</scope><name>public_key_impl</name></member>
      <member refid="classfc_1_1ecc_1_1detail_1_1public__key__impl_1a335ab1403e6cf3a5a0532c9432657b99" prot="public" virt="non-virtual"><scope>fc::ecc::detail::public_key_impl</scope><name>public_key_impl</name></member>
      <member refid="classfc_1_1ecc_1_1detail_1_1public__key__impl_1ae106b784d9cad9cb02c02c86e47e8cad" prot="public" virt="non-virtual"><scope>fc::ecc::detail::public_key_impl</scope><name>public_key_impl</name></member>
      <member refid="classfc_1_1ecc_1_1detail_1_1public__key__impl_1a65b429a992c0d614c39ba4af459374fd" prot="public" virt="non-virtual"><scope>fc::ecc::detail::public_key_impl</scope><name>~public_key_impl</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
