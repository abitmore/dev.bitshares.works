<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structgraphene_1_1protocol_1_1proposal__delete__operation" kind="struct" language="C++" prot="public">
    <compoundname>graphene::protocol::proposal_delete_operation</compoundname>
    <basecompoundref refid="structgraphene_1_1protocol_1_1base__operation" prot="public" virt="non-virtual">graphene::protocol::base_operation</basecompoundref>
    <includes refid="proposal_8hpp" local="no">proposal.hpp</includes>
    <innerclass refid="structgraphene_1_1protocol_1_1proposal__delete__operation_1_1fee__parameters__type" prot="public">graphene::protocol::proposal_delete_operation::fee_parameters_type</innerclass>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1proposal__delete__operation_1a019e84e8747b6a73d1dfd5ef33c06e56" prot="public" static="no" mutable="no">
        <type>account_id_type</type>
        <definition>account_id_type graphene::protocol::proposal_delete_operation::fee_paying_account</definition>
        <argsstring></argsstring>
        <name>fee_paying_account</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/proposal.hpp" line="160" column="1" bodyfile="libraries/protocol/include/graphene/protocol/proposal.hpp" bodystart="160" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1proposal__delete__operation_1a18740c0f907909d700933cbe9a1bcfdb" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool graphene::protocol::proposal_delete_operation::using_owner_authority</definition>
        <argsstring></argsstring>
        <name>using_owner_authority</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/proposal.hpp" line="161" column="1" bodyfile="libraries/protocol/include/graphene/protocol/proposal.hpp" bodystart="161" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1proposal__delete__operation_1ac5561b23fb9541e08b33171bc50f2fdb" prot="public" static="no" mutable="no">
        <type><ref refid="structgraphene_1_1protocol_1_1asset" kindref="compound">asset</ref></type>
        <definition>asset graphene::protocol::proposal_delete_operation::fee</definition>
        <argsstring></argsstring>
        <name>fee</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/proposal.hpp" line="162" column="1" bodyfile="libraries/protocol/include/graphene/protocol/proposal.hpp" bodystart="162" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1proposal__delete__operation_1a527504f2280a82c670929a761bd57c5b" prot="public" static="no" mutable="no">
        <type>proposal_id_type</type>
        <definition>proposal_id_type graphene::protocol::proposal_delete_operation::proposal</definition>
        <argsstring></argsstring>
        <name>proposal</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/proposal.hpp" line="163" column="1" bodyfile="libraries/protocol/include/graphene/protocol/proposal.hpp" bodystart="163" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1proposal__delete__operation_1adf333482175c7fc8d41782c2cc74f18e" prot="public" static="no" mutable="no">
        <type><ref refid="group__operations_1gabaddcaf5bde76414891b4c29031d9288" kindref="member">extensions_type</ref></type>
        <definition>extensions_type graphene::protocol::proposal_delete_operation::extensions</definition>
        <argsstring></argsstring>
        <name>extensions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/proposal.hpp" line="164" column="1" bodyfile="libraries/protocol/include/graphene/protocol/proposal.hpp" bodystart="164" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structgraphene_1_1protocol_1_1proposal__delete__operation_1a6bd2f4fb2c5aa6fcf97e4f1ec15dd5b3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>account_id_type</type>
        <definition>account_id_type graphene::protocol::proposal_delete_operation::fee_payer</definition>
        <argsstring>() const</argsstring>
        <name>fee_payer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/proposal.hpp" line="166" column="1" bodyfile="libraries/protocol/include/graphene/protocol/proposal.hpp" bodystart="166" bodyend="166"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1protocol_1_1proposal__delete__operation_1a4ec488f8dadbb2a6e8be7e550a19c602" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void graphene::protocol::proposal_delete_operation::validate</definition>
        <argsstring>() const</argsstring>
        <name>validate</name>
        <reimplements refid="structgraphene_1_1protocol_1_1base__operation_1a23d617a6fa0921d3f5b51dd5167e7a29">validate</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/proposal.hpp" line="167" column="1" bodyfile="libraries/protocol/proposal.cpp" bodystart="74" bodyend="77"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The <ref refid="structgraphene_1_1protocol_1_1proposal__delete__operation" kindref="compound">proposal_delete_operation</ref> deletes an existing transaction proposal</para><para>This operation allows the early veto of a proposed transaction. It may be used by any account which is a required authority on the proposed transaction, when that account&apos;s holder feels the proposal is ill-advised and he decides he will never approve of it and wishes to put an end to all discussion of the issue. Because he is a required authority, he could simply refuse to add his approval, but this would leave the topic open for debate until the proposal expires. Using this operation, he can prevent any further breath from being wasted on such an absurd proposal. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="6667">
        <label>graphene::protocol::base_operation</label>
        <link refid="structgraphene_1_1protocol_1_1base__operation"/>
      </node>
      <node id="6666">
        <label>graphene::protocol::proposal_delete_operation</label>
        <link refid="structgraphene_1_1protocol_1_1proposal__delete__operation"/>
        <childnode refid="6667" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="6672">
        <label>account_id_type</label>
      </node>
      <node id="6671">
        <label>fc::safe&lt; int64_t &gt;</label>
        <link refid="structfc_1_1safe"/>
      </node>
      <node id="6669">
        <label>graphene::protocol::base_operation</label>
        <link refid="structgraphene_1_1protocol_1_1base__operation"/>
      </node>
      <node id="6670">
        <label>graphene::protocol::asset</label>
        <link refid="structgraphene_1_1protocol_1_1asset"/>
        <childnode refid="6671" relation="usage">
          <edgelabel>amount</edgelabel>
        </childnode>
      </node>
      <node id="6668">
        <label>graphene::protocol::proposal_delete_operation</label>
        <link refid="structgraphene_1_1protocol_1_1proposal__delete__operation"/>
        <childnode refid="6669" relation="public-inheritance">
        </childnode>
        <childnode refid="6670" relation="usage">
          <edgelabel>fee</edgelabel>
        </childnode>
        <childnode refid="6672" relation="usage">
          <edgelabel>fee_paying_account</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="libraries/protocol/include/graphene/protocol/proposal.hpp" line="157" column="1" bodyfile="libraries/protocol/include/graphene/protocol/proposal.hpp" bodystart="156" bodyend="168"/>
    <listofallmembers>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1aaccb0fa71ee529cf62324baaa99988fe" prot="public" virt="non-virtual"><scope>graphene::protocol::proposal_delete_operation</scope><name>calculate_data_fee</name></member>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1a0be44badcee9a648413eb906dac1d3b3" prot="public" virt="non-virtual"><scope>graphene::protocol::proposal_delete_operation</scope><name>calculate_fee</name></member>
      <member refid="structgraphene_1_1protocol_1_1proposal__delete__operation_1adf333482175c7fc8d41782c2cc74f18e" prot="public" virt="non-virtual"><scope>graphene::protocol::proposal_delete_operation</scope><name>extensions</name></member>
      <member refid="structgraphene_1_1protocol_1_1proposal__delete__operation_1ac5561b23fb9541e08b33171bc50f2fdb" prot="public" virt="non-virtual"><scope>graphene::protocol::proposal_delete_operation</scope><name>fee</name></member>
      <member refid="structgraphene_1_1protocol_1_1proposal__delete__operation_1a6bd2f4fb2c5aa6fcf97e4f1ec15dd5b3" prot="public" virt="non-virtual"><scope>graphene::protocol::proposal_delete_operation</scope><name>fee_payer</name></member>
      <member refid="structgraphene_1_1protocol_1_1proposal__delete__operation_1a019e84e8747b6a73d1dfd5ef33c06e56" prot="public" virt="non-virtual"><scope>graphene::protocol::proposal_delete_operation</scope><name>fee_paying_account</name></member>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1a89ed7c6e7da93cd99bb41bc8d7e2627b" prot="public" virt="virtual"><scope>graphene::protocol::proposal_delete_operation</scope><name>get_required_active_authorities</name></member>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1aabc48ce97877c67ff560b94284a7c0bb" prot="public" virt="virtual"><scope>graphene::protocol::proposal_delete_operation</scope><name>get_required_authorities</name></member>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1a3251978e7bd0bb2f2fa23bcea5dee95c" prot="public" virt="virtual"><scope>graphene::protocol::proposal_delete_operation</scope><name>get_required_owner_authorities</name></member>
      <member refid="structgraphene_1_1protocol_1_1proposal__delete__operation_1a527504f2280a82c670929a761bd57c5b" prot="public" virt="non-virtual"><scope>graphene::protocol::proposal_delete_operation</scope><name>proposal</name></member>
      <member refid="structgraphene_1_1protocol_1_1proposal__delete__operation_1a18740c0f907909d700933cbe9a1bcfdb" prot="public" virt="non-virtual"><scope>graphene::protocol::proposal_delete_operation</scope><name>using_owner_authority</name></member>
      <member refid="structgraphene_1_1protocol_1_1proposal__delete__operation_1a4ec488f8dadbb2a6e8be7e550a19c602" prot="public" virt="virtual"><scope>graphene::protocol::proposal_delete_operation</scope><name>validate</name></member>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1a485f3d3b963ff4c081af85945cf27774" prot="public" virt="non-virtual"><scope>graphene::protocol::proposal_delete_operation</scope><name>validate_parallel</name></member>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1a04ac6688e2df1d511514e4fc1983b828" prot="public" virt="virtual"><scope>graphene::protocol::proposal_delete_operation</scope><name>~base_operation</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
