<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classgraphene_1_1chain_1_1call__order__object" kind="class" language="C++" prot="public">
    <compoundname>graphene::chain::call_order_object</compoundname>
    <basecompoundref refid="classgraphene_1_1db_1_1abstract__object" prot="public" virt="non-virtual">graphene::db::abstract_object&lt; call_order_object, protocol_ids, call_order_object_type &gt;</basecompoundref>
    <includes refid="market__object_8hpp" local="no">market_object.hpp</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classgraphene_1_1chain_1_1call__order__object_1ac4996a67c8cf9be42bb9275240d6bcd0" prot="public" static="no" mutable="no">
        <type>account_id_type</type>
        <definition>account_id_type graphene::chain::call_order_object::borrower</definition>
        <argsstring></argsstring>
        <name>borrower</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/market_object.hpp" line="135" column="1" bodyfile="libraries/chain/include/graphene/chain/market_object.hpp" bodystart="135" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgraphene_1_1chain_1_1call__order__object_1a79f4094cbf8c4e529579576d2e432e4f" prot="public" static="no" mutable="no">
        <type><ref refid="namespacegraphene_1_1protocol_1a69b2104c1c11eed2d17bd29b86713347" kindref="member">share_type</ref></type>
        <definition>share_type graphene::chain::call_order_object::collateral</definition>
        <argsstring></argsstring>
        <name>collateral</name>
        <briefdescription>
<para>call_price.base.asset_id, access via get_collateral </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/market_object.hpp" line="136" column="1" bodyfile="libraries/chain/include/graphene/chain/market_object.hpp" bodystart="136" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgraphene_1_1chain_1_1call__order__object_1a0d0b6584d5e78f58d85c139fa68ee795" prot="public" static="no" mutable="no">
        <type><ref refid="namespacegraphene_1_1protocol_1a69b2104c1c11eed2d17bd29b86713347" kindref="member">share_type</ref></type>
        <definition>share_type graphene::chain::call_order_object::debt</definition>
        <argsstring></argsstring>
        <name>debt</name>
        <briefdescription>
<para>call_price.quote.asset_id, access via get_debt </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/market_object.hpp" line="137" column="1" bodyfile="libraries/chain/include/graphene/chain/market_object.hpp" bodystart="137" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgraphene_1_1chain_1_1call__order__object_1adfd7a641c2761e4a3366db5862d95fcc" prot="public" static="no" mutable="no">
        <type><ref refid="structgraphene_1_1protocol_1_1price" kindref="compound">price</ref></type>
        <definition>price graphene::chain::call_order_object::call_price</definition>
        <argsstring></argsstring>
        <name>call_price</name>
        <briefdescription>
<para>Collateral / Debt. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/market_object.hpp" line="138" column="1" bodyfile="libraries/chain/include/graphene/chain/market_object.hpp" bodystart="138" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgraphene_1_1chain_1_1call__order__object_1a8c10d7744d26d49b81be66635f0585ff" prot="public" static="no" mutable="no">
        <type><ref refid="classfc_1_1optional" kindref="compound">optional</ref>&lt; uint16_t &gt;</type>
        <definition>optional&lt;uint16_t&gt; graphene::chain::call_order_object::target_collateral_ratio</definition>
        <argsstring></argsstring>
        <name>target_collateral_ratio</name>
        <briefdescription>
<para>maximum CR to maintain when selling collateral on margin call </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/market_object.hpp" line="140" column="1" bodyfile="libraries/chain/include/graphene/chain/market_object.hpp" bodystart="140" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classgraphene_1_1chain_1_1call__order__object_1ac02b0fe0f81f40f36fcb4e4dfc7c384b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structgraphene_1_1protocol_1_1asset" kindref="compound">asset</ref></type>
        <definition>asset graphene::chain::call_order_object::get_collateral</definition>
        <argsstring>() const</argsstring>
        <name>get_collateral</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/market_object.hpp" line="128" column="1" bodyfile="libraries/chain/include/graphene/chain/market_object.hpp" bodystart="128" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1chain_1_1call__order__object_1a90552c5a02f02441d5b9f9000f22d51b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structgraphene_1_1protocol_1_1asset" kindref="compound">asset</ref></type>
        <definition>asset graphene::chain::call_order_object::get_debt</definition>
        <argsstring>() const</argsstring>
        <name>get_debt</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/market_object.hpp" line="129" column="1" bodyfile="libraries/chain/include/graphene/chain/market_object.hpp" bodystart="129" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1chain_1_1call__order__object_1a067e439fbf6b4fef237ef929255718f4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structgraphene_1_1protocol_1_1asset" kindref="compound">asset</ref></type>
        <definition>asset graphene::chain::call_order_object::amount_to_receive</definition>
        <argsstring>() const</argsstring>
        <name>amount_to_receive</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/market_object.hpp" line="130" column="1" bodyfile="libraries/chain/include/graphene/chain/market_object.hpp" bodystart="130" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1chain_1_1call__order__object_1a9813f0b057877885697c133c67fa29a7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>asset_id_type</type>
        <definition>asset_id_type graphene::chain::call_order_object::debt_type</definition>
        <argsstring>() const</argsstring>
        <name>debt_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/market_object.hpp" line="131" column="1" bodyfile="libraries/chain/include/graphene/chain/market_object.hpp" bodystart="131" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1chain_1_1call__order__object_1a33deddf84aa41958d587d35ce4e23df0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>asset_id_type</type>
        <definition>asset_id_type graphene::chain::call_order_object::collateral_type</definition>
        <argsstring>() const</argsstring>
        <name>collateral_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/market_object.hpp" line="132" column="1" bodyfile="libraries/chain/include/graphene/chain/market_object.hpp" bodystart="132" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1chain_1_1call__order__object_1ae002873c5f4431e4c44a4ab05593f2d0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structgraphene_1_1protocol_1_1price" kindref="compound">price</ref></type>
        <definition>price graphene::chain::call_order_object::collateralization</definition>
        <argsstring>() const</argsstring>
        <name>collateralization</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/market_object.hpp" line="133" column="1" bodyfile="libraries/chain/include/graphene/chain/market_object.hpp" bodystart="133" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1chain_1_1call__order__object_1a36eb86e9be5d51ff11d16251d0599210" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>pair&lt; asset_id_type, asset_id_type &gt;</type>
        <definition>pair&lt;asset_id_type,asset_id_type&gt; graphene::chain::call_order_object::get_market</definition>
        <argsstring>() const</argsstring>
        <name>get_market</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/market_object.hpp" line="142" column="1" bodyfile="libraries/chain/include/graphene/chain/market_object.hpp" bodystart="142" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1chain_1_1call__order__object_1a33c173ea8d1a621ea9c391de78debeb6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacegraphene_1_1protocol_1a69b2104c1c11eed2d17bd29b86713347" kindref="member">share_type</ref></type>
        <definition>share_type call_order_object::get_max_debt_to_cover</definition>
        <argsstring>(price match_price, price feed_price, const uint16_t maintenance_collateral_ratio, const optional&lt; price &gt; &amp;maintenance_collateralization=optional&lt; price &gt;()) const</argsstring>
        <name>get_max_debt_to_cover</name>
        <param>
          <type><ref refid="structgraphene_1_1protocol_1_1price" kindref="compound">price</ref></type>
          <declname>match_price</declname>
        </param>
        <param>
          <type><ref refid="structgraphene_1_1protocol_1_1price" kindref="compound">price</ref></type>
          <declname>feed_price</declname>
        </param>
        <param>
          <type>const uint16_t</type>
          <declname>maintenance_collateral_ratio</declname>
        </param>
        <param>
          <type>const optional&lt; <ref refid="structgraphene_1_1protocol_1_1price" kindref="compound">price</ref> &gt; &amp;</type>
          <declname>maintenance_collateralization</declname>
          <defval>optional&lt; <ref refid="structgraphene_1_1protocol_1_1price" kindref="compound">price</ref> &gt;()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Calculate maximum quantity of debt to cover to satisfy <ref refid="classgraphene_1_1chain_1_1call__order__object_1a8c10d7744d26d49b81be66635f0585ff" kindref="member">target_collateral_ratio</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>match_price</parametername>
</parameternamelist>
<parameterdescription>
<para>the matching price if this call order is margin called </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>feed_price</parametername>
</parameternamelist>
<parameterdescription>
<para>median settlement price of debt asset </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>maintenance_collateral_ratio</parametername>
</parameternamelist>
<parameterdescription>
<para>median maintenance collateral ratio of debt asset </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>maintenance_collateralization</parametername>
</parameternamelist>
<parameterdescription>
<para>maintenance collateralization of debt asset, should only be valid after core-1270 hard fork </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>maximum amount of debt that can be called </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/chain/include/graphene/chain/market_object.hpp" line="159" column="1" bodyfile="libraries/chain/market_object.cpp" bodystart="61" bodyend="307"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>tracks debt and call price information </para>    </briefdescription>
    <detaileddescription>
<para>There should only be one <ref refid="classgraphene_1_1chain_1_1call__order__object" kindref="compound">call_order_object</ref> per asset pair per account and they will all have the same call price. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="2195">
        <label>graphene::db::abstract_object&lt; call_order_object, protocol_ids, call_order_object_type &gt;</label>
        <link refid="classgraphene_1_1db_1_1abstract__object"/>
        <childnode refid="2196" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2194">
        <label>graphene::chain::call_order_object</label>
        <link refid="classgraphene_1_1chain_1_1call__order__object"/>
        <childnode refid="2195" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2196">
        <label>graphene::db::base_abstract_object&lt; call_order_object &gt;</label>
        <link refid="classgraphene_1_1db_1_1base__abstract__object"/>
        <childnode refid="2197" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2197">
        <label>graphene::db::object</label>
        <link refid="classgraphene_1_1db_1_1object"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2199">
        <label>graphene::db::abstract_object&lt; call_order_object, protocol_ids, call_order_object_type &gt;</label>
        <link refid="classgraphene_1_1db_1_1abstract__object"/>
        <childnode refid="2200" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2206">
        <label>graphene::protocol::price</label>
        <link refid="structgraphene_1_1protocol_1_1price"/>
        <childnode refid="2207" relation="usage">
          <edgelabel>base</edgelabel>
          <edgelabel>quote</edgelabel>
        </childnode>
      </node>
      <node id="2204">
        <label>account_id_type</label>
      </node>
      <node id="2205">
        <label>fc::safe&lt; int64_t &gt;</label>
        <link refid="structfc_1_1safe"/>
      </node>
      <node id="2198">
        <label>graphene::chain::call_order_object</label>
        <link refid="classgraphene_1_1chain_1_1call__order__object"/>
        <childnode refid="2199" relation="public-inheritance">
        </childnode>
        <childnode refid="2203" relation="usage">
          <edgelabel>target_collateral_ratio</edgelabel>
        </childnode>
        <childnode refid="2204" relation="usage">
          <edgelabel>borrower</edgelabel>
        </childnode>
        <childnode refid="2205" relation="usage">
          <edgelabel>debt</edgelabel>
          <edgelabel>collateral</edgelabel>
        </childnode>
        <childnode refid="2206" relation="usage">
          <edgelabel>call_price</edgelabel>
        </childnode>
      </node>
      <node id="2207">
        <label>graphene::protocol::asset</label>
        <link refid="structgraphene_1_1protocol_1_1asset"/>
        <childnode refid="2205" relation="usage">
          <edgelabel>amount</edgelabel>
        </childnode>
      </node>
      <node id="2202">
        <label>graphene::db::object_id_type</label>
        <link refid="structgraphene_1_1db_1_1object__id__type"/>
      </node>
      <node id="2200">
        <label>graphene::db::base_abstract_object&lt; call_order_object &gt;</label>
        <link refid="classgraphene_1_1db_1_1base__abstract__object"/>
        <childnode refid="2201" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2201">
        <label>graphene::db::object</label>
        <link refid="classgraphene_1_1db_1_1object"/>
        <childnode refid="2202" relation="usage">
          <edgelabel>id</edgelabel>
        </childnode>
      </node>
      <node id="2203">
        <label>fc::optional&lt; uint16_t &gt;</label>
        <link refid="classfc_1_1optional"/>
      </node>
    </collaborationgraph>
    <location file="libraries/chain/include/graphene/chain/market_object.hpp" line="126" column="1" bodyfile="libraries/chain/include/graphene/chain/market_object.hpp" bodystart="125" bodyend="164"/>
    <listofallmembers>
      <member refid="classgraphene_1_1db_1_1abstract__object_1a62b6a9a9290a38dc05763d920186872c" prot="public" virt="non-virtual"><scope>graphene::chain::call_order_object</scope><name>abstract_object</name></member>
      <member refid="classgraphene_1_1chain_1_1call__order__object_1a067e439fbf6b4fef237ef929255718f4" prot="public" virt="non-virtual"><scope>graphene::chain::call_order_object</scope><name>amount_to_receive</name></member>
      <member refid="classgraphene_1_1chain_1_1call__order__object_1ac4996a67c8cf9be42bb9275240d6bcd0" prot="public" virt="non-virtual"><scope>graphene::chain::call_order_object</scope><name>borrower</name></member>
      <member refid="classgraphene_1_1chain_1_1call__order__object_1adfd7a641c2761e4a3366db5862d95fcc" prot="public" virt="non-virtual"><scope>graphene::chain::call_order_object</scope><name>call_price</name></member>
      <member refid="classgraphene_1_1db_1_1base__abstract__object_1af3a4c0e78138f72a0e5fd120f4105488" prot="public" virt="virtual"><scope>graphene::chain::call_order_object</scope><name>clone</name></member>
      <member refid="classgraphene_1_1chain_1_1call__order__object_1a79f4094cbf8c4e529579576d2e432e4f" prot="public" virt="non-virtual"><scope>graphene::chain::call_order_object</scope><name>collateral</name></member>
      <member refid="classgraphene_1_1chain_1_1call__order__object_1a33deddf84aa41958d587d35ce4e23df0" prot="public" virt="non-virtual"><scope>graphene::chain::call_order_object</scope><name>collateral_type</name></member>
      <member refid="classgraphene_1_1chain_1_1call__order__object_1ae002873c5f4431e4c44a4ab05593f2d0" prot="public" virt="non-virtual"><scope>graphene::chain::call_order_object</scope><name>collateralization</name></member>
      <member refid="classgraphene_1_1chain_1_1call__order__object_1a0d0b6584d5e78f58d85c139fa68ee795" prot="public" virt="non-virtual"><scope>graphene::chain::call_order_object</scope><name>debt</name></member>
      <member refid="classgraphene_1_1chain_1_1call__order__object_1a9813f0b057877885697c133c67fa29a7" prot="public" virt="non-virtual"><scope>graphene::chain::call_order_object</scope><name>debt_type</name></member>
      <member refid="classgraphene_1_1chain_1_1call__order__object_1ac02b0fe0f81f40f36fcb4e4dfc7c384b" prot="public" virt="non-virtual"><scope>graphene::chain::call_order_object</scope><name>get_collateral</name></member>
      <member refid="classgraphene_1_1chain_1_1call__order__object_1a90552c5a02f02441d5b9f9000f22d51b" prot="public" virt="non-virtual"><scope>graphene::chain::call_order_object</scope><name>get_debt</name></member>
      <member refid="classgraphene_1_1db_1_1abstract__object_1abdd95dc811d3bf7dbdc9aa0251129f81" prot="public" virt="non-virtual"><scope>graphene::chain::call_order_object</scope><name>get_id</name></member>
      <member refid="classgraphene_1_1chain_1_1call__order__object_1a36eb86e9be5d51ff11d16251d0599210" prot="public" virt="non-virtual"><scope>graphene::chain::call_order_object</scope><name>get_market</name></member>
      <member refid="classgraphene_1_1chain_1_1call__order__object_1a33c173ea8d1a621ea9c391de78debeb6" prot="public" virt="non-virtual"><scope>graphene::chain::call_order_object</scope><name>get_max_debt_to_cover</name></member>
      <member refid="classgraphene_1_1db_1_1object_1a2ce812569d565a45dda1420cfbdf79ad" prot="public" virt="non-virtual"><scope>graphene::chain::call_order_object</scope><name>id</name></member>
      <member refid="classgraphene_1_1db_1_1base__abstract__object_1ae411f8719b1a5d32781c71a06c2b9386" prot="public" virt="virtual"><scope>graphene::chain::call_order_object</scope><name>move_from</name></member>
      <member refid="classgraphene_1_1db_1_1object_1ae57a6f64a9444b2f0fa0c937be480f54" prot="public" virt="non-virtual"><scope>graphene::chain::call_order_object</scope><name>object</name></member>
      <member refid="classgraphene_1_1db_1_1object_1abc6d16d10de6c2e780d62918a458276f" prot="public" virt="non-virtual"><scope>graphene::chain::call_order_object</scope><name>object</name></member>
      <member refid="classgraphene_1_1db_1_1base__abstract__object_1a9ba1e81bf5d130ad4f61cc95c8c9861f" prot="public" virt="virtual"><scope>graphene::chain::call_order_object</scope><name>pack</name></member>
      <member refid="classgraphene_1_1db_1_1abstract__object_1afb1fe30941a4e9e6d3ca3f4a55c9e59b" prot="public" virt="non-virtual"><scope>graphene::chain::call_order_object</scope><name>space_id</name></member>
      <member refid="classgraphene_1_1chain_1_1call__order__object_1a8c10d7744d26d49b81be66635f0585ff" prot="public" virt="non-virtual"><scope>graphene::chain::call_order_object</scope><name>target_collateral_ratio</name></member>
      <member refid="classgraphene_1_1db_1_1base__abstract__object_1a7dd7f3ea796b0f3ec9b4899b3e33e4b2" prot="public" virt="virtual"><scope>graphene::chain::call_order_object</scope><name>to_variant</name></member>
      <member refid="classgraphene_1_1db_1_1abstract__object_1ab3d8c613dd39c1b04abfb7ac758246e6" prot="public" virt="non-virtual"><scope>graphene::chain::call_order_object</scope><name>type_id</name></member>
      <member refid="classgraphene_1_1db_1_1object_1ae8f3fa315d81c80cd93cf5ea2853e65f" prot="public" virt="virtual"><scope>graphene::chain::call_order_object</scope><name>~object</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
