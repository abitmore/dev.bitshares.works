<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="structgraphene_1_1protocol_1_1asset__update__bitasset__operation" kind="struct" language="C++" prot="public">
    <compoundname>graphene::protocol::asset_update_bitasset_operation</compoundname>
    <basecompoundref refid="structgraphene_1_1protocol_1_1base__operation" prot="public" virt="non-virtual">graphene::protocol::base_operation</basecompoundref>
    <includes refid="asset__ops_8hpp" local="no">asset_ops.hpp</includes>
    <innerclass refid="structgraphene_1_1protocol_1_1asset__update__bitasset__operation_1_1fee__parameters__type" prot="public">graphene::protocol::asset_update_bitasset_operation::fee_parameters_type</innerclass>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1asset__update__bitasset__operation_1ab9f516bcb503d3d607780a3a121ed2a4" prot="public" static="no" mutable="no">
        <type><ref refid="structgraphene_1_1protocol_1_1asset" kindref="compound">asset</ref></type>
        <definition>asset graphene::protocol::asset_update_bitasset_operation::fee</definition>
        <argsstring></argsstring>
        <name>fee</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/asset_ops.hpp" line="357" column="1" bodyfile="libraries/protocol/include/graphene/protocol/asset_ops.hpp" bodystart="357" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1asset__update__bitasset__operation_1ac55909f3ec405a37a948ee4571f3962b" prot="public" static="no" mutable="no">
        <type>account_id_type</type>
        <definition>account_id_type graphene::protocol::asset_update_bitasset_operation::issuer</definition>
        <argsstring></argsstring>
        <name>issuer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/asset_ops.hpp" line="358" column="1" bodyfile="libraries/protocol/include/graphene/protocol/asset_ops.hpp" bodystart="358" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1asset__update__bitasset__operation_1a78acf5d03588158012c8e57f12a5b406" prot="public" static="no" mutable="no">
        <type>asset_id_type</type>
        <definition>asset_id_type graphene::protocol::asset_update_bitasset_operation::asset_to_update</definition>
        <argsstring></argsstring>
        <name>asset_to_update</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/asset_ops.hpp" line="359" column="1" bodyfile="libraries/protocol/include/graphene/protocol/asset_ops.hpp" bodystart="359" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1asset__update__bitasset__operation_1a045fb8729634390b367c798010d2d947" prot="public" static="no" mutable="no">
        <type><ref refid="structgraphene_1_1protocol_1_1bitasset__options" kindref="compound">bitasset_options</ref></type>
        <definition>bitasset_options graphene::protocol::asset_update_bitasset_operation::new_options</definition>
        <argsstring></argsstring>
        <name>new_options</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/asset_ops.hpp" line="361" column="1" bodyfile="libraries/protocol/include/graphene/protocol/asset_ops.hpp" bodystart="361" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1asset__update__bitasset__operation_1ae86000abe34ca6649d8136fd7a4ef6e8" prot="public" static="no" mutable="no">
        <type><ref refid="group__operations_1gabaddcaf5bde76414891b4c29031d9288" kindref="member">extensions_type</ref></type>
        <definition>extensions_type graphene::protocol::asset_update_bitasset_operation::extensions</definition>
        <argsstring></argsstring>
        <name>extensions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/asset_ops.hpp" line="362" column="1" bodyfile="libraries/protocol/include/graphene/protocol/asset_ops.hpp" bodystart="362" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structgraphene_1_1protocol_1_1asset__update__bitasset__operation_1a9d5b6b42ebaacc30755d4c4b64979c06" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>account_id_type</type>
        <definition>account_id_type graphene::protocol::asset_update_bitasset_operation::fee_payer</definition>
        <argsstring>() const </argsstring>
        <name>fee_payer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/asset_ops.hpp" line="364" column="1" bodyfile="libraries/protocol/include/graphene/protocol/asset_ops.hpp" bodystart="364" bodyend="364"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1protocol_1_1asset__update__bitasset__operation_1ac0b85635c86cb76740b49ce717fbc8d5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::protocol::asset_update_bitasset_operation::validate</definition>
        <argsstring>() const </argsstring>
        <name>validate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/asset_ops.hpp" line="365" column="1" bodyfile="libraries/protocol/asset_ops.cpp" bodystart="216" bodyend="220"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Update options specific to BitAssets</para><para>BitAssets have some options which are not relevant to other asset types. This operation is used to update those options an an existing BitAsset. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="pre"><para><ref refid="structgraphene_1_1protocol_1_1asset__update__bitasset__operation_1ac55909f3ec405a37a948ee4571f3962b" kindref="member">issuer</ref> MUST be an existing account and MUST match asset_object::issuer on <ref refid="structgraphene_1_1protocol_1_1asset__update__bitasset__operation_1a78acf5d03588158012c8e57f12a5b406" kindref="member">asset_to_update</ref> </para></simplesect>
<simplesect kind="pre"><para><ref refid="structgraphene_1_1protocol_1_1asset__update__bitasset__operation_1a78acf5d03588158012c8e57f12a5b406" kindref="member">asset_to_update</ref> MUST be a BitAsset, i.e. <ref refid="classgraphene_1_1chain_1_1asset__object_1adebdf0e788fbe2e33510ac7e32aa804e" kindref="member">graphene::chain::asset_object::is_market_issued()</ref> returns true </para></simplesect>
<simplesect kind="pre"><para><ref refid="structgraphene_1_1protocol_1_1asset__update__bitasset__operation_1ab9f516bcb503d3d607780a3a121ed2a4" kindref="member">fee</ref> MUST be nonnegative, and <ref refid="structgraphene_1_1protocol_1_1asset__update__bitasset__operation_1ac55909f3ec405a37a948ee4571f3962b" kindref="member">issuer</ref> MUST have a sufficient balance to pay it </para></simplesect>
<simplesect kind="pre"><para><ref refid="structgraphene_1_1protocol_1_1asset__update__bitasset__operation_1a045fb8729634390b367c798010d2d947" kindref="member">new_options</ref> SHALL be internally consistent, as verified by <ref refid="structgraphene_1_1protocol_1_1asset__update__bitasset__operation_1ac0b85635c86cb76740b49ce717fbc8d5" kindref="member">validate()</ref> </para></simplesect>
<simplesect kind="post"><para><ref refid="structgraphene_1_1protocol_1_1asset__update__bitasset__operation_1a78acf5d03588158012c8e57f12a5b406" kindref="member">asset_to_update</ref> will have BitAsset-specific options matching those of new_options </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="1352">
        <label>graphene::protocol::base_operation</label>
        <link refid="structgraphene_1_1protocol_1_1base__operation"/>
      </node>
      <node id="1351">
        <label>graphene::protocol::asset_update_bitasset_operation</label>
        <link refid="structgraphene_1_1protocol_1_1asset__update__bitasset__operation"/>
        <childnode refid="1352" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1358">
        <label>graphene::protocol::bitasset_options</label>
        <link refid="structgraphene_1_1protocol_1_1bitasset__options"/>
        <childnode refid="1359" relation="usage">
          <edgelabel>extensions</edgelabel>
        </childnode>
      </node>
      <node id="1360">
        <label>graphene::protocol::bitasset_options::ext</label>
        <link refid="structgraphene_1_1protocol_1_1bitasset__options_1_1ext"/>
        <childnode refid="1361" relation="usage">
          <edgelabel>maximum_short_squeeze_ratio</edgelabel>
          <edgelabel>initial_collateral_ratio</edgelabel>
          <edgelabel>margin_call_fee_ratio</edgelabel>
          <edgelabel>force_settle_fee_percent</edgelabel>
          <edgelabel>maintenance_collateral_ratio</edgelabel>
        </childnode>
      </node>
      <node id="1357">
        <label>account_id_type</label>
      </node>
      <node id="1356">
        <label>fc::safe&lt; int64_t &gt;</label>
        <link refid="structfc_1_1safe"/>
      </node>
      <node id="1354">
        <label>graphene::protocol::base_operation</label>
        <link refid="structgraphene_1_1protocol_1_1base__operation"/>
      </node>
      <node id="1355">
        <label>graphene::protocol::asset</label>
        <link refid="structgraphene_1_1protocol_1_1asset"/>
        <childnode refid="1356" relation="usage">
          <edgelabel>amount</edgelabel>
        </childnode>
      </node>
      <node id="1353">
        <label>graphene::protocol::asset_update_bitasset_operation</label>
        <link refid="structgraphene_1_1protocol_1_1asset__update__bitasset__operation"/>
        <childnode refid="1354" relation="public-inheritance">
        </childnode>
        <childnode refid="1355" relation="usage">
          <edgelabel>fee</edgelabel>
        </childnode>
        <childnode refid="1357" relation="usage">
          <edgelabel>issuer</edgelabel>
        </childnode>
        <childnode refid="1358" relation="usage">
          <edgelabel>new_options</edgelabel>
        </childnode>
      </node>
      <node id="1361">
        <label>fc::optional&lt; uint16_t &gt;</label>
        <link refid="classfc_1_1optional"/>
      </node>
      <node id="1359">
        <label>graphene::protocol::extension&lt; graphene::protocol::bitasset_options::ext &gt;</label>
        <link refid="structgraphene_1_1protocol_1_1extension"/>
        <childnode refid="1360" relation="usage">
          <edgelabel>value</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="libraries/protocol/include/graphene/protocol/asset_ops.hpp" line="354" column="1" bodyfile="libraries/protocol/include/graphene/protocol/asset_ops.hpp" bodystart="353" bodyend="366"/>
    <listofallmembers>
      <member refid="structgraphene_1_1protocol_1_1asset__update__bitasset__operation_1a78acf5d03588158012c8e57f12a5b406" prot="public" virt="non-virtual"><scope>graphene::protocol::asset_update_bitasset_operation</scope><name>asset_to_update</name></member>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1aaccb0fa71ee529cf62324baaa99988fe" prot="public" virt="non-virtual"><scope>graphene::protocol::asset_update_bitasset_operation</scope><name>calculate_data_fee</name></member>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1afd01efa3e06367c572512e381b1106fb" prot="public" virt="non-virtual"><scope>graphene::protocol::asset_update_bitasset_operation</scope><name>calculate_fee</name></member>
      <member refid="structgraphene_1_1protocol_1_1asset__update__bitasset__operation_1ae86000abe34ca6649d8136fd7a4ef6e8" prot="public" virt="non-virtual"><scope>graphene::protocol::asset_update_bitasset_operation</scope><name>extensions</name></member>
      <member refid="structgraphene_1_1protocol_1_1asset__update__bitasset__operation_1ab9f516bcb503d3d607780a3a121ed2a4" prot="public" virt="non-virtual"><scope>graphene::protocol::asset_update_bitasset_operation</scope><name>fee</name></member>
      <member refid="structgraphene_1_1protocol_1_1asset__update__bitasset__operation_1a9d5b6b42ebaacc30755d4c4b64979c06" prot="public" virt="non-virtual"><scope>graphene::protocol::asset_update_bitasset_operation</scope><name>fee_payer</name></member>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1aded12887f115b2bfa54ecd59540fa242" prot="public" virt="non-virtual"><scope>graphene::protocol::asset_update_bitasset_operation</scope><name>get_required_active_authorities</name></member>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1a6ea245f980406ab52fdb90283e687d1c" prot="public" virt="non-virtual"><scope>graphene::protocol::asset_update_bitasset_operation</scope><name>get_required_authorities</name></member>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1a0742a4b91de875366ec466a5b67b2811" prot="public" virt="non-virtual"><scope>graphene::protocol::asset_update_bitasset_operation</scope><name>get_required_owner_authorities</name></member>
      <member refid="structgraphene_1_1protocol_1_1asset__update__bitasset__operation_1ac55909f3ec405a37a948ee4571f3962b" prot="public" virt="non-virtual"><scope>graphene::protocol::asset_update_bitasset_operation</scope><name>issuer</name></member>
      <member refid="structgraphene_1_1protocol_1_1asset__update__bitasset__operation_1a045fb8729634390b367c798010d2d947" prot="public" virt="non-virtual"><scope>graphene::protocol::asset_update_bitasset_operation</scope><name>new_options</name></member>
      <member refid="structgraphene_1_1protocol_1_1asset__update__bitasset__operation_1ac0b85635c86cb76740b49ce717fbc8d5" prot="public" virt="non-virtual"><scope>graphene::protocol::asset_update_bitasset_operation</scope><name>validate</name></member>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1a41d0a14a070ac634be11f30dbf559935" prot="public" virt="non-virtual"><scope>graphene::protocol::asset_update_bitasset_operation</scope><name>validate_parallel</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
