<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structgraphene_1_1protocol_1_1htlc__redeem__operation" kind="struct" language="C++" prot="public">
    <compoundname>graphene::protocol::htlc_redeem_operation</compoundname>
    <basecompoundref refid="structgraphene_1_1protocol_1_1base__operation" prot="public" virt="non-virtual">graphene::protocol::base_operation</basecompoundref>
    <includes refid="htlc_8hpp" local="no">htlc.hpp</includes>
    <innerclass refid="structgraphene_1_1protocol_1_1htlc__redeem__operation_1_1fee__parameters__type" prot="public">graphene::protocol::htlc_redeem_operation::fee_parameters_type</innerclass>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1htlc__redeem__operation_1a897be6b34c6623bd95f8db79b425491c" prot="public" static="no" mutable="no">
        <type><ref refid="structgraphene_1_1protocol_1_1asset" kindref="compound">asset</ref></type>
        <definition>asset graphene::protocol::htlc_redeem_operation::fee</definition>
        <argsstring></argsstring>
        <name>fee</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/htlc.hpp" line="98" column="1" bodyfile="libraries/protocol/include/graphene/protocol/htlc.hpp" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1htlc__redeem__operation_1ae29922b025264352a1ecc1dad9c13838" prot="public" static="no" mutable="no">
        <type>htlc_id_type</type>
        <definition>htlc_id_type graphene::protocol::htlc_redeem_operation::htlc_id</definition>
        <argsstring></argsstring>
        <name>htlc_id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/htlc.hpp" line="100" column="1" bodyfile="libraries/protocol/include/graphene/protocol/htlc.hpp" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1htlc__redeem__operation_1ad40e3153143c3a84563bc9cfb2b80078" prot="public" static="no" mutable="no">
        <type>account_id_type</type>
        <definition>account_id_type graphene::protocol::htlc_redeem_operation::redeemer</definition>
        <argsstring></argsstring>
        <name>redeemer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/htlc.hpp" line="102" column="1" bodyfile="libraries/protocol/include/graphene/protocol/htlc.hpp" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1htlc__redeem__operation_1a920dabf6ad8c51e41a865faf792eed30" prot="public" static="no" mutable="no">
        <type>std::vector&lt; char &gt;</type>
        <definition>std::vector&lt;char&gt; graphene::protocol::htlc_redeem_operation::preimage</definition>
        <argsstring></argsstring>
        <name>preimage</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/htlc.hpp" line="104" column="1" bodyfile="libraries/protocol/include/graphene/protocol/htlc.hpp" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1protocol_1_1htlc__redeem__operation_1a67ffd778812594e8b37d258806d9bea2" prot="public" static="no" mutable="no">
        <type><ref refid="group__operations_1gabaddcaf5bde76414891b4c29031d9288" kindref="member">extensions_type</ref></type>
        <definition>extensions_type graphene::protocol::htlc_redeem_operation::extensions</definition>
        <argsstring></argsstring>
        <name>extensions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/htlc.hpp" line="106" column="1" bodyfile="libraries/protocol/include/graphene/protocol/htlc.hpp" bodystart="106" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structgraphene_1_1protocol_1_1htlc__redeem__operation_1acf6631b9f03476427e7c82fcf53f18a9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void graphene::protocol::htlc_redeem_operation::validate</definition>
        <argsstring>() const</argsstring>
        <name>validate</name>
        <reimplements refid="structgraphene_1_1protocol_1_1base__operation_1a23d617a6fa0921d3f5b51dd5167e7a29">validate</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/htlc.hpp" line="111" column="1" bodyfile="libraries/protocol/htlc.cpp" bodystart="49" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1protocol_1_1htlc__redeem__operation_1aa87e829fcdc0ff533dd606762be7573a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>account_id_type</type>
        <definition>account_id_type graphene::protocol::htlc_redeem_operation::fee_payer</definition>
        <argsstring>() const</argsstring>
        <name>fee_payer</name>
        <briefdescription>
<para>Who is to pay the fee. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/htlc.hpp" line="116" column="1" bodyfile="libraries/protocol/include/graphene/protocol/htlc.hpp" bodystart="116" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1protocol_1_1htlc__redeem__operation_1a8d3e11bdce50a151cb9289f8ada946f7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacegraphene_1_1protocol_1a69b2104c1c11eed2d17bd29b86713347" kindref="member">share_type</ref></type>
        <definition>share_type graphene::protocol::htlc_redeem_operation::calculate_fee</definition>
        <argsstring>(const fee_parameters_type &amp;fee_params) const</argsstring>
        <name>calculate_fee</name>
        <param>
          <type>const <ref refid="structgraphene_1_1protocol_1_1htlc__redeem__operation_1_1fee__parameters__type" kindref="compound">fee_parameters_type</ref> &amp;</type>
          <declname>fee_params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/htlc.hpp" line="121" column="1" bodyfile="libraries/protocol/htlc.cpp" bodystart="53" bodyend="59"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="4724">
        <label>graphene::protocol::base_operation</label>
        <link refid="structgraphene_1_1protocol_1_1base__operation"/>
      </node>
      <node id="4723">
        <label>graphene::protocol::htlc_redeem_operation</label>
        <link refid="structgraphene_1_1protocol_1_1htlc__redeem__operation"/>
        <childnode refid="4724" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4729">
        <label>account_id_type</label>
      </node>
      <node id="4728">
        <label>fc::safe&lt; int64_t &gt;</label>
        <link refid="structfc_1_1safe"/>
      </node>
      <node id="4726">
        <label>graphene::protocol::base_operation</label>
        <link refid="structgraphene_1_1protocol_1_1base__operation"/>
      </node>
      <node id="4727">
        <label>graphene::protocol::asset</label>
        <link refid="structgraphene_1_1protocol_1_1asset"/>
        <childnode refid="4728" relation="usage">
          <edgelabel>amount</edgelabel>
        </childnode>
      </node>
      <node id="4725">
        <label>graphene::protocol::htlc_redeem_operation</label>
        <link refid="structgraphene_1_1protocol_1_1htlc__redeem__operation"/>
        <childnode refid="4726" relation="public-inheritance">
        </childnode>
        <childnode refid="4727" relation="usage">
          <edgelabel>fee</edgelabel>
        </childnode>
        <childnode refid="4729" relation="usage">
          <edgelabel>redeemer</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="libraries/protocol/include/graphene/protocol/htlc.hpp" line="91" column="1" bodyfile="libraries/protocol/include/graphene/protocol/htlc.hpp" bodystart="90" bodyend="122"/>
    <listofallmembers>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1aaccb0fa71ee529cf62324baaa99988fe" prot="public" virt="non-virtual"><scope>graphene::protocol::htlc_redeem_operation</scope><name>calculate_data_fee</name></member>
      <member refid="structgraphene_1_1protocol_1_1htlc__redeem__operation_1a8d3e11bdce50a151cb9289f8ada946f7" prot="public" virt="non-virtual"><scope>graphene::protocol::htlc_redeem_operation</scope><name>calculate_fee</name></member>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1a0be44badcee9a648413eb906dac1d3b3" prot="public" virt="non-virtual" ambiguityscope="graphene::protocol::base_operation::"><scope>graphene::protocol::htlc_redeem_operation</scope><name>calculate_fee</name></member>
      <member refid="structgraphene_1_1protocol_1_1htlc__redeem__operation_1a67ffd778812594e8b37d258806d9bea2" prot="public" virt="non-virtual"><scope>graphene::protocol::htlc_redeem_operation</scope><name>extensions</name></member>
      <member refid="structgraphene_1_1protocol_1_1htlc__redeem__operation_1a897be6b34c6623bd95f8db79b425491c" prot="public" virt="non-virtual"><scope>graphene::protocol::htlc_redeem_operation</scope><name>fee</name></member>
      <member refid="structgraphene_1_1protocol_1_1htlc__redeem__operation_1aa87e829fcdc0ff533dd606762be7573a" prot="public" virt="non-virtual"><scope>graphene::protocol::htlc_redeem_operation</scope><name>fee_payer</name></member>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1a89ed7c6e7da93cd99bb41bc8d7e2627b" prot="public" virt="virtual"><scope>graphene::protocol::htlc_redeem_operation</scope><name>get_required_active_authorities</name></member>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1aabc48ce97877c67ff560b94284a7c0bb" prot="public" virt="virtual"><scope>graphene::protocol::htlc_redeem_operation</scope><name>get_required_authorities</name></member>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1a3251978e7bd0bb2f2fa23bcea5dee95c" prot="public" virt="virtual"><scope>graphene::protocol::htlc_redeem_operation</scope><name>get_required_owner_authorities</name></member>
      <member refid="structgraphene_1_1protocol_1_1htlc__redeem__operation_1ae29922b025264352a1ecc1dad9c13838" prot="public" virt="non-virtual"><scope>graphene::protocol::htlc_redeem_operation</scope><name>htlc_id</name></member>
      <member refid="structgraphene_1_1protocol_1_1htlc__redeem__operation_1a920dabf6ad8c51e41a865faf792eed30" prot="public" virt="non-virtual"><scope>graphene::protocol::htlc_redeem_operation</scope><name>preimage</name></member>
      <member refid="structgraphene_1_1protocol_1_1htlc__redeem__operation_1ad40e3153143c3a84563bc9cfb2b80078" prot="public" virt="non-virtual"><scope>graphene::protocol::htlc_redeem_operation</scope><name>redeemer</name></member>
      <member refid="structgraphene_1_1protocol_1_1htlc__redeem__operation_1acf6631b9f03476427e7c82fcf53f18a9" prot="public" virt="virtual"><scope>graphene::protocol::htlc_redeem_operation</scope><name>validate</name></member>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1a485f3d3b963ff4c081af85945cf27774" prot="public" virt="non-virtual"><scope>graphene::protocol::htlc_redeem_operation</scope><name>validate_parallel</name></member>
      <member refid="structgraphene_1_1protocol_1_1base__operation_1a04ac6688e2df1d511514e4fc1983b828" prot="public" virt="virtual"><scope>graphene::protocol::htlc_redeem_operation</scope><name>~base_operation</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
