<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="structgraphene_1_1db_1_1object__id" kind="struct" language="C++" prot="public">
    <compoundname>graphene::db::object_id</compoundname>
    <includes refid="object__id_8hpp" local="no">object_id.hpp</includes>
    <templateparamlist>
      <param>
        <type>uint8_t</type>
        <declname>SpaceID</declname>
        <defname>SpaceID</defname>
      </param>
      <param>
        <type>uint8_t</type>
        <declname>TypeID</declname>
        <defname>TypeID</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="structgraphene_1_1db_1_1object__id_1ab5173c3d5e48b87d964750f6c6517d27" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr uint8_t</type>
        <definition>constexpr uint8_t graphene::db::object_id&lt; SpaceID, TypeID &gt;::type_bits</definition>
        <argsstring></argsstring>
        <name>type_bits</name>
        <initializer>= 8</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/object_id.hpp" line="105" column="32" bodyfile="libraries/protocol/include/graphene/protocol/object_id.hpp" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1db_1_1object__id_1ab3da03b4196cd2abe153d05894ca6325" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr uint8_t</type>
        <definition>constexpr uint8_t graphene::db::object_id&lt; SpaceID, TypeID &gt;::instance_bits</definition>
        <argsstring></argsstring>
        <name>instance_bits</name>
        <initializer>= 48</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/object_id.hpp" line="106" column="32" bodyfile="libraries/protocol/include/graphene/protocol/object_id.hpp" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1db_1_1object__id_1a08a4304cc55b17a4c02f2ec7abac065e" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr uint64_t</type>
        <definition>constexpr uint64_t graphene::db::object_id&lt; SpaceID, TypeID &gt;::max_instance</definition>
        <argsstring></argsstring>
        <name>max_instance</name>
        <initializer>= 0x0000ffffffffffff</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/object_id.hpp" line="107" column="33" bodyfile="libraries/protocol/include/graphene/protocol/object_id.hpp" bodystart="107" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1db_1_1object__id_1af2acbad0bbf47bab71417ee49a774917" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr uint8_t</type>
        <definition>constexpr uint8_t graphene::db::object_id&lt; SpaceID, TypeID &gt;::space_id</definition>
        <argsstring></argsstring>
        <name>space_id</name>
        <initializer>= SpaceID</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/object_id.hpp" line="109" column="32" bodyfile="libraries/protocol/include/graphene/protocol/object_id.hpp" bodystart="109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1db_1_1object__id_1a05e977a498b0bf18ce72e9d13a3ab76e" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr uint8_t</type>
        <definition>constexpr uint8_t graphene::db::object_id&lt; SpaceID, TypeID &gt;::type_id</definition>
        <argsstring></argsstring>
        <name>type_id</name>
        <initializer>= TypeID</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/object_id.hpp" line="110" column="32" bodyfile="libraries/protocol/include/graphene/protocol/object_id.hpp" bodystart="110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgraphene_1_1db_1_1object__id_1a3bdeef214a65f15655f9b2c02a5ef122" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr uint16_t</type>
        <definition>constexpr uint16_t graphene::db::object_id&lt; SpaceID, TypeID &gt;::space_type</definition>
        <argsstring></argsstring>
        <name>space_type</name>
        <initializer>= uint16_t(uint16_t(<ref refid="structgraphene_1_1db_1_1object__id_1af2acbad0bbf47bab71417ee49a774917" kindref="member">space_id</ref>) &lt;&lt; <ref refid="structgraphene_1_1db_1_1object__id_1ab5173c3d5e48b87d964750f6c6517d27" kindref="member">type_bits</ref>) | uint16_t(<ref refid="structgraphene_1_1db_1_1object__id_1a05e977a498b0bf18ce72e9d13a3ab76e" kindref="member">type_id</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/object_id.hpp" line="112" column="33" bodyfile="libraries/protocol/include/graphene/protocol/object_id.hpp" bodystart="112" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structgraphene_1_1db_1_1object__id_1a0e3a432662f4951ea79704ff0c2ef8b2" prot="public" static="no" mutable="no">
        <type><ref refid="structfc_1_1unsigned__int" kindref="compound">fc::unsigned_int</ref></type>
        <definition>fc::unsigned_int graphene::db::object_id&lt; SpaceID, TypeID &gt;::instance</definition>
        <argsstring></argsstring>
        <name>instance</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/object_id.hpp" line="177" column="24" bodyfile="libraries/protocol/include/graphene/protocol/object_id.hpp" bodystart="177" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structgraphene_1_1db_1_1object__id_1a2b09603f9488e40895e72c270623069b" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr <ref refid="structgraphene_1_1db_1_1object__id" kindref="compound">object_id</ref></type>
        <definition>static constexpr object_id graphene::db::object_id&lt; SpaceID, TypeID &gt;::max</definition>
        <argsstring>()</argsstring>
        <name>max</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/object_id.hpp" line="114" column="34" bodyfile="libraries/protocol/include/graphene/protocol/object_id.hpp" bodystart="114" bodyend="117"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structgraphene_1_1db_1_1object__id_1a0400f4c7262bcc18db2540e772575688" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>graphene::db::object_id&lt; SpaceID, TypeID &gt;::object_id</definition>
        <argsstring>()=default</argsstring>
        <name>object_id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/object_id.hpp" line="119" column="7"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1db_1_1object__id_1a4739c27ec019115654d61c219114690d" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>graphene::db::object_id&lt; SpaceID, TypeID &gt;::object_id</definition>
        <argsstring>(const fc::unsigned_int &amp;i)</argsstring>
        <name>object_id</name>
        <param>
          <type>const <ref refid="structfc_1_1unsigned__int" kindref="compound">fc::unsigned_int</ref> &amp;</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/object_id.hpp" line="120" column="16" bodyfile="libraries/protocol/include/graphene/protocol/object_id.hpp" bodystart="120" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1db_1_1object__id_1a895631113eb336e17c90dc93cc3e3daa" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>graphene::db::object_id&lt; SpaceID, TypeID &gt;::object_id</definition>
        <argsstring>(uint64_t i)</argsstring>
        <name>object_id</name>
        <param>
          <type>uint64_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/object_id.hpp" line="124" column="16" bodyfile="libraries/protocol/include/graphene/protocol/object_id.hpp" bodystart="124" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1db_1_1object__id_1a8cff02f3b65d6c3120834bc926ea92a4" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>graphene::db::object_id&lt; SpaceID, TypeID &gt;::object_id</definition>
        <argsstring>(const object_id_type &amp;id)</argsstring>
        <name>object_id</name>
        <param>
          <type>const <ref refid="structgraphene_1_1db_1_1object__id__type" kindref="compound">object_id_type</ref> &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/object_id.hpp" line="128" column="16" bodyfile="libraries/protocol/include/graphene/protocol/object_id.hpp" bodystart="128" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1db_1_1object__id_1a5a1ed366cef98e581e8bd906e70e6aff" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::db::object_id&lt; SpaceID, TypeID &gt;::validate</definition>
        <argsstring>() const</argsstring>
        <name>validate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/object_id.hpp" line="134" column="12" bodyfile="libraries/protocol/include/graphene/protocol/object_id.hpp" bodystart="134" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1db_1_1object__id_1af99e231916a409074e3bc85aa4bc4643" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structgraphene_1_1db_1_1object__id" kindref="compound">object_id</ref> &amp;</type>
        <definition>object_id&amp; graphene::db::object_id&lt; SpaceID, TypeID &gt;::operator=</definition>
        <argsstring>(const object_id_type &amp;o)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="structgraphene_1_1db_1_1object__id__type" kindref="compound">object_id_type</ref> &amp;</type>
          <declname>o</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/object_id.hpp" line="139" column="17" bodyfile="libraries/protocol/include/graphene/protocol/object_id.hpp" bodystart="139" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1db_1_1object__id_1a523056466de29b1aecb16a8cb17cbf22" prot="public" static="no" const="yes" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>graphene::db::object_id&lt; SpaceID, TypeID &gt;::operator object_id_type</definition>
        <argsstring>() const</argsstring>
        <name>operator object_id_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/object_id.hpp" line="148" column="16" bodyfile="libraries/protocol/include/graphene/protocol/object_id.hpp" bodystart="148" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1db_1_1object__id_1a76ee2a302a51b92efaee65656c70f4c6" prot="public" static="no" const="yes" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>graphene::db::object_id&lt; SpaceID, TypeID &gt;::operator uint64_t</definition>
        <argsstring>() const</argsstring>
        <name>operator uint64_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/object_id.hpp" line="149" column="16" bodyfile="libraries/protocol/include/graphene/protocol/object_id.hpp" bodystart="149" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1db_1_1object__id_1a0bea414b63c8fce930285cea4ebfff6f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename DB</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto graphene::db::object_id&lt; SpaceID, TypeID &gt;::operator()</definition>
        <argsstring>(const DB &amp;db) const -&gt; const decltype(db.get(*this))&amp;</argsstring>
        <name>operator()</name>
        <param>
          <type>const DB &amp;</type>
          <declname>db</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/object_id.hpp" line="152" column="12" bodyfile="libraries/protocol/include/graphene/protocol/object_id.hpp" bodystart="152" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="structgraphene_1_1db_1_1object__id_1a6eac639ecac8008a2f35d31ac23c1dde" prot="public" static="no" const="yes" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>graphene::db::object_id&lt; SpaceID, TypeID &gt;::operator std::string</definition>
        <argsstring>() const</argsstring>
        <name>operator std::string</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/object_id.hpp" line="172" column="16" bodyfile="libraries/protocol/include/graphene/protocol/object_id.hpp" bodystart="172" bodyend="175"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="structgraphene_1_1db_1_1object__id_1a10a30432510d7d36fa49c688d5d1f9f0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend <ref refid="structgraphene_1_1db_1_1object__id" kindref="compound">object_id</ref></type>
        <definition>object_id operator+</definition>
        <argsstring>(const object_id &amp;a, int64_t delta)</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="structgraphene_1_1db_1_1object__id" kindref="compound">object_id</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>delta</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/object_id.hpp" line="145" column="24" bodyfile="libraries/protocol/include/graphene/protocol/object_id.hpp" bodystart="145" bodyend="146"/>
      </memberdef>
      <memberdef kind="friend" id="structgraphene_1_1db_1_1object__id_1aebba02f184be13c3c9d546a52905019d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator==</definition>
        <argsstring>(const object_id &amp;a, const object_id &amp;b)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="structgraphene_1_1db_1_1object__id" kindref="compound">object_id</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="structgraphene_1_1db_1_1object__id" kindref="compound">object_id</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/object_id.hpp" line="154" column="20" bodyfile="libraries/protocol/include/graphene/protocol/object_id.hpp" bodystart="154" bodyend="154"/>
      </memberdef>
      <memberdef kind="friend" id="structgraphene_1_1db_1_1object__id_1a2646ece2da1f0354b4676a2f4278a808" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator!=</definition>
        <argsstring>(const object_id &amp;a, const object_id &amp;b)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="structgraphene_1_1db_1_1object__id" kindref="compound">object_id</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="structgraphene_1_1db_1_1object__id" kindref="compound">object_id</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/object_id.hpp" line="155" column="20" bodyfile="libraries/protocol/include/graphene/protocol/object_id.hpp" bodystart="155" bodyend="155"/>
      </memberdef>
      <memberdef kind="friend" id="structgraphene_1_1db_1_1object__id_1a7e09aa7e3c6853b66d32f85b54ee7917" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator==</definition>
        <argsstring>(const object_id_type &amp;a, const object_id &amp;b)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="structgraphene_1_1db_1_1object__id__type" kindref="compound">object_id_type</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="structgraphene_1_1db_1_1object__id" kindref="compound">object_id</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/object_id.hpp" line="156" column="20" bodyfile="libraries/protocol/include/graphene/protocol/object_id.hpp" bodystart="156" bodyend="156"/>
      </memberdef>
      <memberdef kind="friend" id="structgraphene_1_1db_1_1object__id_1a76f95dba42e9e8b7a15f280431f1e5c5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator!=</definition>
        <argsstring>(const object_id_type &amp;a, const object_id &amp;b)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="structgraphene_1_1db_1_1object__id__type" kindref="compound">object_id_type</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="structgraphene_1_1db_1_1object__id" kindref="compound">object_id</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/object_id.hpp" line="157" column="20" bodyfile="libraries/protocol/include/graphene/protocol/object_id.hpp" bodystart="157" bodyend="157"/>
      </memberdef>
      <memberdef kind="friend" id="structgraphene_1_1db_1_1object__id_1a135eb0e47e9feea559c581590b7027fa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator==</definition>
        <argsstring>(const object_id &amp;a, const object_id_type &amp;b)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="structgraphene_1_1db_1_1object__id" kindref="compound">object_id</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="structgraphene_1_1db_1_1object__id__type" kindref="compound">object_id_type</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/object_id.hpp" line="158" column="20" bodyfile="libraries/protocol/include/graphene/protocol/object_id.hpp" bodystart="158" bodyend="158"/>
      </memberdef>
      <memberdef kind="friend" id="structgraphene_1_1db_1_1object__id_1a3076a00151da1b3a54bbf8af6e1554b0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator!=</definition>
        <argsstring>(const object_id &amp;a, const object_id_type &amp;b)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="structgraphene_1_1db_1_1object__id" kindref="compound">object_id</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="structgraphene_1_1db_1_1object__id__type" kindref="compound">object_id_type</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/object_id.hpp" line="159" column="20" bodyfile="libraries/protocol/include/graphene/protocol/object_id.hpp" bodystart="159" bodyend="159"/>
      </memberdef>
      <memberdef kind="friend" id="structgraphene_1_1db_1_1object__id_1ad501d74f98506763cfc3417279bf3fb9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator==</definition>
        <argsstring>(const object_id &amp;a, const fc::unsigned_int &amp;b)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="structgraphene_1_1db_1_1object__id" kindref="compound">object_id</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="structfc_1_1unsigned__int" kindref="compound">fc::unsigned_int</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/object_id.hpp" line="160" column="20" bodyfile="libraries/protocol/include/graphene/protocol/object_id.hpp" bodystart="160" bodyend="160"/>
      </memberdef>
      <memberdef kind="friend" id="structgraphene_1_1db_1_1object__id_1a8807102f694ab6021fdff2f84be49979" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator!=</definition>
        <argsstring>(const object_id &amp;a, const fc::unsigned_int &amp;b)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="structgraphene_1_1db_1_1object__id" kindref="compound">object_id</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="structfc_1_1unsigned__int" kindref="compound">fc::unsigned_int</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/object_id.hpp" line="161" column="20" bodyfile="libraries/protocol/include/graphene/protocol/object_id.hpp" bodystart="161" bodyend="161"/>
      </memberdef>
      <memberdef kind="friend" id="structgraphene_1_1db_1_1object__id_1a3078f680620f65221bcd99cb4c1f4d3c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator==</definition>
        <argsstring>(const fc::unsigned_int &amp;a, const object_id &amp;b)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="structfc_1_1unsigned__int" kindref="compound">fc::unsigned_int</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="structgraphene_1_1db_1_1object__id" kindref="compound">object_id</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/object_id.hpp" line="162" column="20" bodyfile="libraries/protocol/include/graphene/protocol/object_id.hpp" bodystart="162" bodyend="162"/>
      </memberdef>
      <memberdef kind="friend" id="structgraphene_1_1db_1_1object__id_1aa7905ce0d9109236c8600dd6db15bf1b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator!=</definition>
        <argsstring>(const fc::unsigned_int &amp;a, const object_id &amp;b)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="structfc_1_1unsigned__int" kindref="compound">fc::unsigned_int</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="structgraphene_1_1db_1_1object__id" kindref="compound">object_id</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/object_id.hpp" line="163" column="20" bodyfile="libraries/protocol/include/graphene/protocol/object_id.hpp" bodystart="163" bodyend="163"/>
      </memberdef>
      <memberdef kind="friend" id="structgraphene_1_1db_1_1object__id_1a62b36919a827bb8fee7435c602eae0ae" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator&lt;</definition>
        <argsstring>(const object_id &amp;a, const object_id &amp;b)</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const <ref refid="structgraphene_1_1db_1_1object__id" kindref="compound">object_id</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="structgraphene_1_1db_1_1object__id" kindref="compound">object_id</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/object_id.hpp" line="165" column="14" bodyfile="libraries/protocol/include/graphene/protocol/object_id.hpp" bodystart="165" bodyend="166"/>
      </memberdef>
      <memberdef kind="friend" id="structgraphene_1_1db_1_1object__id_1adeaa6563b141bebb9045147876c68eb0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator&gt;</definition>
        <argsstring>(const object_id &amp;a, const object_id &amp;b)</argsstring>
        <name>operator&gt;</name>
        <param>
          <type>const <ref refid="structgraphene_1_1db_1_1object__id" kindref="compound">object_id</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="structgraphene_1_1db_1_1object__id" kindref="compound">object_id</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/object_id.hpp" line="167" column="20" bodyfile="libraries/protocol/include/graphene/protocol/object_id.hpp" bodystart="167" bodyend="168"/>
      </memberdef>
      <memberdef kind="friend" id="structgraphene_1_1db_1_1object__id_1ac188a0da5eff43a981f3302eff922732" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend size_t</type>
        <definition>size_t hash_value</definition>
        <argsstring>(const object_id &amp;v)</argsstring>
        <name>hash_value</name>
        <param>
          <type>const <ref refid="structgraphene_1_1db_1_1object__id" kindref="compound">object_id</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/object_id.hpp" line="170" column="21" bodyfile="libraries/protocol/include/graphene/protocol/object_id.hpp" bodystart="170" bodyend="170"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>graphene::db::object_id&lt; SpaceID, TypeID &gt;</label>
        <link refid="structgraphene_1_1db_1_1object__id"/>
        <childnode refid="2" relation="usage">
          <edgelabel>instance</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>fc::unsigned_int</label>
        <link refid="structfc_1_1unsigned__int"/>
      </node>
    </collaborationgraph>
    <location file="libraries/protocol/include/graphene/protocol/object_id.hpp" line="104" column="1" bodyfile="libraries/protocol/include/graphene/protocol/object_id.hpp" bodystart="103" bodyend="178"/>
    <listofallmembers>
      <member refid="structgraphene_1_1db_1_1object__id_1ac188a0da5eff43a981f3302eff922732" prot="public" virt="non-virtual"><scope>graphene::db::object_id</scope><name>hash_value</name></member>
      <member refid="structgraphene_1_1db_1_1object__id_1a0e3a432662f4951ea79704ff0c2ef8b2" prot="public" virt="non-virtual"><scope>graphene::db::object_id</scope><name>instance</name></member>
      <member refid="structgraphene_1_1db_1_1object__id_1ab3da03b4196cd2abe153d05894ca6325" prot="public" virt="non-virtual"><scope>graphene::db::object_id</scope><name>instance_bits</name></member>
      <member refid="structgraphene_1_1db_1_1object__id_1a2b09603f9488e40895e72c270623069b" prot="public" virt="non-virtual"><scope>graphene::db::object_id</scope><name>max</name></member>
      <member refid="structgraphene_1_1db_1_1object__id_1a08a4304cc55b17a4c02f2ec7abac065e" prot="public" virt="non-virtual"><scope>graphene::db::object_id</scope><name>max_instance</name></member>
      <member refid="structgraphene_1_1db_1_1object__id_1a0400f4c7262bcc18db2540e772575688" prot="public" virt="non-virtual"><scope>graphene::db::object_id</scope><name>object_id</name></member>
      <member refid="structgraphene_1_1db_1_1object__id_1a4739c27ec019115654d61c219114690d" prot="public" virt="non-virtual"><scope>graphene::db::object_id</scope><name>object_id</name></member>
      <member refid="structgraphene_1_1db_1_1object__id_1a895631113eb336e17c90dc93cc3e3daa" prot="public" virt="non-virtual"><scope>graphene::db::object_id</scope><name>object_id</name></member>
      <member refid="structgraphene_1_1db_1_1object__id_1a8cff02f3b65d6c3120834bc926ea92a4" prot="public" virt="non-virtual"><scope>graphene::db::object_id</scope><name>object_id</name></member>
      <member refid="structgraphene_1_1db_1_1object__id_1a523056466de29b1aecb16a8cb17cbf22" prot="public" virt="non-virtual"><scope>graphene::db::object_id</scope><name>operator object_id_type</name></member>
      <member refid="structgraphene_1_1db_1_1object__id_1a6eac639ecac8008a2f35d31ac23c1dde" prot="public" virt="non-virtual"><scope>graphene::db::object_id</scope><name>operator std::string</name></member>
      <member refid="structgraphene_1_1db_1_1object__id_1a76ee2a302a51b92efaee65656c70f4c6" prot="public" virt="non-virtual"><scope>graphene::db::object_id</scope><name>operator uint64_t</name></member>
      <member refid="structgraphene_1_1db_1_1object__id_1a2646ece2da1f0354b4676a2f4278a808" prot="public" virt="non-virtual"><scope>graphene::db::object_id</scope><name>operator!=</name></member>
      <member refid="structgraphene_1_1db_1_1object__id_1a76f95dba42e9e8b7a15f280431f1e5c5" prot="public" virt="non-virtual"><scope>graphene::db::object_id</scope><name>operator!=</name></member>
      <member refid="structgraphene_1_1db_1_1object__id_1a3076a00151da1b3a54bbf8af6e1554b0" prot="public" virt="non-virtual"><scope>graphene::db::object_id</scope><name>operator!=</name></member>
      <member refid="structgraphene_1_1db_1_1object__id_1a8807102f694ab6021fdff2f84be49979" prot="public" virt="non-virtual"><scope>graphene::db::object_id</scope><name>operator!=</name></member>
      <member refid="structgraphene_1_1db_1_1object__id_1aa7905ce0d9109236c8600dd6db15bf1b" prot="public" virt="non-virtual"><scope>graphene::db::object_id</scope><name>operator!=</name></member>
      <member refid="structgraphene_1_1db_1_1object__id_1a0bea414b63c8fce930285cea4ebfff6f" prot="public" virt="non-virtual"><scope>graphene::db::object_id</scope><name>operator()</name></member>
      <member refid="structgraphene_1_1db_1_1object__id_1a10a30432510d7d36fa49c688d5d1f9f0" prot="public" virt="non-virtual"><scope>graphene::db::object_id</scope><name>operator+</name></member>
      <member refid="structgraphene_1_1db_1_1object__id_1a62b36919a827bb8fee7435c602eae0ae" prot="public" virt="non-virtual"><scope>graphene::db::object_id</scope><name>operator&lt;</name></member>
      <member refid="structgraphene_1_1db_1_1object__id_1af99e231916a409074e3bc85aa4bc4643" prot="public" virt="non-virtual"><scope>graphene::db::object_id</scope><name>operator=</name></member>
      <member refid="structgraphene_1_1db_1_1object__id_1aebba02f184be13c3c9d546a52905019d" prot="public" virt="non-virtual"><scope>graphene::db::object_id</scope><name>operator==</name></member>
      <member refid="structgraphene_1_1db_1_1object__id_1a7e09aa7e3c6853b66d32f85b54ee7917" prot="public" virt="non-virtual"><scope>graphene::db::object_id</scope><name>operator==</name></member>
      <member refid="structgraphene_1_1db_1_1object__id_1a135eb0e47e9feea559c581590b7027fa" prot="public" virt="non-virtual"><scope>graphene::db::object_id</scope><name>operator==</name></member>
      <member refid="structgraphene_1_1db_1_1object__id_1ad501d74f98506763cfc3417279bf3fb9" prot="public" virt="non-virtual"><scope>graphene::db::object_id</scope><name>operator==</name></member>
      <member refid="structgraphene_1_1db_1_1object__id_1a3078f680620f65221bcd99cb4c1f4d3c" prot="public" virt="non-virtual"><scope>graphene::db::object_id</scope><name>operator==</name></member>
      <member refid="structgraphene_1_1db_1_1object__id_1adeaa6563b141bebb9045147876c68eb0" prot="public" virt="non-virtual"><scope>graphene::db::object_id</scope><name>operator&gt;</name></member>
      <member refid="structgraphene_1_1db_1_1object__id_1af2acbad0bbf47bab71417ee49a774917" prot="public" virt="non-virtual"><scope>graphene::db::object_id</scope><name>space_id</name></member>
      <member refid="structgraphene_1_1db_1_1object__id_1a3bdeef214a65f15655f9b2c02a5ef122" prot="public" virt="non-virtual"><scope>graphene::db::object_id</scope><name>space_type</name></member>
      <member refid="structgraphene_1_1db_1_1object__id_1ab5173c3d5e48b87d964750f6c6517d27" prot="public" virt="non-virtual"><scope>graphene::db::object_id</scope><name>type_bits</name></member>
      <member refid="structgraphene_1_1db_1_1object__id_1a05e977a498b0bf18ce72e9d13a3ab76e" prot="public" virt="non-virtual"><scope>graphene::db::object_id</scope><name>type_id</name></member>
      <member refid="structgraphene_1_1db_1_1object__id_1a5a1ed366cef98e581e8bd906e70e6aff" prot="public" virt="non-virtual"><scope>graphene::db::object_id</scope><name>validate</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
