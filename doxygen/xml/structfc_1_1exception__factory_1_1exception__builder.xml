<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="structfc_1_1exception__factory_1_1exception__builder" kind="struct" language="C++" prot="public">
    <compoundname>fc::exception_factory::exception_builder</compoundname>
    <basecompoundref refid="structfc_1_1exception__factory_1_1base__exception__builder" prot="public" virt="non-virtual">fc::exception_factory::base_exception_builder</basecompoundref>
    <includes refid="exception_8hpp" local="no">exception.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structfc_1_1exception__factory_1_1exception__builder_1a7bceffc41ab7f63a3118f404d36669ee" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void fc::exception_factory::exception_builder&lt; T &gt;::rethrow</definition>
        <argsstring>(const exception &amp;e) const override</argsstring>
        <name>rethrow</name>
        <reimplements refid="structfc_1_1exception__factory_1_1base__exception__builder_1ac61c04fd1d93cf3b18e603b8327e8af5">rethrow</reimplements>
        <param>
          <type>const <ref refid="classfc_1_1exception" kindref="compound">exception</ref> &amp;</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/exception/exception.hpp" line="188" column="26" bodyfile="libraries/fc/include/fc/exception/exception.hpp" bodystart="188" bodyend="191"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>fc::exception_factory::exception_builder&lt; T &gt;</label>
        <link refid="structfc_1_1exception__factory_1_1exception__builder"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>fc::exception_factory::base_exception_builder</label>
        <link refid="structfc_1_1exception__factory_1_1base__exception__builder"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>fc::exception_factory::exception_builder&lt; T &gt;</label>
        <link refid="structfc_1_1exception__factory_1_1exception__builder"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>fc::exception_factory::base_exception_builder</label>
        <link refid="structfc_1_1exception__factory_1_1base__exception__builder"/>
      </node>
    </collaborationgraph>
    <location file="libraries/fc/include/fc/exception/exception.hpp" line="187" column="1" bodyfile="libraries/fc/include/fc/exception/exception.hpp" bodystart="186" bodyend="192"/>
    <listofallmembers>
      <member refid="structfc_1_1exception__factory_1_1exception__builder_1a7bceffc41ab7f63a3118f404d36669ee" prot="public" virt="virtual"><scope>fc::exception_factory::exception_builder</scope><name>rethrow</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
