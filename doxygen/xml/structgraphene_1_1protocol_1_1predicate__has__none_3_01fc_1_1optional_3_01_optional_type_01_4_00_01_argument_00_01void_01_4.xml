<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="structgraphene_1_1protocol_1_1predicate__has__none_3_01fc_1_1optional_3_01_optional_type_01_4_00_01_argument_00_01void_01_4" kind="struct" language="C++" prot="public">
    <compoundname>graphene::protocol::predicate_has_none&lt; fc::optional&lt; OptionalType &gt;, Argument, void &gt;</compoundname>
    <basecompoundref refid="structgraphene_1_1protocol_1_1predicate__has__all" prot="public" virt="non-virtual">graphene::protocol::predicate_has_all&lt; OptionalType, Argument &gt;</basecompoundref>
    <includes refid="restriction__predicate_8hxx" local="no">restriction_predicate.hxx</includes>
    <templateparamlist>
      <param>
        <type>typename OptionalType</type>
      </param>
      <param>
        <type>typename Argument</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structgraphene_1_1protocol_1_1predicate__has__none_3_01fc_1_1optional_3_01_optional_type_01_4_00_01_argument_00_01void_01_4_1aee1bedd2ab7233d7a282de8aee3ee0fc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool graphene::protocol::predicate_has_none&lt; fc::optional&lt; OptionalType &gt;, Argument, void &gt;::operator()</definition>
        <argsstring>(const fc::optional&lt; OptionalType &gt; &amp;f, const Argument &amp;a) const </argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="classfc_1_1optional" kindref="compound">fc::optional</ref>&lt; OptionalType &gt; &amp;</type>
          <declname>f</declname>
        </param>
        <param>
          <type>const Argument &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/custom_authorities/restriction_predicate.hxx" line="367" column="1" bodyfile="libraries/protocol/custom_authorities/restriction_predicate.hxx" bodystart="367" bodyend="370"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="5609">
        <label>graphene::protocol::predicate_invalid&lt; OptionalType, Argument &gt;</label>
        <link refid="structgraphene_1_1protocol_1_1predicate__invalid"/>
      </node>
      <node id="5607">
        <label>graphene::protocol::predicate_has_none&lt; fc::optional&lt; OptionalType &gt;, Argument, void &gt;</label>
        <link refid="structgraphene_1_1protocol_1_1predicate__has__none_3_01fc_1_1optional_3_01_optional_type_01_4_00_01_argument_00_01void_01_4"/>
        <childnode refid="5608" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5608">
        <label>graphene::protocol::predicate_has_all&lt; OptionalType, Argument &gt;</label>
        <link refid="structgraphene_1_1protocol_1_1predicate__has__all"/>
        <childnode refid="5609" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="5612">
        <label>graphene::protocol::predicate_invalid&lt; OptionalType, Argument &gt;</label>
        <link refid="structgraphene_1_1protocol_1_1predicate__invalid"/>
      </node>
      <node id="5610">
        <label>graphene::protocol::predicate_has_none&lt; fc::optional&lt; OptionalType &gt;, Argument, void &gt;</label>
        <link refid="structgraphene_1_1protocol_1_1predicate__has__none_3_01fc_1_1optional_3_01_optional_type_01_4_00_01_argument_00_01void_01_4"/>
        <childnode refid="5611" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5611">
        <label>graphene::protocol::predicate_has_all&lt; OptionalType, Argument &gt;</label>
        <link refid="structgraphene_1_1protocol_1_1predicate__has__all"/>
        <childnode refid="5612" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="libraries/protocol/custom_authorities/restriction_predicate.hxx" line="365" column="1" bodyfile="libraries/protocol/custom_authorities/restriction_predicate.hxx" bodystart="365" bodyend="371"/>
    <listofallmembers>
      <member refid="structgraphene_1_1protocol_1_1predicate__has__none_3_01fc_1_1optional_3_01_optional_type_01_4_00_01_argument_00_01void_01_4_1aee1bedd2ab7233d7a282de8aee3ee0fc" prot="public" virt="non-virtual"><scope>graphene::protocol::predicate_has_none&lt; fc::optional&lt; OptionalType &gt;, Argument, void &gt;</scope><name>operator()</name></member>
      <member refid="structgraphene_1_1protocol_1_1predicate__invalid_1af6039dcdcb4a0fb5d9a6d48782f0b19d" prot="public" virt="non-virtual" ambiguityscope="predicate_has_all&lt; OptionalType, Argument &gt;::"><scope>graphene::protocol::predicate_has_none&lt; fc::optional&lt; OptionalType &gt;, Argument, void &gt;</scope><name>operator()</name></member>
      <member refid="structgraphene_1_1protocol_1_1predicate__invalid_1ab93fc74601f7eab21fb9cc0a10b69014" prot="public" virt="non-virtual"><scope>graphene::protocol::predicate_has_none&lt; fc::optional&lt; OptionalType &gt;, Argument, void &gt;</scope><name>predicate_invalid</name></member>
      <member refid="structgraphene_1_1protocol_1_1predicate__invalid_1a8286fe372c0741e853098abd64535f23" prot="public" virt="non-virtual"><scope>graphene::protocol::predicate_has_none&lt; fc::optional&lt; OptionalType &gt;, Argument, void &gt;</scope><name>valid</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
