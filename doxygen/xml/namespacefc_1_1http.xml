<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="namespacefc_1_1http" kind="namespace" language="C++">
    <compoundname>fc::http</compoundname>
    <innerclass refid="classfc_1_1http_1_1connection" prot="public">fc::http::connection</innerclass>
    <innerclass refid="structfc_1_1http_1_1header" prot="public">fc::http::header</innerclass>
    <innerclass refid="structfc_1_1http_1_1reply" prot="public">fc::http::reply</innerclass>
    <innerclass refid="structfc_1_1http_1_1request" prot="public">fc::http::request</innerclass>
    <innerclass refid="classfc_1_1http_1_1websocket__client" prot="public">fc::http::websocket_client</innerclass>
    <innerclass refid="classfc_1_1http_1_1websocket__connection" prot="public">fc::http::websocket_connection</innerclass>
    <innerclass refid="classfc_1_1http_1_1websocket__server" prot="public">fc::http::websocket_server</innerclass>
    <innerclass refid="classfc_1_1http_1_1websocket__tls__server" prot="public">fc::http::websocket_tls_server</innerclass>
    <innernamespace refid="namespacefc_1_1http_1_1detail">fc::http::detail</innernamespace>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="namespacefc_1_1http_1a4e65ca3195c247113e0bbda9063356a2" prot="public" static="no">
        <type>std::vector&lt; <ref refid="structfc_1_1http_1_1header" kindref="compound">header</ref> &gt;</type>
        <definition>typedef std::vector&lt;header&gt; fc::http::headers</definition>
        <argsstring></argsstring>
        <name>headers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/network/http/connection.hpp" line="21" column="1" bodyfile="libraries/fc/include/fc/network/http/connection.hpp" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacefc_1_1http_1a96e5e4ed3917cb7612daed1cab3d4452" prot="public" static="no">
        <type>std::shared_ptr&lt; <ref refid="classfc_1_1http_1_1connection" kindref="compound">connection</ref> &gt;</type>
        <definition>typedef std::shared_ptr&lt;connection&gt; fc::http::connection_ptr</definition>
        <argsstring></argsstring>
        <name>connection_ptr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/network/http/connection.hpp" line="78" column="1" bodyfile="libraries/fc/include/fc/network/http/connection.hpp" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacefc_1_1http_1a530cf9528ae810584e918888da48f53d" prot="public" static="no">
        <type>std::shared_ptr&lt; <ref refid="classfc_1_1http_1_1websocket__connection" kindref="compound">websocket_connection</ref> &gt;</type>
        <definition>typedef std::shared_ptr&lt;websocket_connection&gt; fc::http::websocket_connection_ptr</definition>
        <argsstring></argsstring>
        <name>websocket_connection_ptr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/network/http/websocket.hpp" line="47" column="1" bodyfile="libraries/fc/include/fc/network/http/websocket.hpp" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespacefc_1_1http_1a033a516ca47ae9cbe33095798672033d" prot="public" static="no">
        <type>std::function&lt; void(const <ref refid="namespacefc_1_1http_1a530cf9528ae810584e918888da48f53d" kindref="member">websocket_connection_ptr</ref> &amp;)&gt;</type>
        <definition>typedef std::function&lt;void(const websocket_connection_ptr&amp;)&gt; fc::http::on_connection_handler</definition>
        <argsstring></argsstring>
        <name>on_connection_handler</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/network/http/websocket.hpp" line="49" column="1" bodyfile="libraries/fc/include/fc/network/http/websocket.hpp" bodystart="49" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespacefc_1_1http_1abfdaaf4b3b33fbc5171a1ee5a0082ac9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="structfc_1_1http_1_1header" kindref="compound">header</ref> &gt;</type>
        <definition>std::vector&lt; header &gt; fc::http::parse_urlencoded_params</definition>
        <argsstring>(const std::string &amp;f)</argsstring>
        <name>parse_urlencoded_params</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/network/http/connection.hpp" line="53" column="1" bodyfile="libraries/fc/src/network/http/http_connection.cpp" bodystart="180" bodyend="210"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="libraries/fc/include/fc/network/http/connection.hpp" line="10" column="1"/>
  </compounddef>
</doxygen>
