<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classfc_1_1ostream" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>fc::ostream</compoundname>
    <derivedcompoundref refid="classfc_1_1asio_1_1ostream" prot="public" virt="virtual">fc::asio::ostream&lt; AsyncWriteStream &gt;</derivedcompoundref>
    <derivedcompoundref refid="classfc_1_1buffered__ostream" prot="public" virt="virtual">fc::buffered_ostream</derivedcompoundref>
    <derivedcompoundref refid="classfc_1_1cerr__t" prot="public" virt="virtual">fc::cerr_t</derivedcompoundref>
    <derivedcompoundref refid="classfc_1_1cout__t" prot="public" virt="virtual">fc::cout_t</derivedcompoundref>
    <derivedcompoundref refid="classfc_1_1iostream" prot="public" virt="virtual">fc::iostream</derivedcompoundref>
    <derivedcompoundref refid="classfc_1_1ofstream" prot="public" virt="virtual">fc::ofstream</derivedcompoundref>
    <includes refid="iostream_8hpp" local="no">iostream.hpp</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classfc_1_1ostream_1aa2ed925328be7251755abfb9ca5f01d2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual fc::ostream::~ostream</definition>
        <argsstring>()</argsstring>
        <name>~ostream</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/iostream.hpp" line="44" column="16" bodyfile="libraries/fc/include/fc/io/iostream.hpp" bodystart="44" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1ostream_1aac50b472ffc544ec0b171c5df21f4505" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>size_t</type>
        <definition>virtual size_t fc::ostream::writesome</definition>
        <argsstring>(const char *buf, size_t len)=0</argsstring>
        <name>writesome</name>
        <reimplementedby refid="classfc_1_1cout__t_1a96eb6178413fa7017f25ef5515de66a3">writesome</reimplementedby>
        <reimplementedby refid="classfc_1_1ofstream_1adaea29232e8607ab8c2eb4546a6f4250">writesome</reimplementedby>
        <reimplementedby refid="classfc_1_1cerr__t_1a54135ea8969b57fa515ac42ca251effa">writesome</reimplementedby>
        <reimplementedby refid="classfc_1_1stringstream_1a9478eb8883b9ef322310cb86313c9f7b">writesome</reimplementedby>
        <reimplementedby refid="classfc_1_1buffered__ostream_1a97aa6bcd47b0506a080779840fffd493">writesome</reimplementedby>
        <reimplementedby refid="classfc_1_1asio_1_1ostream_1a0c14ce0e9c9d2431009e3d720e11a175">writesome</reimplementedby>
        <reimplementedby refid="classgraphene_1_1utilities_1_1padding__ostream_1a052b11cef81679d6b22b863954f09092">writesome</reimplementedby>
        <reimplementedby refid="classfc_1_1tcp__socket_1a6fbf4730c000aabb7561d4949326a15f">writesome</reimplementedby>
        <reimplementedby refid="classgraphene_1_1net_1_1stcp__socket_1a5afb0c829c6d401ce6a3a751d851486a">writesome</reimplementedby>
        <param>
          <type>const char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/iostream.hpp" line="45" column="27"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1ostream_1acb234eb77ec18eef2c2aeef8f645a862" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>size_t</type>
        <definition>virtual size_t fc::ostream::writesome</definition>
        <argsstring>(const std::shared_ptr&lt; const char &gt; &amp;buf, size_t len, size_t offset)=0</argsstring>
        <name>writesome</name>
        <reimplementedby refid="classfc_1_1cout__t_1a80e6aaa2a5c9df5c9e426c2b2773fb9d">writesome</reimplementedby>
        <reimplementedby refid="classfc_1_1cerr__t_1a7be6a04a9706c9c39243ce6c4bbf51a5">writesome</reimplementedby>
        <reimplementedby refid="classfc_1_1stringstream_1ad41eee13b43e4579d7a77e2de61d70db">writesome</reimplementedby>
        <reimplementedby refid="classgraphene_1_1utilities_1_1padding__ostream_1a4a5402ba3f311a0ef8b053101c0fedcd">writesome</reimplementedby>
        <reimplementedby refid="classgraphene_1_1net_1_1stcp__socket_1aa9664b2d37ede9a3227d1cca79d5c792">writesome</reimplementedby>
        <reimplementedby refid="classfc_1_1buffered__ostream_1a5cb49f9fc76f6de2ff3014fc35c46d50">writesome</reimplementedby>
        <reimplementedby refid="classfc_1_1asio_1_1ostream_1ae1a989d93a42da41161ecc3eefef6cf8">writesome</reimplementedby>
        <reimplementedby refid="classfc_1_1ofstream_1a8e649b1dfa9585fb790c9d0634e57b81">writesome</reimplementedby>
        <reimplementedby refid="classfc_1_1tcp__socket_1acfb04324bc5242efb4460d86e57b548a">writesome</reimplementedby>
        <param>
          <type>const std::shared_ptr&lt; const char &gt; &amp;</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/iostream.hpp" line="46" column="27"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1ostream_1ab0055550951d519b5cf95c2f4d07379c" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void fc::ostream::close</definition>
        <argsstring>()=0</argsstring>
        <name>close</name>
        <reimplementedby refid="classfc_1_1cout__t_1ab6f6960bdd67ddcf508e15fd15ca07cf">close</reimplementedby>
        <reimplementedby refid="classfc_1_1cerr__t_1adaf0e4716f73d0e092be1334c863a0e4">close</reimplementedby>
        <reimplementedby refid="classfc_1_1ofstream_1afee5e275c88ce4d16e761230114feb91">close</reimplementedby>
        <reimplementedby refid="classfc_1_1stringstream_1af3cc03210ddbd01a8da08f1d92dbe6a1">close</reimplementedby>
        <reimplementedby refid="classfc_1_1tcp__socket_1ab53327ffea0f6db061b0c33e3ea29674">close</reimplementedby>
        <reimplementedby refid="classgraphene_1_1net_1_1stcp__socket_1a6acc99736fd33793e614ea47604602dd">close</reimplementedby>
        <reimplementedby refid="classfc_1_1buffered__ostream_1a6eb86db89b1da6af7fd4cbe52c24a0ed">close</reimplementedby>
        <reimplementedby refid="classfc_1_1asio_1_1ostream_1a452ac1d8b8be67a81ebc9d9f79f12bf1">close</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/iostream.hpp" line="47" column="27"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1ostream_1af0a9d82410120b00b036462594f05549" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void fc::ostream::flush</definition>
        <argsstring>()=0</argsstring>
        <name>flush</name>
        <reimplementedby refid="classfc_1_1cout__t_1af02bdaa086981f0ba2065416bfb28ce1">flush</reimplementedby>
        <reimplementedby refid="classfc_1_1cerr__t_1aae5b2cf0a8cba1de9f0f5691b4741130">flush</reimplementedby>
        <reimplementedby refid="classfc_1_1ofstream_1ab7ae408730757c259f7b63f994e430ce">flush</reimplementedby>
        <reimplementedby refid="classfc_1_1stringstream_1a6b8a0e0e56209c3a8ef33f5e6bcf4e1a">flush</reimplementedby>
        <reimplementedby refid="classgraphene_1_1utilities_1_1padding__ostream_1a8ec609c449bda9feaf6cbf63e454358f">flush</reimplementedby>
        <reimplementedby refid="classfc_1_1tcp__socket_1a3acfc3a542cb75331d9f3965b56bde1a">flush</reimplementedby>
        <reimplementedby refid="classgraphene_1_1net_1_1stcp__socket_1aba252057ad2c4ebb769f0810e00f4995">flush</reimplementedby>
        <reimplementedby refid="classfc_1_1buffered__ostream_1a2701105d24596d7990e73ec940b134ab">flush</reimplementedby>
        <reimplementedby refid="classfc_1_1asio_1_1ostream_1aeb6d89eb1b26c697d22962b2eed2d8c6">flush</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/iostream.hpp" line="48" column="27"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1ostream_1a5eb546403297f3a0124af202d9544fc4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void fc::ostream::put</definition>
        <argsstring>(char c)</argsstring>
        <name>put</name>
        <param>
          <type>char</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/iostream.hpp" line="50" column="13" bodyfile="libraries/fc/include/fc/io/iostream.hpp" bodystart="50" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1ostream_1a8abbd25d7d136527d1bb36c1ca24427e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classfc_1_1ostream" kindref="compound">ostream</ref> &amp;</type>
        <definition>ostream &amp; fc::ostream::write</definition>
        <argsstring>(const char *buf, size_t len)</argsstring>
        <name>write</name>
        <param>
          <type>const char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>implemented in terms of writesome, guarantees len bytes are sent but not flushed. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/iostream.hpp" line="55" column="18" bodyfile="libraries/fc/src/io/iostream.cpp" bodystart="290" bodyend="296"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1ostream_1afa09d563e34c1e16aee4709d4a47483a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classfc_1_1ostream" kindref="compound">ostream</ref> &amp;</type>
        <definition>ostream &amp; fc::ostream::write</definition>
        <argsstring>(const std::shared_ptr&lt; const char &gt; &amp;buf, size_t len, size_t offset=0)</argsstring>
        <name>write</name>
        <param>
          <type>const std::shared_ptr&lt; const char &gt; &amp;</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>offset</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/iostream.hpp" line="56" column="18" bodyfile="libraries/fc/src/io/iostream.cpp" bodystart="298" bodyend="304"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Provides a <ref refid="classfc_1_1thread" kindref="compound">fc::thread</ref> friendly cooperatively multi-tasked stream that will block &apos;cooperatively&apos; instead of hard blocking. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="9">
        <label>fc::tcp_socket</label>
        <link refid="classfc_1_1tcp__socket"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>fc::stringstream</label>
        <link refid="classfc_1_1stringstream"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>fc::cout_t</label>
        <link refid="classfc_1_1cout__t"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>fc::cerr_t</label>
        <link refid="classfc_1_1cerr__t"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>graphene::net::stcp_socket</label>
        <link refid="classgraphene_1_1net_1_1stcp__socket"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>fc::asio::ostream&lt; AsyncWriteStream &gt;</label>
        <link refid="classfc_1_1asio_1_1ostream"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>fc::buffered_ostream</label>
        <link refid="classfc_1_1buffered__ostream"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>fc::iostream</label>
        <link refid="classfc_1_1iostream"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>graphene::utilities::padding_ostream&lt; BlockSize, PaddingChar &gt;</label>
        <link refid="classgraphene_1_1utilities_1_1padding__ostream"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11">
        <label>fc::ofstream</label>
        <link refid="classfc_1_1ofstream"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>fc::ostream</label>
        <link refid="classfc_1_1ostream"/>
      </node>
    </inheritancegraph>
    <location file="libraries/fc/include/fc/io/iostream.hpp" line="42" column="1" bodyfile="libraries/fc/include/fc/io/iostream.hpp" bodystart="41" bodyend="57"/>
    <listofallmembers>
      <member refid="classfc_1_1ostream_1ab0055550951d519b5cf95c2f4d07379c" prot="public" virt="pure-virtual"><scope>fc::ostream</scope><name>close</name></member>
      <member refid="classfc_1_1ostream_1af0a9d82410120b00b036462594f05549" prot="public" virt="pure-virtual"><scope>fc::ostream</scope><name>flush</name></member>
      <member refid="classfc_1_1ostream_1a5eb546403297f3a0124af202d9544fc4" prot="public" virt="non-virtual"><scope>fc::ostream</scope><name>put</name></member>
      <member refid="classfc_1_1ostream_1a8abbd25d7d136527d1bb36c1ca24427e" prot="public" virt="non-virtual"><scope>fc::ostream</scope><name>write</name></member>
      <member refid="classfc_1_1ostream_1afa09d563e34c1e16aee4709d4a47483a" prot="public" virt="non-virtual"><scope>fc::ostream</scope><name>write</name></member>
      <member refid="classfc_1_1ostream_1aac50b472ffc544ec0b171c5df21f4505" prot="public" virt="pure-virtual"><scope>fc::ostream</scope><name>writesome</name></member>
      <member refid="classfc_1_1ostream_1acb234eb77ec18eef2c2aeef8f645a862" prot="public" virt="pure-virtual"><scope>fc::ostream</scope><name>writesome</name></member>
      <member refid="classfc_1_1ostream_1aa2ed925328be7251755abfb9ca5f01d2" prot="public" virt="virtual"><scope>fc::ostream</scope><name>~ostream</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
