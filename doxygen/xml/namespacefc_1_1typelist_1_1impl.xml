<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="namespacefc_1_1typelist_1_1impl" kind="namespace" language="C++">
    <compoundname>fc::typelist::impl</compoundname>
    <innerclass refid="structfc_1_1typelist_1_1impl_1_1apply" prot="public">fc::typelist::impl::apply</innerclass>
    <innerclass refid="structfc_1_1typelist_1_1impl_1_1apply_3_01list_3_01_ts_8_8_8_01_4_00_01_delegate_01_4" prot="public">fc::typelist::impl::apply&lt; list&lt; Ts... &gt;, Delegate &gt;</innerclass>
    <innerclass refid="structfc_1_1typelist_1_1impl_1_1at" prot="public">fc::typelist::impl::at</innerclass>
    <innerclass refid="structfc_1_1typelist_1_1impl_1_1at_3_01list_3_01_t_00_01_types_8_8_8_01_4_00_010_01_4" prot="public">fc::typelist::impl::at&lt; list&lt; T, Types... &gt;, 0 &gt;</innerclass>
    <innerclass refid="structfc_1_1typelist_1_1impl_1_1at_3_01list_3_01_t_00_01_types_8_8_8_01_4_00_01index_01_4" prot="public">fc::typelist::impl::at&lt; list&lt; T, Types... &gt;, index &gt;</innerclass>
    <innerclass refid="structfc_1_1typelist_1_1impl_1_1concat" prot="public">fc::typelist::impl::concat</innerclass>
    <innerclass refid="structfc_1_1typelist_1_1impl_1_1concat_3_01list_3_01_old_types_8_8_8_01_4_00_01list_3_01_new_types_8_8_8_01_4_01_4" prot="public">fc::typelist::impl::concat&lt; list&lt; OldTypes... &gt;, list&lt; NewTypes... &gt; &gt;</innerclass>
    <innerclass refid="structfc_1_1typelist_1_1impl_1_1concat_3_01list_3_01_old_types_8_8_8_01_4_00_01list_3_01_new_typ78444aa8878991019fe7adbfe1d128ba" prot="public">fc::typelist::impl::concat&lt; list&lt; OldTypes... &gt;, list&lt; NewTypes... &gt;, NextList, Lists... &gt;</innerclass>
    <innerclass refid="structfc_1_1typelist_1_1impl_1_1concat__unique" prot="public">fc::typelist::impl::concat_unique</innerclass>
    <innerclass refid="structfc_1_1typelist_1_1impl_1_1concat__unique_3_01list_3_01_uniques_8_8_8_01_4_00_01list_3_01_t_01_4_01_4" prot="public">fc::typelist::impl::concat_unique&lt; list&lt; Uniques... &gt;, list&lt; T &gt; &gt;</innerclass>
    <innerclass refid="structfc_1_1typelist_1_1impl_1_1concat__unique_3_01list_3_01_uniques_8_8_8_01_4_00_01list_3_01_t7bdbd421aa27106e60a58f1d9b7ac44f" prot="public">fc::typelist::impl::concat_unique&lt; list&lt; Uniques... &gt;, list&lt; T1, T2, Types... &gt; &gt;</innerclass>
    <innerclass refid="structfc_1_1typelist_1_1impl_1_1concat__unique_3_01list_3_01_uniques_8_8_8_01_4_00_01list_3_4_01_4" prot="public">fc::typelist::impl::concat_unique&lt; list&lt; Uniques... &gt;, list&lt;&gt; &gt;</innerclass>
    <innerclass refid="structfc_1_1typelist_1_1impl_1_1concat__unique_3_01list_3_01_uniques_8_8_8_01_4_00_01list_3_4_00_01_lists_8_8_8_01_4" prot="public">fc::typelist::impl::concat_unique&lt; list&lt; Uniques... &gt;, list&lt;&gt;, Lists... &gt;</innerclass>
    <innerclass refid="structfc_1_1typelist_1_1impl_1_1concat__unique_3_01_uniques_00_01list_3_01_l1a_00_01_l1s_8_8_8_0702c935116d988b589f8d7898c23ed41" prot="public">fc::typelist::impl::concat_unique&lt; Uniques, list&lt; L1a, L1s... &gt;, L2, Lists... &gt;</innerclass>
    <innerclass refid="structfc_1_1typelist_1_1impl_1_1filter" prot="public">fc::typelist::impl::filter</innerclass>
    <innerclass refid="structfc_1_1typelist_1_1impl_1_1filter_3_01_filter_00_01list_3_01_filtered_8_8_8_01_4_00_01list_14c75c8092af93faf55cbb6296c58569" prot="public">fc::typelist::impl::filter&lt; Filter, list&lt; Filtered... &gt;, list&lt; T1, Types... &gt; &gt;</innerclass>
    <innerclass refid="structfc_1_1typelist_1_1impl_1_1filter_3_01_filter_00_01list_3_01_filtered_8_8_8_01_4_00_01list_3_4_01_4" prot="public">fc::typelist::impl::filter&lt; Filter, list&lt; Filtered... &gt;, list&lt;&gt; &gt;</innerclass>
    <innerclass refid="structfc_1_1typelist_1_1impl_1_1index__of" prot="public">fc::typelist::impl::index_of</innerclass>
    <innerclass refid="structfc_1_1typelist_1_1impl_1_1index__of_3_01_search_00_01list_3_01_t_00_01_ts_8_8_8_01_4_01_4" prot="public">fc::typelist::impl::index_of&lt; Search, list&lt; T, Ts... &gt; &gt;</innerclass>
    <innerclass refid="structfc_1_1typelist_1_1impl_1_1index__of_3_01_search_00_01list_3_4_01_4" prot="public">fc::typelist::impl::index_of&lt; Search, list&lt;&gt; &gt;</innerclass>
    <innerclass refid="structfc_1_1typelist_1_1impl_1_1length" prot="public">fc::typelist::impl::length</innerclass>
    <innerclass refid="structfc_1_1typelist_1_1impl_1_1length_3_01_t_00_01_ts_8_8_8_01_4" prot="public">fc::typelist::impl::length&lt; T, Ts... &gt;</innerclass>
    <innerclass refid="structfc_1_1typelist_1_1impl_1_1length_3_4" prot="public">fc::typelist::impl::length&lt;&gt;</innerclass>
    <innerclass refid="structfc_1_1typelist_1_1impl_1_1make__sequence" prot="public">fc::typelist::impl::make_sequence</innerclass>
    <innerclass refid="structfc_1_1typelist_1_1impl_1_1make__sequence_3_010_01_4" prot="public">fc::typelist::impl::make_sequence&lt; 0 &gt;</innerclass>
    <innerclass refid="structfc_1_1typelist_1_1impl_1_1make__sequence_3_011_01_4" prot="public">fc::typelist::impl::make_sequence&lt; 1 &gt;</innerclass>
    <innerclass refid="structfc_1_1typelist_1_1impl_1_1remove__at" prot="public">fc::typelist::impl::remove_at</innerclass>
    <innerclass refid="structfc_1_1typelist_1_1impl_1_1remove__at_3_01list_3_01_left_8_8_8_01_4_00_01list_3_01_t_00_01_right_8_8_8_01_4_00_010_01_4" prot="public">fc::typelist::impl::remove_at&lt; list&lt; Left... &gt;, list&lt; T, Right... &gt;, 0 &gt;</innerclass>
    <innerclass refid="structfc_1_1typelist_1_1impl_1_1remove__at_3_01list_3_01_left_8_8_8_01_4_00_01list_3_01_t_00_01_872c8f9dba01a09fcb9463115103baa7" prot="public">fc::typelist::impl::remove_at&lt; list&lt; Left... &gt;, list&lt; T, Right... &gt;, index &gt;</innerclass>
    <innerclass refid="structfc_1_1typelist_1_1impl_1_1slice" prot="public">fc::typelist::impl::slice</innerclass>
    <innerclass refid="structfc_1_1typelist_1_1impl_1_1slice_3_01list_3_01_results_8_8_8_01_4_00_01list_3_01_t_00_01_ty0736d698e8851d8cb443c43f8140bb66" prot="public">fc::typelist::impl::slice&lt; list&lt; Results... &gt;, list&lt; T, Types... &gt;, 0, end, std::enable_if_t&lt; end !=0 &gt; &gt;</innerclass>
    <innerclass refid="structfc_1_1typelist_1_1impl_1_1slice_3_01list_3_01_results_8_8_8_01_4_00_01list_3_01_types_8_8_ceb661a1fa5e08c124dde0142281f66f" prot="public">fc::typelist::impl::slice&lt; list&lt; Results... &gt;, list&lt; Types... &gt;, index, index, void &gt;</innerclass>
    <innerclass refid="structfc_1_1typelist_1_1impl_1_1slice_3_01list_3_4_00_01list_3_01_t_00_01_types_8_8_8_01_4_00_018da2d82ba41762b580c7de08077a5464" prot="public">fc::typelist::impl::slice&lt; list&lt;&gt;, list&lt; T, Types... &gt;, start, end, std::enable_if_t&lt; start !=0 &gt; &gt;</innerclass>
    <innerclass refid="structfc_1_1typelist_1_1impl_1_1transform" prot="public">fc::typelist::impl::transform</innerclass>
    <innerclass refid="structfc_1_1typelist_1_1impl_1_1transform_3_01list_3_01_list_8_8_8_01_4_00_01_transformer_01_4" prot="public">fc::typelist::impl::transform&lt; list&lt; List... &gt;, Transformer &gt;</innerclass>
    <innerclass refid="structfc_1_1typelist_1_1impl_1_1zip" prot="public">fc::typelist::impl::zip</innerclass>
    <innerclass refid="structfc_1_1typelist_1_1impl_1_1zip_3_01list_3_01_a_00_01_as_8_8_8_01_4_00_01list_3_01_b_00_01_bs_8_8_8_01_4_01_4" prot="public">fc::typelist::impl::zip&lt; list&lt; A, As... &gt;, list&lt; B, Bs... &gt; &gt;</innerclass>
    <innerclass refid="structfc_1_1typelist_1_1impl_1_1zip_3_01list_3_4_00_01list_3_4_01_4" prot="public">fc::typelist::impl::zip&lt; list&lt;&gt;, list&lt;&gt; &gt;</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespacefc_1_1typelist_1_1impl_1a835e89710d3bfdd2f9dae9b78e5ec635" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Callable</type>
          </param>
          <param>
            <type>typename Ret</type>
          </param>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>Ret</type>
        <definition>Ret fc::typelist::impl::dispatch_helper</definition>
        <argsstring>(Callable &amp;c)</argsstring>
        <name>dispatch_helper</name>
        <param>
          <type>Callable &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/reflect/typelist.hpp" line="132" column="5" bodyfile="libraries/fc/include/fc/reflect/typelist.hpp" bodystart="132" bodyend="132"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="libraries/fc/include/fc/reflect/typelist.hpp" line="19" column="14"/>
  </compounddef>
</doxygen>
