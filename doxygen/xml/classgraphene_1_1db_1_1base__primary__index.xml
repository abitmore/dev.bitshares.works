<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classgraphene_1_1db_1_1base__primary__index" kind="class" language="C++" prot="public">
    <compoundname>graphene::db::base_primary_index</compoundname>
    <derivedcompoundref refid="classgraphene_1_1db_1_1primary__index" prot="public" virt="non-virtual">graphene::db::primary_index&lt; DerivedIndex, DirectBits &gt;</derivedcompoundref>
    <derivedcompoundref refid="classgraphene_1_1db_1_1primary__index" prot="public" virt="non-virtual">graphene::db::primary_index&lt; graphene::db::generic_index &gt;</derivedcompoundref>
    <includes refid="index_8hpp" local="no">index.hpp</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classgraphene_1_1db_1_1base__primary__index_1a0c3c723d9268e6f9fcaad7094beb1ce1" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; std::shared_ptr&lt; <ref refid="classgraphene_1_1db_1_1index__observer" kindref="compound">index_observer</ref> &gt; &gt;</type>
        <definition>std::vector&lt; std::shared_ptr&lt;index_observer&gt; &gt; graphene::db::base_primary_index::_observers</definition>
        <argsstring></argsstring>
        <name>_observers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/db/include/graphene/db/index.hpp" line="190" column="1" bodyfile="libraries/db/include/graphene/db/index.hpp" bodystart="190" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgraphene_1_1db_1_1base__primary__index_1aa2795c19b379f6c6f412b6b3a4ac962d" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; std::unique_ptr&lt; <ref refid="classgraphene_1_1db_1_1secondary__index" kindref="compound">secondary_index</ref> &gt; &gt;</type>
        <definition>std::vector&lt; std::unique_ptr&lt;secondary_index&gt; &gt; graphene::db::base_primary_index::_sindex</definition>
        <argsstring></argsstring>
        <name>_sindex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/db/include/graphene/db/index.hpp" line="191" column="1" bodyfile="libraries/db/include/graphene/db/index.hpp" bodystart="191" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classgraphene_1_1db_1_1base__primary__index_1a60fd70d245dc46efa57d6242816e75eb" prot="private" static="no" mutable="no">
        <type><ref refid="classgraphene_1_1db_1_1object__database" kindref="compound">object_database</ref> &amp;</type>
        <definition>object_database&amp; graphene::db::base_primary_index::_db</definition>
        <argsstring></argsstring>
        <name>_db</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/db/include/graphene/db/index.hpp" line="194" column="1" bodyfile="libraries/db/include/graphene/db/index.hpp" bodystart="194" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classgraphene_1_1db_1_1base__primary__index_1aae4d25e40d3538e9a7d40054f9ed05e8" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>graphene::db::base_primary_index::base_primary_index</definition>
        <argsstring>(object_database &amp;db)</argsstring>
        <name>base_primary_index</name>
        <param>
          <type><ref refid="classgraphene_1_1db_1_1object__database" kindref="compound">object_database</ref> &amp;</type>
          <declname>db</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/db/include/graphene/db/index.hpp" line="155" column="1" bodyfile="libraries/db/include/graphene/db/index.hpp" bodystart="155" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1db_1_1base__primary__index_1ad76d89ffbbd1a67c3026824569795a76" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual graphene::db::base_primary_index::~base_primary_index</definition>
        <argsstring>()=default</argsstring>
        <name>~base_primary_index</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/db/include/graphene/db/index.hpp" line="157" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1db_1_1base__primary__index_1aecddf87652998f5a4a156dce5d4aa1fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::db::base_primary_index::save_undo</definition>
        <argsstring>(const object &amp;obj)</argsstring>
        <name>save_undo</name>
        <param>
          <type>const <ref refid="classgraphene_1_1db_1_1object" kindref="compound">object</ref> &amp;</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>called just before obj is modified </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/db/include/graphene/db/index.hpp" line="160" column="1" bodyfile="libraries/db/index.cpp" bodystart="29" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1db_1_1base__primary__index_1a66192343c484ac5d4365a3b562bc99c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::db::base_primary_index::on_add</definition>
        <argsstring>(const object &amp;obj)</argsstring>
        <name>on_add</name>
        <param>
          <type>const <ref refid="classgraphene_1_1db_1_1object" kindref="compound">object</ref> &amp;</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>called just after the object is added </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/db/include/graphene/db/index.hpp" line="163" column="1" bodyfile="libraries/db/index.cpp" bodystart="32" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1db_1_1base__primary__index_1a0f070b78ed522daa7ec43fbec6a4e775" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::db::base_primary_index::on_remove</definition>
        <argsstring>(const object &amp;obj)</argsstring>
        <name>on_remove</name>
        <param>
          <type>const <ref refid="classgraphene_1_1db_1_1object" kindref="compound">object</ref> &amp;</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>called just before obj is removed </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/db/include/graphene/db/index.hpp" line="166" column="1" bodyfile="libraries/db/index.cpp" bodystart="38" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1db_1_1base__primary__index_1a6c226e6c22c5e2d062414af5e556e28e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::db::base_primary_index::on_modify</definition>
        <argsstring>(const object &amp;obj)</argsstring>
        <name>on_modify</name>
        <param>
          <type>const <ref refid="classgraphene_1_1db_1_1object" kindref="compound">object</ref> &amp;</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>called just after obj is modified </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/db/include/graphene/db/index.hpp" line="169" column="1" bodyfile="libraries/db/index.cpp" bodystart="41" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1db_1_1base__primary__index_1a43f75cf66b6c6c70cb8da45f861ce853" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>T *</type>
        <definition>T* graphene::db::base_primary_index::add_secondary_index</definition>
        <argsstring>(Args... args)</argsstring>
        <name>add_secondary_index</name>
        <param>
          <type>Args...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/db/include/graphene/db/index.hpp" line="172" column="1" bodyfile="libraries/db/include/graphene/db/index.hpp" bodystart="172" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1db_1_1base__primary__index_1ab0ec9a110beadd67767cd7b783c69f8f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>const T &amp;</type>
        <definition>const T&amp; graphene::db::base_primary_index::get_secondary_index</definition>
        <argsstring>() const</argsstring>
        <name>get_secondary_index</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/db/include/graphene/db/index.hpp" line="179" column="1" bodyfile="libraries/db/include/graphene/db/index.hpp" bodystart="179" bodyend="187"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Defines the common implementation </para>    </detaileddescription>
    <inheritancegraph>
      <node id="1856">
        <label>graphene::db::base_primary_index</label>
        <link refid="classgraphene_1_1db_1_1base__primary__index"/>
      </node>
      <node id="1858">
        <label>graphene::db::primary_index&lt; graphene::db::generic_index &gt;</label>
        <link refid="classgraphene_1_1db_1_1primary__index"/>
        <childnode refid="1856" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1857">
        <label>graphene::db::primary_index&lt; DerivedIndex, DirectBits &gt;</label>
        <link refid="classgraphene_1_1db_1_1primary__index"/>
        <childnode refid="1856" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="libraries/db/include/graphene/db/index.hpp" line="153" column="1" bodyfile="libraries/db/include/graphene/db/index.hpp" bodystart="152" bodyend="195"/>
    <listofallmembers>
      <member refid="classgraphene_1_1db_1_1base__primary__index_1a60fd70d245dc46efa57d6242816e75eb" prot="private" virt="non-virtual"><scope>graphene::db::base_primary_index</scope><name>_db</name></member>
      <member refid="classgraphene_1_1db_1_1base__primary__index_1a0c3c723d9268e6f9fcaad7094beb1ce1" prot="protected" virt="non-virtual"><scope>graphene::db::base_primary_index</scope><name>_observers</name></member>
      <member refid="classgraphene_1_1db_1_1base__primary__index_1aa2795c19b379f6c6f412b6b3a4ac962d" prot="protected" virt="non-virtual"><scope>graphene::db::base_primary_index</scope><name>_sindex</name></member>
      <member refid="classgraphene_1_1db_1_1base__primary__index_1a43f75cf66b6c6c70cb8da45f861ce853" prot="public" virt="non-virtual"><scope>graphene::db::base_primary_index</scope><name>add_secondary_index</name></member>
      <member refid="classgraphene_1_1db_1_1base__primary__index_1aae4d25e40d3538e9a7d40054f9ed05e8" prot="public" virt="non-virtual"><scope>graphene::db::base_primary_index</scope><name>base_primary_index</name></member>
      <member refid="classgraphene_1_1db_1_1base__primary__index_1ab0ec9a110beadd67767cd7b783c69f8f" prot="public" virt="non-virtual"><scope>graphene::db::base_primary_index</scope><name>get_secondary_index</name></member>
      <member refid="classgraphene_1_1db_1_1base__primary__index_1a66192343c484ac5d4365a3b562bc99c2" prot="public" virt="non-virtual"><scope>graphene::db::base_primary_index</scope><name>on_add</name></member>
      <member refid="classgraphene_1_1db_1_1base__primary__index_1a6c226e6c22c5e2d062414af5e556e28e" prot="public" virt="non-virtual"><scope>graphene::db::base_primary_index</scope><name>on_modify</name></member>
      <member refid="classgraphene_1_1db_1_1base__primary__index_1a0f070b78ed522daa7ec43fbec6a4e775" prot="public" virt="non-virtual"><scope>graphene::db::base_primary_index</scope><name>on_remove</name></member>
      <member refid="classgraphene_1_1db_1_1base__primary__index_1aecddf87652998f5a4a156dce5d4aa1fa" prot="public" virt="non-virtual"><scope>graphene::db::base_primary_index</scope><name>save_undo</name></member>
      <member refid="classgraphene_1_1db_1_1base__primary__index_1ad76d89ffbbd1a67c3026824569795a76" prot="public" virt="virtual"><scope>graphene::db::base_primary_index</scope><name>~base_primary_index</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
