<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classgraphene_1_1protocol_1_1signed__block__header" kind="class" language="C++" prot="public">
    <compoundname>graphene::protocol::signed_block_header</compoundname>
    <basecompoundref refid="classgraphene_1_1protocol_1_1block__header" prot="public" virt="non-virtual">graphene::protocol::block_header</basecompoundref>
    <derivedcompoundref refid="classgraphene_1_1protocol_1_1signed__block" prot="public" virt="non-virtual">graphene::protocol::signed_block</derivedcompoundref>
    <includes refid="block_8hpp" local="no">block.hpp</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classgraphene_1_1protocol_1_1signed__block__header_1a461eb13434f1ae9999e58abbfb96cf7f" prot="public" static="no" mutable="no">
        <type><ref refid="namespacegraphene_1_1protocol_1ade0535fb9b29fcc7de372c0f1ff5d218" kindref="member">signature_type</ref></type>
        <definition>signature_type graphene::protocol::signed_block_header::witness_signature</definition>
        <argsstring></argsstring>
        <name>witness_signature</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/block.hpp" line="55" column="34" bodyfile="libraries/protocol/include/graphene/protocol/block.hpp" bodystart="55" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classgraphene_1_1protocol_1_1signed__block__header_1af71dc48a5299e3d680de65c71405d392" prot="protected" static="no" mutable="yes">
        <type><ref refid="classfc_1_1ecc_1_1public__key" kindref="compound">fc::ecc::public_key</ref></type>
        <definition>fc::ecc::public_key graphene::protocol::signed_block_header::_signee</definition>
        <argsstring></argsstring>
        <name>_signee</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/block.hpp" line="60" column="35" bodyfile="libraries/protocol/include/graphene/protocol/block.hpp" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgraphene_1_1protocol_1_1signed__block__header_1a086619b190e38f4b7196ff49f9ccec38" prot="protected" static="no" mutable="yes">
        <type><ref refid="namespacegraphene_1_1protocol_1a32e784a8edceba5506db2c130ed9cb9c" kindref="member">block_id_type</ref></type>
        <definition>block_id_type graphene::protocol::signed_block_header::_block_id</definition>
        <argsstring></argsstring>
        <name>_block_id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/block.hpp" line="61" column="35" bodyfile="libraries/protocol/include/graphene/protocol/block.hpp" bodystart="61" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classgraphene_1_1protocol_1_1signed__block__header_1a3297c7408578d7118566475f0429fb55" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="namespacegraphene_1_1protocol_1a32e784a8edceba5506db2c130ed9cb9c" kindref="member">block_id_type</ref> &amp;</type>
        <definition>const block_id_type &amp; graphene::protocol::signed_block_header::id</definition>
        <argsstring>() const</argsstring>
        <name>id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/block.hpp" line="50" column="33" bodyfile="libraries/protocol/block.cpp" bodystart="41" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1protocol_1_1signed__block__header_1a31ee9ccad7f057b4183ecfc79d0cb940" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classfc_1_1ecc_1_1public__key" kindref="compound">fc::ecc::public_key</ref> &amp;</type>
        <definition>const fc::ecc::public_key &amp; graphene::protocol::signed_block_header::signee</definition>
        <argsstring>() const</argsstring>
        <name>signee</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/block.hpp" line="51" column="33" bodyfile="libraries/protocol/block.cpp" bodystart="53" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1protocol_1_1signed__block__header_1a780474c239fa160bb4804f7a30736086" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void graphene::protocol::signed_block_header::sign</definition>
        <argsstring>(const fc::ecc::private_key &amp;signer)</argsstring>
        <name>sign</name>
        <param>
          <type>const <ref refid="classfc_1_1ecc_1_1private__key" kindref="compound">fc::ecc::private_key</ref> &amp;</type>
          <declname>signer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/block.hpp" line="52" column="34" bodyfile="libraries/protocol/block.cpp" bodystart="60" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1protocol_1_1signed__block__header_1ae3630f884f8269604be91c5fb0f6046e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool graphene::protocol::signed_block_header::validate_signee</definition>
        <argsstring>(const fc::ecc::public_key &amp;expected_signee) const</argsstring>
        <name>validate_signee</name>
        <param>
          <type>const <ref refid="classfc_1_1ecc_1_1public__key" kindref="compound">fc::ecc::public_key</ref> &amp;</type>
          <declname>expected_signee</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/block.hpp" line="53" column="34" bodyfile="libraries/protocol/block.cpp" bodystart="65" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1protocol_1_1signed__block__header_1a8d3e8d1e64ae8ad7c34a369396de8748" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>graphene::protocol::signed_block_header::signed_block_header</definition>
        <argsstring>()=default</argsstring>
        <name>signed_block_header</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/block.hpp" line="57" column="7"/>
      </memberdef>
      <memberdef kind="function" id="classgraphene_1_1protocol_1_1signed__block__header_1a1bdf3ee55eb5034096b9ccee26d23062" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>graphene::protocol::signed_block_header::signed_block_header</definition>
        <argsstring>(const block_header &amp;header)</argsstring>
        <name>signed_block_header</name>
        <param>
          <type>const <ref refid="classgraphene_1_1protocol_1_1block__header" kindref="compound">block_header</ref> &amp;</type>
          <declname>header</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/block.hpp" line="58" column="16" bodyfile="libraries/protocol/include/graphene/protocol/block.hpp" bodystart="58" bodyend="58"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>graphene::protocol::block_header</label>
        <link refid="classgraphene_1_1protocol_1_1block__header"/>
      </node>
      <node id="1">
        <label>graphene::protocol::signed_block_header</label>
        <link refid="classgraphene_1_1protocol_1_1signed__block__header"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>graphene::protocol::signed_block</label>
        <link refid="classgraphene_1_1protocol_1_1signed__block"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>fc::ripemd160</label>
        <link refid="classfc_1_1ripemd160"/>
      </node>
      <node id="2">
        <label>graphene::protocol::block_header</label>
        <link refid="classgraphene_1_1protocol_1_1block__header"/>
        <childnode refid="3" relation="usage">
          <edgelabel>previous</edgelabel>
          <edgelabel>transaction_merkle_root</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>timestamp</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>fc::ecc::public_key</label>
        <link refid="classfc_1_1ecc_1_1public__key"/>
      </node>
      <node id="1">
        <label>graphene::protocol::signed_block_header</label>
        <link refid="classgraphene_1_1protocol_1_1signed__block__header"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>_block_id</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>witness_signature</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>_signee</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>fc::time_point_sec</label>
        <link refid="classfc_1_1time__point__sec"/>
      </node>
      <node id="5">
        <label>fc::zero_initialized_array&lt; T, N &gt;</label>
        <link refid="classfc_1_1zero__initialized__array"/>
      </node>
    </collaborationgraph>
    <location file="libraries/protocol/include/graphene/protocol/block.hpp" line="48" column="1" bodyfile="libraries/protocol/include/graphene/protocol/block.hpp" bodystart="47" bodyend="62"/>
    <listofallmembers>
      <member refid="classgraphene_1_1protocol_1_1signed__block__header_1a086619b190e38f4b7196ff49f9ccec38" prot="protected" virt="non-virtual"><scope>graphene::protocol::signed_block_header</scope><name>_block_id</name></member>
      <member refid="classgraphene_1_1protocol_1_1signed__block__header_1af71dc48a5299e3d680de65c71405d392" prot="protected" virt="non-virtual"><scope>graphene::protocol::signed_block_header</scope><name>_signee</name></member>
      <member refid="classgraphene_1_1protocol_1_1block__header_1aeccef591a33b6e647839e6e524881e2b" prot="public" virt="non-virtual"><scope>graphene::protocol::signed_block_header</scope><name>block_num</name></member>
      <member refid="classgraphene_1_1protocol_1_1block__header_1abe76b6ad13a4207508595e03fac9332f" prot="public" virt="non-virtual"><scope>graphene::protocol::signed_block_header</scope><name>digest</name></member>
      <member refid="classgraphene_1_1protocol_1_1block__header_1a0ff96f81938e2b3d445b5823ec563779" prot="public" virt="non-virtual"><scope>graphene::protocol::signed_block_header</scope><name>extensions</name></member>
      <member refid="classgraphene_1_1protocol_1_1signed__block__header_1a3297c7408578d7118566475f0429fb55" prot="public" virt="non-virtual"><scope>graphene::protocol::signed_block_header</scope><name>id</name></member>
      <member refid="classgraphene_1_1protocol_1_1block__header_1a58d0846789ee12e31d3d769123244c62" prot="public" virt="non-virtual"><scope>graphene::protocol::signed_block_header</scope><name>num_from_id</name></member>
      <member refid="classgraphene_1_1protocol_1_1block__header_1a0dcf2b6f9c50755e3e3a8b94d13bbcaf" prot="public" virt="non-virtual"><scope>graphene::protocol::signed_block_header</scope><name>previous</name></member>
      <member refid="classgraphene_1_1protocol_1_1signed__block__header_1a780474c239fa160bb4804f7a30736086" prot="public" virt="non-virtual"><scope>graphene::protocol::signed_block_header</scope><name>sign</name></member>
      <member refid="classgraphene_1_1protocol_1_1signed__block__header_1a8d3e8d1e64ae8ad7c34a369396de8748" prot="public" virt="non-virtual"><scope>graphene::protocol::signed_block_header</scope><name>signed_block_header</name></member>
      <member refid="classgraphene_1_1protocol_1_1signed__block__header_1a1bdf3ee55eb5034096b9ccee26d23062" prot="public" virt="non-virtual"><scope>graphene::protocol::signed_block_header</scope><name>signed_block_header</name></member>
      <member refid="classgraphene_1_1protocol_1_1signed__block__header_1a31ee9ccad7f057b4183ecfc79d0cb940" prot="public" virt="non-virtual"><scope>graphene::protocol::signed_block_header</scope><name>signee</name></member>
      <member refid="classgraphene_1_1protocol_1_1block__header_1af594b3fcdeae33103b6802b744174714" prot="public" virt="non-virtual"><scope>graphene::protocol::signed_block_header</scope><name>timestamp</name></member>
      <member refid="classgraphene_1_1protocol_1_1block__header_1aac22ca362585bd4c8ef7d206b19be229" prot="public" virt="non-virtual"><scope>graphene::protocol::signed_block_header</scope><name>transaction_merkle_root</name></member>
      <member refid="classgraphene_1_1protocol_1_1signed__block__header_1ae3630f884f8269604be91c5fb0f6046e" prot="public" virt="non-virtual"><scope>graphene::protocol::signed_block_header</scope><name>validate_signee</name></member>
      <member refid="classgraphene_1_1protocol_1_1block__header_1a1086bc96de1ee0d95cedaacf3f475cd5" prot="public" virt="non-virtual"><scope>graphene::protocol::signed_block_header</scope><name>witness</name></member>
      <member refid="classgraphene_1_1protocol_1_1signed__block__header_1a461eb13434f1ae9999e58abbfb96cf7f" prot="public" virt="non-virtual"><scope>graphene::protocol::signed_block_header</scope><name>witness_signature</name></member>
      <member refid="classgraphene_1_1protocol_1_1block__header_1a434c734b33ebc82e15c340e998a05336" prot="public" virt="virtual"><scope>graphene::protocol::signed_block_header</scope><name>~block_header</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
