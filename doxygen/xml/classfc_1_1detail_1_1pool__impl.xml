<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classfc_1_1detail_1_1pool__impl" kind="class" language="C++" prot="public">
    <compoundname>fc::detail::pool_impl</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classfc_1_1detail_1_1pool__impl_1a9b94329e5f56f716319d617015bc5d30" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classfc_1_1detail_1_1idle__notifier__impl" kindref="compound">idle_notifier_impl</ref> &gt;</type>
        <definition>std::vector&lt;idle_notifier_impl&gt; fc::detail::pool_impl::notifiers</definition>
        <argsstring></argsstring>
        <name>notifiers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/src/thread/parallel.cpp" line="119" column="1" bodyfile="libraries/fc/src/thread/parallel.cpp" bodystart="119" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classfc_1_1detail_1_1pool__impl_1a5492d6568ec6283781b49714d65491cf" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classfc_1_1thread" kindref="compound">thread</ref> * &gt;</type>
        <definition>std::vector&lt;thread*&gt; fc::detail::pool_impl::threads</definition>
        <argsstring></argsstring>
        <name>threads</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/src/thread/parallel.cpp" line="120" column="1" bodyfile="libraries/fc/src/thread/parallel.cpp" bodystart="120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classfc_1_1detail_1_1pool__impl_1ab2d6d9c05ad13d03cb75f9351c8b9081" prot="private" static="no" mutable="no">
        <type>boost::lockfree::queue&lt; <ref refid="classfc_1_1detail_1_1idle__notifier__impl" kindref="compound">idle_notifier_impl</ref> * &gt;</type>
        <definition>boost::lockfree::queue&lt;idle_notifier_impl*&gt; fc::detail::pool_impl::idle_threads</definition>
        <argsstring></argsstring>
        <name>idle_threads</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/src/thread/parallel.cpp" line="121" column="1" bodyfile="libraries/fc/src/thread/parallel.cpp" bodystart="121" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classfc_1_1detail_1_1pool__impl_1affa6fc1d648ec48a1652d73b95274265" prot="private" static="no" mutable="no">
        <type>boost::lockfree::queue&lt; <ref refid="classfc_1_1task__base" kindref="compound">task_base</ref> * &gt;</type>
        <definition>boost::lockfree::queue&lt;task_base*&gt; fc::detail::pool_impl::waiting_tasks</definition>
        <argsstring></argsstring>
        <name>waiting_tasks</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/src/thread/parallel.cpp" line="122" column="1" bodyfile="libraries/fc/src/thread/parallel.cpp" bodystart="122" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classfc_1_1detail_1_1pool__impl_1a7558aa56936bfec117b761219dad236c" prot="private" static="no" mutable="no">
        <type><ref refid="classfc_1_1spin__yield__lock" kindref="compound">fc::spin_yield_lock</ref></type>
        <definition>fc::spin_yield_lock fc::detail::pool_impl::pool_lock</definition>
        <argsstring></argsstring>
        <name>pool_lock</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/src/thread/parallel.cpp" line="123" column="1" bodyfile="libraries/fc/src/thread/parallel.cpp" bodystart="123" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classfc_1_1detail_1_1pool__impl_1a405c866a7ef3dcc0e5e4d6c61c1cfeba" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>fc::detail::pool_impl::pool_impl</definition>
        <argsstring>(const uint16_t num_threads)</argsstring>
        <name>pool_impl</name>
        <param>
          <type>const uint16_t</type>
          <declname>num_threads</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/src/thread/parallel.cpp" line="66" column="1" bodyfile="libraries/fc/src/thread/parallel.cpp" bodystart="66" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1detail_1_1pool__impl_1a15ac33c6bd9adfc1f0d8a7d86075c9c2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>fc::detail::pool_impl::~pool_impl</definition>
        <argsstring>()</argsstring>
        <name>~pool_impl</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/src/thread/parallel.cpp" line="78" column="1" bodyfile="libraries/fc/src/thread/parallel.cpp" bodystart="78" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1detail_1_1pool__impl_1a460d0cd777bea75996c182145d054db0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classfc_1_1thread" kindref="compound">thread</ref> *</type>
        <definition>thread* fc::detail::pool_impl::post</definition>
        <argsstring>(task_base *task)</argsstring>
        <name>post</name>
        <param>
          <type><ref refid="classfc_1_1task__base" kindref="compound">task_base</ref> *</type>
          <declname>task</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/src/thread/parallel.cpp" line="87" column="1" bodyfile="libraries/fc/src/thread/parallel.cpp" bodystart="87" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1detail_1_1pool__impl_1a0cb052e0320cc670cbee48f07c6a373a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classfc_1_1task__base" kindref="compound">task_base</ref> *</type>
        <definition>task_base* fc::detail::pool_impl::enqueue_idle_thread</definition>
        <argsstring>(idle_notifier_impl *ini)</argsstring>
        <name>enqueue_idle_thread</name>
        <param>
          <type><ref refid="classfc_1_1detail_1_1idle__notifier__impl" kindref="compound">idle_notifier_impl</ref> *</type>
          <declname>ini</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/src/thread/parallel.cpp" line="106" column="1" bodyfile="libraries/fc/src/thread/parallel.cpp" bodystart="106" bodyend="117"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="libraries/fc/src/thread/parallel.cpp" line="64" column="1" bodyfile="libraries/fc/src/thread/parallel.cpp" bodystart="63" bodyend="124"/>
    <listofallmembers>
      <member refid="classfc_1_1detail_1_1pool__impl_1a0cb052e0320cc670cbee48f07c6a373a" prot="public" virt="non-virtual"><scope>fc::detail::pool_impl</scope><name>enqueue_idle_thread</name></member>
      <member refid="classfc_1_1detail_1_1pool__impl_1ab2d6d9c05ad13d03cb75f9351c8b9081" prot="private" virt="non-virtual"><scope>fc::detail::pool_impl</scope><name>idle_threads</name></member>
      <member refid="classfc_1_1detail_1_1pool__impl_1a9b94329e5f56f716319d617015bc5d30" prot="private" virt="non-virtual"><scope>fc::detail::pool_impl</scope><name>notifiers</name></member>
      <member refid="classfc_1_1detail_1_1pool__impl_1a405c866a7ef3dcc0e5e4d6c61c1cfeba" prot="public" virt="non-virtual"><scope>fc::detail::pool_impl</scope><name>pool_impl</name></member>
      <member refid="classfc_1_1detail_1_1pool__impl_1a7558aa56936bfec117b761219dad236c" prot="private" virt="non-virtual"><scope>fc::detail::pool_impl</scope><name>pool_lock</name></member>
      <member refid="classfc_1_1detail_1_1pool__impl_1a460d0cd777bea75996c182145d054db0" prot="public" virt="non-virtual"><scope>fc::detail::pool_impl</scope><name>post</name></member>
      <member refid="classfc_1_1detail_1_1pool__impl_1a5492d6568ec6283781b49714d65491cf" prot="private" virt="non-virtual"><scope>fc::detail::pool_impl</scope><name>threads</name></member>
      <member refid="classfc_1_1detail_1_1pool__impl_1affa6fc1d648ec48a1652d73b95274265" prot="private" virt="non-virtual"><scope>fc::detail::pool_impl</scope><name>waiting_tasks</name></member>
      <member refid="classfc_1_1detail_1_1pool__impl_1a15ac33c6bd9adfc1f0d8a7d86075c9c2" prot="public" virt="non-virtual"><scope>fc::detail::pool_impl</scope><name>~pool_impl</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
