<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="group__operations" kind="group">
    <compoundname>operations</compoundname>
    <title>Operations</title>
    <innerclass refid="structgraphene_1_1protocol_1_1account__create__operation" prot="public">graphene::protocol::account_create_operation</innerclass>
    <innerclass refid="structgraphene_1_1protocol_1_1account__update__operation" prot="public">graphene::protocol::account_update_operation</innerclass>
    <innerclass refid="structgraphene_1_1protocol_1_1account__whitelist__operation" prot="public">graphene::protocol::account_whitelist_operation</innerclass>
    <innerclass refid="structgraphene_1_1protocol_1_1account__upgrade__operation" prot="public">graphene::protocol::account_upgrade_operation</innerclass>
    <innerclass refid="structgraphene_1_1protocol_1_1account__transfer__operation" prot="public">graphene::protocol::account_transfer_operation</innerclass>
    <innerclass refid="structgraphene_1_1protocol_1_1assert__operation" prot="public">graphene::protocol::assert_operation</innerclass>
    <innerclass refid="structgraphene_1_1protocol_1_1asset__create__operation" prot="public">graphene::protocol::asset_create_operation</innerclass>
    <innerclass refid="structgraphene_1_1protocol_1_1asset__settle__operation" prot="public">graphene::protocol::asset_settle_operation</innerclass>
    <innerclass refid="structgraphene_1_1protocol_1_1asset__fund__fee__pool__operation" prot="public">graphene::protocol::asset_fund_fee_pool_operation</innerclass>
    <innerclass refid="structgraphene_1_1protocol_1_1asset__update__operation" prot="public">graphene::protocol::asset_update_operation</innerclass>
    <innerclass refid="structgraphene_1_1protocol_1_1asset__update__bitasset__operation" prot="public">graphene::protocol::asset_update_bitasset_operation</innerclass>
    <innerclass refid="structgraphene_1_1protocol_1_1asset__update__feed__producers__operation" prot="public">graphene::protocol::asset_update_feed_producers_operation</innerclass>
    <innerclass refid="structgraphene_1_1protocol_1_1asset__publish__feed__operation" prot="public">graphene::protocol::asset_publish_feed_operation</innerclass>
    <innerclass refid="structgraphene_1_1protocol_1_1asset__issue__operation" prot="public">graphene::protocol::asset_issue_operation</innerclass>
    <innerclass refid="structgraphene_1_1protocol_1_1asset__reserve__operation" prot="public">graphene::protocol::asset_reserve_operation</innerclass>
    <innerclass refid="structgraphene_1_1protocol_1_1asset__update__issuer__operation" prot="public">graphene::protocol::asset_update_issuer_operation</innerclass>
    <innerclass refid="structgraphene_1_1protocol_1_1void__result" prot="public">graphene::protocol::void_result</innerclass>
    <innerclass refid="structgraphene_1_1protocol_1_1generic__operation__result" prot="public">graphene::protocol::generic_operation_result</innerclass>
    <innerclass refid="structgraphene_1_1protocol_1_1generic__exchange__operation__result" prot="public">graphene::protocol::generic_exchange_operation_result</innerclass>
    <innerclass refid="structgraphene_1_1protocol_1_1extendable__operation__result__dtl" prot="public">graphene::protocol::extendable_operation_result_dtl</innerclass>
    <innerclass refid="structgraphene_1_1protocol_1_1base__operation" prot="public">graphene::protocol::base_operation</innerclass>
    <innerclass refid="structgraphene_1_1protocol_1_1committee__member__create__operation" prot="public">graphene::protocol::committee_member_create_operation</innerclass>
    <innerclass refid="structgraphene_1_1protocol_1_1committee__member__update__operation" prot="public">graphene::protocol::committee_member_update_operation</innerclass>
    <innerclass refid="structgraphene_1_1protocol_1_1committee__member__update__global__parameters__operation" prot="public">graphene::protocol::committee_member_update_global_parameters_operation</innerclass>
    <innerclass refid="structgraphene_1_1protocol_1_1credit__offer__create__operation" prot="public">graphene::protocol::credit_offer_create_operation</innerclass>
    <innerclass refid="structgraphene_1_1protocol_1_1credit__offer__delete__operation" prot="public">graphene::protocol::credit_offer_delete_operation</innerclass>
    <innerclass refid="structgraphene_1_1protocol_1_1credit__offer__update__operation" prot="public">graphene::protocol::credit_offer_update_operation</innerclass>
    <innerclass refid="structgraphene_1_1protocol_1_1credit__offer__accept__operation" prot="public">graphene::protocol::credit_offer_accept_operation</innerclass>
    <innerclass refid="structgraphene_1_1protocol_1_1credit__deal__repay__operation" prot="public">graphene::protocol::credit_deal_repay_operation</innerclass>
    <innerclass refid="structgraphene_1_1protocol_1_1credit__deal__expired__operation" prot="public">graphene::protocol::credit_deal_expired_operation</innerclass>
    <innerclass refid="structgraphene_1_1protocol_1_1custom__operation" prot="public">graphene::protocol::custom_operation</innerclass>
    <innerclass refid="structgraphene_1_1protocol_1_1custom__authority__create__operation" prot="public">graphene::protocol::custom_authority_create_operation</innerclass>
    <innerclass refid="structgraphene_1_1protocol_1_1custom__authority__update__operation" prot="public">graphene::protocol::custom_authority_update_operation</innerclass>
    <innerclass refid="structgraphene_1_1protocol_1_1custom__authority__delete__operation" prot="public">graphene::protocol::custom_authority_delete_operation</innerclass>
    <innerclass refid="structgraphene_1_1protocol_1_1liquidity__pool__create__operation" prot="public">graphene::protocol::liquidity_pool_create_operation</innerclass>
    <innerclass refid="structgraphene_1_1protocol_1_1liquidity__pool__delete__operation" prot="public">graphene::protocol::liquidity_pool_delete_operation</innerclass>
    <innerclass refid="structgraphene_1_1protocol_1_1liquidity__pool__deposit__operation" prot="public">graphene::protocol::liquidity_pool_deposit_operation</innerclass>
    <innerclass refid="structgraphene_1_1protocol_1_1liquidity__pool__withdraw__operation" prot="public">graphene::protocol::liquidity_pool_withdraw_operation</innerclass>
    <innerclass refid="structgraphene_1_1protocol_1_1liquidity__pool__exchange__operation" prot="public">graphene::protocol::liquidity_pool_exchange_operation</innerclass>
    <innerclass refid="structgraphene_1_1protocol_1_1limit__order__cancel__operation" prot="public">graphene::protocol::limit_order_cancel_operation</innerclass>
    <innerclass refid="structgraphene_1_1protocol_1_1call__order__update__operation" prot="public">graphene::protocol::call_order_update_operation</innerclass>
    <innerclass refid="structgraphene_1_1protocol_1_1fill__order__operation" prot="public">graphene::protocol::fill_order_operation</innerclass>
    <innerclass refid="structgraphene_1_1protocol_1_1bid__collateral__operation" prot="public">graphene::protocol::bid_collateral_operation</innerclass>
    <innerclass refid="structgraphene_1_1protocol_1_1execute__bid__operation" prot="public">graphene::protocol::execute_bid_operation</innerclass>
    <innerclass refid="structgraphene_1_1protocol_1_1proposal__create__operation" prot="public">graphene::protocol::proposal_create_operation</innerclass>
    <innerclass refid="structgraphene_1_1protocol_1_1proposal__update__operation" prot="public">graphene::protocol::proposal_update_operation</innerclass>
    <innerclass refid="structgraphene_1_1protocol_1_1proposal__delete__operation" prot="public">graphene::protocol::proposal_delete_operation</innerclass>
    <innerclass refid="structgraphene_1_1protocol_1_1samet__fund__create__operation" prot="public">graphene::protocol::samet_fund_create_operation</innerclass>
    <innerclass refid="structgraphene_1_1protocol_1_1samet__fund__delete__operation" prot="public">graphene::protocol::samet_fund_delete_operation</innerclass>
    <innerclass refid="structgraphene_1_1protocol_1_1samet__fund__update__operation" prot="public">graphene::protocol::samet_fund_update_operation</innerclass>
    <innerclass refid="structgraphene_1_1protocol_1_1samet__fund__borrow__operation" prot="public">graphene::protocol::samet_fund_borrow_operation</innerclass>
    <innerclass refid="structgraphene_1_1protocol_1_1samet__fund__repay__operation" prot="public">graphene::protocol::samet_fund_repay_operation</innerclass>
    <innerclass refid="structgraphene_1_1protocol_1_1ticket__create__operation" prot="public">graphene::protocol::ticket_create_operation</innerclass>
    <innerclass refid="structgraphene_1_1protocol_1_1ticket__update__operation" prot="public">graphene::protocol::ticket_update_operation</innerclass>
    <innerclass refid="structgraphene_1_1protocol_1_1transfer__operation" prot="public">graphene::protocol::transfer_operation</innerclass>
    <innerclass refid="structgraphene_1_1protocol_1_1vesting__balance__create__operation" prot="public">graphene::protocol::vesting_balance_create_operation</innerclass>
    <innerclass refid="structgraphene_1_1protocol_1_1vesting__balance__withdraw__operation" prot="public">graphene::protocol::vesting_balance_withdraw_operation</innerclass>
    <innerclass refid="structgraphene_1_1protocol_1_1withdraw__permission__create__operation" prot="public">graphene::protocol::withdraw_permission_create_operation</innerclass>
    <innerclass refid="structgraphene_1_1protocol_1_1withdraw__permission__update__operation" prot="public">graphene::protocol::withdraw_permission_update_operation</innerclass>
    <innerclass refid="structgraphene_1_1protocol_1_1withdraw__permission__claim__operation" prot="public">graphene::protocol::withdraw_permission_claim_operation</innerclass>
    <innerclass refid="structgraphene_1_1protocol_1_1withdraw__permission__delete__operation" prot="public">graphene::protocol::withdraw_permission_delete_operation</innerclass>
    <innerclass refid="structgraphene_1_1protocol_1_1witness__create__operation" prot="public">graphene::protocol::witness_create_operation</innerclass>
    <innerclass refid="structgraphene_1_1protocol_1_1witness__update__operation" prot="public">graphene::protocol::witness_update_operation</innerclass>
    <innerclass refid="structgraphene_1_1protocol_1_1worker__create__operation" prot="public">graphene::protocol::worker_create_operation</innerclass>
    <innerclass refid="structgraphene_1_1protocol_1_1limit__order__create__operation" prot="public">graphene::protocol::limit_order_create_operation</innerclass>
    <innerclass refid="structgraphene_1_1protocol_1_1override__transfer__operation" prot="public">graphene::protocol::override_transfer_operation</innerclass>
    <innergroup refid="group__proposed__transactions">The BitShares Transaction Proposal Protocol</innergroup>
    <innergroup refid="group__workers">The Blockchain Worker System</innergroup>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__operations_1ga8d0cc3fd7fdc83761fcf4420cc828631" prot="public" static="no">
        <type>extension&lt; extendable_operation_result_dtl &gt;</type>
        <definition>using graphene::protocol::extendable_operation_result = typedef extension&lt;extendable_operation_result_dtl&gt;</definition>
        <argsstring></argsstring>
        <name>extendable_operation_result</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/base.hpp" line="113" column="1" bodyfile="libraries/protocol/include/graphene/protocol/base.hpp" bodystart="113" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__operations_1gaa71296d574534eaf5315415023d64eeb" prot="public" static="no">
        <type><ref refid="classfc_1_1static__variant" kindref="compound">fc::static_variant</ref>&lt; void_result, object_id_type, asset, generic_operation_result, generic_exchange_operation_result, extendable_operation_result &gt;</type>
        <definition>using graphene::protocol::operation_result = typedef fc::static_variant &lt; void_result, object_id_type, asset, generic_operation_result, generic_exchange_operation_result, extendable_operation_result &gt;</definition>
        <argsstring></argsstring>
        <name>operation_result</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/base.hpp" line="115" column="1" bodyfile="libraries/protocol/include/graphene/protocol/base.hpp" bodystart="122" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__operations_1gadd193c7a45f34f889d78acfcdd4d7b2e" prot="public" static="no">
        <type>static_variant&lt; void_t &gt;</type>
        <definition>using graphene::protocol::future_extensions = typedef static_variant&lt;void_t&gt;</definition>
        <argsstring></argsstring>
        <name>future_extensions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>For future expansion many structus include a single member of type extensions_type that can be changed when updating a protocol. You can always add new types to a static_variant without breaking backward compatibility. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/base.hpp" line="147" column="1" bodyfile="libraries/protocol/include/graphene/protocol/base.hpp" bodystart="147" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__operations_1gabaddcaf5bde76414891b4c29031d9288" prot="public" static="no">
        <type>future_extensions::flat_set_type</type>
        <definition>using graphene::protocol::extensions_type = typedef future_extensions::flat_set_type</definition>
        <argsstring></argsstring>
        <name>extensions_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A flat_set is used to make sure that only one extension of each type is added and that they are added in order.</para><para><simplesect kind="note"><para>static_variant compares only the type tag and not the content. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/base.hpp" line="156" column="1" bodyfile="libraries/protocol/include/graphene/protocol/base.hpp" bodystart="156" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__operations_1ga9aa13b4d89e9b8b56d1074b715de6568" prot="public" static="no">
        <type><ref refid="classfc_1_1static__variant" kindref="compound">fc::static_variant</ref>&lt; transfer_operation, limit_order_create_operation, limit_order_cancel_operation, call_order_update_operation, fill_order_operation, account_create_operation, account_update_operation, account_whitelist_operation, account_upgrade_operation, account_transfer_operation, asset_create_operation, asset_update_operation, asset_update_bitasset_operation, asset_update_feed_producers_operation, asset_issue_operation, asset_reserve_operation, asset_fund_fee_pool_operation, asset_settle_operation, asset_global_settle_operation, asset_publish_feed_operation, witness_create_operation, witness_update_operation, proposal_create_operation, proposal_update_operation, proposal_delete_operation, withdraw_permission_create_operation, withdraw_permission_update_operation, withdraw_permission_claim_operation, withdraw_permission_delete_operation, committee_member_create_operation, committee_member_update_operation, committee_member_update_global_parameters_operation, vesting_balance_create_operation, vesting_balance_withdraw_operation, worker_create_operation, custom_operation, assert_operation, balance_claim_operation, override_transfer_operation, transfer_to_blind_operation, blind_transfer_operation, transfer_from_blind_operation, asset_settle_cancel_operation, asset_claim_fees_operation, fba_distribute_operation, bid_collateral_operation, execute_bid_operation, asset_claim_pool_operation, asset_update_issuer_operation, htlc_create_operation, htlc_redeem_operation, htlc_redeemed_operation, htlc_extend_operation, htlc_refund_operation, custom_authority_create_operation, custom_authority_update_operation, custom_authority_delete_operation, ticket_create_operation, ticket_update_operation, liquidity_pool_create_operation, liquidity_pool_delete_operation, liquidity_pool_deposit_operation, liquidity_pool_withdraw_operation, liquidity_pool_exchange_operation, samet_fund_create_operation, samet_fund_delete_operation, samet_fund_update_operation, samet_fund_borrow_operation, samet_fund_repay_operation, credit_offer_create_operation, credit_offer_delete_operation, credit_offer_update_operation, credit_offer_accept_operation, credit_deal_repay_operation, credit_deal_expired_operation &gt;</type>
        <definition>using graphene::protocol::operation = typedef fc::static_variant&lt; transfer_operation, limit_order_create_operation, limit_order_cancel_operation, call_order_update_operation, fill_order_operation, account_create_operation, account_update_operation, account_whitelist_operation, account_upgrade_operation, account_transfer_operation, asset_create_operation, asset_update_operation, asset_update_bitasset_operation, asset_update_feed_producers_operation, asset_issue_operation, asset_reserve_operation, asset_fund_fee_pool_operation, asset_settle_operation, asset_global_settle_operation, asset_publish_feed_operation, witness_create_operation, witness_update_operation, proposal_create_operation, proposal_update_operation, proposal_delete_operation, withdraw_permission_create_operation, withdraw_permission_update_operation, withdraw_permission_claim_operation, withdraw_permission_delete_operation, committee_member_create_operation, committee_member_update_operation, committee_member_update_global_parameters_operation, vesting_balance_create_operation, vesting_balance_withdraw_operation, worker_create_operation, custom_operation, assert_operation, balance_claim_operation, override_transfer_operation, transfer_to_blind_operation, blind_transfer_operation, transfer_from_blind_operation, asset_settle_cancel_operation, asset_claim_fees_operation, fba_distribute_operation, bid_collateral_operation, execute_bid_operation, asset_claim_pool_operation, asset_update_issuer_operation, htlc_create_operation, htlc_redeem_operation, htlc_redeemed_operation, htlc_extend_operation, htlc_refund_operation, custom_authority_create_operation, custom_authority_update_operation, custom_authority_delete_operation, ticket_create_operation, ticket_update_operation, liquidity_pool_create_operation, liquidity_pool_delete_operation, liquidity_pool_deposit_operation, liquidity_pool_withdraw_operation, liquidity_pool_exchange_operation, samet_fund_create_operation, samet_fund_delete_operation, samet_fund_update_operation, samet_fund_borrow_operation, samet_fund_repay_operation, credit_offer_create_operation, credit_offer_delete_operation, credit_offer_update_operation, credit_offer_accept_operation, credit_deal_repay_operation, credit_deal_expired_operation &gt;</definition>
        <argsstring></argsstring>
        <name>operation</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Defines the set of valid operations as a discriminated union type. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/protocol/include/graphene/protocol/operations.hpp" line="55" column="1" bodyfile="libraries/protocol/include/graphene/protocol/operations.hpp" bodystart="131" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A set of valid comands for mutating the globally shared state. </para>    </briefdescription>
    <detaileddescription>
<para>An operation can be thought of like a function that will modify the global shared state of the blockchain. The members of each struct are like function arguments and each operation can potentially generate a return value.</para><para>Operations can be grouped into transactions (<ref refid="classgraphene_1_1protocol_1_1transaction" kindref="compound">transaction</ref>) to ensure that they occur in a particular order and that all operations apply successfully or no operations apply.</para><para>Each operation is a fully defined state transition and can exist in a transaction on its own.</para><sect1 id="group__operations_1operation_design_principles">
<title>Design Principles</title>
<para>Operations have been carefully designed to include all of the information necessary to interpret them outside the context of the blockchain. This means that information about current chain state is included in the operation even though it could be inferred from a subset of the data. This makes the expected outcome of each operation well defined and easily understood without access to chain state.</para><sect2 id="group__operations_1balance_calculation">
<title>Balance Calculation Principle</title>
<para>We have stipulated that the current account balance may be entirely calculated from just the subset of operations that are relevant to that account. There should be no need to process the entire blockchain inorder to know your account&apos;s balance.</para></sect2>
<sect2 id="group__operations_1fee_calculation">
<title>Explicit Fee Principle</title>
<para>Blockchain fees can change from time to time and it is important that a signed transaction explicitly agree to the fees it will be paying. This aids with account balance updates and ensures that the sender agreed to the fee prior to making the transaction.</para></sect2>
<sect2 id="group__operations_1defined_authority">
<title>Explicit Authority</title>
<para>Each operation shall contain enough information to know which accounts must authorize the operation. This principle enables authority verification to occur in a centralized, optimized, and parallel manner.</para></sect2>
<sect2 id="group__operations_1relevancy_principle">
<title>Explicit Relevant Accounts</title>
<para>Each operation contains enough information to enumerate all accounts for which the operation should apear in its account history. This principle enables us to easily define and enforce the <ref refid="group__operations_1balance_calculation" kindref="member">Balance Calculation Principle</ref>. This is superset of the <ref refid="group__operations_1defined_authority" kindref="member">Explicit Authority</ref> </para></sect2>
</sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
