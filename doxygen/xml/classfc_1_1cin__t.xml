<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classfc_1_1cin__t" kind="class" language="C++" prot="public">
    <compoundname>fc::cin_t</compoundname>
    <basecompoundref refid="classfc_1_1istream" prot="public" virt="virtual">fc::istream</basecompoundref>
    <includes refid="stdio_8hpp" local="no">stdio.hpp</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classfc_1_1cin__t_1aaf993f8e80a26c4dccfd8d2618d7de0a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fc::cin_t::~cin_t</definition>
        <argsstring>()</argsstring>
        <name>~cin_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/stdio.hpp" line="25" column="7" bodyfile="libraries/fc/src/io/iostream.cpp" bodystart="128" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1cin__t_1a78507d015aaa3a3cb8477ef2a9fc39fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>size_t</type>
        <definition>size_t fc::cin_t::readsome</definition>
        <argsstring>(char *buf, size_t len)</argsstring>
        <name>readsome</name>
        <reimplements refid="classfc_1_1istream_1a2d8500cfafdd8ee8134a6dbe30ffbc57">readsome</reimplements>
        <param>
          <type>char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>read at least 1 byte or throw, if no data is available this method should block cooperatively until data is available or fc::eof is thrown.</para>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>fc::eof</parametername>
</parameternamelist>
<parameterdescription>
<para>if at least 1 byte cannot be read </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/stdio.hpp" line="26" column="22" bodyfile="libraries/fc/src/io/iostream.cpp" bodystart="103" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1cin__t_1a39b0060d62667065d5f72e1e693c35d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>size_t</type>
        <definition>size_t fc::cin_t::readsome</definition>
        <argsstring>(const std::shared_ptr&lt; char &gt; &amp;buf, size_t len, size_t offset)</argsstring>
        <name>readsome</name>
        <reimplements refid="classfc_1_1istream_1a1480e604a53bd3f92f44c217a472fed0">readsome</reimplements>
        <param>
          <type>const std::shared_ptr&lt; char &gt; &amp;</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/stdio.hpp" line="27" column="22" bodyfile="libraries/fc/src/io/iostream.cpp" bodystart="126" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1cin__t_1ae49136afe0d34e381aa25efe6e6f2f7d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classfc_1_1istream" kindref="compound">istream</ref> &amp;</type>
        <definition>istream &amp; fc::cin_t::read</definition>
        <argsstring>(char *buf, size_t len)</argsstring>
        <name>read</name>
        <param>
          <type>char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/stdio.hpp" line="28" column="23" bodyfile="libraries/fc/src/io/iostream.cpp" bodystart="136" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1cin__t_1a961071c34713e3d97461117f148e82db" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool fc::cin_t::eof</definition>
        <argsstring>() const</argsstring>
        <name>eof</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/io/stdio.hpp" line="29" column="20" bodyfile="libraries/fc/src/io/iostream.cpp" bodystart="169" bodyend="169"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>fc::cin_t</label>
        <link refid="classfc_1_1cin__t"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>fc::istream</label>
        <link refid="classfc_1_1istream"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>fc::cin_t</label>
        <link refid="classfc_1_1cin__t"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>fc::istream</label>
        <link refid="classfc_1_1istream"/>
      </node>
    </collaborationgraph>
    <location file="libraries/fc/include/fc/io/stdio.hpp" line="23" column="37" bodyfile="libraries/fc/include/fc/io/stdio.hpp" bodystart="23" bodyend="30"/>
    <listofallmembers>
      <member refid="classfc_1_1cin__t_1a961071c34713e3d97461117f148e82db" prot="public" virt="virtual"><scope>fc::cin_t</scope><name>eof</name></member>
      <member refid="classfc_1_1istream_1ac217a213d8fe2554eaba25b7daf6c9b2" prot="public" virt="virtual"><scope>fc::cin_t</scope><name>get</name></member>
      <member refid="classfc_1_1istream_1af20469d279f38832b5a2e13c95185e95" prot="public" virt="non-virtual"><scope>fc::cin_t</scope><name>get</name></member>
      <member refid="classfc_1_1cin__t_1ae49136afe0d34e381aa25efe6e6f2f7d" prot="public" virt="virtual"><scope>fc::cin_t</scope><name>read</name></member>
      <member refid="classfc_1_1istream_1a94e767f126e952db54be791ee0cc6d1e" prot="public" virt="non-virtual" ambiguityscope="fc::istream::"><scope>fc::cin_t</scope><name>read</name></member>
      <member refid="classfc_1_1cin__t_1a78507d015aaa3a3cb8477ef2a9fc39fd" prot="public" virt="virtual"><scope>fc::cin_t</scope><name>readsome</name></member>
      <member refid="classfc_1_1cin__t_1a39b0060d62667065d5f72e1e693c35d5" prot="public" virt="virtual"><scope>fc::cin_t</scope><name>readsome</name></member>
      <member refid="classfc_1_1cin__t_1aaf993f8e80a26c4dccfd8d2618d7de0a" prot="public" virt="non-virtual"><scope>fc::cin_t</scope><name>~cin_t</name></member>
      <member refid="classfc_1_1istream_1a3d6f017f2fbcead4c7213618b5a21d36" prot="public" virt="virtual"><scope>fc::cin_t</scope><name>~istream</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
