<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classfc_1_1generic__api" kind="class" language="C++" prot="public">
    <compoundname>fc::generic_api</compoundname>
    <includes refid="api__connection_8hpp" local="no">api_connection.hpp</includes>
    <innerclass refid="structfc_1_1generic__api_1_1api__visitor" prot="private">fc::generic_api::api_visitor</innerclass>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classfc_1_1generic__api_1aee07a455e00ba058e6dcd0da3779cb61" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend struct</type>
        <definition>friend struct api_visitor</definition>
        <argsstring></argsstring>
        <name>api_visitor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/rpc/api_connection.hpp" line="148" column="1" bodyfile="libraries/fc/include/fc/rpc/api_connection.hpp" bodystart="148" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classfc_1_1generic__api_1ae4e359f279b43ac6d8e4e8a630253a13" prot="private" static="no" mutable="no">
        <type>std::weak_ptr&lt; <ref refid="classfc_1_1api__connection" kindref="compound">fc::api_connection</ref> &gt;</type>
        <definition>std::weak_ptr&lt;fc::api_connection&gt; fc::generic_api::_api_connection</definition>
        <argsstring></argsstring>
        <name>_api_connection</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/rpc/api_connection.hpp" line="232" column="1" bodyfile="libraries/fc/include/fc/rpc/api_connection.hpp" bodystart="232" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classfc_1_1generic__api_1ac531c972e0f0fc65fbc20ce2ad2a7dd8" prot="private" static="no" mutable="no">
        <type>boost::any</type>
        <definition>boost::any fc::generic_api::_api</definition>
        <argsstring></argsstring>
        <name>_api</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/rpc/api_connection.hpp" line="233" column="1" bodyfile="libraries/fc/include/fc/rpc/api_connection.hpp" bodystart="233" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classfc_1_1generic__api_1a3c35adf9c3d701b13fa6c9231fa1a9c2" prot="private" static="no" mutable="no">
        <type>std::map&lt; std::string, uint32_t &gt;</type>
        <definition>std::map&lt; std::string, uint32_t &gt; fc::generic_api::_by_name</definition>
        <argsstring></argsstring>
        <name>_by_name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/rpc/api_connection.hpp" line="234" column="1" bodyfile="libraries/fc/include/fc/rpc/api_connection.hpp" bodystart="234" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classfc_1_1generic__api_1a9e4fb73c78e12e667732d74b156cd0d5" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::function&lt; <ref refid="classfc_1_1variant" kindref="compound">variant</ref>(const <ref refid="namespacefc_1a2e5e6bdb302dfb79e684336f3fbbd8bc" kindref="member">variants</ref> &amp;)&gt; &gt;</type>
        <definition>std::vector&lt; std::function&lt;variant(const variants&amp;)&gt; &gt; fc::generic_api::_methods</definition>
        <argsstring></argsstring>
        <name>_methods</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/rpc/api_connection.hpp" line="235" column="1" bodyfile="libraries/fc/include/fc/rpc/api_connection.hpp" bodystart="235" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classfc_1_1generic__api_1afd5e38e1a2fbbc91a46570914c82c6bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Api</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>fc::generic_api::generic_api</definition>
        <argsstring>(const Api &amp;a, const std::shared_ptr&lt; fc::api_connection &gt; &amp;c)</argsstring>
        <name>generic_api</name>
        <param>
          <type>const Api &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classfc_1_1api__connection" kindref="compound">fc::api_connection</ref> &gt; &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/rpc/api_connection.hpp" line="113" column="1" bodyfile="libraries/fc/include/fc/rpc/api_connection.hpp" bodystart="415" bodyend="419"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1generic__api_1a365a087172afae4eaeb824549461f776" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fc::generic_api::generic_api</definition>
        <argsstring>(const generic_api &amp;cpy)=delete</argsstring>
        <name>generic_api</name>
        <param>
          <type>const <ref refid="classfc_1_1generic__api" kindref="compound">generic_api</ref> &amp;</type>
          <declname>cpy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/rpc/api_connection.hpp" line="115" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1generic__api_1acca08c171f127e0f4a0455ba301ae764" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classfc_1_1variant" kindref="compound">variant</ref></type>
        <definition>variant fc::generic_api::call</definition>
        <argsstring>(const string &amp;name, const variants &amp;args)</argsstring>
        <name>call</name>
        <param>
          <type>const string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const <ref refid="namespacefc_1a2e5e6bdb302dfb79e684336f3fbbd8bc" kindref="member">variants</ref> &amp;</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/rpc/api_connection.hpp" line="117" column="1" bodyfile="libraries/fc/include/fc/rpc/api_connection.hpp" bodystart="117" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1generic__api_1a4f98353315e6adddd7bfe0ed006209ee" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classfc_1_1variant" kindref="compound">variant</ref></type>
        <definition>variant fc::generic_api::call</definition>
        <argsstring>(uint32_t method_id, const variants &amp;args)</argsstring>
        <name>call</name>
        <param>
          <type>uint32_t</type>
          <declname>method_id</declname>
        </param>
        <param>
          <type>const <ref refid="namespacefc_1a2e5e6bdb302dfb79e684336f3fbbd8bc" kindref="member">variants</ref> &amp;</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/rpc/api_connection.hpp" line="126" column="1" bodyfile="libraries/fc/include/fc/rpc/api_connection.hpp" bodystart="126" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1generic__api_1a7b89999fe73005a684a8344dae617a21" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::weak_ptr&lt; <ref refid="classfc_1_1api__connection" kindref="compound">fc::api_connection</ref> &gt;</type>
        <definition>std::weak_ptr&lt; fc::api_connection &gt; fc::generic_api::get_connection</definition>
        <argsstring>()</argsstring>
        <name>get_connection</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/rpc/api_connection.hpp" line="134" column="1" bodyfile="libraries/fc/include/fc/rpc/api_connection.hpp" bodystart="134" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1generic__api_1acc07b1c516bf195c219d416d03a1307a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt;std::string&gt; fc::generic_api::get_method_names</definition>
        <argsstring>() const</argsstring>
        <name>get_method_names</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/rpc/api_connection.hpp" line="139" column="1" bodyfile="libraries/fc/include/fc/rpc/api_connection.hpp" bodystart="139" bodyend="145"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classfc_1_1generic__api_1a534737533fbc8b94890ab79888f54715" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename R</type>
          </param>
          <param>
            <type>typename Arg0</type>
          </param>
          <param>
            <type>typename ...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>std::function&lt; R(Args...)&gt;</type>
        <definition>std::function&lt;R(Args...)&gt; fc::generic_api::bind_first_arg</definition>
        <argsstring>(const std::function&lt; R(Arg0, Args...)&gt; &amp;f, Arg0 a0) const</argsstring>
        <name>bind_first_arg</name>
        <param>
          <type>const std::function&lt; R(Arg0, Args...)&gt; &amp;</type>
          <declname>f</declname>
        </param>
        <param>
          <type>Arg0</type>
          <declname>a0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/rpc/api_connection.hpp" line="151" column="1" bodyfile="libraries/fc/include/fc/rpc/api_connection.hpp" bodystart="151" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1generic__api_1ad60072c60a7f0186cf1861e5ff1485cc" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename R</type>
          </param>
        </templateparamlist>
        <type>R</type>
        <definition>R fc::generic_api::call_generic</definition>
        <argsstring>(const std::function&lt; R()&gt; &amp;f, variants::const_iterator a0, variants::const_iterator e, uint32_t max_depth=1) const</argsstring>
        <name>call_generic</name>
        <param>
          <type>const std::function&lt; R()&gt; &amp;</type>
          <declname>f</declname>
        </param>
        <param>
          <type>variants::const_iterator</type>
          <declname>a0</declname>
        </param>
        <param>
          <type>variants::const_iterator</type>
          <declname>e</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>max_depth</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/rpc/api_connection.hpp" line="159" column="1" bodyfile="libraries/fc/include/fc/rpc/api_connection.hpp" bodystart="159" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1generic__api_1a025df94885435fd74149de9e9489555c" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename R</type>
          </param>
          <param>
            <type>typename Signature</type>
          </param>
          <param>
            <type>typename ...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
          <param>
            <type>typename std::enable_if&lt; std::is_function&lt; Signature &gt;::value, Signature &gt;::type *</type>
            <defval>nullptr</defval>
          </param>
        </templateparamlist>
        <type>R</type>
        <definition>R fc::generic_api::call_generic</definition>
        <argsstring>(const std::function&lt; R(std::function&lt; Signature &gt;, Args...)&gt; &amp;f, variants::const_iterator a0, variants::const_iterator e, uint32_t max_depth)</argsstring>
        <name>call_generic</name>
        <param>
          <type>const std::function&lt; R(std::function&lt; Signature &gt;, Args...)&gt; &amp;</type>
          <declname>f</declname>
        </param>
        <param>
          <type>variants::const_iterator</type>
          <declname>a0</declname>
        </param>
        <param>
          <type>variants::const_iterator</type>
          <declname>e</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>max_depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/rpc/api_connection.hpp" line="166" column="1" bodyfile="libraries/fc/include/fc/rpc/api_connection.hpp" bodystart="166" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1generic__api_1a55c7d1756eb4f7c7e89f4ee7289801b7" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename R</type>
          </param>
          <param>
            <type>typename Signature</type>
          </param>
          <param>
            <type>typename ...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
          <param>
            <type>typename std::enable_if&lt; std::is_function&lt; Signature &gt;::value, Signature &gt;::type *</type>
            <defval>nullptr</defval>
          </param>
        </templateparamlist>
        <type>R</type>
        <definition>R fc::generic_api::call_generic</definition>
        <argsstring>(const std::function&lt; R(const std::function&lt; Signature &gt; &amp;, Args...)&gt; &amp;f, variants::const_iterator a0, variants::const_iterator e, uint32_t max_depth)</argsstring>
        <name>call_generic</name>
        <param>
          <type>const std::function&lt; R(const std::function&lt; Signature &gt; &amp;, Args...)&gt; &amp;</type>
          <declname>f</declname>
        </param>
        <param>
          <type>variants::const_iterator</type>
          <declname>a0</declname>
        </param>
        <param>
          <type>variants::const_iterator</type>
          <declname>e</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>max_depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/rpc/api_connection.hpp" line="177" column="1" bodyfile="libraries/fc/include/fc/rpc/api_connection.hpp" bodystart="177" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="classfc_1_1generic__api_1a1223f69ac9448a37baaa07f6e78c478e" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename R</type>
          </param>
          <param>
            <type>typename Arg0</type>
          </param>
          <param>
            <type>typename ...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>R</type>
        <definition>R fc::generic_api::call_generic</definition>
        <argsstring>(const std::function&lt; R(Arg0, Args...)&gt; &amp;f, variants::const_iterator a0, variants::const_iterator e, uint32_t max_depth)</argsstring>
        <name>call_generic</name>
        <param>
          <type>const std::function&lt; R(Arg0, Args...)&gt; &amp;</type>
          <declname>f</declname>
        </param>
        <param>
          <type>variants::const_iterator</type>
          <declname>a0</declname>
        </param>
        <param>
          <type>variants::const_iterator</type>
          <declname>e</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>max_depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/rpc/api_connection.hpp" line="188" column="1" bodyfile="libraries/fc/include/fc/rpc/api_connection.hpp" bodystart="188" bodyend="200"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="libraries/fc/include/fc/rpc/api_connection.hpp" line="110" column="1" bodyfile="libraries/fc/include/fc/rpc/api_connection.hpp" bodystart="109" bodyend="236"/>
    <listofallmembers>
      <member refid="classfc_1_1generic__api_1ac531c972e0f0fc65fbc20ce2ad2a7dd8" prot="private" virt="non-virtual"><scope>fc::generic_api</scope><name>_api</name></member>
      <member refid="classfc_1_1generic__api_1ae4e359f279b43ac6d8e4e8a630253a13" prot="private" virt="non-virtual"><scope>fc::generic_api</scope><name>_api_connection</name></member>
      <member refid="classfc_1_1generic__api_1a3c35adf9c3d701b13fa6c9231fa1a9c2" prot="private" virt="non-virtual"><scope>fc::generic_api</scope><name>_by_name</name></member>
      <member refid="classfc_1_1generic__api_1a9e4fb73c78e12e667732d74b156cd0d5" prot="private" virt="non-virtual"><scope>fc::generic_api</scope><name>_methods</name></member>
      <member refid="classfc_1_1generic__api_1aee07a455e00ba058e6dcd0da3779cb61" prot="private" virt="non-virtual"><scope>fc::generic_api</scope><name>api_visitor</name></member>
      <member refid="classfc_1_1generic__api_1a534737533fbc8b94890ab79888f54715" prot="private" virt="non-virtual"><scope>fc::generic_api</scope><name>bind_first_arg</name></member>
      <member refid="classfc_1_1generic__api_1acca08c171f127e0f4a0455ba301ae764" prot="public" virt="non-virtual"><scope>fc::generic_api</scope><name>call</name></member>
      <member refid="classfc_1_1generic__api_1a4f98353315e6adddd7bfe0ed006209ee" prot="public" virt="non-virtual"><scope>fc::generic_api</scope><name>call</name></member>
      <member refid="classfc_1_1generic__api_1ad60072c60a7f0186cf1861e5ff1485cc" prot="private" virt="non-virtual"><scope>fc::generic_api</scope><name>call_generic</name></member>
      <member refid="classfc_1_1generic__api_1a025df94885435fd74149de9e9489555c" prot="private" virt="non-virtual"><scope>fc::generic_api</scope><name>call_generic</name></member>
      <member refid="classfc_1_1generic__api_1a55c7d1756eb4f7c7e89f4ee7289801b7" prot="private" virt="non-virtual"><scope>fc::generic_api</scope><name>call_generic</name></member>
      <member refid="classfc_1_1generic__api_1a1223f69ac9448a37baaa07f6e78c478e" prot="private" virt="non-virtual"><scope>fc::generic_api</scope><name>call_generic</name></member>
      <member refid="classfc_1_1generic__api_1afd5e38e1a2fbbc91a46570914c82c6bf" prot="public" virt="non-virtual"><scope>fc::generic_api</scope><name>generic_api</name></member>
      <member refid="classfc_1_1generic__api_1a365a087172afae4eaeb824549461f776" prot="public" virt="non-virtual"><scope>fc::generic_api</scope><name>generic_api</name></member>
      <member refid="classfc_1_1generic__api_1a7b89999fe73005a684a8344dae617a21" prot="public" virt="non-virtual"><scope>fc::generic_api</scope><name>get_connection</name></member>
      <member refid="classfc_1_1generic__api_1acc07b1c516bf195c219d416d03a1307a" prot="public" virt="non-virtual"><scope>fc::generic_api</scope><name>get_method_names</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
