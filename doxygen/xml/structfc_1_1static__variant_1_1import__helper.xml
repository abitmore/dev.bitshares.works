<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structfc_1_1static__variant_1_1import__helper" kind="struct" language="C++" prot="protected">
    <compoundname>fc::static_variant::import_helper</compoundname>
    <includes refid="static__variant_8hpp" local="no">static_variant.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
      <param>
        <type>typename</type>
        <defval>void</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structfc_1_1static__variant_1_1import__helper_1a9f56e4a9b31210b239e68bdeb276884e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classfc_1_1static__variant" kindref="compound">static_variant</ref></type>
        <definition>static static_variant fc::static_variant&lt; Types &gt;::import_helper&lt; T, typename &gt;::construct</definition>
        <argsstring>(const T &amp;)</argsstring>
        <name>construct</name>
        <param>
          <type>const T &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/static_variant.hpp" line="100" column="1" bodyfile="libraries/fc/include/fc/static_variant.hpp" bodystart="100" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="structfc_1_1static__variant_1_1import__helper_1af1b0a7f01b4cef21d73d3875b4fd23b3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classfc_1_1static__variant" kindref="compound">static_variant</ref></type>
        <definition>static static_variant fc::static_variant&lt; Types &gt;::import_helper&lt; T, typename &gt;::construct</definition>
        <argsstring>(T &amp;&amp;)</argsstring>
        <name>construct</name>
        <param>
          <type>T &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/static_variant.hpp" line="104" column="1" bodyfile="libraries/fc/include/fc/static_variant.hpp" bodystart="104" bodyend="107"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="libraries/fc/include/fc/static_variant.hpp" line="99" column="1" bodyfile="libraries/fc/include/fc/static_variant.hpp" bodystart="99" bodyend="108"/>
    <listofallmembers>
      <member refid="structfc_1_1static__variant_1_1import__helper_1a9f56e4a9b31210b239e68bdeb276884e" prot="public" virt="non-virtual"><scope>fc::static_variant::import_helper</scope><name>construct</name></member>
      <member refid="structfc_1_1static__variant_1_1import__helper_1af1b0a7f01b4cef21d73d3875b4fd23b3" prot="public" virt="non-virtual"><scope>fc::static_variant::import_helper</scope><name>construct</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
