<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="non__preemptable__scope__check_8hpp" kind="file" language="C++">
    <compoundname>non_preemptable_scope_check.hpp</compoundname>
    <includes refid="time_8hpp" local="no">fc/time.hpp</includes>
    <includes refid="spin__yield__lock_8hpp" local="no">fc/thread/spin_yield_lock.hpp</includes>
    <includedby refid="non__preemptable__scope__check_8cpp" local="no">libraries/fc/src/thread/non_preemptable_scope_check.cpp</includedby>
    <includedby refid="node_8cpp" local="no">libraries/net/node.cpp</includedby>
    <incdepgraph>
      <node id="39860">
        <label>fc/config.hpp</label>
        <link refid="fc_2include_2fc_2config_8hpp"/>
      </node>
      <node id="39862">
        <label>functional</label>
      </node>
      <node id="39846">
        <label>boost/preprocessor/seq/seq.hpp</label>
      </node>
      <node id="39837">
        <label>assert.h</label>
      </node>
      <node id="39842">
        <label>boost/lexical_cast.hpp</label>
      </node>
      <node id="39834">
        <label>stdint.h</label>
      </node>
      <node id="39863">
        <label>fc/thread/spin_yield_lock.hpp</label>
        <link refid="spin__yield__lock_8hpp"/>
      </node>
      <node id="39839">
        <label>fc/reflect/reflect.hpp</label>
        <link refid="reflect_8hpp"/>
        <childnode refid="39840" relation="include">
        </childnode>
        <childnode refid="39842" relation="include">
        </childnode>
        <childnode refid="39843" relation="include">
        </childnode>
        <childnode refid="39844" relation="include">
        </childnode>
        <childnode refid="39845" relation="include">
        </childnode>
        <childnode refid="39846" relation="include">
        </childnode>
        <childnode refid="39847" relation="include">
        </childnode>
        <childnode refid="39834" relation="include">
        </childnode>
        <childnode refid="39848" relation="include">
        </childnode>
        <childnode refid="39849" relation="include">
        </childnode>
        <childnode refid="39850" relation="include">
        </childnode>
        <childnode refid="39861" relation="include">
        </childnode>
      </node>
      <node id="39835">
        <label>string</label>
      </node>
      <node id="39853">
        <label>map</label>
      </node>
      <node id="39850">
        <label>fc/reflect/typename.hpp</label>
        <link refid="typename_8hpp"/>
        <childnode refid="39851" relation="include">
        </childnode>
        <childnode refid="39852" relation="include">
        </childnode>
        <childnode refid="39853" relation="include">
        </childnode>
        <childnode refid="39854" relation="include">
        </childnode>
        <childnode refid="39835" relation="include">
        </childnode>
        <childnode refid="39855" relation="include">
        </childnode>
        <childnode refid="39836" relation="include">
        </childnode>
        <childnode refid="39840" relation="include">
        </childnode>
        <childnode refid="39856" relation="include">
        </childnode>
      </node>
      <node id="39832">
        <label>libraries/fc/include/fc/thread/non_preemptable_scope_check.hpp</label>
        <link refid="non__preemptable__scope__check_8hpp"/>
        <childnode refid="39833" relation="include">
        </childnode>
        <childnode refid="39863" relation="include">
        </childnode>
      </node>
      <node id="39840">
        <label>fc/string.hpp</label>
        <link refid="string_8hpp"/>
        <childnode refid="39841" relation="include">
        </childnode>
        <childnode refid="39836" relation="include">
        </childnode>
        <childnode refid="39835" relation="include">
        </childnode>
      </node>
      <node id="39847">
        <label>boost/preprocessor/stringize.hpp</label>
      </node>
      <node id="39845">
        <label>boost/preprocessor/seq/size.hpp</label>
      </node>
      <node id="39841">
        <label>fc/fwd.hpp</label>
        <link refid="fwd_8hpp"/>
      </node>
      <node id="39859">
        <label>boost/interprocess/containers/vector.hpp</label>
      </node>
      <node id="39848">
        <label>string.h</label>
      </node>
      <node id="39858">
        <label>boost/container/flat_set.hpp</label>
      </node>
      <node id="39855">
        <label>vector</label>
      </node>
      <node id="39838">
        <label>utility</label>
      </node>
      <node id="39851">
        <label>array</label>
      </node>
      <node id="39833">
        <label>fc/time.hpp</label>
        <link refid="time_8hpp"/>
        <childnode refid="39834" relation="include">
        </childnode>
        <childnode refid="39835" relation="include">
        </childnode>
        <childnode refid="39836" relation="include">
        </childnode>
        <childnode refid="39839" relation="include">
        </childnode>
      </node>
      <node id="39861">
        <label>fc/reflect/typelist.hpp</label>
        <link refid="typelist_8hpp"/>
        <childnode refid="39849" relation="include">
        </childnode>
        <childnode refid="39862" relation="include">
        </childnode>
      </node>
      <node id="39836">
        <label>fc/optional.hpp</label>
        <link refid="optional_8hpp"/>
        <childnode refid="39837" relation="include">
        </childnode>
        <childnode refid="39838" relation="include">
        </childnode>
      </node>
      <node id="39852">
        <label>deque</label>
      </node>
      <node id="39844">
        <label>boost/preprocessor/seq/enum.hpp</label>
      </node>
      <node id="39857">
        <label>boost/container/flat_map.hpp</label>
      </node>
      <node id="39849">
        <label>type_traits</label>
      </node>
      <node id="39854">
        <label>set</label>
      </node>
      <node id="39856">
        <label>fc/container/flat_fwd.hpp</label>
        <link refid="flat__fwd_8hpp"/>
        <childnode refid="39857" relation="include">
        </childnode>
        <childnode refid="39858" relation="include">
        </childnode>
        <childnode refid="39859" relation="include">
        </childnode>
        <childnode refid="39860" relation="include">
        </childnode>
      </node>
      <node id="39843">
        <label>boost/preprocessor/seq/for_each.hpp</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="39865">
        <label>libraries/fc/src/thread/non_preemptable_scope_check.cpp</label>
        <link refid="non__preemptable__scope__check_8cpp"/>
      </node>
      <node id="39866">
        <label>libraries/net/node.cpp</label>
        <link refid="node_8cpp"/>
      </node>
      <node id="39864">
        <label>libraries/fc/include/fc/thread/non_preemptable_scope_check.hpp</label>
        <link refid="non__preemptable__scope__check_8hpp"/>
        <childnode refid="39865" relation="include">
        </childnode>
        <childnode refid="39866" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classfc_1_1non__preemptable__scope__check" prot="public">fc::non_preemptable_scope_check</innerclass>
    <innernamespace refid="namespacefc">fc</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="non__preemptable__scope__check_8hpp_1a46397a84d4848e076623297f0731b56e" prot="public" static="no">
        <name>FC_NON_PREEMPTABLE_SCOPE_COMBINE_HELPER</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer>x ## y</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/thread/non_preemptable_scope_check.hpp" line="17" column="9" bodyfile="libraries/fc/include/fc/thread/non_preemptable_scope_check.hpp" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="non__preemptable__scope__check_8hpp_1acc6e1ea0c8f3ca541d1c50be1985f7b8" prot="public" static="no">
        <name>FC_NON_PREEMPTABLE_SCOPE_COMBINE</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer><ref refid="non__preemptable__scope__check_8hpp_1a46397a84d4848e076623297f0731b56e" kindref="member">FC_NON_PREEMPTABLE_SCOPE_COMBINE_HELPER</ref>(x,y)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/thread/non_preemptable_scope_check.hpp" line="18" column="9" bodyfile="libraries/fc/include/fc/thread/non_preemptable_scope_check.hpp" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="non__preemptable__scope__check_8hpp_1ae506494c9fb0a5f88dd9ca13b2d06ccd" prot="public" static="no">
        <name>ASSERT_TASK_NOT_PREEMPTED</name>
        <param></param>
        <initializer><ref refid="classfc_1_1non__preemptable__scope__check" kindref="compound">fc::non_preemptable_scope_check</ref> <ref refid="non__preemptable__scope__check_8hpp_1acc6e1ea0c8f3ca541d1c50be1985f7b8" kindref="member">FC_NON_PREEMPTABLE_SCOPE_COMBINE</ref>(scope_checker_, __LINE__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/fc/include/fc/thread/non_preemptable_scope_check.hpp" line="23" column="11" bodyfile="libraries/fc/include/fc/thread/non_preemptable_scope_check.hpp" bodystart="23" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="libraries/fc/include/fc/thread/non_preemptable_scope_check.hpp"/>
  </compounddef>
</doxygen>
